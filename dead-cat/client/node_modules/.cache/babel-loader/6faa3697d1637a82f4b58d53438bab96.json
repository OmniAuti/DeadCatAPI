{"ast":null,"code":"// VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nexport function vwapFunction(chartArr, dataPull, num, dateObj) {\n  // ----------- VWAP CALUC -------------------------------------------\n  let dayLengthPeriod = 0;\n  let tpvCul = 0;\n  let volumeCul = 0;\n  let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n  try {\n    // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n    while (dataPull[dayLengthPeriod].date.slice(0, 10) == dateObj.newDateString) {\n      dayLengthPeriod++;\n    } // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n\n    for (let i = 0; i < dayLengthPeriod; i++) {\n      const {\n        volume,\n        high,\n        close,\n        low,\n        date\n      } = dataPull[i];\n      let tpv = (high + low + close) / 3;\n\n      if (date.slice(0, 10) == dateObj.newDateString) {\n        tpvCul += tpv * volume;\n        volumeCul += volume;\n      }\n\n      var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n\n      tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n    }\n\n    let vwap = tempVWAP[0].toFixed(2);\n    chartArr[num].vwap = vwap;\n  } catch (e) {}\n}","map":{"version":3,"sources":["/Users/austinolijar/Desktop/MERN-DeadCat/dead-cat/src/JS/technical-Indicators.js/vwap.js"],"names":["vwapFunction","chartArr","dataPull","num","dateObj","dayLengthPeriod","tpvCul","volumeCul","tempVWAP","date","slice","newDateString","i","volume","high","close","low","tpv","vwapFinal","unshift","vwap","toFixed","e"],"mappings":"AACE;AACA,OAAO,SAASA,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,GAA1C,EAA+CC,OAA/C,EAAwD;AAC7D;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,QAAQ,GAAG,EAAf,CAL6D,CAK1C;;AAEnB,MAAI;AACF;AACA,WAAON,QAAQ,CAACG,eAAD,CAAR,CAA0BI,IAA1B,CAA+BC,KAA/B,CAAqC,CAArC,EAAwC,EAAxC,KAA+CN,OAAO,CAACO,aAA9D,EAA6E;AAC3EN,MAAAA,eAAe;AAChB,KAJC,CAMF;;;AAEA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,eAApB,EAAqCO,CAAC,EAAtC,EAA0C;AACxC,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA,KAAhB;AAAuBC,QAAAA,GAAvB;AAA4BP,QAAAA;AAA5B,UAAqCP,QAAQ,CAACU,CAAD,CAAnD;AACA,UAAIK,GAAG,GAAG,CAACH,IAAI,GAAGE,GAAP,GAAaD,KAAd,IAAuB,CAAjC;;AACA,UAAIN,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,EAAd,KAAqBN,OAAO,CAACO,aAAjC,EAAgD;AAC9CL,QAAAA,MAAM,IAAIW,GAAG,GAAGJ,MAAhB;AACAN,QAAAA,SAAS,IAAIM,MAAb;AACD;;AACD,UAAIK,SAAS,GAAGZ,MAAM,GAAGC,SAAzB,CAPwC,CAOJ;;AACpCC,MAAAA,QAAQ,CAACW,OAAT,CAAiBD,SAAjB,EARwC,CAQX;AAC9B;;AACD,QAAIE,IAAI,GAAGZ,QAAQ,CAAC,CAAD,CAAR,CAAYa,OAAZ,CAAoB,CAApB,CAAX;AACApB,IAAAA,QAAQ,CAACE,GAAD,CAAR,CAAciB,IAAd,GAAqBA,IAArB;AACD,GApBD,CAoBE,OAAOE,CAAP,EAAU,CACX;AACF","sourcesContent":[" \n  // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  export function vwapFunction(chartArr, dataPull, num, dateObj) {\n    // ----------- VWAP CALUC -------------------------------------------\n    let dayLengthPeriod = 0;\n    let tpvCul = 0;\n    let volumeCul = 0;\n    let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n  \n    try {\n      // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n      while (dataPull[dayLengthPeriod].date.slice(0, 10) == dateObj.newDateString) {\n        dayLengthPeriod++;\n      }\n    \n      // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n  \n      for (let i = 0; i < dayLengthPeriod; i++) {\n        const { volume, high, close, low, date } = dataPull[i];\n        let tpv = (high + low + close) / 3;\n        if (date.slice(0, 10) == dateObj.newDateString) {\n          tpvCul += tpv * volume;\n          volumeCul += volume;\n        }\n        var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n        tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n      }\n      let vwap = tempVWAP[0].toFixed(2);\n      chartArr[num].vwap = vwap;\n    } catch (e) {\n    }\n  }"]},"metadata":{},"sourceType":"module"}