{"ast":null,"code":"import { nasdaqMasterKey, nyseMasterKey } from \"./masterKeys\";\nimport { handleDate } from \"./fetch-compile-functions/handleDate\";\nimport { filterTradableSymbols } from \"./fetch-compile-functions/filterTradableStocks\";\nimport { compileStocks } from \"./fetch-compile-functions/compileStocks\"; // import { nyseFetch } from \"./functions/nyseFetch\";\n// import { nasdaqFetch } from \"./functions/nasdaqFetch\";\n\nexport const technicalAnalysis = async () => {\n  // DATE OBJ --------------------------\n  const dateObj = {\n    today: null,\n    year: null,\n    date: null,\n    month: null,\n    minutes: null,\n    hour: null,\n    time: null,\n    timeNum: null,\n    marketDay: null,\n    todayDate: null\n  }; // SET DATE --------------------------\n\n  await handleDate(dateObj); // ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n  // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n  function smaFunction(chartArr, dataPull, newestPull, num) {\n    let culSMA = 0; // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n\n    let fiveTeenSMA = 13;\n    let twentySMA = 18;\n    let thirtySMA = 28;\n    let fiftySMA = 48;\n    let hunSMA = 98;\n    let twoHunSMA = 198;\n\n    try {\n      const todayPricePull = newestPull[0].price; // ------------- 15 DAY SMA -------------------------------\n\n      if (dataPull.historical.length <= 13) {\n        chartArr[num].smaFiveTeen = \"No Data\";\n      } else {\n        while (fiveTeenSMA >= 0) {\n          culSMA += dataPull.historical[fiveTeenSMA].close;\n          fiveTeenSMA--;\n        }\n\n        let smaFiveResult = (culSMA + todayPricePull) / 15;\n        chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 20 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 19) {\n        chartArr[num].smaTwenty = \"No Data\";\n      } else {\n        while (twentySMA >= 0) {\n          culSMA += dataPull.historical[twentySMA].close;\n          twentySMA--;\n        }\n\n        let smaTwentyResult = (culSMA + todayPricePull) / 20;\n        chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 30 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 29) {\n        chartArr[num].smaThirty = \"No Data\";\n      } else {\n        while (thirtySMA >= 0) {\n          culSMA += dataPull.historical[thirtySMA].close;\n          thirtySMA--;\n        }\n\n        let smaThirtyResult = (culSMA + todayPricePull) / 30;\n        chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 50 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 49) {\n        chartArr[num].smaFifty = \"No Data\";\n      } else {\n        while (fiftySMA >= 0) {\n          culSMA += dataPull.historical[fiftySMA].close;\n          fiftySMA--;\n        }\n\n        let smaFiftyResult = (culSMA + todayPricePull) / 50;\n        chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 100 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 99) {\n        chartArr[num].smaOneHun = \"No Data\";\n      } else {\n        while (hunSMA >= 0) {\n          culSMA += dataPull.historical[hunSMA].close;\n          hunSMA--;\n        }\n\n        let smaOneHunResult = (culSMA + todayPricePull) / 100;\n        chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 200 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 199) {\n        chartArr[num].smaTwoHun = \"No Data\";\n      } else {\n        while (twoHunSMA >= 0) {\n          culSMA += dataPull.historical[twoHunSMA].close;\n          twoHunSMA--;\n        }\n\n        let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n        chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n        culSMA = 0;\n      }\n    } catch (e) {}\n  } // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function wmaFunction(chartArr, dataPull, newestPull, num) {\n    // WMA FiveTeen --------------------------------------------------------------------\n    let weight = 14;\n    let wmaInterval = 0;\n    let iWma = 15;\n\n    try {\n      let wmaCul = newestPull[0].price * 15;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].wmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFiveTeen = wmaCul / iWma;\n        chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n      } // WMA Twenty --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 20;\n      weight = 19;\n      wmaInterval = 0;\n      iWma = 20;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].wmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwenty = wmaCul / iWma;\n        chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n      } // WMA THIRTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 30;\n      weight = 29;\n      wmaInterval = 0;\n      iWma = 30;\n\n      if (dataPull.historical.length < 30) {\n        chartArr[num].wmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaThirty = wmaCul / iWma;\n        chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n      } // WMA FIFTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 50;\n      weight = 49;\n      wmaInterval = 0;\n      iWma = 50;\n\n      if (dataPull.historical.length < 50) {\n        chartArr[num].wmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFifty = wmaCul / iWma;\n        chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n      } // WMA ONE HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 100;\n      weight = 99;\n      wmaInterval = 0;\n      iWma = 100;\n\n      if (dataPull.historical.length < 100) {\n        chartArr[num].wmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaOneHun = wmaCul / iWma;\n        chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n      } // WMA TWO HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 200;\n      weight = 199;\n      wmaInterval = 0;\n      iWma = 200;\n\n      if (dataPull.historical.length < 200) {\n        chartArr[num].wmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwoHun = wmaCul / iWma;\n        chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwmaFunction(chartArr, dataPull, newestPull, num) {\n    // VWMA FIVETEEN --------------------------------------------------------------------\n    try {\n      let price = 0;\n      let volume = 0;\n      const newPrice = newestPull[0].price;\n      const newVol = newestPull[0].volume;\n      let volCul = newestPull[0].volume;\n      let totalCul = newPrice * newVol;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].vwmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFiveTeen = totalCul / volCul;\n        chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n      } // VWMA TWENTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].vwmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwenty = totalCul / volCul;\n        chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n      } // VWMA THIRTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 29) {\n        chartArr[num].vwmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaThirty = totalCul / volCul;\n        chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n      } // VWMA FIFTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 49) {\n        chartArr[num].vwmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFifty = totalCul / volCul;\n        chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n      } // VWMA ONEHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 99) {\n        chartArr[num].vwmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaOneHun = totalCul / volCul;\n        chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n      } // VWMA TWOHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 199) {\n        chartArr[num].vwmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwoHun = totalCul / volCul;\n        chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n    let emaEight = 14;\n    let emaTwelve = 22;\n    let emaTwenty = 38;\n    let emaTwentySix = 50;\n    let emaFifty = 98;\n    let emaTwoHun = 398;\n    let prevDayEmaSub = 0;\n    let arrEma = [];\n    let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n\n    let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n    try {\n      const newPrice = newestPull[0].price; // EMA EIGHT ----------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 16) {\n        chartArr[num].emaEight = \"No Data\";\n      } else {\n        while (emaEight >= 15) {\n          prevDayEmaSub += dataPull.historical[emaEight].close;\n          emaEight--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 8; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 9 * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaEight--;\n\n        while (emaEight >= 0) {\n          let derp = 2 / 9 * (dataPull.historical[emaEight].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaEight--;\n        }\n\n        const finalEma = 2 / 9 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaEight = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWELVE ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 24) {\n        chartArr[num].emaTwelve = \"No Data\";\n      } else {\n        while (emaTwelve >= 11) {\n          prevDayEmaSub += dataPull.historical[emaTwelve].close;\n          emaTwelve--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 12; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 13 * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwelve--;\n\n        while (emaTwelve >= 0) {\n          let derp = 2 / 13 * (dataPull.historical[emaTwelve].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwelve < 8 && emaTwelve >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwelve.unshift(derp);\n          }\n\n          emaTwelve--;\n        }\n\n        const finalEma = 2 / 13 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwelve.unshift(finalEma);\n        chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 40) {\n        chartArr[num].emaTwenty = \"No Data\";\n      } else {\n        while (emaTwenty >= 19) {\n          prevDayEmaSub += dataPull.historical[emaTwenty].close;\n          emaTwenty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 20; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 21 * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwenty--;\n\n        while (emaTwenty >= 0) {\n          let derp = 2 / 21 * (dataPull.historical[emaTwenty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwenty--;\n        }\n\n        const finalEma = 2 / 21 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY SIX ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 51) {\n        chartArr[num].emaTwentySix = \"No Data\";\n      } else {\n        while (emaTwentySix >= 25) {\n          prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n          emaTwentySix--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 26; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 27 * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwentySix--;\n\n        while (emaTwentySix >= 0) {\n          let derp = 2 / 27 * (dataPull.historical[emaTwentySix].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwentySix < 8 && emaTwentySix >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwentySix.unshift(derp);\n          }\n\n          emaTwentySix--;\n        }\n\n        const finalEma = 2 / 27 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwentySix.unshift(finalEma);\n        chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA FIFTY -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 100) {\n        chartArr[num].emaFifty = \"No Data\";\n      } else {\n        while (emaFifty >= 49) {\n          prevDayEmaSub += dataPull.historical[emaFifty].close;\n          emaFifty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 50; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 51 * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaFifty--;\n\n        while (emaFifty >= 0) {\n          let derp = 2 / 51 * (dataPull.historical[emaFifty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaFifty--;\n        }\n\n        const finalEma = 2 / 51 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaFifty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 400) {\n        chartArr[num].emaTwoHun = \"No Data\";\n      } else {\n        while (emaTwoHun >= 199) {\n          prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n          emaTwoHun--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 200; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 201 * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwoHun--;\n\n        while (emaTwoHun >= 0) {\n          let derp = 2 / 201 * (dataPull.historical[emaTwoHun].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwoHun--;\n        }\n\n        const finalEma = 2 / 201 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n    } catch (e) {} // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n    macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n  } // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function macdFunction(chartArr, num, arr1, arr2) {\n    const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n    chartArr[num].macd = macd.toFixed(2); // CALCULATE SIGNAL LINE ----------------\n\n    let averageMacd = [];\n    let iMacd = 8;\n\n    try {\n      while (iMacd >= 0) {\n        averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n        iMacd--;\n      }\n\n      let averageSum = averageMacd.reduce((a, b) => a + b);\n      let finalAverageMacd = averageSum / 9;\n      let macdSignalLine = 2 / 9 * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n      chartArr[num].macdSignalLine = macdSignalLine.toFixed(2); // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n\n      let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n      chartArr[num].macdHistogram = histogram.toFixed(2); // FOR NO DATA TO PULL FROM\n\n      if (chartArr[num].macdHistogram === \"NaN\") {\n        chartArr[num].macdHistogram = \"No Data\";\n      }\n\n      if (chartArr[num].macd === \"NaN\") {\n        chartArr[num].macd = \"No Data\";\n      }\n\n      if (chartArr[num].macdSignalLine === \"NaN\") {\n        chartArr[num].macdSignalLine = \"No Data\";\n      }\n    } catch (e) {}\n  } // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function rsiFunction(chartArr, dataPull, newestPull, num) {\n    let iRSI = 13;\n    let iRSIAdjusted = 14;\n    let recentUpper = 0;\n    let recentDowner = 0;\n    let upMove = 0;\n    let downMove = 0;\n    let pastDownPeriod = 0;\n    let pastUpPeriod = 0;\n\n    try {\n      const newPrice = newestPull[0].price; // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n\n      if (dataPull.historical.length <= 14) {\n        chartArr[num].rsi = \"No Data\";\n      } else {\n        // LOOP FOR AVERAGE\n        while (iRSI >= 0) {\n          if (dataPull.historical[iRSI].close > dataPull.historical[iRSIAdjusted].close) {\n            upMove += dataPull.historical[iRSI].close - dataPull.historical[iRSIAdjusted].close;\n          } else {\n            downMove += dataPull.historical[iRSIAdjusted].close - dataPull.historical[iRSI].close;\n          }\n\n          iRSI--;\n          iRSIAdjusted--;\n        }\n\n        let averageUp = upMove / 14;\n        let averageDown = downMove / 14; // MOST RECENT DIFFERENCE\n\n        if (newPrice > dataPull.historical[0].close) {\n          recentUpper = newPrice - dataPull.historical[0].close;\n        } else {\n          recentDowner = dataPull.historical[0].close - newPrice;\n        }\n\n        pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n        pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n        let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n        chartArr[num].rsi = rsi.toFixed(2);\n      }\n    } catch (e) {}\n  } // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n    let iSO = 13;\n    let soLowHolder = [];\n    let soHighHolder = [];\n    let highestHigh = 0;\n    let lowestLow = 0; // FIRST %D\n\n    let topForm = [];\n    let bottomForm = []; // SECOND %D\n\n    let topFormTwo = [];\n    let bottomFormTwo = []; // THIRD %D\n\n    let topFormThree = [];\n    let bottomFormThree = []; // HOLDING SET OF %D FOR 14 3 3\n\n    let signalLineHolder = [];\n\n    try {\n      let newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 18) {\n        chartArr[num].stochasticK = \"No Data\";\n      } else {\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n        while (iSO >= 0) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        soHighHolder.push(newPrice);\n        soLowHolder.push(newPrice);\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        if (lowestLow === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        if (highestHigh === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        topForm.push(newPrice - lowestLow);\n        bottomForm.push(highestHigh - lowestLow); //FOR %K\n\n        chartArr[num].stochasticK = ((newPrice - lowestLow) / (highestHigh - lowestLow) * 100).toFixed(2); // RESET HOLDER AND VARs --------------------------------------------------------\n\n        iSO = 14;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n        while (iSO >= 1) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[0].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[0].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow); // RESET HOLDER AND VARs ------------------------------------------------\n\n        iSO = 15;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 2) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[1].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[1].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[1].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        let sumTop = topForm.reduce((a, b) => a + b, 0);\n        let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n        let slowD = sumTop / sumBottom * 100; // FOR %D\n\n        chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------------------------------\n\n        iSO = 16;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n        while (iSO >= 3) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormTwo.push(dataPull.historical[2].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[2].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------\n\n        iSO = 17;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 4) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormThree.push(dataPull.historical[3].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormThree.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); // ----------- TALLY UP LAST SMOOTHING -------------------------------\n\n        const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n        let smaD = sumStochD / 3;\n\n        if (smaD < 0) {\n          smaD *= -1;\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        } else {\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        }\n      }\n    } catch (e) {}\n  } // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function williamsRFunction(chartArr, dataPull, newestPull, num) {\n    let highs = [];\n    let lows = [];\n    let lowestLow = 0;\n    let highestHigh = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].williams = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          highs.push(dataPull.historical[i].high);\n          lows.push(dataPull.historical[i].low);\n        }\n\n        highs.push(newPrice);\n        lows.push(newPrice);\n        lowestLow = Math.min(...lows);\n        highestHigh = Math.max(...highs);\n        const williams = (highestHigh - dataPull.historical[0].close) / (highestHigh - lowestLow) * -100;\n        chartArr[num].williamsR = williams.toFixed(2);\n      }\n    } catch (e) {}\n  } // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function cciFunction(chartArr, dataPull, newestPull, num) {\n    let tpvCul = 0;\n    let tpv = [];\n    let tpvMa = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n      let tpvCurrent = newPrice;\n      const recentTpv = newPrice;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].cciTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 19; i++) {\n          const {\n            high,\n            close,\n            low\n          } = dataPull.historical[i];\n          tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n\n          tpvCurrent = (close + high + low) / 3;\n        } // ---- TPV SMA ------------------------\n\n\n        tpvCul = tpv.reduce((a, b) => a + b);\n        tpvMa = tpvCul / 20; // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n\n        const partOne = recentTpv - tpvMa;\n        const meanD = tpv.map(x => x - tpvMa);\n        const meanDMap = meanD.map(x => Math.abs(x));\n        const meanDSum = meanDMap.reduce((a, b) => a + b);\n        const meanDiv = meanDSum / 20; // PART TWO OF FORMULA --------------\n\n        const partTwo = meanDiv * 0.015; // CCI ------------------------------\n\n        const cci = partOne / partTwo;\n        chartArr[num].cciTwenty = cci.toFixed(2);\n      }\n    } catch (e) {}\n  } // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n    let smaCul = 0;\n    let closeHolder = [];\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].bbUpper = \"No Data\";\n        chartArr[num].bbLower = \"No Data\";\n        chartArr[num].bbMiddle = \"No Data\";\n      } else {\n        let closeP = newPrice;\n\n        for (let i = 0; i <= 19; i++) {\n          closeHolder.push(closeP);\n          smaCul += closeP;\n          closeP = dataPull.historical[i].close;\n        } // STANDARD DEVIATION CALC --------------------------------\n\n\n        const smaTwenty = smaCul / 20;\n        const priceAdj = closeHolder.map(x => x - smaTwenty);\n        const priceAdjAbs = priceAdj.map(x => Math.abs(x));\n        const priceAdjSqrt = priceAdjAbs.map(x => x * x);\n        const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n        const partTwoDev = partOneDev / 20;\n        const standardDev = Math.sqrt(partTwoDev); // BB BAND CALC --------------------------------------------\n\n        const bbUpper = smaTwenty + standardDev * 2;\n        const bbLower = smaTwenty - standardDev * 2;\n        const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n        chartArr[num].bbUpper = bbUpper.toFixed(2);\n        chartArr[num].bbLower = bbLower.toFixed(2);\n        chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n        chartArr[num].bbPercent = bbPercent.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwapFunction(chartArr, dataPull, num) {\n    // ----------- VWAP CALUC -------------------------------------------\n    let dayLengthPeriod = 0;\n    let tpvCul = 0;\n    let volumeCul = 0;\n    let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n    try {\n      // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n      while (dataPull[dayLengthPeriod].date.slice(0, 10) == dateObj.newDateString) {\n        dayLengthPeriod++;\n      } // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n\n      for (let i = 0; i < dayLengthPeriod; i++) {\n        const {\n          volume,\n          high,\n          close,\n          low,\n          date\n        } = dataPull[i];\n        let tpv = (high + low + close) / 3;\n\n        if (date.slice(0, 10) == dateObj.newDateString) {\n          tpvCul += tpv * volume;\n          volumeCul += volume;\n        }\n\n        var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n\n        tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n      }\n\n      let vwap = tempVWAP[0].toFixed(2);\n      chartArr[num].vwap = vwap;\n    } catch (e) {}\n  } // SET VOLUME FOR LATER\n\n\n  function setVolume(chartArr, dataPull, newestPull, num) {\n    // SET RECENT YESTERDAY VOLUME\n    try {\n      if (dataPull.historical.length <= 0) {\n        chartArr[num].yesterdayVolume = 0;\n      } else {\n        chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n\n        if (dateObj.marketDay == 0 || dateObj.marketDay == 6) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (dateObj.marketDay >= 1 && dateObj.marketDay <= 5 && dateObj.timeNum < 930) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (dateObj.timeNum > 1830) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n      }\n\n      if (newestPull.length < 0) {\n        chartArr[num].volume = 0;\n      } else {\n        // SET RECENT VOLUME\n        chartArr[num].volume = newestPull[0].volume;\n      }\n    } catch (e) {}\n  } // TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\n\n\n  async function technicalIndicators(finalArr, callback) {\n    let j = 0;\n\n    while (j < finalArr.length) {\n      // LOOP FOR TECHNICAL SYMBOL\n      // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n      const {\n        symbol\n      } = finalArr[j]; //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n\n      const resSMA = await fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n      // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataSMA).length) {\n          console.log(\"no SMA Pull data found\");\n        }\n      } catch (e) {} //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n\n\n      const resOscPulled = await fetch(`https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataRecentPulled = await resOscPulled.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataRecentPulled).length) {\n          console.log(\"no Recent Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      const resVWAP = await fetch(`https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataVWAP = await resVWAP.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataVWAP).length) {\n          console.log(\"no VWAP Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      vwapFunction(finalArr, dataVWAP, j); // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      smaFunction(finalArr, dataSMA, dataRecentPulled, j); // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      wmaFunction(finalArr, dataSMA, dataRecentPulled, j); // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      vwmaFunction(finalArr, dataSMA, dataRecentPulled, j); // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n\n      emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction); // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      rsiFunction(finalArr, dataSMA, dataRecentPulled, j); // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n      // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      williamsRFunction(finalArr, dataSMA, dataRecentPulled, j); // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      cciFunction(finalArr, dataSMA, dataRecentPulled, j); // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j); // SET VOLUME PROPERTIES\n\n      setVolume(finalArr, dataSMA, dataRecentPulled, j);\n      j++; // UPDATE WHILE LOOP\n    } // THIS IS THE END OF LOOP\n\n\n    const returnedData = await callback(finalArr, buildIt);\n    return returnedData;\n  }\n\n  async function filterUpDownStocks(finalArr, callback) {\n    let stocksUp = [];\n    let stocksDown = [];\n    let j = 0;\n\n    while (j < finalArr.length) {\n      const {\n        changesPercentage\n      } = finalArr[j];\n\n      if (changesPercentage > 0) {\n        stocksUp.push(finalArr[j]);\n      } else {\n        stocksDown.push(finalArr[j]);\n      }\n\n      j++;\n    } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n    // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n\n\n    for (let i = 0; i < stocksUp.length; i++) {\n      // UPPER ------------------------------------------------------------------------------\n      stocksUp[i].symbolUp = stocksUp[i].symbol;\n      delete stocksUp[i].symbol;\n      stocksUp[i].changeUp = stocksUp[i].change;\n      delete stocksUp[i].change;\n      stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n      delete stocksUp[i].avgVolume;\n      stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n      delete stocksUp[i].changesPercentage;\n      stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n      delete stocksUp[i].emaEight;\n      stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n      delete stocksUp[i].emaTwelve;\n      stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n      delete stocksUp[i].emaTwenty;\n      stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n      delete stocksUp[i].emaTwentySix;\n      stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n      delete stocksUp[i].emaFifty;\n      stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n      delete stocksUp[i].emaTwoHun;\n      stocksUp[i].macdUp = stocksUp[i].macd;\n      delete stocksUp[i].macd;\n      stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n      delete stocksUp[i].macdHistogram;\n      stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n      delete stocksUp[i].macdSignalLine;\n      stocksUp[i].priceUp = stocksUp[i].price;\n      delete stocksUp[i].price;\n      stocksUp[i].rsiUp = stocksUp[i].rsi;\n      delete stocksUp[i].rsi;\n      stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n      delete stocksUp[i].smaFiveTeen;\n      stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n      delete stocksUp[i].smaTwenty;\n      stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n      delete stocksUp[i].smaThirty;\n      stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n      delete stocksUp[i].smaFifty;\n      stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n      delete stocksUp[i].smaOneHun;\n      stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n      delete stocksUp[i].smaTwoHun;\n      stocksUp[i].volumeUp = stocksUp[i].volume;\n      delete stocksUp[i].volume;\n      stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n      delete stocksUp[i].yesterdayVolume;\n      stocksUp[i].vwapUp = stocksUp[i].vwap;\n      delete stocksUp[i].vwap;\n      stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n      delete stocksUp[i].stochasticD;\n      stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n      delete stocksUp[i].stochasticK;\n      stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n      delete stocksUp[i].stochasticSignal;\n      stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n      delete stocksUp[i].wmaFiveTeen;\n      stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n      delete stocksUp[i].wmaTwenty;\n      stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n      delete stocksUp[i].wmaThirty;\n      stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n      delete stocksUp[i].wmaFifty;\n      stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n      delete stocksUp[i].wmaOneHun;\n      stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n      delete stocksUp[i].wmaTwoHun;\n      stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n      delete stocksUp[i].vwmaFiveTeen;\n      stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n      delete stocksUp[i].vwmaTwenty;\n      stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n      delete stocksUp[i].vwmaThirty;\n      stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n      delete stocksUp[i].vwmaFifty;\n      stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n      delete stocksUp[i].vwmaOneHun;\n      stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n      delete stocksUp[i].vwmaTwoHun;\n      stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n      delete stocksUp[i].williamsR;\n      stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n      delete stocksUp[i].cciTwenty;\n      stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n      delete stocksUp[i].bbUpper;\n      stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n      delete stocksUp[i].bbLower;\n      stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n      delete stocksUp[i].bbMiddle;\n      stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n      delete stocksUp[i].bbPercent; // DOWNERS ------------------------------------------------------------------------------\n\n      stocksDown[i].symbolDown = stocksDown[i].symbol;\n      delete stocksDown[i].symbol;\n      stocksDown[i].changeDown = stocksDown[i].change;\n      delete stocksDown[i].change;\n      stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n      delete stocksDown[i].avgVolume;\n      stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n      delete stocksDown[i].changesPercentage;\n      stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n      delete stocksDown[i].emaEight;\n      stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n      delete stocksDown[i].emaTwelve;\n      stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n      delete stocksDown[i].emaTwenty;\n      stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n      delete stocksDown[i].emaTwentySix;\n      stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n      delete stocksDown[i].emaFifty;\n      stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n      delete stocksDown[i].emaTwoHun;\n      stocksDown[i].macdDown = stocksDown[i].macd;\n      delete stocksDown[i].macd;\n      stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n      delete stocksDown[i].macdHistogram;\n      stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n      delete stocksDown[i].macdSignalLine;\n      stocksDown[i].priceDown = stocksDown[i].price;\n      delete stocksDown[i].price;\n      stocksDown[i].rsiDown = stocksDown[i].rsi;\n      delete stocksDown[i].rsi;\n      stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n      delete stocksDown[i].smaFiveTeen;\n      stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n      delete stocksDown[i].smaTwenty;\n      stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n      delete stocksDown[i].smaThirty;\n      stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n      delete stocksDown[i].smaFifty;\n      stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n      delete stocksDown[i].smaOneHun;\n      stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n      delete stocksDown[i].smaTwoHun;\n      stocksDown[i].volumeDown = stocksDown[i].volume;\n      delete stocksDown[i].volume;\n      stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n      delete stocksDown[i].yesterdayVolume;\n      stocksDown[i].vwapDown = stocksDown[i].vwap;\n      delete stocksDown[i].vwap;\n      stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n      delete stocksDown[i].stochasticD;\n      stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n      delete stocksDown[i].stochasticK;\n      stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n      delete stocksDown[i].stochasticSignal;\n      stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n      delete stocksDown[i].wmaFiveTeen;\n      stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n      delete stocksDown[i].wmaTwenty;\n      stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n      delete stocksDown[i].wmaThirty;\n      stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n      delete stocksDown[i].wmaFifty;\n      stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n      delete stocksDown[i].wmaOneHun;\n      stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n      delete stocksDown[i].wmaTwoHun;\n      stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n      delete stocksDown[i].vwmaFiveTeen;\n      stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n      delete stocksDown[i].vwmaTwenty;\n      stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n      delete stocksDown[i].vwmaThirty;\n      stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n      delete stocksDown[i].vwmaFifty;\n      stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n      delete stocksDown[i].vwmaOneHun;\n      stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n      delete stocksDown[i].vwmaTwoHun;\n      stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n      delete stocksDown[i].williamsR;\n      stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n      delete stocksDown[i].cciTwenty;\n      stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n      delete stocksDown[i].bbUpper;\n      stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n      delete stocksDown[i].bbLower;\n      stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n      delete stocksDown[i].bbMiddle;\n      stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n      delete stocksDown[i].bbPercent;\n    }\n\n    const returnedData = await callback(stocksUp, stocksDown);\n    return returnedData;\n  }\n\n  function buildIt(arrUp, arrDown) {\n    for (let i = 0; i < arrUp.length; i++) {\n      // DECONSTRUCTING UP AND DOWN VAR\n      var {\n        avgVolumeUp,\n        volumeYesterdayUp,\n        changeUp,\n        changesPercentageUp,\n        priceUp,\n        symbolUp,\n        volumeUp,\n        vwapUp,\n        smaFiveTeenUp,\n        smaTwentyUp,\n        smaThirtyUp,\n        smaFiftyUp,\n        smaOneHunUp,\n        smaTwoHunUp,\n        emaEightUp,\n        emaTwelveUp,\n        emaTwentyUp,\n        emaTwentySixUp,\n        emaFiftyUp,\n        emaTwoHunUp,\n        wmaFiveTeenUp,\n        wmaTwentyUp,\n        wmaThirtyUp,\n        wmaFiftyUp,\n        wmaOneHunUp,\n        wmaTwoHunUp,\n        vwmaFiveTeenUp,\n        vwmaTwentyUp,\n        vwmaThirtyUp,\n        vwmaFiftyUp,\n        vwmaOneHunUp,\n        vwmaTwoHunUp,\n        macdUp,\n        macdHistogramUp,\n        macdSignalLineUp,\n        rsiUp,\n        stochasticDUp,\n        stochasticKUp,\n        stochasticSignalUp,\n        cciUp,\n        bbMiddleUp,\n        bbLowerUp,\n        bbUpperUp,\n        bbPercentUp,\n        williamsRUp\n      } = arrUp[i];\n      var {\n        avgVolumeDown,\n        volumeYesterdayDown,\n        changeDown,\n        changesPercentageDown,\n        priceDown,\n        symbolDown,\n        volumeDown,\n        vwapDown,\n        smaFiveTeenDown,\n        smaTwentyDown,\n        smaThirtyDown,\n        smaFiftyDown,\n        smaOneHunDown,\n        smaTwoHunDown,\n        emaEightDown,\n        emaTwelveDown,\n        emaTwentyDown,\n        emaTwentySixDown,\n        emaFiftyDown,\n        emaTwoHunDown,\n        wmaFiveTeenDown,\n        wmaTwentyDown,\n        wmaThirtyDown,\n        wmaFiftyDown,\n        wmaOneHunDown,\n        wmaTwoHunDown,\n        vwmaFiveTeenDown,\n        vwmaTwentyDown,\n        vwmaThirtyDown,\n        vwmaFiftyDown,\n        vwmaOneHunDown,\n        vwmaTwoHunDown,\n        macdDown,\n        macdHistogramDown,\n        macdSignalLineDown,\n        rsiDown,\n        stochasticDDown,\n        stochasticKDown,\n        stochasticSignalDown,\n        cciDown,\n        bbMiddleDown,\n        bbLowerDown,\n        bbUpperDown,\n        bbPercentDown,\n        williamsRDown\n      } = arrDown[i]; // ADJUST TO FIXED --------------------------------------------------------\n\n      if (arrUp[i].priceUp == undefined) {\n        arrUp[i].priceUp = 0;\n      }\n\n      if (arrDown[i].priceDown == undefined) {\n        arrDown[i].priceDown = 0;\n      }\n\n      priceUp = priceUp.toFixed(2);\n      priceDown = priceDown.toFixed(2);\n\n      if (arrUp[i].changesPercentageUp == undefined) {\n        arrUp[i].changesPercentageUp = 0;\n      }\n\n      if (arrDown[i].changesPercentageDown == undefined) {\n        arrDown[i].changesPercentageDown = 0;\n      }\n\n      changesPercentageUp = changesPercentageUp.toFixed(2);\n      changesPercentageDown = changesPercentageDown.toFixed(2);\n\n      if (arrUp[i].changeUp == undefined) {\n        arrUp[i].changeUp = 0;\n      }\n\n      if (arrDown[i].changeDown == undefined) {\n        arrDown[i].changeDown = 0;\n      }\n\n      changeUp = changeUp.toFixed(2);\n      changeDown = changeDown.toFixed(2); // UP VOLUME INCREASE ----------------------------\n\n      if (arrUp[i].volumeUp == undefined) {\n        arrUp[i].volumeUp = 0;\n      }\n\n      if (arrDown[i].volumeDown == undefined) {\n        arrDown[i].volumeDown = 0;\n      }\n\n      var volumeIncreaseUp = 0;\n\n      if (volumeUp > avgVolumeUp) {\n        let increase = volumeUp - avgVolumeUp;\n        volumeIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeUp;\n        volumeIncreaseUp = decrease / avgVolumeUp * -100;\n      } // DOWN VOLUME INCREASE ----------------------------\n\n\n      var volumeIncreaseDown = 0;\n\n      if (volumeDown > avgVolumeDown) {\n        let increase = volumeDown - avgVolumeDown;\n        volumeIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeDown;\n        volumeIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n      volumeIncreaseUp = volumeIncreaseUp.toFixed(2); // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n      // YESTERDAY UP VOLUME INCREASE ----------------------------\n\n      if (arrUp[i].volumeYesterdayUp == undefined) {\n        arrUp[i].volumeYesterdayUp = 0;\n      }\n\n      if (volumeYesterdayDown == undefined) {\n        volumeYesterdayDown = 0;\n      }\n\n      if (arrUp[i].avgVolumeUp == undefined) {\n        arrUp[i].avgVolumeUp = 0;\n      }\n\n      if (arrDown[i].avgVolumeDown == undefined) {\n        arrDown[i].avgVolumeDown = 0;\n      }\n\n      var yesterdayVolIncreaseUp = 0;\n\n      if (volumeYesterdayUp > avgVolumeUp) {\n        let increase = volumeYesterdayUp - avgVolumeUp;\n        yesterdayVolIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeYesterdayUp;\n        yesterdayVolIncreaseUp = decrease / avgVolumeUp * -100;\n      }\n\n      yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2); // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n      var yesterdayVolIncreaseDown = 0;\n\n      if (volumeYesterdayDown > avgVolumeDown) {\n        let increase = volumeYesterdayDown - avgVolumeDown;\n        yesterdayVolIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeYesterdayDown;\n        yesterdayVolIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2); // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n      var changeDownAdjusted = changeDown;\n\n      if (changeDownAdjusted < 0) {\n        changeDownAdjusted = changeDownAdjusted * -1;\n        changeDownAdjusted = changeDownAdjusted.toFixed(2);\n      } // NaN CHECK ----------------------------------------\n\n\n      if (isNaN(yesterdayVolIncreaseDown)) {\n        yesterdayVolIncreaseDown = \"No Data\";\n      }\n\n      if (isNaN(yesterdayVolIncreaseUp)) {\n        yesterdayVolIncreaseUp = \"No Data\";\n      } // ADJUST TO POSITIVE\n\n\n      if (stochasticDUp < 0) {\n        stochasticDUp = stochasticDUp * -1;\n      }\n\n      if (stochasticKUp < 0) {\n        stochasticKUp = stochasticKUp * -1;\n      }\n\n      if (stochasticDDown < 0) {\n        stochasticDDown = stochasticDDown * -1;\n      }\n\n      if (stochasticKDown < 0) {\n        stochasticKDown = stochasticKDown * -1;\n      } // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n\n\n      if (arrUp[i].avgVolumeUp == undefined) {\n        arrUp[i].avgVolumeUp = \"No Data\";\n      }\n\n      if (arrDown[i].avgVolumeDown == undefined) {\n        arrDown[i].avgVolumeDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeUp == undefined) {\n        arrUp[i].volumeUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeDown == undefined) {\n        arrDown[i].volumeDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeIncreaseUp == undefined) {\n        arrUp[i].volumeIncreaseUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeIncreaseDown == undefined) {\n        arrDown[i].volumeIncreaseDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeYesterdayUp == undefined) {\n        arrUp[i].volumeYesterdayUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeYesterdayDown == undefined) {\n        arrDown[i].volumeYesterdayDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaFiveTeenUp == undefined) {\n        arrUp[i].smaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaFiveTeenDown == undefined) {\n        arrDown[i].smaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaTwentyUp == undefined) {\n        arrUp[i].smaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaTwentyDown == undefined) {\n        arrDown[i].smaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaThirtyUp == undefined) {\n        arrUp[i].smaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaThirtyDown == undefined) {\n        arrDown[i].smaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaFiftyUp == undefined) {\n        arrUp[i].smaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaFiftyDown == undefined) {\n        arrDown[i].smaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaOneHunUp == undefined) {\n        arrUp[i].smaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaOneHunDown == undefined) {\n        arrDown[i].smaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaTwoHunUp == undefined) {\n        arrUp[i].smaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaTwoHunDown == undefined) {\n        arrDown[i].smaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaEightUp == undefined) {\n        arrUp[i].emaEightUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaEightDown == undefined) {\n        arrDown[i].emaEightDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwelveUp == undefined) {\n        arrUp[i].emaTwelveUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwelveDown == undefined) {\n        arrDown[i].emaTwelveDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwentyUp == undefined) {\n        arrUp[i].emaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwentyDown == undefined) {\n        arrDown[i].emaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwentySixUp == undefined) {\n        arrUp[i].emaTwentySixUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwentySixDown == undefined) {\n        arrDown[i].emaTwentySixDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaFiftyUp == undefined) {\n        arrUp[i].emaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaFiftyDown == undefined) {\n        arrDown[i].emaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwoHunUp == undefined) {\n        arrUp[i].emaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwoHunDown == undefined) {\n        arrDown[i].emaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaFiveTeenUp == undefined) {\n        arrUp[i].wmaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaFiveTeenDown == undefined) {\n        arrDown[i].wmaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaTwentyUp == undefined) {\n        arrUp[i].wmaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaTwentyDown == undefined) {\n        arrDown[i].wmaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaThirtyUp == undefined) {\n        arrUp[i].wmaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaThirtyDown == undefined) {\n        arrDown[i].wmaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaFiftyUp == undefined) {\n        arrUp[i].wmaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaFiftyDown == undefined) {\n        arrDown[i].wmaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaOneHunUp == undefined) {\n        arrUp[i].wmaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaOneHunDown == undefined) {\n        arrDown[i].wmaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaTwoHunUp == undefined) {\n        arrUp[i].wmaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaTwoHunDown == undefined) {\n        arrDown[i].wmaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaFiveTeenUp == undefined) {\n        arrUp[i].vwmaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaFiveTeenDown == undefined) {\n        arrDown[i].vwmaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaTwentyUp == undefined) {\n        arrUp[i].vwmaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaTwentyDown == undefined) {\n        arrDown[i].vwmaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaThirtyUp == undefined) {\n        arrUp[i].vwmaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaThirtyDown == undefined) {\n        arrDown[i].vwmaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaFiftyUp == undefined) {\n        arrUp[i].vwmaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaFiftyDown == undefined) {\n        arrDown[i].vwmaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaOneHunUp == undefined) {\n        arrUp[i].vwmaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaOneHunDown == undefined) {\n        arrDown[i].vwmaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaTwoHunUp == undefined) {\n        arrUp[i].vwmaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaTwoHunDown == undefined) {\n        arrDown[i].vwmaTwoHunDown = \"No Data\";\n      }\n\n      if (arrDown[i].vwapDown == undefined) {\n        arrDown[i].vwapDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwapUp == undefined) {\n        arrUp[i].vwapUp = \"No Data\";\n      }\n\n      if (arrDown[i].macdDown == undefined) {\n        arrDown[i].macdDown = \"No Data\";\n      }\n\n      if (arrUp[i].macdUp == undefined) {\n        arrUp[i].macdUp = \"No Data\";\n      }\n\n      if (arrDown[i].rsiDown == undefined) {\n        arrDown[i].rsiDown = \"No Data\";\n      }\n\n      if (arrUp[i].rsiUp == undefined) {\n        arrUp[i].rsiUp = \"No Data\";\n      }\n\n      if (arrDown[i].cciDown == undefined) {\n        arrDown[i].cciDown = \"No Data\";\n      }\n\n      if (arrUp[i].cciUp == undefined) {\n        arrUp[i].cciUp = \"No Data\";\n      }\n\n      if (arrDown[i].williamsRDown == undefined) {\n        arrDown[i].williamsRDown = \"No Data\";\n      }\n\n      if (arrUp[i].williamsRUp == undefined) {\n        arrUp[i].williamsRUp = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticKUp == undefined) {\n        arrUp[i].stochasticKUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticKDown == undefined) {\n        arrDown[i].stochasticKDown = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticDUp == undefined) {\n        arrUp[i].stochasticDUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticDDown == undefined) {\n        arrDown[i].stochasticDDown = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticSignalUp == undefined) {\n        arrUp[i].stochasticSignalUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticSignalDown == undefined) {\n        arrDown[i].stochasticSignalDown = \"No Data\";\n      }\n\n      if (arrDown[i].bbMiddleDown == undefined) {\n        arrDown[i].bbMiddleDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbMiddleUp == undefined) {\n        arrUp[i].bbMiddleUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbLowerDown == undefined) {\n        arrDown[i].bbLowerDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbLowerUp == undefined) {\n        arrUp[i].bbLowerUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbUpperDown == undefined) {\n        arrDown[i].bbUpperDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbUpperUp == undefined) {\n        arrUp[i].bbUpperUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbPercentDown == undefined) {\n        arrDown[i].bbPercentDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbPercentUp == undefined) {\n        arrUp[i].bbPercentUp = \"No Data\";\n      }\n\n      if (arrDown[i].macdHistogramDown == undefined) {\n        arrDown[i].macdHistogramDown = \"No Data\";\n      }\n\n      if (arrDown[i].macdSignalLineDown == undefined) {\n        arrDown[i].macdSignalLineDown = \"No Data\";\n      }\n\n      if (arrUp[i].macdHistogramUp == undefined) {\n        arrUp[i].macdHistogramUp = \"No Data\";\n      }\n\n      if (arrUp[i].macdSignalLineUp == undefined) {\n        arrUp[i].macdSignalLineUp = \"No Data\";\n      }\n\n      if (arrUp[i].symbolUp == undefined) {\n        arrUp[i].symbolUp = \"No Data\";\n      }\n\n      if (arrDown[i].symbolDown == undefined) {\n        arrDown[i].symbolDown = \"No Data\";\n      }\n\n      arrUp[i].volumeIncreaseToday = volumeIncreaseUp;\n      arrUp[i].volumeIncreaseYesterday = yesterdayVolIncreaseUp;\n      arrDown[i].volumeIncreaseToday = volumeIncreaseDown;\n      arrDown[i].volumeIncreaseYesterday = yesterdayVolIncreaseDown;\n    }\n\n    for (let i = 0; i < arrUp.length; i++) {\n      // // UPPER ------------------------------------------------------------------------------\n      arrUp[i].symbol = arrUp[i].symbolUp;\n      delete arrUp[i].symbolUp;\n      arrUp[i].change = arrUp[i].changeUp;\n      delete arrUp[i].changeUp;\n      arrUp[i].avgVolume = arrUp[i].avgVolumeUp;\n      delete arrUp[i].avgVolumeUp;\n      arrUp[i].changesPercentage = arrUp[i].changesPercentageUp;\n      delete arrUp[i].changesPercentageUp;\n      arrUp[i].emaEight = arrUp[i].emaEightUp;\n      delete arrUp[i].emaEightUp;\n      arrUp[i].emaTwelve = arrUp[i].emaTwelveUp;\n      delete arrUp[i].emaTwelveUp;\n      arrUp[i].emaTwenty = arrUp[i].emaTwentyUp;\n      delete arrUp[i].emaTwentyUp;\n      arrUp[i].emaTwentySix = arrUp[i].emaTwentySixUp;\n      delete arrUp[i].emaTwentySixUp;\n      arrUp[i].emaFifty = arrUp[i].emaFiftyUp;\n      delete arrUp[i].emaFiftyUp;\n      arrUp[i].emaTwoHun = arrUp[i].emaTwoHunUp;\n      delete arrUp[i].emaTwoHunUp;\n      arrUp[i].macd = arrUp[i].macdUp;\n      delete arrUp[i].macdUp;\n      arrUp[i].macdHistogram = arrUp[i].macdHistogramUp;\n      delete arrUp[i].macdHistogramUp;\n      arrUp[i].macdSignalLine = arrUp[i].macdSignalLineUp;\n      delete arrUp[i].macdSignalLineUp;\n      arrUp[i].price = arrUp[i].priceUp;\n      delete arrUp[i].priceUp;\n      arrUp[i].rsi = arrUp[i].rsiUp;\n      delete arrUp[i].rsiUp;\n      arrUp[i].smaFiveTeen = arrUp[i].smaFiveTeenUp;\n      delete arrUp[i].smaFiveTeenUp;\n      arrUp[i].smaTwenty = arrUp[i].smaTwentyUp;\n      delete arrUp[i].smaTwentyUp;\n      arrUp[i].smaThirty = arrUp[i].smaThirtyUp;\n      delete arrUp[i].smaThirtyUp;\n      arrUp[i].smaFifty = arrUp[i].smaFiftyUp;\n      delete arrUp[i].smaFiftyUp;\n      arrUp[i].smaOneHun = arrUp[i].smaOneHunUp;\n      delete arrUp[i].smaOneHunUp;\n      arrUp[i].smaTwoHun = arrUp[i].smaTwoHunUp;\n      delete arrUp[i].smaTwoHunUp;\n      arrUp[i].volume = arrUp[i].volumeUp;\n      delete arrUp[i].volumeUp;\n      arrUp[i].volumeYesterday = arrUp[i].volumeYesterdayUp;\n      delete arrUp[i].volumeYesterdayUp;\n      arrUp[i].vwap = arrUp[i].vwapUp;\n      delete arrUp[i].vwapUp;\n      arrUp[i].stochasticD = arrUp[i].stochasticDUp;\n      delete arrUp[i].stochasticDUp;\n      arrUp[i].stochasticK = arrUp[i].stochasticKUp;\n      delete arrUp[i].stochasticKUp;\n      arrUp[i].stochasticSignal = arrUp[i].stochasticSignalUp;\n      delete arrUp[i].stochasticSignalUp;\n      arrUp[i].wmaFiveTeen = arrUp[i].wmaFiveTeenUp;\n      delete arrUp[i].wmaFiveTeenUp;\n      arrUp[i].wmaTwenty = arrUp[i].wmaTwentyUp;\n      delete arrUp[i].wmaTwentyUp;\n      arrUp[i].wmaThirty = arrUp[i].wmaThirtyUp;\n      delete arrUp[i].wmaThirtyUp;\n      arrUp[i].wmaFifty = arrUp[i].wmaFiftyUp;\n      delete arrUp[i].wmaFiftyUp;\n      arrUp[i].wmaOneHun = arrUp[i].wmaOneHunUp;\n      delete arrUp[i].wmaOneHunUp;\n      arrUp[i].wmaTwoHun = arrUp[i].wmaTwoHunUp;\n      delete arrUp[i].wmaTwoHunUp;\n      arrUp[i].vwmaFiveTeen = arrUp[i].vwmaFiveTeenUp;\n      delete arrUp[i].vwmaFiveTeenUp;\n      arrUp[i].vwmaTwenty = arrUp[i].vwmaTwentyUp;\n      delete arrUp[i].vwmaTwentyUp;\n      arrUp[i].vwmaThirty = arrUp[i].vwmaThirtyUp;\n      delete arrUp[i].vwmaThirtyUp;\n      arrUp[i].vwmaFifty = arrUp[i].vwmaFiftyUp;\n      delete arrUp[i].vwmaFiftyUp;\n      arrUp[i].vwmaOneHun = arrUp[i].vwmaOneHunUp;\n      delete arrUp[i].vwmaOneHunUp;\n      arrUp[i].vwmaTwoHun = arrUp[i].vwmaTwoHunUp;\n      delete arrUp[i].vwmaTwoHunUp;\n      arrUp[i].williamsR = arrUp[i].williamsRUp;\n      delete arrUp[i].williamsRUp;\n      arrUp[i].cciTwenty = arrUp[i].cciUp;\n      delete arrUp[i].cciUp;\n      arrUp[i].bbUpper = arrUp[i].bbUpperUp;\n      delete arrUp[i].bbUpperUp;\n      arrUp[i].bbLower = arrUp[i].bbLowerUp;\n      delete arrUp[i].bbLowerUp;\n      arrUp[i].bbMiddle = arrUp[i].bbMiddleUp;\n      delete arrUp[i].bbMiddleUp;\n      arrUp[i].bbPercent = arrUp[i].bbPercentUp;\n      delete arrUp[i].bbPercentUp;\n\n      if (arrUp[i].bbPercent == undefined) {\n        arrUp[i].bbPercent = 'No Data';\n      }\n    }\n\n    for (let i = 0; i < arrDown.length; i++) {\n      // DOWNERS ------------------------------------------------------------------------------\n      arrDown[i].symbol = arrDown[i].symbolDown;\n      delete arrDown[i].symbolDown;\n      arrDown[i].change = arrDown[i].changeDown;\n      delete arrDown[i].changeDown;\n      arrDown[i].avgVolume = arrDown[i].avgVolumeDown;\n      delete arrDown[i].avgVolumeDown;\n      arrDown[i].changesPercentage = arrDown[i].changesPercentageDown;\n      delete arrDown[i].changesPercentageDown;\n      arrDown[i].emaEight = arrDown[i].emaEightDown;\n      delete arrDown[i].emaEightDown;\n      arrDown[i].emaTwelve = arrDown[i].emaTwelveDown;\n      delete arrDown[i].emaTwelveDown;\n      arrDown[i].emaTwenty = arrDown[i].emaTwentyDown;\n      delete arrDown[i].emaTwentyDown;\n      arrDown[i].emaTwentySix = arrDown[i].emaTwentySixDown;\n      delete arrDown[i].emaTwentySixDown;\n      arrDown[i].emaFifty = arrDown[i].emaFiftyDown;\n      delete arrDown[i].emaFiftyDown;\n      arrDown[i].emaTwoHun = arrDown[i].emaTwoHunDown;\n      delete arrDown[i].emaTwoHunDown;\n      arrDown[i].macd = arrDown[i].macdDown;\n      delete arrDown[i].macdDown;\n      arrDown[i].macdHistogram = arrDown[i].macdHistogramDown;\n      delete arrDown[i].macdHistogramDown;\n      arrDown[i].macdSignalLine = arrDown[i].macdSignalLineDown;\n      delete arrDown[i].macdSignalLineDown;\n      arrDown[i].price = arrDown[i].priceDown;\n      delete arrDown[i].priceDown;\n      arrDown[i].rsi = arrDown[i].rsiDown;\n      delete arrDown[i].rsiDown;\n      arrDown[i].smaFiveTeen = arrDown[i].smaFiveTeenDown;\n      delete arrDown[i].smaFiveTeenDown;\n      arrDown[i].smaTwenty = arrDown[i].smaTwentyDown;\n      delete arrDown[i].smaTwentyDown;\n      arrDown[i].smaThirty = arrDown[i].smaThirtyDown;\n      delete arrDown[i].smaThirtyDown;\n      arrDown[i].smaFifty = arrDown[i].smaFiftyDown;\n      delete arrDown[i].smaFiftyDown;\n      arrDown[i].smaOneHun = arrDown[i].smaOneHunDown;\n      delete arrDown[i].smaOneHunDown;\n      arrDown[i].smaTwoHun = arrDown[i].smaTwoHunDown;\n      delete arrDown[i].smaTwoHunDown;\n      arrDown[i].volume = arrDown[i].volumeDown;\n      delete arrDown[i].volumeDown;\n      arrDown[i].volumeYesterday = arrDown[i].volumeYesterdayDown;\n      delete arrDown[i].volumeYesterdayDown;\n      arrDown[i].vwap = arrDown[i].vwapDown;\n      delete arrDown[i].vwapDown;\n      arrDown[i].stochasticD = arrDown[i].stochasticDDown;\n      delete arrDown[i].stochasticDDown;\n      arrDown[i].stochasticK = arrDown[i].stochasticKDown;\n      delete arrDown[i].stochasticKDown;\n      arrDown[i].stochasticSignal = arrDown[i].stochasticSignalDown;\n      delete arrDown[i].stochasticSignalDown;\n      arrDown[i].wmaFiveTeen = arrDown[i].wmaFiveTeenDown;\n      delete arrDown[i].wmaFiveTeenDown;\n      arrDown[i].wmaTwenty = arrDown[i].wmaTwentyDown;\n      delete arrDown[i].wmaTwentyDown;\n      arrDown[i].wmaThirty = arrDown[i].wmaThirtyDown;\n      delete arrDown[i].wmaThirtyDown;\n      arrDown[i].wmaFifty = arrDown[i].wmaFiftyDown;\n      delete arrDown[i].wmaFiftyDown;\n      arrDown[i].wmaOneHun = arrDown[i].wmaOneHunDown;\n      delete arrDown[i].wmaOneHunDown;\n      arrDown[i].wmaTwoHun = arrDown[i].wmaTwoHunDown;\n      delete arrDown[i].wmaTwoHunDown;\n      arrDown[i].vwmaFiveTeen = arrDown[i].vwmaFiveTeenDown;\n      delete arrDown[i].vwmaFiveTeenDown;\n      arrDown[i].vwmaTwenty = arrDown[i].vwmaTwentyDown;\n      delete arrDown[i].vwmaTwentyDown;\n      arrDown[i].vwmaThirty = arrDown[i].vwmaThirtyDown;\n      delete arrDown[i].vwmaThirtyDown;\n      arrDown[i].vwmaFifty = arrDown[i].vwmaFiftyDown;\n      delete arrDown[i].vwmaFiftyDown;\n      arrDown[i].vwmaOneHun = arrDown[i].vwmaOneHunDown;\n      delete arrDown[i].vwmaOneHunDown;\n      arrDown[i].vwmaTwoHun = arrDown[i].vwmaTwoHunDown;\n      delete arrDown[i].vwmaTwoHunDown;\n      arrDown[i].williamsR = arrDown[i].williamsRDown;\n      delete arrDown[i].williamsRDown;\n      arrDown[i].cciTwenty = arrDown[i].cciDown;\n      delete arrDown[i].cciDown;\n      arrDown[i].bbUpper = arrDown[i].bbUpperDown;\n      delete arrDown[i].bbUpperDown;\n      arrDown[i].bbLower = arrDown[i].bbLowerDown;\n      delete arrDown[i].bbLowerDown;\n      arrDown[i].bbMiddle = arrDown[i].bbMiddleDown;\n      delete arrDown[i].bbMiddleDown;\n      arrDown[i].bbPercent = arrDown[i].bbPercentDown;\n      delete arrDown[i].bbPercentDown;\n    }\n\n    let finalStocksArr = arrDown.concat(arrUp);\n    return finalStocksArr;\n  } //----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\n\n\n  const returnedData = await filterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n  return returnedData;\n};","map":{"version":3,"sources":["/Users/austinolijar/Desktop/MERN-DeadCat/dead-cat/src/JS/ApiFunction.js"],"names":["nasdaqMasterKey","nyseMasterKey","handleDate","filterTradableSymbols","compileStocks","technicalAnalysis","dateObj","today","year","date","month","minutes","hour","time","timeNum","marketDay","todayDate","smaFunction","chartArr","dataPull","newestPull","num","culSMA","fiveTeenSMA","twentySMA","thirtySMA","fiftySMA","hunSMA","twoHunSMA","todayPricePull","price","historical","length","smaFiveTeen","close","smaFiveResult","toFixed","smaTwenty","smaTwentyResult","smaThirty","smaThirtyResult","smaFifty","smaFiftyResult","smaOneHun","smaOneHunResult","smaTwoHun","smaTwoHunResult","e","wmaFunction","weight","wmaInterval","iWma","wmaCul","wmaFiveTeen","i","wmaTwenty","wmaThirty","wmaFifty","wmaOneHun","wmaTwoHun","vwmaFunction","volume","newPrice","newVol","volCul","totalCul","vwmaFiveTeen","undefined","isNaN","vwmaTwenty","vwmaThirty","vwmaFifty","vwmaOneHun","vwmaTwoHun","emaFunction","macdCallBack","emaEight","emaTwelve","emaTwenty","emaTwentySix","emaFifty","emaTwoHun","prevDayEmaSub","arrEma","macdTwelve","macdTwentySix","subEMA","finalSubEma","unshift","derp","pop","finalEma","macdFunction","arr1","arr2","macd","averageMacd","iMacd","averageSum","reduce","a","b","finalAverageMacd","macdSignalLine","histogram","macdHistogram","rsiFunction","iRSI","iRSIAdjusted","recentUpper","recentDowner","upMove","downMove","pastDownPeriod","pastUpPeriod","rsi","averageUp","averageDown","stochOsc1433Function","iSO","soLowHolder","soHighHolder","highestHigh","lowestLow","topForm","bottomForm","topFormTwo","bottomFormTwo","topFormThree","bottomFormThree","signalLineHolder","stochasticK","push","low","high","Math","max","min","sumTop","sumBottom","slowD","stochasticD","sumStochD","smaD","stochasticSignal","williamsRFunction","highs","lows","williams","williamsR","cciFunction","tpvCul","tpv","tpvMa","tpvCurrent","recentTpv","cciTwenty","partOne","meanD","map","x","meanDMap","abs","meanDSum","meanDiv","partTwo","cci","bollingerBandsFunction","smaCul","closeHolder","bbUpper","bbLower","bbMiddle","closeP","priceAdj","priceAdjAbs","priceAdjSqrt","partOneDev","partTwoDev","standardDev","sqrt","bbPercent","vwapFunction","dayLengthPeriod","volumeCul","tempVWAP","slice","newDateString","vwapFinal","vwap","setVolume","yesterdayVolume","technicalIndicators","finalArr","callback","j","symbol","resSMA","fetch","dataSMA","json","Object","keys","console","log","resOscPulled","dataRecentPulled","resVWAP","dataVWAP","returnedData","buildIt","filterUpDownStocks","stocksUp","stocksDown","changesPercentage","symbolUp","changeUp","change","avgVolumeUp","avgVolume","changesPercentageUp","emaEightUp","emaTwelveUp","emaTwentyUp","emaTwentySixUp","emaFiftyUp","emaTwoHunUp","macdUp","macdHistogramUp","macdSignalLineUp","priceUp","rsiUp","smaFiveTeenUp","smaTwentyUp","smaThirtyUp","smaFiftyUp","smaOneHunUp","smaTwoHunUp","volumeUp","volumeYesterdayUp","vwapUp","stochasticDUp","stochasticKUp","stochasticSignalUp","wmaFiveTeenUp","wmaTwentyUp","wmaThirtyUp","wmaFiftyUp","wmaOneHunUp","wmaTwoHunUp","vwmaFiveTeenUp","vwmaTwentyUp","vwmaThirtyUp","vwmaFiftyUp","vwmaOneHunUp","vwmaTwoHunUp","williamsRUp","cciUp","bbUpperUp","bbLowerUp","bbMiddleUp","bbPercentUp","symbolDown","changeDown","avgVolumeDown","changesPercentageDown","emaEightDown","emaTwelveDown","emaTwentyDown","emaTwentySixDown","emaFiftyDown","emaTwoHunDown","macdDown","macdHistogramDown","macdSignalLineDown","priceDown","rsiDown","smaFiveTeenDown","smaTwentyDown","smaThirtyDown","smaFiftyDown","smaOneHunDown","smaTwoHunDown","volumeDown","volumeYesterdayDown","vwapDown","stochasticDDown","stochasticKDown","stochasticSignalDown","wmaFiveTeenDown","wmaTwentyDown","wmaThirtyDown","wmaFiftyDown","wmaOneHunDown","wmaTwoHunDown","vwmaFiveTeenDown","vwmaTwentyDown","vwmaThirtyDown","vwmaFiftyDown","vwmaOneHunDown","vwmaTwoHunDown","williamsRDown","cciDown","bbUpperDown","bbLowerDown","bbMiddleDown","bbPercentDown","arrUp","arrDown","volumeIncreaseUp","increase","decrease","volumeIncreaseDown","yesterdayVolIncreaseUp","yesterdayVolIncreaseDown","changeDownAdjusted","volumeIncreaseToday","volumeIncreaseYesterday","volumeYesterday","finalStocksArr","concat"],"mappings":"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","sourcesContent":["import { nasdaqMasterKey, nyseMasterKey } from \"./masterKeys\";\n\nimport { handleDate } from \"./fetch-compile-functions/handleDate\";\nimport {filterTradableSymbols} from \"./fetch-compile-functions/filterTradableStocks\"\nimport { compileStocks } from \"./fetch-compile-functions/compileStocks\";\n// import { nyseFetch } from \"./functions/nyseFetch\";\n// import { nasdaqFetch } from \"./functions/nasdaqFetch\";\n\nexport const technicalAnalysis = async () => {\n  // DATE OBJ --------------------------\n  const dateObj = {\n    today: null,\n    year: null,\n    date: null,\n    month: null,\n    minutes: null,\n    hour: null,\n    time: null,\n    timeNum: null,\n    marketDay: null,\n    todayDate: null,\n  }\n  // SET DATE --------------------------\n  await handleDate(dateObj)\n  \n// ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n\n// SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction smaFunction(chartArr, dataPull, newestPull, num) {\n  let culSMA = 0;\n\n  // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n  let fiveTeenSMA = 13;\n  let twentySMA = 18;\n  let thirtySMA = 28;\n  let fiftySMA = 48;\n  let hunSMA = 98;\n  let twoHunSMA = 198;\n\n  try {\n    const todayPricePull = newestPull[0].price;\n    // ------------- 15 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 13) {\n      chartArr[num].smaFiveTeen = \"No Data\";\n    } else {\n      while (fiveTeenSMA >= 0) {\n        culSMA += dataPull.historical[fiveTeenSMA].close;\n        fiveTeenSMA--;\n      }\n      let smaFiveResult = (culSMA + todayPricePull) / 15;\n      chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 20 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 19) {\n      chartArr[num].smaTwenty = \"No Data\";\n    } else {\n      while (twentySMA >= 0) {\n        culSMA += dataPull.historical[twentySMA].close;\n        twentySMA--;\n      }\n      let smaTwentyResult = (culSMA + todayPricePull) / 20;\n      chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 30 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 29) {\n      chartArr[num].smaThirty = \"No Data\";\n    } else {\n      while (thirtySMA >= 0) {\n        culSMA += dataPull.historical[thirtySMA].close;\n        thirtySMA--;\n      }\n      let smaThirtyResult = (culSMA + todayPricePull) / 30;\n      chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 50 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 49) {\n      chartArr[num].smaFifty = \"No Data\";\n    } else {\n      while (fiftySMA >= 0) {\n        culSMA += dataPull.historical[fiftySMA].close;\n        fiftySMA--;\n      }\n      let smaFiftyResult = (culSMA + todayPricePull) / 50;\n      chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 100 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 99) {\n      chartArr[num].smaOneHun = \"No Data\";\n    } else {\n      while (hunSMA >= 0) {\n        culSMA += dataPull.historical[hunSMA].close;\n        hunSMA--;\n      }\n      let smaOneHunResult = (culSMA + todayPricePull) / 100;\n      chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 200 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 199) {\n      chartArr[num].smaTwoHun = \"No Data\";\n    } else {\n      while (twoHunSMA >= 0) {\n        culSMA += dataPull.historical[twoHunSMA].close;\n        twoHunSMA--;\n      }\n      let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n      chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n      culSMA = 0;\n    }\n  } catch (e) {}\n}\n// WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction wmaFunction(chartArr, dataPull, newestPull, num) {\n  // WMA FiveTeen --------------------------------------------------------------------\n  let weight = 14;\n  let wmaInterval = 0;\n  let iWma = 15;\n  try {\n    let wmaCul = newestPull[0].price * 15;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].wmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFiveTeen = wmaCul / iWma;\n      chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n    }\n\n    // WMA Twenty --------------------------------------------------------------------\n    wmaCul = newestPull[0].price * 20;\n    weight = 19;\n    wmaInterval = 0;\n    iWma = 20;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].wmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwenty = wmaCul / iWma;\n      chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n    }\n\n    // WMA THIRTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 30;\n    weight = 29;\n    wmaInterval = 0;\n    iWma = 30;\n\n    if (dataPull.historical.length < 30) {\n      chartArr[num].wmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaThirty = wmaCul / iWma;\n      chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n    }\n\n    // WMA FIFTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 50;\n    weight = 49;\n    wmaInterval = 0;\n    iWma = 50;\n\n    if (dataPull.historical.length < 50) {\n      chartArr[num].wmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFifty = wmaCul / iWma;\n      chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n    }\n\n    // WMA ONE HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 100;\n    weight = 99;\n    wmaInterval = 0;\n    iWma = 100;\n\n    if (dataPull.historical.length < 100) {\n      chartArr[num].wmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaOneHun = wmaCul / iWma;\n      chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n    }\n\n    // WMA TWO HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 200;\n    weight = 199;\n    wmaInterval = 0;\n    iWma = 200;\n\n    if (dataPull.historical.length < 200) {\n      chartArr[num].wmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwoHun = wmaCul / iWma;\n      chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwmaFunction(chartArr, dataPull, newestPull, num) {\n  // VWMA FIVETEEN --------------------------------------------------------------------\n\n  try {\n    let price = 0;\n    let volume = 0;\n    const newPrice = newestPull[0].price;\n    const newVol = newestPull[0].volume;\n\n    let volCul = newestPull[0].volume;\n    let totalCul = newPrice * newVol;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].vwmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n\n      }\n\n      const vwmaFiveTeen = totalCul / volCul;\n      \n      chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n    }\n\n  \n\n    // VWMA TWENTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].vwmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaTwenty = totalCul / volCul;\n     \n      chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n    }\n\n    // VWMA THIRTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 29) {\n      chartArr[num].vwmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaThirty = totalCul / volCul;\n      chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n    }\n\n    // VWMA FIFTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 49) {\n      chartArr[num].vwmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaFifty = totalCul / volCul;\n      chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n    }\n\n    // VWMA ONEHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 99) {\n      chartArr[num].vwmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaOneHun = totalCul / volCul;\n      chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n    }\n\n    // VWMA TWOHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 199) {\n      chartArr[num].vwmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaTwoHun = totalCul / volCul;\n      chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n  let emaEight = 14;\n  let emaTwelve = 22;\n  let emaTwenty = 38;\n  let emaTwentySix = 50;\n  let emaFifty = 98;\n  let emaTwoHun = 398;\n  let prevDayEmaSub = 0;\n  let arrEma = [];\n\n  let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n  let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n  try {\n    const newPrice = newestPull[0].price;\n\n    // EMA EIGHT ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 16) {\n      chartArr[num].emaEight = \"No Data\";\n    } else {\n      while (emaEight >= 15) {\n        prevDayEmaSub += dataPull.historical[emaEight].close;\n        emaEight--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 8;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 9) * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaEight--;\n      while (emaEight >= 0) {\n        let derp =\n          (2 / 9) * (dataPull.historical[emaEight].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaEight--;\n      }\n\n      const finalEma = (2 / 9) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaEight = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n    // EMA TWELVE ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 24) {\n      chartArr[num].emaTwelve = \"No Data\";\n    } else {\n      while (emaTwelve >= 11) {\n        prevDayEmaSub += dataPull.historical[emaTwelve].close;\n        emaTwelve--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n      const subEMA = prevDayEmaSub / 12;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 13) * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwelve--;\n\n      while (emaTwelve >= 0) {\n        let derp =\n          (2 / 13) * (dataPull.historical[emaTwelve].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwelve < 8 && emaTwelve >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwelve.unshift(derp);\n        }\n        emaTwelve--;\n      }\n\n      const finalEma = (2 / 13) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwelve.unshift(finalEma);\n\n      chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 40) {\n      chartArr[num].emaTwenty = \"No Data\";\n    } else {\n      while (emaTwenty >= 19) {\n        prevDayEmaSub += dataPull.historical[emaTwenty].close;\n        emaTwenty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 20;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 21) * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwenty--;\n      while (emaTwenty >= 0) {\n        let derp =\n          (2 / 21) * (dataPull.historical[emaTwenty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwenty--;\n      }\n\n      const finalEma = (2 / 21) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY SIX ----------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 51) {\n      chartArr[num].emaTwentySix = \"No Data\";\n    } else {\n      while (emaTwentySix >= 25) {\n        prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n        emaTwentySix--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 26;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 27) * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwentySix--;\n      while (emaTwentySix >= 0) {\n        let derp =\n          (2 / 27) * (dataPull.historical[emaTwentySix].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwentySix < 8 && emaTwentySix >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwentySix.unshift(derp);\n        }\n        emaTwentySix--;\n      }\n\n      const finalEma = (2 / 27) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwentySix.unshift(finalEma);\n\n      chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA FIFTY -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 100) {\n      chartArr[num].emaFifty = \"No Data\";\n    } else {\n      while (emaFifty >= 49) {\n        prevDayEmaSub += dataPull.historical[emaFifty].close;\n        emaFifty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 50;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 51) * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaFifty--;\n      while (emaFifty >= 0) {\n        let derp =\n          (2 / 51) * (dataPull.historical[emaFifty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaFifty--;\n      }\n\n      const finalEma = (2 / 51) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaFifty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 400) {\n      chartArr[num].emaTwoHun = \"No Data\";\n    } else {\n      while (emaTwoHun >= 199) {\n        prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n        emaTwoHun--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 200;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 201) * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwoHun--;\n      while (emaTwoHun >= 0) {\n        let derp =\n          (2 / 201) * (dataPull.historical[emaTwoHun].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwoHun--;\n      }\n\n      const finalEma = (2 / 201) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n  } catch (e) {}\n\n  // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n  macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n}\n// MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\nfunction macdFunction(chartArr, num, arr1, arr2) {\n  const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n  chartArr[num].macd = macd.toFixed(2);\n  // CALCULATE SIGNAL LINE ----------------\n  let averageMacd = [];\n  let iMacd = 8;\n\n  try {\n    while (iMacd >= 0) {\n      averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n      iMacd--;\n    }\n    let averageSum = averageMacd.reduce((a, b) => a + b);\n    let finalAverageMacd = averageSum / 9;\n    let macdSignalLine =\n      (2 / 9) * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n    chartArr[num].macdSignalLine = macdSignalLine.toFixed(2);\n    // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n    let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n    chartArr[num].macdHistogram = histogram.toFixed(2);\n    // FOR NO DATA TO PULL FROM\n    if (chartArr[num].macdHistogram === \"NaN\") {\n      chartArr[num].macdHistogram = \"No Data\";\n    }\n    if (chartArr[num].macd === \"NaN\") {\n      chartArr[num].macd = \"No Data\";\n    }\n    if (chartArr[num].macdSignalLine === \"NaN\") {\n      chartArr[num].macdSignalLine = \"No Data\";\n    }\n  } catch (e) {}\n}\n// RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction rsiFunction(chartArr, dataPull, newestPull, num) {\n  let iRSI = 13;\n  let iRSIAdjusted = 14;\n  let recentUpper = 0;\n  let recentDowner = 0;\n  let upMove = 0;\n  let downMove = 0;\n  let pastDownPeriod = 0;\n  let pastUpPeriod = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n    if (dataPull.historical.length <= 14) {\n      chartArr[num].rsi = \"No Data\";\n    } else {\n      // LOOP FOR AVERAGE\n      while (iRSI >= 0) {\n        if (\n          dataPull.historical[iRSI].close >\n          dataPull.historical[iRSIAdjusted].close\n        ) {\n          upMove +=\n            dataPull.historical[iRSI].close -\n            dataPull.historical[iRSIAdjusted].close;\n        } else {\n          downMove +=\n            dataPull.historical[iRSIAdjusted].close -\n            dataPull.historical[iRSI].close;\n        }\n        iRSI--;\n        iRSIAdjusted--;\n      }\n\n      let averageUp = upMove / 14;\n      let averageDown = downMove / 14;\n\n      // MOST RECENT DIFFERENCE\n      if (newPrice > dataPull.historical[0].close) {\n        recentUpper = newPrice - dataPull.historical[0].close;\n      } else {\n        recentDowner = dataPull.historical[0].close - newPrice;\n      }\n\n      pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n      pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n\n      let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n      chartArr[num].rsi = rsi.toFixed(2);\n    }\n  } catch (e) {}\n}\n// STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n  let iSO = 13;\n\n  let soLowHolder = [];\n  let soHighHolder = [];\n  let highestHigh = 0;\n  let lowestLow = 0;\n  // FIRST %D\n  let topForm = [];\n  let bottomForm = [];\n  // SECOND %D\n  let topFormTwo = [];\n  let bottomFormTwo = [];\n  // THIRD %D\n  let topFormThree = [];\n  let bottomFormThree = [];\n  // HOLDING SET OF %D FOR 14 3 3\n  let signalLineHolder = [];\n  try {\n    let newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 18) {\n      chartArr[num].stochasticK = \"No Data\";\n    } else {\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n\n      while (iSO >= 0) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      soHighHolder.push(newPrice);\n      soLowHolder.push(newPrice);\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      if (lowestLow === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      if (highestHigh === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      topForm.push(newPrice - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      //FOR %K\n      chartArr[num].stochasticK = (\n        ((newPrice - lowestLow) / (highestHigh - lowestLow)) *\n        100\n      ).toFixed(2);\n\n      // RESET HOLDER AND VARs --------------------------------------------------------\n\n      iSO = 14;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n      while (iSO >= 1) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[0].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[0].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      // RESET HOLDER AND VARs ------------------------------------------------\n\n      iSO = 15;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 2) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[1].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[1].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[1].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      let sumTop = topForm.reduce((a, b) => a + b, 0);\n      let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n\n      let slowD = (sumTop / sumBottom) * 100;\n\n      // FOR %D\n      chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------------------------------\n\n      iSO = 16;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n      while (iSO >= 3) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormTwo.push(dataPull.historical[2].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[2].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------\n\n      iSO = 17;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 4) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormThree.push(dataPull.historical[3].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormThree.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      // ----------- TALLY UP LAST SMOOTHING -------------------------------\n      const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n      let smaD = sumStochD / 3;\n\n      if (smaD < 0) {\n        smaD *= -1;\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      } else {\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      }\n    }\n  } catch (e) {}\n}\n// WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction williamsRFunction(chartArr, dataPull, newestPull, num) {\n  let highs = [];\n  let lows = [];\n  let lowestLow = 0;\n  let highestHigh = 0;\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].williams = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        highs.push(dataPull.historical[i].high);\n        lows.push(dataPull.historical[i].low);\n      }\n\n      highs.push(newPrice);\n      lows.push(newPrice);\n\n      lowestLow = Math.min(...lows);\n      highestHigh = Math.max(...highs);\n\n      const williams =\n        ((highestHigh - dataPull.historical[0].close) /\n          (highestHigh - lowestLow)) *\n        -100;\n\n      chartArr[num].williamsR = williams.toFixed(2);\n    }\n  } catch (e) {}\n}\n// CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction cciFunction(chartArr, dataPull, newestPull, num) {\n  let tpvCul = 0;\n  let tpv = [];\n  let tpvMa = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    let tpvCurrent = newPrice;\n    const recentTpv = newPrice;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].cciTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 19; i++) {\n        const { high, close, low } = dataPull.historical[i];\n        tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n        tpvCurrent = (close + high + low) / 3;\n      }\n      // ---- TPV SMA ------------------------\n      tpvCul = tpv.reduce((a, b) => a + b);\n      tpvMa = tpvCul / 20;\n      // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n      const partOne = recentTpv - tpvMa;\n\n      const meanD = tpv.map((x) => x - tpvMa);\n      const meanDMap = meanD.map((x) => Math.abs(x));\n      const meanDSum = meanDMap.reduce((a, b) => a + b);\n      const meanDiv = meanDSum / 20;\n      // PART TWO OF FORMULA --------------\n      const partTwo = meanDiv * 0.015;\n      // CCI ------------------------------\n      const cci = partOne / partTwo;\n\n      chartArr[num].cciTwenty = cci.toFixed(2);\n    }\n  } catch (e) {}\n}\n// BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n  let smaCul = 0;\n  let closeHolder = [];\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].bbUpper = \"No Data\";\n      chartArr[num].bbLower = \"No Data\";\n      chartArr[num].bbMiddle = \"No Data\";\n    } else {\n      let closeP = newPrice;\n      for (let i = 0; i <= 19; i++) {\n        closeHolder.push(closeP);\n        smaCul += closeP;\n        closeP = dataPull.historical[i].close;\n      }\n      // STANDARD DEVIATION CALC --------------------------------\n      const smaTwenty = smaCul / 20;\n\n      const priceAdj = closeHolder.map((x) => x - smaTwenty);\n\n      const priceAdjAbs = priceAdj.map((x) => Math.abs(x));\n\n      const priceAdjSqrt = priceAdjAbs.map((x) => x * x);\n\n      const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n\n      const partTwoDev = partOneDev / 20;\n      const standardDev = Math.sqrt(partTwoDev);\n      // BB BAND CALC --------------------------------------------\n      const bbUpper = smaTwenty + standardDev * 2;\n      const bbLower = smaTwenty - standardDev * 2;\n\n      const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n\n      chartArr[num].bbUpper = bbUpper.toFixed(2);\n      chartArr[num].bbLower = bbLower.toFixed(2);\n      chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n      chartArr[num].bbPercent = bbPercent.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwapFunction(chartArr, dataPull, num) {\n  // ----------- VWAP CALUC -------------------------------------------\n  let dayLengthPeriod = 0;\n  let tpvCul = 0;\n  let volumeCul = 0;\n  let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n  try {\n    // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n    while (dataPull[dayLengthPeriod].date.slice(0, 10) == dateObj.newDateString) {\n      dayLengthPeriod++;\n    }\n  \n    // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n    for (let i = 0; i < dayLengthPeriod; i++) {\n      const { volume, high, close, low, date } = dataPull[i];\n      let tpv = (high + low + close) / 3;\n      if (date.slice(0, 10) == dateObj.newDateString) {\n        tpvCul += tpv * volume;\n        volumeCul += volume;\n      }\n      var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n      tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n    }\n    let vwap = tempVWAP[0].toFixed(2);\n    chartArr[num].vwap = vwap;\n  } catch (e) {\n  }\n}\n// SET VOLUME FOR LATER\nfunction setVolume(chartArr, dataPull, newestPull, num) {\n  // SET RECENT YESTERDAY VOLUME\n  try {\n    if (dataPull.historical.length <= 0) {\n      chartArr[num].yesterdayVolume = 0;\n    } else {\n      chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n      if (dateObj.marketDay == 0 || dateObj.marketDay == 6) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (dateObj.marketDay >= 1 && dateObj.marketDay <= 5 && dateObj.timeNum < 930) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (dateObj.timeNum > 1830) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n    }\n    if (newestPull.length < 0) {\n      chartArr[num].volume = 0;\n    } else {\n      // SET RECENT VOLUME\n      chartArr[num].volume = newestPull[0].volume;\n    }\n  } catch (e) {}\n}\n\n// TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\nasync function technicalIndicators(finalArr, callback) {\n  let j = 0;\n\n  while (j < finalArr.length) {\n    // LOOP FOR TECHNICAL SYMBOL\n\n    // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n    const { symbol } = finalArr[j];\n\n    //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n    const resSMA = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataSMA).length) {\n        console.log(\"no SMA Pull data found\");\n      }\n    } catch (e) {}\n\n    //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n    const resOscPulled = await fetch(\n      `https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataRecentPulled = await resOscPulled.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataRecentPulled).length) {\n        console.log(\"no Recent Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    const resVWAP = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataVWAP = await resVWAP.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataVWAP).length) {\n        console.log(\"no VWAP Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    vwapFunction(finalArr, dataVWAP, j);\n\n    // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    smaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    wmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    vwmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n    emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction);\n\n    // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    rsiFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n\n    // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    williamsRFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    cciFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // SET VOLUME PROPERTIES\n    setVolume(finalArr, dataSMA, dataRecentPulled, j);\n\n    j++; // UPDATE WHILE LOOP\n  } // THIS IS THE END OF LOOP\n  const returnedData = await callback(finalArr, buildIt);\n  return returnedData;\n  \n}\nasync function filterUpDownStocks(finalArr, callback) {\n  let stocksUp = [];\n  let stocksDown = [];\n\n  let j = 0;\n\n  while (j < finalArr.length) {\n    const { changesPercentage } = finalArr[j];\n\n    if (changesPercentage > 0) {\n      stocksUp.push(finalArr[j]);\n    } else {\n      stocksDown.push(finalArr[j]);\n    }\n\n    j++;\n  } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n\n  // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n  for (let i = 0; i < stocksUp.length; i++) {\n    // UPPER ------------------------------------------------------------------------------\n    stocksUp[i].symbolUp = stocksUp[i].symbol;\n    delete stocksUp[i].symbol;\n    stocksUp[i].changeUp = stocksUp[i].change;\n    delete stocksUp[i].change;\n    stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n    delete stocksUp[i].avgVolume;\n    stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n    delete stocksUp[i].changesPercentage;\n    stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n    delete stocksUp[i].emaEight;\n    stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n    delete stocksUp[i].emaTwelve;\n    stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n    delete stocksUp[i].emaTwenty;\n    stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n    delete stocksUp[i].emaTwentySix;\n    stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n    delete stocksUp[i].emaFifty;\n    stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n    delete stocksUp[i].emaTwoHun;\n    stocksUp[i].macdUp = stocksUp[i].macd;\n    delete stocksUp[i].macd;\n    stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n    delete stocksUp[i].macdHistogram;\n    stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n    delete stocksUp[i].macdSignalLine;\n    stocksUp[i].priceUp = stocksUp[i].price;\n    delete stocksUp[i].price;\n    stocksUp[i].rsiUp = stocksUp[i].rsi;\n    delete stocksUp[i].rsi;\n    stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n    delete stocksUp[i].smaFiveTeen;\n    stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n    delete stocksUp[i].smaTwenty;\n    stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n    delete stocksUp[i].smaThirty;\n    stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n    delete stocksUp[i].smaFifty;\n    stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n    delete stocksUp[i].smaOneHun;\n    stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n    delete stocksUp[i].smaTwoHun;\n    stocksUp[i].volumeUp = stocksUp[i].volume;\n    delete stocksUp[i].volume;\n    stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n    delete stocksUp[i].yesterdayVolume;\n    stocksUp[i].vwapUp = stocksUp[i].vwap;\n    delete stocksUp[i].vwap;\n    stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n    delete stocksUp[i].stochasticD;\n    stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n    delete stocksUp[i].stochasticK;\n    stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n    delete stocksUp[i].stochasticSignal;\n    stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n    delete stocksUp[i].wmaFiveTeen;\n    stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n    delete stocksUp[i].wmaTwenty;\n    stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n    delete stocksUp[i].wmaThirty;\n    stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n    delete stocksUp[i].wmaFifty;\n    stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n    delete stocksUp[i].wmaOneHun;\n    stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n    delete stocksUp[i].wmaTwoHun;\n    stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n    delete stocksUp[i].vwmaFiveTeen;\n    stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n    delete stocksUp[i].vwmaTwenty;\n    stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n    delete stocksUp[i].vwmaThirty;\n    stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n    delete stocksUp[i].vwmaFifty;\n    stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n    delete stocksUp[i].vwmaOneHun;\n    stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n    delete stocksUp[i].vwmaTwoHun;\n    stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n    delete stocksUp[i].williamsR;\n    stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n    delete stocksUp[i].cciTwenty;\n    stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n    delete stocksUp[i].bbUpper;\n    stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n    delete stocksUp[i].bbLower;\n    stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n    delete stocksUp[i].bbMiddle;\n    stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n    delete stocksUp[i].bbPercent;\n    // DOWNERS ------------------------------------------------------------------------------\n    stocksDown[i].symbolDown = stocksDown[i].symbol;\n    delete stocksDown[i].symbol;\n    stocksDown[i].changeDown = stocksDown[i].change;\n    delete stocksDown[i].change;\n    stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n    delete stocksDown[i].avgVolume;\n    stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n    delete stocksDown[i].changesPercentage;\n    stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n    delete stocksDown[i].emaEight;\n    stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n    delete stocksDown[i].emaTwelve;\n    stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n    delete stocksDown[i].emaTwenty;\n    stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n    delete stocksDown[i].emaTwentySix;\n    stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n    delete stocksDown[i].emaFifty;\n    stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n    delete stocksDown[i].emaTwoHun;\n    stocksDown[i].macdDown = stocksDown[i].macd;\n    delete stocksDown[i].macd;\n    stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n    delete stocksDown[i].macdHistogram;\n    stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n    delete stocksDown[i].macdSignalLine;\n    stocksDown[i].priceDown = stocksDown[i].price;\n    delete stocksDown[i].price;\n    stocksDown[i].rsiDown = stocksDown[i].rsi;\n    delete stocksDown[i].rsi;\n    stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n    delete stocksDown[i].smaFiveTeen;\n    stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n    delete stocksDown[i].smaTwenty;\n    stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n    delete stocksDown[i].smaThirty;\n    stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n    delete stocksDown[i].smaFifty;\n    stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n    delete stocksDown[i].smaOneHun;\n    stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n    delete stocksDown[i].smaTwoHun;\n    stocksDown[i].volumeDown = stocksDown[i].volume;\n    delete stocksDown[i].volume;\n    stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n    delete stocksDown[i].yesterdayVolume;\n    stocksDown[i].vwapDown = stocksDown[i].vwap;\n    delete stocksDown[i].vwap;\n    stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n    delete stocksDown[i].stochasticD;\n    stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n    delete stocksDown[i].stochasticK;\n    stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n    delete stocksDown[i].stochasticSignal;\n    stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n    delete stocksDown[i].wmaFiveTeen;\n    stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n    delete stocksDown[i].wmaTwenty;\n    stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n    delete stocksDown[i].wmaThirty;\n    stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n    delete stocksDown[i].wmaFifty;\n    stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n    delete stocksDown[i].wmaOneHun;\n    stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n    delete stocksDown[i].wmaTwoHun;\n    stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n    delete stocksDown[i].vwmaFiveTeen;\n    stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n    delete stocksDown[i].vwmaTwenty;\n    stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n    delete stocksDown[i].vwmaThirty;\n    stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n    delete stocksDown[i].vwmaFifty;\n    stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n    delete stocksDown[i].vwmaOneHun;\n    stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n    delete stocksDown[i].vwmaTwoHun;\n    stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n    delete stocksDown[i].williamsR;\n    stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n    delete stocksDown[i].cciTwenty;\n    stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n    delete stocksDown[i].bbUpper;\n    stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n    delete stocksDown[i].bbLower;\n    stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n    delete stocksDown[i].bbMiddle;\n    stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n    delete stocksDown[i].bbPercent;\n  }\n  const returnedData = await callback(stocksUp, stocksDown);\n  return returnedData;\n}\nfunction buildIt(arrUp, arrDown) {\n  for (let i = 0; i < arrUp.length; i++) {\n    // DECONSTRUCTING UP AND DOWN VAR\n   var {\n      avgVolumeUp,\n      volumeYesterdayUp,\n      changeUp,\n      changesPercentageUp,\n      priceUp,\n      symbolUp,\n      volumeUp,\n      vwapUp,\n      smaFiveTeenUp,\n      smaTwentyUp,\n      smaThirtyUp,\n      smaFiftyUp,\n      smaOneHunUp,\n      smaTwoHunUp,\n      emaEightUp,\n      emaTwelveUp,\n      emaTwentyUp,\n      emaTwentySixUp,\n      emaFiftyUp,\n      emaTwoHunUp,\n      wmaFiveTeenUp,\n      wmaTwentyUp,\n      wmaThirtyUp,\n      wmaFiftyUp,\n      wmaOneHunUp,\n      wmaTwoHunUp,\n      vwmaFiveTeenUp,\n      vwmaTwentyUp,\n      vwmaThirtyUp,\n      vwmaFiftyUp,\n      vwmaOneHunUp,\n      vwmaTwoHunUp,\n      macdUp,\n      macdHistogramUp,\n      macdSignalLineUp,\n      rsiUp,\n      stochasticDUp,\n      stochasticKUp,\n      stochasticSignalUp,\n      cciUp,\n      bbMiddleUp,\n      bbLowerUp,\n      bbUpperUp,\n      bbPercentUp,\n      williamsRUp,\n    } = arrUp[i];\n    var {\n      avgVolumeDown,\n      volumeYesterdayDown,\n      changeDown,\n      changesPercentageDown,\n      priceDown,\n      symbolDown,\n      volumeDown,\n      vwapDown,\n      smaFiveTeenDown,\n      smaTwentyDown,\n      smaThirtyDown,\n      smaFiftyDown,\n      smaOneHunDown,\n      smaTwoHunDown,\n      emaEightDown,\n      emaTwelveDown,\n      emaTwentyDown,\n      emaTwentySixDown,\n      emaFiftyDown,\n      emaTwoHunDown,\n      wmaFiveTeenDown,\n      wmaTwentyDown,\n      wmaThirtyDown,\n      wmaFiftyDown,\n      wmaOneHunDown,\n      wmaTwoHunDown,\n      vwmaFiveTeenDown,\n      vwmaTwentyDown,\n      vwmaThirtyDown,\n      vwmaFiftyDown,\n      vwmaOneHunDown,\n      vwmaTwoHunDown,\n      macdDown,\n      macdHistogramDown,\n      macdSignalLineDown,\n      rsiDown,\n      stochasticDDown,\n      stochasticKDown,\n      stochasticSignalDown,\n      cciDown,\n      bbMiddleDown,\n      bbLowerDown,\n      bbUpperDown,\n      bbPercentDown,\n      williamsRDown,\n    } = arrDown[i];\n\n    // ADJUST TO FIXED --------------------------------------------------------\n    if (arrUp[i].priceUp == undefined) {\n      arrUp[i].priceUp = 0;\n    }\n    if (arrDown[i].priceDown == undefined) {\n      arrDown[i].priceDown = 0;\n    }\n\n    priceUp = priceUp.toFixed(2);\n    priceDown = priceDown.toFixed(2);\n    if (arrUp[i].changesPercentageUp == undefined) {\n      arrUp[i].changesPercentageUp = 0;\n    }\n    if (arrDown[i].changesPercentageDown == undefined) {\n      arrDown[i].changesPercentageDown = 0;\n    }\n    changesPercentageUp = changesPercentageUp.toFixed(2);\n    changesPercentageDown = changesPercentageDown.toFixed(2);\n\n    if (arrUp[i].changeUp == undefined) {\n      arrUp[i].changeUp = 0;\n    }\n    if (arrDown[i].changeDown == undefined) {\n      arrDown[i].changeDown = 0;\n    }\n    changeUp = changeUp.toFixed(2);\n    changeDown = changeDown.toFixed(2);\n    // UP VOLUME INCREASE ----------------------------\n    if (arrUp[i].volumeUp == undefined) {\n      arrUp[i].volumeUp = 0;\n    }\n    if (arrDown[i].volumeDown == undefined) {\n      arrDown[i].volumeDown = 0;\n    }\n\n    var volumeIncreaseUp = 0;\n\n    if (volumeUp > avgVolumeUp) {\n      let increase = volumeUp - avgVolumeUp;\n      volumeIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeUp;\n      volumeIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n    // DOWN VOLUME INCREASE ----------------------------\n    var volumeIncreaseDown = 0;\n\n    if (volumeDown > avgVolumeDown) {\n      let increase = volumeDown - avgVolumeDown;\n      volumeIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeDown;\n      volumeIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n    volumeIncreaseUp = volumeIncreaseUp.toFixed(2);\n\n    // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n\n    // YESTERDAY UP VOLUME INCREASE ----------------------------\n    if (arrUp[i].volumeYesterdayUp == undefined) {\n      arrUp[i].volumeYesterdayUp = 0;\n    }\n    if (volumeYesterdayDown == undefined) {\n      volumeYesterdayDown = 0;\n    }\n    if (arrUp[i].avgVolumeUp == undefined) {\n      arrUp[i].avgVolumeUp = 0;\n    }\n    if (arrDown[i].avgVolumeDown == undefined) {\n      arrDown[i].avgVolumeDown = 0;\n    }\n    var yesterdayVolIncreaseUp = 0;\n\n    if (volumeYesterdayUp > avgVolumeUp) {\n      let increase = volumeYesterdayUp - avgVolumeUp;\n      yesterdayVolIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeYesterdayUp;\n      yesterdayVolIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n\n    yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2);\n\n    // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n    var yesterdayVolIncreaseDown = 0;\n\n    if (volumeYesterdayDown > avgVolumeDown) {\n      let increase = volumeYesterdayDown - avgVolumeDown;\n      yesterdayVolIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeYesterdayDown;\n      yesterdayVolIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2);\n\n    // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n    var changeDownAdjusted = changeDown;\n\n    if (changeDownAdjusted < 0) {\n      changeDownAdjusted = changeDownAdjusted * -1;\n      changeDownAdjusted = changeDownAdjusted.toFixed(2);\n    }\n    // NaN CHECK ----------------------------------------\n    if (isNaN(yesterdayVolIncreaseDown)) {\n      yesterdayVolIncreaseDown = \"No Data\";\n    }\n    if (isNaN(yesterdayVolIncreaseUp)) {\n      yesterdayVolIncreaseUp = \"No Data\";\n    }\n    // ADJUST TO POSITIVE\n    if (stochasticDUp < 0) {\n      stochasticDUp = stochasticDUp * -1;\n    }\n    if (stochasticKUp < 0) {\n      stochasticKUp = stochasticKUp * -1;\n    }\n    if (stochasticDDown < 0) {\n      stochasticDDown = stochasticDDown * -1;\n    }\n    if (stochasticKDown < 0) {\n      stochasticKDown = stochasticKDown * -1;\n    }\n    // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n    if (arrUp[i].avgVolumeUp == undefined) {\n      arrUp[i].avgVolumeUp = \"No Data\";\n    }\n    if (arrDown[i].avgVolumeDown == undefined) {\n      arrDown[i].avgVolumeDown = \"No Data\";\n    }\n    if (arrUp[i].volumeUp == undefined) {\n      arrUp[i].volumeUp = \"No Data\";\n    }\n    if (arrDown[i].volumeDown == undefined) {\n      arrDown[i].volumeDown = \"No Data\";\n    }\n    if (arrUp[i].volumeIncreaseUp == undefined) {\n      arrUp[i].volumeIncreaseUp = \"No Data\";\n    }\n    if (arrDown[i].volumeIncreaseDown == undefined) {\n      arrDown[i].volumeIncreaseDown = \"No Data\";\n    }\n    if (arrUp[i].volumeYesterdayUp == undefined) {\n      arrUp[i].volumeYesterdayUp = \"No Data\";\n    }\n    if (arrDown[i].volumeYesterdayDown == undefined) {\n      arrDown[i].volumeYesterdayDown = \"No Data\";\n    }\n\n    if (arrUp[i].smaFiveTeenUp == undefined) {\n      arrUp[i].smaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].smaFiveTeenDown == undefined) {\n      arrDown[i].smaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].smaTwentyUp == undefined) {\n      arrUp[i].smaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].smaTwentyDown == undefined) {\n      arrDown[i].smaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].smaThirtyUp == undefined) {\n      arrUp[i].smaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].smaThirtyDown == undefined) {\n      arrDown[i].smaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].smaFiftyUp == undefined) {\n      arrUp[i].smaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].smaFiftyDown == undefined) {\n      arrDown[i].smaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].smaOneHunUp == undefined) {\n      arrUp[i].smaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].smaOneHunDown == undefined) {\n      arrDown[i].smaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].smaTwoHunUp == undefined) {\n      arrUp[i].smaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].smaTwoHunDown == undefined) {\n      arrDown[i].smaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].emaEightUp == undefined) {\n      arrUp[i].emaEightUp = \"No Data\";\n    }\n    if (arrDown[i].emaEightDown == undefined) {\n      arrDown[i].emaEightDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwelveUp == undefined) {\n      arrUp[i].emaTwelveUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwelveDown == undefined) {\n      arrDown[i].emaTwelveDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwentyUp == undefined) {\n      arrUp[i].emaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwentyDown == undefined) {\n      arrDown[i].emaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwentySixUp == undefined) {\n      arrUp[i].emaTwentySixUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwentySixDown == undefined) {\n      arrDown[i].emaTwentySixDown = \"No Data\";\n    }\n    if (arrUp[i].emaFiftyUp == undefined) {\n      arrUp[i].emaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].emaFiftyDown == undefined) {\n      arrDown[i].emaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwoHunUp == undefined) {\n      arrUp[i].emaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwoHunDown == undefined) {\n      arrDown[i].emaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].wmaFiveTeenUp == undefined) {\n      arrUp[i].wmaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].wmaFiveTeenDown == undefined) {\n      arrDown[i].wmaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].wmaTwentyUp == undefined) {\n      arrUp[i].wmaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaTwentyDown == undefined) {\n      arrDown[i].wmaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaThirtyUp == undefined) {\n      arrUp[i].wmaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaThirtyDown == undefined) {\n      arrDown[i].wmaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaFiftyUp == undefined) {\n      arrUp[i].wmaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaFiftyDown == undefined) {\n      arrDown[i].wmaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaOneHunUp == undefined) {\n      arrUp[i].wmaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].wmaOneHunDown == undefined) {\n      arrDown[i].wmaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].wmaTwoHunUp == undefined) {\n      arrUp[i].wmaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].wmaTwoHunDown == undefined) {\n      arrDown[i].wmaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].vwmaFiveTeenUp == undefined) {\n      arrUp[i].vwmaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaFiveTeenDown == undefined) {\n      arrDown[i].vwmaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaTwentyUp == undefined) {\n      arrUp[i].vwmaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaTwentyDown == undefined) {\n      arrDown[i].vwmaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaThirtyUp == undefined) {\n      arrUp[i].vwmaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaThirtyDown == undefined) {\n      arrDown[i].vwmaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaFiftyUp == undefined) {\n      arrUp[i].vwmaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaFiftyDown == undefined) {\n      arrDown[i].vwmaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaOneHunUp == undefined) {\n      arrUp[i].vwmaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaOneHunDown == undefined) {\n      arrDown[i].vwmaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaTwoHunUp == undefined) {\n      arrUp[i].vwmaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaTwoHunDown == undefined) {\n      arrDown[i].vwmaTwoHunDown = \"No Data\";\n    }\n\n    if (arrDown[i].vwapDown == undefined) {\n      arrDown[i].vwapDown = \"No Data\";\n    }\n    if (arrUp[i].vwapUp == undefined) {\n      arrUp[i].vwapUp = \"No Data\";\n    }\n\n    if (arrDown[i].macdDown == undefined) {\n      arrDown[i].macdDown = \"No Data\";\n    }\n    if (arrUp[i].macdUp == undefined) {\n      arrUp[i].macdUp = \"No Data\";\n    }\n\n    if (arrDown[i].rsiDown == undefined) {\n      arrDown[i].rsiDown = \"No Data\";\n    }\n    if (arrUp[i].rsiUp == undefined) {\n      arrUp[i].rsiUp = \"No Data\";\n    }\n    if (arrDown[i].cciDown == undefined) {\n      arrDown[i].cciDown = \"No Data\";\n    }\n    if (arrUp[i].cciUp == undefined) {\n      arrUp[i].cciUp = \"No Data\";\n    }\n    if (arrDown[i].williamsRDown == undefined) {\n      arrDown[i].williamsRDown = \"No Data\";\n    }\n    if (arrUp[i].williamsRUp == undefined) {\n      arrUp[i].williamsRUp = \"No Data\";\n    }\n    if (arrUp[i].stochasticKUp == undefined) {\n      arrUp[i].stochasticKUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticKDown == undefined) {\n      arrDown[i].stochasticKDown = \"No Data\";\n    }\n    if (arrUp[i].stochasticDUp == undefined) {\n      arrUp[i].stochasticDUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticDDown == undefined) {\n      arrDown[i].stochasticDDown = \"No Data\";\n    }\n    if (arrUp[i].stochasticSignalUp == undefined) {\n      arrUp[i].stochasticSignalUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticSignalDown == undefined) {\n      arrDown[i].stochasticSignalDown = \"No Data\";\n    }\n\n    if (arrDown[i].bbMiddleDown == undefined) {\n      arrDown[i].bbMiddleDown = \"No Data\";\n    }\n    if (arrUp[i].bbMiddleUp == undefined) {\n      arrUp[i].bbMiddleUp = \"No Data\";\n    }\n    if (arrDown[i].bbLowerDown == undefined) {\n      arrDown[i].bbLowerDown = \"No Data\";\n    }\n    if (arrUp[i].bbLowerUp == undefined) {\n      arrUp[i].bbLowerUp = \"No Data\";\n    }\n    if (arrDown[i].bbUpperDown == undefined) {\n      arrDown[i].bbUpperDown = \"No Data\";\n    }\n    if (arrUp[i].bbUpperUp == undefined) {\n      arrUp[i].bbUpperUp = \"No Data\";\n    }\n    if (arrDown[i].bbPercentDown == undefined) {\n      arrDown[i].bbPercentDown = \"No Data\";\n    }\n\n    if (arrUp[i].bbPercentUp == undefined) {\n      arrUp[i].bbPercentUp = \"No Data\";\n    }\n    if (arrDown[i].macdHistogramDown == undefined) {\n      arrDown[i].macdHistogramDown = \"No Data\";\n    }\n    if (arrDown[i].macdSignalLineDown == undefined) {\n      arrDown[i].macdSignalLineDown = \"No Data\";\n    }\n    if (arrUp[i].macdHistogramUp == undefined) {\n      arrUp[i].macdHistogramUp = \"No Data\";\n    }\n    if (arrUp[i].macdSignalLineUp == undefined) {\n      arrUp[i].macdSignalLineUp = \"No Data\";\n    }\n    if (arrUp[i].symbolUp == undefined) {\n      arrUp[i].symbolUp = \"No Data\";\n    }\n    if (arrDown[i].symbolDown == undefined) {\n      arrDown[i].symbolDown = \"No Data\";\n    }\n\n    arrUp[i].volumeIncreaseToday = volumeIncreaseUp\n    arrUp[i].volumeIncreaseYesterday = yesterdayVolIncreaseUp\n    arrDown[i].volumeIncreaseToday = volumeIncreaseDown\n    arrDown[i].volumeIncreaseYesterday = yesterdayVolIncreaseDown\n  }\n \n \n  for (let i = 0; i < arrUp.length; i++) {\n    // // UPPER ------------------------------------------------------------------------------\n\n    arrUp[i].symbol = arrUp[i].symbolUp;\n    delete arrUp[i].symbolUp;\n    arrUp[i].change = arrUp[i].changeUp;\n    delete arrUp[i].changeUp;\n    arrUp[i].avgVolume = arrUp[i].avgVolumeUp;\n    delete arrUp[i].avgVolumeUp;\n    arrUp[i].changesPercentage = arrUp[i].changesPercentageUp;\n    delete arrUp[i].changesPercentageUp;\n    arrUp[i].emaEight = arrUp[i].emaEightUp;\n    delete arrUp[i].emaEightUp;\n    arrUp[i].emaTwelve = arrUp[i].emaTwelveUp;\n    delete arrUp[i].emaTwelveUp;\n    arrUp[i].emaTwenty = arrUp[i].emaTwentyUp;\n    delete arrUp[i].emaTwentyUp;\n    arrUp[i].emaTwentySix = arrUp[i].emaTwentySixUp;\n    delete arrUp[i].emaTwentySixUp;\n    arrUp[i].emaFifty = arrUp[i].emaFiftyUp;\n    delete arrUp[i].emaFiftyUp;\n    arrUp[i].emaTwoHun = arrUp[i].emaTwoHunUp;\n    delete arrUp[i].emaTwoHunUp;\n    arrUp[i].macd = arrUp[i].macdUp;\n    delete arrUp[i].macdUp;\n    arrUp[i].macdHistogram = arrUp[i].macdHistogramUp;\n    delete arrUp[i].macdHistogramUp;\n    arrUp[i].macdSignalLine = arrUp[i].macdSignalLineUp;\n    delete arrUp[i].macdSignalLineUp;\n    arrUp[i].price = arrUp[i].priceUp;\n    delete arrUp[i].priceUp;\n    arrUp[i].rsi = arrUp[i].rsiUp;\n    delete arrUp[i].rsiUp;\n    arrUp[i].smaFiveTeen = arrUp[i].smaFiveTeenUp;\n    delete arrUp[i].smaFiveTeenUp;\n    arrUp[i].smaTwenty = arrUp[i].smaTwentyUp;\n    delete arrUp[i].smaTwentyUp;\n    arrUp[i].smaThirty = arrUp[i].smaThirtyUp;\n    delete arrUp[i].smaThirtyUp;\n    arrUp[i].smaFifty = arrUp[i].smaFiftyUp;\n    delete arrUp[i].smaFiftyUp;\n    arrUp[i].smaOneHun = arrUp[i].smaOneHunUp;\n    delete arrUp[i].smaOneHunUp;\n    arrUp[i].smaTwoHun = arrUp[i].smaTwoHunUp;\n    delete arrUp[i].smaTwoHunUp;\n    arrUp[i].volume = arrUp[i].volumeUp;\n    delete arrUp[i].volumeUp;\n    arrUp[i].volumeYesterday = arrUp[i].volumeYesterdayUp;\n    delete arrUp[i].volumeYesterdayUp;\n    arrUp[i].vwap = arrUp[i].vwapUp;\n    delete arrUp[i].vwapUp;\n    arrUp[i].stochasticD = arrUp[i].stochasticDUp;\n    delete arrUp[i].stochasticDUp;\n    arrUp[i].stochasticK = arrUp[i].stochasticKUp;\n    delete arrUp[i].stochasticKUp;\n    arrUp[i].stochasticSignal = arrUp[i].stochasticSignalUp;\n    delete arrUp[i].stochasticSignalUp;\n    arrUp[i].wmaFiveTeen = arrUp[i].wmaFiveTeenUp;\n    delete arrUp[i].wmaFiveTeenUp;\n    arrUp[i].wmaTwenty = arrUp[i].wmaTwentyUp;\n    delete arrUp[i].wmaTwentyUp;\n    arrUp[i].wmaThirty = arrUp[i].wmaThirtyUp;\n    delete arrUp[i].wmaThirtyUp;\n    arrUp[i].wmaFifty = arrUp[i].wmaFiftyUp;\n    delete arrUp[i].wmaFiftyUp;\n    arrUp[i].wmaOneHun = arrUp[i].wmaOneHunUp;\n    delete arrUp[i].wmaOneHunUp;\n    arrUp[i].wmaTwoHun = arrUp[i].wmaTwoHunUp;\n    delete arrUp[i].wmaTwoHunUp;\n    arrUp[i].vwmaFiveTeen = arrUp[i].vwmaFiveTeenUp;\n    delete arrUp[i].vwmaFiveTeenUp;\n    arrUp[i].vwmaTwenty = arrUp[i].vwmaTwentyUp;\n    delete arrUp[i].vwmaTwentyUp;\n    arrUp[i].vwmaThirty = arrUp[i].vwmaThirtyUp;\n    delete arrUp[i].vwmaThirtyUp;\n    arrUp[i].vwmaFifty = arrUp[i].vwmaFiftyUp;\n    delete arrUp[i].vwmaFiftyUp;\n    arrUp[i].vwmaOneHun = arrUp[i].vwmaOneHunUp;\n    delete arrUp[i].vwmaOneHunUp;\n    arrUp[i].vwmaTwoHun = arrUp[i].vwmaTwoHunUp;\n    delete arrUp[i].vwmaTwoHunUp;\n    arrUp[i].williamsR = arrUp[i].williamsRUp;\n    delete arrUp[i].williamsRUp;\n    arrUp[i].cciTwenty = arrUp[i].cciUp;\n    delete arrUp[i].cciUp;\n    arrUp[i].bbUpper = arrUp[i].bbUpperUp;\n    delete arrUp[i].bbUpperUp;\n    arrUp[i].bbLower = arrUp[i].bbLowerUp;\n    delete arrUp[i].bbLowerUp;\n    arrUp[i].bbMiddle = arrUp[i].bbMiddleUp;\n    delete arrUp[i].bbMiddleUp;\n    arrUp[i].bbPercent = arrUp[i].bbPercentUp;\n    delete arrUp[i].bbPercentUp;\n\n    if (arrUp[i].bbPercent == undefined) {\n      arrUp[i].bbPercent = 'No Data'\n    }\n  }\n  for (let i = 0; i < arrDown.length; i++) {\n    // DOWNERS ------------------------------------------------------------------------------\n\n    arrDown[i].symbol = arrDown[i].symbolDown;\n    delete arrDown[i].symbolDown;\n    arrDown[i].change = arrDown[i].changeDown;\n    delete arrDown[i].changeDown;\n    arrDown[i].avgVolume = arrDown[i].avgVolumeDown;\n    delete arrDown[i].avgVolumeDown;\n    arrDown[i].changesPercentage = arrDown[i].changesPercentageDown;\n    delete arrDown[i].changesPercentageDown;\n    arrDown[i].emaEight = arrDown[i].emaEightDown;\n    delete arrDown[i].emaEightDown;\n    arrDown[i].emaTwelve = arrDown[i].emaTwelveDown;\n    delete arrDown[i].emaTwelveDown;\n    arrDown[i].emaTwenty = arrDown[i].emaTwentyDown;\n    delete arrDown[i].emaTwentyDown;\n    arrDown[i].emaTwentySix = arrDown[i].emaTwentySixDown;\n    delete arrDown[i].emaTwentySixDown;\n    arrDown[i].emaFifty = arrDown[i].emaFiftyDown;\n    delete arrDown[i].emaFiftyDown;\n    arrDown[i].emaTwoHun = arrDown[i].emaTwoHunDown;\n    delete arrDown[i].emaTwoHunDown;\n    arrDown[i].macd = arrDown[i].macdDown;\n    delete arrDown[i].macdDown;\n    arrDown[i].macdHistogram = arrDown[i].macdHistogramDown;\n    delete arrDown[i].macdHistogramDown;\n    arrDown[i].macdSignalLine = arrDown[i].macdSignalLineDown;\n    delete arrDown[i].macdSignalLineDown;\n    arrDown[i].price = arrDown[i].priceDown;\n    delete arrDown[i].priceDown;\n    arrDown[i].rsi = arrDown[i].rsiDown;\n    delete arrDown[i].rsiDown;\n    arrDown[i].smaFiveTeen = arrDown[i].smaFiveTeenDown;\n    delete arrDown[i].smaFiveTeenDown;\n    arrDown[i].smaTwenty = arrDown[i].smaTwentyDown;\n    delete arrDown[i].smaTwentyDown;\n    arrDown[i].smaThirty = arrDown[i].smaThirtyDown;\n    delete arrDown[i].smaThirtyDown;\n    arrDown[i].smaFifty = arrDown[i].smaFiftyDown;\n    delete arrDown[i].smaFiftyDown;\n    arrDown[i].smaOneHun = arrDown[i].smaOneHunDown;\n    delete arrDown[i].smaOneHunDown;\n    arrDown[i].smaTwoHun = arrDown[i].smaTwoHunDown;\n    delete arrDown[i].smaTwoHunDown;\n    arrDown[i].volume = arrDown[i].volumeDown;\n    delete arrDown[i].volumeDown;\n    arrDown[i].volumeYesterday = arrDown[i].volumeYesterdayDown;\n    delete arrDown[i].volumeYesterdayDown;\n    arrDown[i].vwap = arrDown[i].vwapDown;\n    delete arrDown[i].vwapDown;\n    arrDown[i].stochasticD = arrDown[i].stochasticDDown;\n    delete arrDown[i].stochasticDDown;\n    arrDown[i].stochasticK = arrDown[i].stochasticKDown;\n    delete arrDown[i].stochasticKDown;\n    arrDown[i].stochasticSignal = arrDown[i].stochasticSignalDown;\n    delete arrDown[i].stochasticSignalDown;\n    arrDown[i].wmaFiveTeen = arrDown[i].wmaFiveTeenDown;\n    delete arrDown[i].wmaFiveTeenDown;\n    arrDown[i].wmaTwenty = arrDown[i].wmaTwentyDown;\n    delete arrDown[i].wmaTwentyDown;\n    arrDown[i].wmaThirty = arrDown[i].wmaThirtyDown;\n    delete arrDown[i].wmaThirtyDown;\n    arrDown[i].wmaFifty = arrDown[i].wmaFiftyDown;\n    delete arrDown[i].wmaFiftyDown;\n    arrDown[i].wmaOneHun = arrDown[i].wmaOneHunDown;\n    delete arrDown[i].wmaOneHunDown;\n    arrDown[i].wmaTwoHun = arrDown[i].wmaTwoHunDown;\n    delete arrDown[i].wmaTwoHunDown;\n    arrDown[i].vwmaFiveTeen = arrDown[i].vwmaFiveTeenDown;\n    delete arrDown[i].vwmaFiveTeenDown;\n    arrDown[i].vwmaTwenty = arrDown[i].vwmaTwentyDown;\n    delete arrDown[i].vwmaTwentyDown;\n    arrDown[i].vwmaThirty = arrDown[i].vwmaThirtyDown;\n    delete arrDown[i].vwmaThirtyDown;\n    arrDown[i].vwmaFifty = arrDown[i].vwmaFiftyDown;\n    delete arrDown[i].vwmaFiftyDown;\n    arrDown[i].vwmaOneHun = arrDown[i].vwmaOneHunDown;\n    delete arrDown[i].vwmaOneHunDown;\n    arrDown[i].vwmaTwoHun = arrDown[i].vwmaTwoHunDown;\n    delete arrDown[i].vwmaTwoHunDown;\n    arrDown[i].williamsR = arrDown[i].williamsRDown;\n    delete arrDown[i].williamsRDown;\n    arrDown[i].cciTwenty = arrDown[i].cciDown;\n    delete arrDown[i].cciDown;\n    arrDown[i].bbUpper = arrDown[i].bbUpperDown;\n    delete arrDown[i].bbUpperDown;\n    arrDown[i].bbLower = arrDown[i].bbLowerDown;\n    delete arrDown[i].bbLowerDown;\n    arrDown[i].bbMiddle = arrDown[i].bbMiddleDown;\n    delete arrDown[i].bbMiddleDown;\n    arrDown[i].bbPercent = arrDown[i].bbPercentDown;\n    delete arrDown[i].bbPercentDown;\n  }\n\n \n  let finalStocksArr = arrDown.concat(arrUp)\n  return finalStocksArr;\n\n}\n//----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\nconst returnedData = await filterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n\nreturn returnedData;\n\n}"]},"metadata":{},"sourceType":"module"}