{"ast":null,"code":"import { nasdaqMasterKey, nyseMasterKey } from \"./masterKeys\";\nimport { handleDate } from \"./fetch-compile-functions/handleDate\";\nimport { filterTradableSymbols } from \"./fetch-compile-functions/filterTradableStocks\"; // import { nyseFetch } from \"./functions/nyseFetch\";\n// import { nasdaqFetch } from \"./functions/nasdaqFetch\";\n\nexport const technicalAnalysis = async () => {\n  // DATE OBJ --------------------------\n  const dateObj = {\n    today: null,\n    year: null,\n    date: null,\n    month: null,\n    minutes: null,\n    hour: null,\n    time: null,\n    timeNum: null,\n    marketDay: null,\n    todayDate: null\n  }; // SET DATE --------------------------\n\n  await handleDate(dateObj); // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n\n  async function compileStocks(arr1, arr2, arr3, arr4, callback) {\n    //---------------------- COMBINE AND SORT LARGEST DROP -------------------------\n    let finalChartFatDown = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n\n    let finalChartFatUp = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n\n    let finalChart = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n    // ------- THIS IS A FILTER FOR WEIRD STOCK SYMBOLS THAT SLIP IN ----------\n\n    let combinedStockDrop = [];\n    combinedStockDrop = combinedStockDrop.concat(arr1, arr2);\n    let combinedStockUp = [];\n    combinedStockUp = combinedStockUp.concat(arr3, arr4);\n    const keys = /^[A-Z]{1,4}$/g;\n    finalChartFatDown = combinedStockDrop.filter(stock => {\n      return stock.symbol.match(keys);\n    });\n    finalChartFatUp = combinedStockUp.filter(stock => {\n      return stock.symbol.match(keys);\n    });\n\n    for (let i = 0; i < finalChartFatDown.length; i++) {\n      finalChartFatDown.sort((a, b) => {\n        return a.changesPercentage - b.changesPercentage;\n      });\n    }\n\n    for (let i = 0; i < finalChartFatUp.length; i++) {\n      finalChartFatUp.sort((a, b) => {\n        return b.changesPercentage - a.changesPercentage;\n      });\n    } // MAKE SURE ARR HAS RIGHT LENGTH TO LOAD ------------\n\n\n    const holderObjDown = {\n      avgVolume: -1,\n      bbLower: \"-1\",\n      bbMiddle: \"-1\",\n      bbPercent: \"-1\",\n      bbUpper: \"-1\",\n      cciTwenty: \"-1\",\n      change: -1,\n      changesPercentage: -1,\n      dayHigh: -1,\n      dayLow: -1,\n      earningsAnnouncement: \"-1\",\n      emaEight: \"-1\",\n      emaFifty: \"-1\",\n      emaTwelve: \"-1\",\n      emaTwenty: \"-1\",\n      emaTwentySix: \"-1\",\n      emaTwoHun: \"-1\",\n      eps: -1,\n      exchange: \"No Data\",\n      macd: \"-1\",\n      macdHistogram: \"-1\",\n      macdSignalLine: \"-1\",\n      marketCap: -1,\n      name: \"Placeholder for lack of Symbols\",\n      open: -1,\n      pe: -1,\n      previousClose: -1,\n      price: 1,\n      priceAvg50: -1,\n      priceAvg200: -1,\n      rsi: \"-1\",\n      sharesOutstanding: -1,\n      smaFifty: \"-1\",\n      smaFiveTeen: \"-1\",\n      smaOneHun: \"-1\",\n      smaThirty: \"-1\",\n      smaTwenty: \"-1\",\n      smaTwoHun: \"-1\",\n      stochasticD: \"-1\",\n      stochasticK: \"-1\",\n      stochasticSignal: \"-1\",\n      symbol: \"No Data\",\n      timestamp: -1,\n      volume: -1,\n      vwap: \"-1\",\n      vwmaFifty: \"-1\",\n      vwmaFiveTeen: \"-1\",\n      vwmaOneHun: \"-1\",\n      vwmaThirty: \"-1\",\n      vwmaTwenty: \"-1\",\n      vwmaTwoHun: \"-1\",\n      williamsR: \"-1\",\n      wmaFifty: \"-1\",\n      wmaFiveTeen: \"-1\",\n      wmaOneHun: \"-1\",\n      wmaThirty: \"-1\",\n      wmaTwenty: \"-1\",\n      wmaTwoHun: \"-1\",\n      yearHigh: -1,\n      yearLow: -1,\n      yesterdayVolume: -1\n    };\n    const holderObjUp = {\n      avgVolume: 1,\n      bbLower: \"1\",\n      bbMiddle: \"1\",\n      bbPercent: \"1\",\n      bbUpper: \"1\",\n      cciTwenty: \"1\",\n      change: 1,\n      changesPercentage: 1,\n      dayHigh: 1,\n      dayLow: 1,\n      earningsAnnouncement: \"1\",\n      emaEight: \"1\",\n      emaFifty: \"1\",\n      emaTwelve: \"1\",\n      emaTwenty: \"1\",\n      emaTwentySix: \"1\",\n      emaTwoHun: \"1\",\n      eps: 1,\n      exchange: \"No Data\",\n      macd: \"1\",\n      macdHistogram: \"1\",\n      macdSignalLine: \"1\",\n      marketCap: 1,\n      name: \"Placeholder for lack of Symbols\",\n      open: 1,\n      pe: 1,\n      previousClose: 1,\n      price: 1,\n      priceAvg50: 1,\n      priceAvg200: 1,\n      rsi: \"1\",\n      sharesOutstanding: 1,\n      smaFifty: \"1\",\n      smaFiveTeen: \"1\",\n      smaOneHun: \"1\",\n      smaThirty: \"1\",\n      smaTwenty: \"1\",\n      smaTwoHun: \"1\",\n      stochasticD: \"1\",\n      stochasticK: \"1\",\n      stochasticSignal: \"1\",\n      symbol: \"No Data\",\n      timestamp: 1,\n      volume: 1,\n      vwap: \"1\",\n      vwmaFifty: \"1\",\n      vwmaFiveTeen: \"1\",\n      vwmaOneHun: \"1\",\n      vwmaThirty: \"1\",\n      vwmaTwenty: \"1\",\n      vwmaTwoHun: \"1\",\n      williamsR: \"1\",\n      wmaFifty: \"1\",\n      wmaFiveTeen: \"1\",\n      wmaOneHun: \"1\",\n      wmaThirty: \"1\",\n      wmaTwenty: \"1\",\n      wmaTwoHun: \"1\",\n      yearHigh: 1,\n      yearLow: 1,\n      yesterdayVolume: 1\n    };\n\n    if (finalChartFatUp.length < 5) {\n      while (finalChartFatUp.length < 5) {\n        finalChartFatUp.push(holderObjUp);\n      }\n    }\n\n    if (finalChartFatDown.length < 5) {\n      while (finalChartFatDown.length < 5) {\n        finalChartFatDown.push(holderObjDown);\n      }\n    } // SLIM CHAT DOWN SO IT'S NOT BLOATED\n\n\n    let slimChartDown = 4;\n\n    while (slimChartDown >= 0) {\n      finalChart.unshift(finalChartFatDown[slimChartDown]);\n      slimChartDown--;\n    }\n\n    let slimChartUp = 4;\n\n    while (slimChartUp >= 0) {\n      finalChart.unshift(finalChartFatUp[slimChartUp]);\n      slimChartUp--;\n    }\n\n    const returnedData = await callback(finalChart, filterUpDownStocks);\n    return returnedData;\n  } // ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n  // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function smaFunction(chartArr, dataPull, newestPull, num) {\n    let culSMA = 0; // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n\n    let fiveTeenSMA = 13;\n    let twentySMA = 18;\n    let thirtySMA = 28;\n    let fiftySMA = 48;\n    let hunSMA = 98;\n    let twoHunSMA = 198;\n\n    try {\n      const todayPricePull = newestPull[0].price; // ------------- 15 DAY SMA -------------------------------\n\n      if (dataPull.historical.length <= 13) {\n        chartArr[num].smaFiveTeen = \"No Data\";\n      } else {\n        while (fiveTeenSMA >= 0) {\n          culSMA += dataPull.historical[fiveTeenSMA].close;\n          fiveTeenSMA--;\n        }\n\n        let smaFiveResult = (culSMA + todayPricePull) / 15;\n        chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 20 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 19) {\n        chartArr[num].smaTwenty = \"No Data\";\n      } else {\n        while (twentySMA >= 0) {\n          culSMA += dataPull.historical[twentySMA].close;\n          twentySMA--;\n        }\n\n        let smaTwentyResult = (culSMA + todayPricePull) / 20;\n        chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 30 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 29) {\n        chartArr[num].smaThirty = \"No Data\";\n      } else {\n        while (thirtySMA >= 0) {\n          culSMA += dataPull.historical[thirtySMA].close;\n          thirtySMA--;\n        }\n\n        let smaThirtyResult = (culSMA + todayPricePull) / 30;\n        chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 50 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 49) {\n        chartArr[num].smaFifty = \"No Data\";\n      } else {\n        while (fiftySMA >= 0) {\n          culSMA += dataPull.historical[fiftySMA].close;\n          fiftySMA--;\n        }\n\n        let smaFiftyResult = (culSMA + todayPricePull) / 50;\n        chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 100 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 99) {\n        chartArr[num].smaOneHun = \"No Data\";\n      } else {\n        while (hunSMA >= 0) {\n          culSMA += dataPull.historical[hunSMA].close;\n          hunSMA--;\n        }\n\n        let smaOneHunResult = (culSMA + todayPricePull) / 100;\n        chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 200 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 199) {\n        chartArr[num].smaTwoHun = \"No Data\";\n      } else {\n        while (twoHunSMA >= 0) {\n          culSMA += dataPull.historical[twoHunSMA].close;\n          twoHunSMA--;\n        }\n\n        let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n        chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n        culSMA = 0;\n      }\n    } catch (e) {}\n  } // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function wmaFunction(chartArr, dataPull, newestPull, num) {\n    // WMA FiveTeen --------------------------------------------------------------------\n    let weight = 14;\n    let wmaInterval = 0;\n    let iWma = 15;\n\n    try {\n      let wmaCul = newestPull[0].price * 15;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].wmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFiveTeen = wmaCul / iWma;\n        chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n      } // WMA Twenty --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 20;\n      weight = 19;\n      wmaInterval = 0;\n      iWma = 20;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].wmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwenty = wmaCul / iWma;\n        chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n      } // WMA THIRTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 30;\n      weight = 29;\n      wmaInterval = 0;\n      iWma = 30;\n\n      if (dataPull.historical.length < 30) {\n        chartArr[num].wmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaThirty = wmaCul / iWma;\n        chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n      } // WMA FIFTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 50;\n      weight = 49;\n      wmaInterval = 0;\n      iWma = 50;\n\n      if (dataPull.historical.length < 50) {\n        chartArr[num].wmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFifty = wmaCul / iWma;\n        chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n      } // WMA ONE HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 100;\n      weight = 99;\n      wmaInterval = 0;\n      iWma = 100;\n\n      if (dataPull.historical.length < 100) {\n        chartArr[num].wmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaOneHun = wmaCul / iWma;\n        chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n      } // WMA TWO HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 200;\n      weight = 199;\n      wmaInterval = 0;\n      iWma = 200;\n\n      if (dataPull.historical.length < 200) {\n        chartArr[num].wmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwoHun = wmaCul / iWma;\n        chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwmaFunction(chartArr, dataPull, newestPull, num) {\n    // VWMA FIVETEEN --------------------------------------------------------------------\n    try {\n      let price = 0;\n      let volume = 0;\n      const newPrice = newestPull[0].price;\n      const newVol = newestPull[0].volume;\n      let volCul = newestPull[0].volume;\n      let totalCul = newPrice * newVol;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].vwmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFiveTeen = totalCul / volCul;\n        chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n      } // VWMA TWENTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].vwmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwenty = totalCul / volCul;\n        chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n      } // VWMA THIRTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 29) {\n        chartArr[num].vwmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaThirty = totalCul / volCul;\n        chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n      } // VWMA FIFTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 49) {\n        chartArr[num].vwmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFifty = totalCul / volCul;\n        chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n      } // VWMA ONEHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 99) {\n        chartArr[num].vwmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaOneHun = totalCul / volCul;\n        chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n      } // VWMA TWOHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 199) {\n        chartArr[num].vwmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwoHun = totalCul / volCul;\n        chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n    let emaEight = 14;\n    let emaTwelve = 22;\n    let emaTwenty = 38;\n    let emaTwentySix = 50;\n    let emaFifty = 98;\n    let emaTwoHun = 398;\n    let prevDayEmaSub = 0;\n    let arrEma = [];\n    let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n\n    let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n    try {\n      const newPrice = newestPull[0].price; // EMA EIGHT ----------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 16) {\n        chartArr[num].emaEight = \"No Data\";\n      } else {\n        while (emaEight >= 15) {\n          prevDayEmaSub += dataPull.historical[emaEight].close;\n          emaEight--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 8; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 9 * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaEight--;\n\n        while (emaEight >= 0) {\n          let derp = 2 / 9 * (dataPull.historical[emaEight].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaEight--;\n        }\n\n        const finalEma = 2 / 9 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaEight = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWELVE ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 24) {\n        chartArr[num].emaTwelve = \"No Data\";\n      } else {\n        while (emaTwelve >= 11) {\n          prevDayEmaSub += dataPull.historical[emaTwelve].close;\n          emaTwelve--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 12; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 13 * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwelve--;\n\n        while (emaTwelve >= 0) {\n          let derp = 2 / 13 * (dataPull.historical[emaTwelve].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwelve < 8 && emaTwelve >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwelve.unshift(derp);\n          }\n\n          emaTwelve--;\n        }\n\n        const finalEma = 2 / 13 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwelve.unshift(finalEma);\n        chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 40) {\n        chartArr[num].emaTwenty = \"No Data\";\n      } else {\n        while (emaTwenty >= 19) {\n          prevDayEmaSub += dataPull.historical[emaTwenty].close;\n          emaTwenty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 20; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 21 * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwenty--;\n\n        while (emaTwenty >= 0) {\n          let derp = 2 / 21 * (dataPull.historical[emaTwenty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwenty--;\n        }\n\n        const finalEma = 2 / 21 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY SIX ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 51) {\n        chartArr[num].emaTwentySix = \"No Data\";\n      } else {\n        while (emaTwentySix >= 25) {\n          prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n          emaTwentySix--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 26; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 27 * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwentySix--;\n\n        while (emaTwentySix >= 0) {\n          let derp = 2 / 27 * (dataPull.historical[emaTwentySix].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwentySix < 8 && emaTwentySix >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwentySix.unshift(derp);\n          }\n\n          emaTwentySix--;\n        }\n\n        const finalEma = 2 / 27 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwentySix.unshift(finalEma);\n        chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA FIFTY -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 100) {\n        chartArr[num].emaFifty = \"No Data\";\n      } else {\n        while (emaFifty >= 49) {\n          prevDayEmaSub += dataPull.historical[emaFifty].close;\n          emaFifty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 50; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 51 * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaFifty--;\n\n        while (emaFifty >= 0) {\n          let derp = 2 / 51 * (dataPull.historical[emaFifty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaFifty--;\n        }\n\n        const finalEma = 2 / 51 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaFifty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 400) {\n        chartArr[num].emaTwoHun = \"No Data\";\n      } else {\n        while (emaTwoHun >= 199) {\n          prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n          emaTwoHun--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 200; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 201 * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwoHun--;\n\n        while (emaTwoHun >= 0) {\n          let derp = 2 / 201 * (dataPull.historical[emaTwoHun].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwoHun--;\n        }\n\n        const finalEma = 2 / 201 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n    } catch (e) {} // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n    macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n  } // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function macdFunction(chartArr, num, arr1, arr2) {\n    const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n    chartArr[num].macd = macd.toFixed(2); // CALCULATE SIGNAL LINE ----------------\n\n    let averageMacd = [];\n    let iMacd = 8;\n\n    try {\n      while (iMacd >= 0) {\n        averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n        iMacd--;\n      }\n\n      let averageSum = averageMacd.reduce((a, b) => a + b);\n      let finalAverageMacd = averageSum / 9;\n      let macdSignalLine = 2 / 9 * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n      chartArr[num].macdSignalLine = macdSignalLine.toFixed(2); // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n\n      let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n      chartArr[num].macdHistogram = histogram.toFixed(2); // FOR NO DATA TO PULL FROM\n\n      if (chartArr[num].macdHistogram === \"NaN\") {\n        chartArr[num].macdHistogram = \"No Data\";\n      }\n\n      if (chartArr[num].macd === \"NaN\") {\n        chartArr[num].macd = \"No Data\";\n      }\n\n      if (chartArr[num].macdSignalLine === \"NaN\") {\n        chartArr[num].macdSignalLine = \"No Data\";\n      }\n    } catch (e) {}\n  } // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function rsiFunction(chartArr, dataPull, newestPull, num) {\n    let iRSI = 13;\n    let iRSIAdjusted = 14;\n    let recentUpper = 0;\n    let recentDowner = 0;\n    let upMove = 0;\n    let downMove = 0;\n    let pastDownPeriod = 0;\n    let pastUpPeriod = 0;\n\n    try {\n      const newPrice = newestPull[0].price; // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n\n      if (dataPull.historical.length <= 14) {\n        chartArr[num].rsi = \"No Data\";\n      } else {\n        // LOOP FOR AVERAGE\n        while (iRSI >= 0) {\n          if (dataPull.historical[iRSI].close > dataPull.historical[iRSIAdjusted].close) {\n            upMove += dataPull.historical[iRSI].close - dataPull.historical[iRSIAdjusted].close;\n          } else {\n            downMove += dataPull.historical[iRSIAdjusted].close - dataPull.historical[iRSI].close;\n          }\n\n          iRSI--;\n          iRSIAdjusted--;\n        }\n\n        let averageUp = upMove / 14;\n        let averageDown = downMove / 14; // MOST RECENT DIFFERENCE\n\n        if (newPrice > dataPull.historical[0].close) {\n          recentUpper = newPrice - dataPull.historical[0].close;\n        } else {\n          recentDowner = dataPull.historical[0].close - newPrice;\n        }\n\n        pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n        pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n        let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n        chartArr[num].rsi = rsi.toFixed(2);\n      }\n    } catch (e) {}\n  } // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n    let iSO = 13;\n    let soLowHolder = [];\n    let soHighHolder = [];\n    let highestHigh = 0;\n    let lowestLow = 0; // FIRST %D\n\n    let topForm = [];\n    let bottomForm = []; // SECOND %D\n\n    let topFormTwo = [];\n    let bottomFormTwo = []; // THIRD %D\n\n    let topFormThree = [];\n    let bottomFormThree = []; // HOLDING SET OF %D FOR 14 3 3\n\n    let signalLineHolder = [];\n\n    try {\n      let newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 18) {\n        chartArr[num].stochasticK = \"No Data\";\n      } else {\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n        while (iSO >= 0) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        soHighHolder.push(newPrice);\n        soLowHolder.push(newPrice);\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        if (lowestLow === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        if (highestHigh === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        topForm.push(newPrice - lowestLow);\n        bottomForm.push(highestHigh - lowestLow); //FOR %K\n\n        chartArr[num].stochasticK = ((newPrice - lowestLow) / (highestHigh - lowestLow) * 100).toFixed(2); // RESET HOLDER AND VARs --------------------------------------------------------\n\n        iSO = 14;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n        while (iSO >= 1) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[0].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[0].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow); // RESET HOLDER AND VARs ------------------------------------------------\n\n        iSO = 15;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 2) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[1].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[1].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[1].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        let sumTop = topForm.reduce((a, b) => a + b, 0);\n        let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n        let slowD = sumTop / sumBottom * 100; // FOR %D\n\n        chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------------------------------\n\n        iSO = 16;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n        while (iSO >= 3) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormTwo.push(dataPull.historical[2].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[2].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------\n\n        iSO = 17;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 4) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormThree.push(dataPull.historical[3].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormThree.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); // ----------- TALLY UP LAST SMOOTHING -------------------------------\n\n        const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n        let smaD = sumStochD / 3;\n\n        if (smaD < 0) {\n          smaD *= -1;\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        } else {\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        }\n      }\n    } catch (e) {}\n  } // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function williamsRFunction(chartArr, dataPull, newestPull, num) {\n    let highs = [];\n    let lows = [];\n    let lowestLow = 0;\n    let highestHigh = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].williams = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          highs.push(dataPull.historical[i].high);\n          lows.push(dataPull.historical[i].low);\n        }\n\n        highs.push(newPrice);\n        lows.push(newPrice);\n        lowestLow = Math.min(...lows);\n        highestHigh = Math.max(...highs);\n        const williams = (highestHigh - dataPull.historical[0].close) / (highestHigh - lowestLow) * -100;\n        chartArr[num].williamsR = williams.toFixed(2);\n      }\n    } catch (e) {}\n  } // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function cciFunction(chartArr, dataPull, newestPull, num) {\n    let tpvCul = 0;\n    let tpv = [];\n    let tpvMa = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n      let tpvCurrent = newPrice;\n      const recentTpv = newPrice;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].cciTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 19; i++) {\n          const {\n            high,\n            close,\n            low\n          } = dataPull.historical[i];\n          tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n\n          tpvCurrent = (close + high + low) / 3;\n        } // ---- TPV SMA ------------------------\n\n\n        tpvCul = tpv.reduce((a, b) => a + b);\n        tpvMa = tpvCul / 20; // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n\n        const partOne = recentTpv - tpvMa;\n        const meanD = tpv.map(x => x - tpvMa);\n        const meanDMap = meanD.map(x => Math.abs(x));\n        const meanDSum = meanDMap.reduce((a, b) => a + b);\n        const meanDiv = meanDSum / 20; // PART TWO OF FORMULA --------------\n\n        const partTwo = meanDiv * 0.015; // CCI ------------------------------\n\n        const cci = partOne / partTwo;\n        chartArr[num].cciTwenty = cci.toFixed(2);\n      }\n    } catch (e) {}\n  } // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n    let smaCul = 0;\n    let closeHolder = [];\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].bbUpper = \"No Data\";\n        chartArr[num].bbLower = \"No Data\";\n        chartArr[num].bbMiddle = \"No Data\";\n      } else {\n        let closeP = newPrice;\n\n        for (let i = 0; i <= 19; i++) {\n          closeHolder.push(closeP);\n          smaCul += closeP;\n          closeP = dataPull.historical[i].close;\n        } // STANDARD DEVIATION CALC --------------------------------\n\n\n        const smaTwenty = smaCul / 20;\n        const priceAdj = closeHolder.map(x => x - smaTwenty);\n        const priceAdjAbs = priceAdj.map(x => Math.abs(x));\n        const priceAdjSqrt = priceAdjAbs.map(x => x * x);\n        const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n        const partTwoDev = partOneDev / 20;\n        const standardDev = Math.sqrt(partTwoDev); // BB BAND CALC --------------------------------------------\n\n        const bbUpper = smaTwenty + standardDev * 2;\n        const bbLower = smaTwenty - standardDev * 2;\n        const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n        chartArr[num].bbUpper = bbUpper.toFixed(2);\n        chartArr[num].bbLower = bbLower.toFixed(2);\n        chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n        chartArr[num].bbPercent = bbPercent.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwapFunction(chartArr, dataPull, num) {\n    // ----------- VWAP CALUC -------------------------------------------\n    let dayLengthPeriod = 0;\n    let tpvCul = 0;\n    let volumeCul = 0;\n    let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n    try {\n      // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n      while (dataPull[dayLengthPeriod].date.slice(0, 10) == dateObj.newDateString) {\n        dayLengthPeriod++;\n      } // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n\n      for (let i = 0; i < dayLengthPeriod; i++) {\n        const {\n          volume,\n          high,\n          close,\n          low,\n          date\n        } = dataPull[i];\n        let tpv = (high + low + close) / 3;\n\n        if (date.slice(0, 10) == dateObj.newDateString) {\n          tpvCul += tpv * volume;\n          volumeCul += volume;\n        }\n\n        var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n\n        tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n      }\n\n      let vwap = tempVWAP[0].toFixed(2);\n      chartArr[num].vwap = vwap;\n    } catch (e) {}\n  } // SET VOLUME FOR LATER\n\n\n  function setVolume(chartArr, dataPull, newestPull, num) {\n    // SET RECENT YESTERDAY VOLUME\n    try {\n      if (dataPull.historical.length <= 0) {\n        chartArr[num].yesterdayVolume = 0;\n      } else {\n        chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n\n        if (dateObj.marketDay == 0 || dateObj.marketDay == 6) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (dateObj.marketDay >= 1 && dateObj.marketDay <= 5 && dateObj.timeNum < 930) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (dateObj.timeNum > 1830) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n      }\n\n      if (newestPull.length < 0) {\n        chartArr[num].volume = 0;\n      } else {\n        // SET RECENT VOLUME\n        chartArr[num].volume = newestPull[0].volume;\n      }\n    } catch (e) {}\n  } // TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\n\n\n  async function technicalIndicators(finalArr, callback) {\n    let j = 0;\n\n    while (j < finalArr.length) {\n      // LOOP FOR TECHNICAL SYMBOL\n      // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n      const {\n        symbol\n      } = finalArr[j]; //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n\n      const resSMA = await fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n      // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataSMA).length) {\n          console.log(\"no SMA Pull data found\");\n        }\n      } catch (e) {} //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n\n\n      const resOscPulled = await fetch(`https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataRecentPulled = await resOscPulled.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataRecentPulled).length) {\n          console.log(\"no Recent Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      const resVWAP = await fetch(`https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataVWAP = await resVWAP.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataVWAP).length) {\n          console.log(\"no VWAP Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      vwapFunction(finalArr, dataVWAP, j); // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      smaFunction(finalArr, dataSMA, dataRecentPulled, j); // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      wmaFunction(finalArr, dataSMA, dataRecentPulled, j); // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      vwmaFunction(finalArr, dataSMA, dataRecentPulled, j); // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n\n      emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction); // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      rsiFunction(finalArr, dataSMA, dataRecentPulled, j); // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n      // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      williamsRFunction(finalArr, dataSMA, dataRecentPulled, j); // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      cciFunction(finalArr, dataSMA, dataRecentPulled, j); // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j); // SET VOLUME PROPERTIES\n\n      setVolume(finalArr, dataSMA, dataRecentPulled, j);\n      j++; // UPDATE WHILE LOOP\n    } // THIS IS THE END OF LOOP\n\n\n    const returnedData = await callback(finalArr, buildIt);\n    return returnedData;\n  }\n\n  async function filterUpDownStocks(finalArr, callback) {\n    let stocksUp = [];\n    let stocksDown = [];\n    let j = 0;\n\n    while (j < finalArr.length) {\n      const {\n        changesPercentage\n      } = finalArr[j];\n\n      if (changesPercentage > 0) {\n        stocksUp.push(finalArr[j]);\n      } else {\n        stocksDown.push(finalArr[j]);\n      }\n\n      j++;\n    } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n    // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n\n\n    for (let i = 0; i < stocksUp.length; i++) {\n      // UPPER ------------------------------------------------------------------------------\n      stocksUp[i].symbolUp = stocksUp[i].symbol;\n      delete stocksUp[i].symbol;\n      stocksUp[i].changeUp = stocksUp[i].change;\n      delete stocksUp[i].change;\n      stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n      delete stocksUp[i].avgVolume;\n      stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n      delete stocksUp[i].changesPercentage;\n      stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n      delete stocksUp[i].emaEight;\n      stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n      delete stocksUp[i].emaTwelve;\n      stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n      delete stocksUp[i].emaTwenty;\n      stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n      delete stocksUp[i].emaTwentySix;\n      stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n      delete stocksUp[i].emaFifty;\n      stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n      delete stocksUp[i].emaTwoHun;\n      stocksUp[i].macdUp = stocksUp[i].macd;\n      delete stocksUp[i].macd;\n      stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n      delete stocksUp[i].macdHistogram;\n      stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n      delete stocksUp[i].macdSignalLine;\n      stocksUp[i].priceUp = stocksUp[i].price;\n      delete stocksUp[i].price;\n      stocksUp[i].rsiUp = stocksUp[i].rsi;\n      delete stocksUp[i].rsi;\n      stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n      delete stocksUp[i].smaFiveTeen;\n      stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n      delete stocksUp[i].smaTwenty;\n      stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n      delete stocksUp[i].smaThirty;\n      stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n      delete stocksUp[i].smaFifty;\n      stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n      delete stocksUp[i].smaOneHun;\n      stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n      delete stocksUp[i].smaTwoHun;\n      stocksUp[i].volumeUp = stocksUp[i].volume;\n      delete stocksUp[i].volume;\n      stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n      delete stocksUp[i].yesterdayVolume;\n      stocksUp[i].vwapUp = stocksUp[i].vwap;\n      delete stocksUp[i].vwap;\n      stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n      delete stocksUp[i].stochasticD;\n      stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n      delete stocksUp[i].stochasticK;\n      stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n      delete stocksUp[i].stochasticSignal;\n      stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n      delete stocksUp[i].wmaFiveTeen;\n      stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n      delete stocksUp[i].wmaTwenty;\n      stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n      delete stocksUp[i].wmaThirty;\n      stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n      delete stocksUp[i].wmaFifty;\n      stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n      delete stocksUp[i].wmaOneHun;\n      stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n      delete stocksUp[i].wmaTwoHun;\n      stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n      delete stocksUp[i].vwmaFiveTeen;\n      stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n      delete stocksUp[i].vwmaTwenty;\n      stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n      delete stocksUp[i].vwmaThirty;\n      stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n      delete stocksUp[i].vwmaFifty;\n      stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n      delete stocksUp[i].vwmaOneHun;\n      stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n      delete stocksUp[i].vwmaTwoHun;\n      stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n      delete stocksUp[i].williamsR;\n      stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n      delete stocksUp[i].cciTwenty;\n      stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n      delete stocksUp[i].bbUpper;\n      stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n      delete stocksUp[i].bbLower;\n      stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n      delete stocksUp[i].bbMiddle;\n      stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n      delete stocksUp[i].bbPercent; // DOWNERS ------------------------------------------------------------------------------\n\n      stocksDown[i].symbolDown = stocksDown[i].symbol;\n      delete stocksDown[i].symbol;\n      stocksDown[i].changeDown = stocksDown[i].change;\n      delete stocksDown[i].change;\n      stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n      delete stocksDown[i].avgVolume;\n      stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n      delete stocksDown[i].changesPercentage;\n      stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n      delete stocksDown[i].emaEight;\n      stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n      delete stocksDown[i].emaTwelve;\n      stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n      delete stocksDown[i].emaTwenty;\n      stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n      delete stocksDown[i].emaTwentySix;\n      stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n      delete stocksDown[i].emaFifty;\n      stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n      delete stocksDown[i].emaTwoHun;\n      stocksDown[i].macdDown = stocksDown[i].macd;\n      delete stocksDown[i].macd;\n      stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n      delete stocksDown[i].macdHistogram;\n      stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n      delete stocksDown[i].macdSignalLine;\n      stocksDown[i].priceDown = stocksDown[i].price;\n      delete stocksDown[i].price;\n      stocksDown[i].rsiDown = stocksDown[i].rsi;\n      delete stocksDown[i].rsi;\n      stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n      delete stocksDown[i].smaFiveTeen;\n      stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n      delete stocksDown[i].smaTwenty;\n      stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n      delete stocksDown[i].smaThirty;\n      stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n      delete stocksDown[i].smaFifty;\n      stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n      delete stocksDown[i].smaOneHun;\n      stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n      delete stocksDown[i].smaTwoHun;\n      stocksDown[i].volumeDown = stocksDown[i].volume;\n      delete stocksDown[i].volume;\n      stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n      delete stocksDown[i].yesterdayVolume;\n      stocksDown[i].vwapDown = stocksDown[i].vwap;\n      delete stocksDown[i].vwap;\n      stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n      delete stocksDown[i].stochasticD;\n      stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n      delete stocksDown[i].stochasticK;\n      stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n      delete stocksDown[i].stochasticSignal;\n      stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n      delete stocksDown[i].wmaFiveTeen;\n      stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n      delete stocksDown[i].wmaTwenty;\n      stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n      delete stocksDown[i].wmaThirty;\n      stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n      delete stocksDown[i].wmaFifty;\n      stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n      delete stocksDown[i].wmaOneHun;\n      stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n      delete stocksDown[i].wmaTwoHun;\n      stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n      delete stocksDown[i].vwmaFiveTeen;\n      stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n      delete stocksDown[i].vwmaTwenty;\n      stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n      delete stocksDown[i].vwmaThirty;\n      stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n      delete stocksDown[i].vwmaFifty;\n      stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n      delete stocksDown[i].vwmaOneHun;\n      stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n      delete stocksDown[i].vwmaTwoHun;\n      stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n      delete stocksDown[i].williamsR;\n      stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n      delete stocksDown[i].cciTwenty;\n      stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n      delete stocksDown[i].bbUpper;\n      stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n      delete stocksDown[i].bbLower;\n      stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n      delete stocksDown[i].bbMiddle;\n      stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n      delete stocksDown[i].bbPercent;\n    }\n\n    const returnedData = await callback(stocksUp, stocksDown);\n    return returnedData;\n  }\n\n  function buildIt(arrUp, arrDown) {\n    for (let i = 0; i < arrUp.length; i++) {\n      // DECONSTRUCTING UP AND DOWN VAR\n      var {\n        avgVolumeUp,\n        volumeYesterdayUp,\n        changeUp,\n        changesPercentageUp,\n        priceUp,\n        symbolUp,\n        volumeUp,\n        vwapUp,\n        smaFiveTeenUp,\n        smaTwentyUp,\n        smaThirtyUp,\n        smaFiftyUp,\n        smaOneHunUp,\n        smaTwoHunUp,\n        emaEightUp,\n        emaTwelveUp,\n        emaTwentyUp,\n        emaTwentySixUp,\n        emaFiftyUp,\n        emaTwoHunUp,\n        wmaFiveTeenUp,\n        wmaTwentyUp,\n        wmaThirtyUp,\n        wmaFiftyUp,\n        wmaOneHunUp,\n        wmaTwoHunUp,\n        vwmaFiveTeenUp,\n        vwmaTwentyUp,\n        vwmaThirtyUp,\n        vwmaFiftyUp,\n        vwmaOneHunUp,\n        vwmaTwoHunUp,\n        macdUp,\n        macdHistogramUp,\n        macdSignalLineUp,\n        rsiUp,\n        stochasticDUp,\n        stochasticKUp,\n        stochasticSignalUp,\n        cciUp,\n        bbMiddleUp,\n        bbLowerUp,\n        bbUpperUp,\n        bbPercentUp,\n        williamsRUp\n      } = arrUp[i];\n      var {\n        avgVolumeDown,\n        volumeYesterdayDown,\n        changeDown,\n        changesPercentageDown,\n        priceDown,\n        symbolDown,\n        volumeDown,\n        vwapDown,\n        smaFiveTeenDown,\n        smaTwentyDown,\n        smaThirtyDown,\n        smaFiftyDown,\n        smaOneHunDown,\n        smaTwoHunDown,\n        emaEightDown,\n        emaTwelveDown,\n        emaTwentyDown,\n        emaTwentySixDown,\n        emaFiftyDown,\n        emaTwoHunDown,\n        wmaFiveTeenDown,\n        wmaTwentyDown,\n        wmaThirtyDown,\n        wmaFiftyDown,\n        wmaOneHunDown,\n        wmaTwoHunDown,\n        vwmaFiveTeenDown,\n        vwmaTwentyDown,\n        vwmaThirtyDown,\n        vwmaFiftyDown,\n        vwmaOneHunDown,\n        vwmaTwoHunDown,\n        macdDown,\n        macdHistogramDown,\n        macdSignalLineDown,\n        rsiDown,\n        stochasticDDown,\n        stochasticKDown,\n        stochasticSignalDown,\n        cciDown,\n        bbMiddleDown,\n        bbLowerDown,\n        bbUpperDown,\n        bbPercentDown,\n        williamsRDown\n      } = arrDown[i]; // ADJUST TO FIXED --------------------------------------------------------\n\n      if (arrUp[i].priceUp == undefined) {\n        arrUp[i].priceUp = 0;\n      }\n\n      if (arrDown[i].priceDown == undefined) {\n        arrDown[i].priceDown = 0;\n      }\n\n      priceUp = priceUp.toFixed(2);\n      priceDown = priceDown.toFixed(2);\n\n      if (arrUp[i].changesPercentageUp == undefined) {\n        arrUp[i].changesPercentageUp = 0;\n      }\n\n      if (arrDown[i].changesPercentageDown == undefined) {\n        arrDown[i].changesPercentageDown = 0;\n      }\n\n      changesPercentageUp = changesPercentageUp.toFixed(2);\n      changesPercentageDown = changesPercentageDown.toFixed(2);\n\n      if (arrUp[i].changeUp == undefined) {\n        arrUp[i].changeUp = 0;\n      }\n\n      if (arrDown[i].changeDown == undefined) {\n        arrDown[i].changeDown = 0;\n      }\n\n      changeUp = changeUp.toFixed(2);\n      changeDown = changeDown.toFixed(2); // UP VOLUME INCREASE ----------------------------\n\n      if (arrUp[i].volumeUp == undefined) {\n        arrUp[i].volumeUp = 0;\n      }\n\n      if (arrDown[i].volumeDown == undefined) {\n        arrDown[i].volumeDown = 0;\n      }\n\n      var volumeIncreaseUp = 0;\n\n      if (volumeUp > avgVolumeUp) {\n        let increase = volumeUp - avgVolumeUp;\n        volumeIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeUp;\n        volumeIncreaseUp = decrease / avgVolumeUp * -100;\n      } // DOWN VOLUME INCREASE ----------------------------\n\n\n      var volumeIncreaseDown = 0;\n\n      if (volumeDown > avgVolumeDown) {\n        let increase = volumeDown - avgVolumeDown;\n        volumeIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeDown;\n        volumeIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n      volumeIncreaseUp = volumeIncreaseUp.toFixed(2); // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n      // YESTERDAY UP VOLUME INCREASE ----------------------------\n\n      if (arrUp[i].volumeYesterdayUp == undefined) {\n        arrUp[i].volumeYesterdayUp = 0;\n      }\n\n      if (volumeYesterdayDown == undefined) {\n        volumeYesterdayDown = 0;\n      }\n\n      if (arrUp[i].avgVolumeUp == undefined) {\n        arrUp[i].avgVolumeUp = 0;\n      }\n\n      if (arrDown[i].avgVolumeDown == undefined) {\n        arrDown[i].avgVolumeDown = 0;\n      }\n\n      var yesterdayVolIncreaseUp = 0;\n\n      if (volumeYesterdayUp > avgVolumeUp) {\n        let increase = volumeYesterdayUp - avgVolumeUp;\n        yesterdayVolIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeYesterdayUp;\n        yesterdayVolIncreaseUp = decrease / avgVolumeUp * -100;\n      }\n\n      yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2); // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n      var yesterdayVolIncreaseDown = 0;\n\n      if (volumeYesterdayDown > avgVolumeDown) {\n        let increase = volumeYesterdayDown - avgVolumeDown;\n        yesterdayVolIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeYesterdayDown;\n        yesterdayVolIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2); // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n      var changeDownAdjusted = changeDown;\n\n      if (changeDownAdjusted < 0) {\n        changeDownAdjusted = changeDownAdjusted * -1;\n        changeDownAdjusted = changeDownAdjusted.toFixed(2);\n      } // NaN CHECK ----------------------------------------\n\n\n      if (isNaN(yesterdayVolIncreaseDown)) {\n        yesterdayVolIncreaseDown = \"No Data\";\n      }\n\n      if (isNaN(yesterdayVolIncreaseUp)) {\n        yesterdayVolIncreaseUp = \"No Data\";\n      } // ADJUST TO POSITIVE\n\n\n      if (stochasticDUp < 0) {\n        stochasticDUp = stochasticDUp * -1;\n      }\n\n      if (stochasticKUp < 0) {\n        stochasticKUp = stochasticKUp * -1;\n      }\n\n      if (stochasticDDown < 0) {\n        stochasticDDown = stochasticDDown * -1;\n      }\n\n      if (stochasticKDown < 0) {\n        stochasticKDown = stochasticKDown * -1;\n      } // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n\n\n      if (arrUp[i].avgVolumeUp == undefined) {\n        arrUp[i].avgVolumeUp = \"No Data\";\n      }\n\n      if (arrDown[i].avgVolumeDown == undefined) {\n        arrDown[i].avgVolumeDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeUp == undefined) {\n        arrUp[i].volumeUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeDown == undefined) {\n        arrDown[i].volumeDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeIncreaseUp == undefined) {\n        arrUp[i].volumeIncreaseUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeIncreaseDown == undefined) {\n        arrDown[i].volumeIncreaseDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeYesterdayUp == undefined) {\n        arrUp[i].volumeYesterdayUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeYesterdayDown == undefined) {\n        arrDown[i].volumeYesterdayDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaFiveTeenUp == undefined) {\n        arrUp[i].smaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaFiveTeenDown == undefined) {\n        arrDown[i].smaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaTwentyUp == undefined) {\n        arrUp[i].smaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaTwentyDown == undefined) {\n        arrDown[i].smaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaThirtyUp == undefined) {\n        arrUp[i].smaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaThirtyDown == undefined) {\n        arrDown[i].smaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaFiftyUp == undefined) {\n        arrUp[i].smaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaFiftyDown == undefined) {\n        arrDown[i].smaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaOneHunUp == undefined) {\n        arrUp[i].smaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaOneHunDown == undefined) {\n        arrDown[i].smaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaTwoHunUp == undefined) {\n        arrUp[i].smaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaTwoHunDown == undefined) {\n        arrDown[i].smaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaEightUp == undefined) {\n        arrUp[i].emaEightUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaEightDown == undefined) {\n        arrDown[i].emaEightDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwelveUp == undefined) {\n        arrUp[i].emaTwelveUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwelveDown == undefined) {\n        arrDown[i].emaTwelveDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwentyUp == undefined) {\n        arrUp[i].emaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwentyDown == undefined) {\n        arrDown[i].emaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwentySixUp == undefined) {\n        arrUp[i].emaTwentySixUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwentySixDown == undefined) {\n        arrDown[i].emaTwentySixDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaFiftyUp == undefined) {\n        arrUp[i].emaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaFiftyDown == undefined) {\n        arrDown[i].emaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwoHunUp == undefined) {\n        arrUp[i].emaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwoHunDown == undefined) {\n        arrDown[i].emaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaFiveTeenUp == undefined) {\n        arrUp[i].wmaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaFiveTeenDown == undefined) {\n        arrDown[i].wmaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaTwentyUp == undefined) {\n        arrUp[i].wmaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaTwentyDown == undefined) {\n        arrDown[i].wmaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaThirtyUp == undefined) {\n        arrUp[i].wmaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaThirtyDown == undefined) {\n        arrDown[i].wmaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaFiftyUp == undefined) {\n        arrUp[i].wmaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaFiftyDown == undefined) {\n        arrDown[i].wmaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaOneHunUp == undefined) {\n        arrUp[i].wmaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaOneHunDown == undefined) {\n        arrDown[i].wmaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaTwoHunUp == undefined) {\n        arrUp[i].wmaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaTwoHunDown == undefined) {\n        arrDown[i].wmaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaFiveTeenUp == undefined) {\n        arrUp[i].vwmaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaFiveTeenDown == undefined) {\n        arrDown[i].vwmaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaTwentyUp == undefined) {\n        arrUp[i].vwmaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaTwentyDown == undefined) {\n        arrDown[i].vwmaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaThirtyUp == undefined) {\n        arrUp[i].vwmaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaThirtyDown == undefined) {\n        arrDown[i].vwmaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaFiftyUp == undefined) {\n        arrUp[i].vwmaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaFiftyDown == undefined) {\n        arrDown[i].vwmaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaOneHunUp == undefined) {\n        arrUp[i].vwmaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaOneHunDown == undefined) {\n        arrDown[i].vwmaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaTwoHunUp == undefined) {\n        arrUp[i].vwmaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaTwoHunDown == undefined) {\n        arrDown[i].vwmaTwoHunDown = \"No Data\";\n      }\n\n      if (arrDown[i].vwapDown == undefined) {\n        arrDown[i].vwapDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwapUp == undefined) {\n        arrUp[i].vwapUp = \"No Data\";\n      }\n\n      if (arrDown[i].macdDown == undefined) {\n        arrDown[i].macdDown = \"No Data\";\n      }\n\n      if (arrUp[i].macdUp == undefined) {\n        arrUp[i].macdUp = \"No Data\";\n      }\n\n      if (arrDown[i].rsiDown == undefined) {\n        arrDown[i].rsiDown = \"No Data\";\n      }\n\n      if (arrUp[i].rsiUp == undefined) {\n        arrUp[i].rsiUp = \"No Data\";\n      }\n\n      if (arrDown[i].cciDown == undefined) {\n        arrDown[i].cciDown = \"No Data\";\n      }\n\n      if (arrUp[i].cciUp == undefined) {\n        arrUp[i].cciUp = \"No Data\";\n      }\n\n      if (arrDown[i].williamsRDown == undefined) {\n        arrDown[i].williamsRDown = \"No Data\";\n      }\n\n      if (arrUp[i].williamsRUp == undefined) {\n        arrUp[i].williamsRUp = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticKUp == undefined) {\n        arrUp[i].stochasticKUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticKDown == undefined) {\n        arrDown[i].stochasticKDown = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticDUp == undefined) {\n        arrUp[i].stochasticDUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticDDown == undefined) {\n        arrDown[i].stochasticDDown = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticSignalUp == undefined) {\n        arrUp[i].stochasticSignalUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticSignalDown == undefined) {\n        arrDown[i].stochasticSignalDown = \"No Data\";\n      }\n\n      if (arrDown[i].bbMiddleDown == undefined) {\n        arrDown[i].bbMiddleDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbMiddleUp == undefined) {\n        arrUp[i].bbMiddleUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbLowerDown == undefined) {\n        arrDown[i].bbLowerDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbLowerUp == undefined) {\n        arrUp[i].bbLowerUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbUpperDown == undefined) {\n        arrDown[i].bbUpperDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbUpperUp == undefined) {\n        arrUp[i].bbUpperUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbPercentDown == undefined) {\n        arrDown[i].bbPercentDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbPercentUp == undefined) {\n        arrUp[i].bbPercentUp = \"No Data\";\n      }\n\n      if (arrDown[i].macdHistogramDown == undefined) {\n        arrDown[i].macdHistogramDown = \"No Data\";\n      }\n\n      if (arrDown[i].macdSignalLineDown == undefined) {\n        arrDown[i].macdSignalLineDown = \"No Data\";\n      }\n\n      if (arrUp[i].macdHistogramUp == undefined) {\n        arrUp[i].macdHistogramUp = \"No Data\";\n      }\n\n      if (arrUp[i].macdSignalLineUp == undefined) {\n        arrUp[i].macdSignalLineUp = \"No Data\";\n      }\n\n      if (arrUp[i].symbolUp == undefined) {\n        arrUp[i].symbolUp = \"No Data\";\n      }\n\n      if (arrDown[i].symbolDown == undefined) {\n        arrDown[i].symbolDown = \"No Data\";\n      }\n\n      arrUp[i].volumeIncreaseToday = volumeIncreaseUp;\n      arrUp[i].volumeIncreaseYesterday = yesterdayVolIncreaseUp;\n      arrDown[i].volumeIncreaseToday = volumeIncreaseDown;\n      arrDown[i].volumeIncreaseYesterday = yesterdayVolIncreaseDown;\n    }\n\n    for (let i = 0; i < arrUp.length; i++) {\n      // // UPPER ------------------------------------------------------------------------------\n      arrUp[i].symbol = arrUp[i].symbolUp;\n      delete arrUp[i].symbolUp;\n      arrUp[i].change = arrUp[i].changeUp;\n      delete arrUp[i].changeUp;\n      arrUp[i].avgVolume = arrUp[i].avgVolumeUp;\n      delete arrUp[i].avgVolumeUp;\n      arrUp[i].changesPercentage = arrUp[i].changesPercentageUp;\n      delete arrUp[i].changesPercentageUp;\n      arrUp[i].emaEight = arrUp[i].emaEightUp;\n      delete arrUp[i].emaEightUp;\n      arrUp[i].emaTwelve = arrUp[i].emaTwelveUp;\n      delete arrUp[i].emaTwelveUp;\n      arrUp[i].emaTwenty = arrUp[i].emaTwentyUp;\n      delete arrUp[i].emaTwentyUp;\n      arrUp[i].emaTwentySix = arrUp[i].emaTwentySixUp;\n      delete arrUp[i].emaTwentySixUp;\n      arrUp[i].emaFifty = arrUp[i].emaFiftyUp;\n      delete arrUp[i].emaFiftyUp;\n      arrUp[i].emaTwoHun = arrUp[i].emaTwoHunUp;\n      delete arrUp[i].emaTwoHunUp;\n      arrUp[i].macd = arrUp[i].macdUp;\n      delete arrUp[i].macdUp;\n      arrUp[i].macdHistogram = arrUp[i].macdHistogramUp;\n      delete arrUp[i].macdHistogramUp;\n      arrUp[i].macdSignalLine = arrUp[i].macdSignalLineUp;\n      delete arrUp[i].macdSignalLineUp;\n      arrUp[i].price = arrUp[i].priceUp;\n      delete arrUp[i].priceUp;\n      arrUp[i].rsi = arrUp[i].rsiUp;\n      delete arrUp[i].rsiUp;\n      arrUp[i].smaFiveTeen = arrUp[i].smaFiveTeenUp;\n      delete arrUp[i].smaFiveTeenUp;\n      arrUp[i].smaTwenty = arrUp[i].smaTwentyUp;\n      delete arrUp[i].smaTwentyUp;\n      arrUp[i].smaThirty = arrUp[i].smaThirtyUp;\n      delete arrUp[i].smaThirtyUp;\n      arrUp[i].smaFifty = arrUp[i].smaFiftyUp;\n      delete arrUp[i].smaFiftyUp;\n      arrUp[i].smaOneHun = arrUp[i].smaOneHunUp;\n      delete arrUp[i].smaOneHunUp;\n      arrUp[i].smaTwoHun = arrUp[i].smaTwoHunUp;\n      delete arrUp[i].smaTwoHunUp;\n      arrUp[i].volume = arrUp[i].volumeUp;\n      delete arrUp[i].volumeUp;\n      arrUp[i].volumeYesterday = arrUp[i].volumeYesterdayUp;\n      delete arrUp[i].volumeYesterdayUp;\n      arrUp[i].vwap = arrUp[i].vwapUp;\n      delete arrUp[i].vwapUp;\n      arrUp[i].stochasticD = arrUp[i].stochasticDUp;\n      delete arrUp[i].stochasticDUp;\n      arrUp[i].stochasticK = arrUp[i].stochasticKUp;\n      delete arrUp[i].stochasticKUp;\n      arrUp[i].stochasticSignal = arrUp[i].stochasticSignalUp;\n      delete arrUp[i].stochasticSignalUp;\n      arrUp[i].wmaFiveTeen = arrUp[i].wmaFiveTeenUp;\n      delete arrUp[i].wmaFiveTeenUp;\n      arrUp[i].wmaTwenty = arrUp[i].wmaTwentyUp;\n      delete arrUp[i].wmaTwentyUp;\n      arrUp[i].wmaThirty = arrUp[i].wmaThirtyUp;\n      delete arrUp[i].wmaThirtyUp;\n      arrUp[i].wmaFifty = arrUp[i].wmaFiftyUp;\n      delete arrUp[i].wmaFiftyUp;\n      arrUp[i].wmaOneHun = arrUp[i].wmaOneHunUp;\n      delete arrUp[i].wmaOneHunUp;\n      arrUp[i].wmaTwoHun = arrUp[i].wmaTwoHunUp;\n      delete arrUp[i].wmaTwoHunUp;\n      arrUp[i].vwmaFiveTeen = arrUp[i].vwmaFiveTeenUp;\n      delete arrUp[i].vwmaFiveTeenUp;\n      arrUp[i].vwmaTwenty = arrUp[i].vwmaTwentyUp;\n      delete arrUp[i].vwmaTwentyUp;\n      arrUp[i].vwmaThirty = arrUp[i].vwmaThirtyUp;\n      delete arrUp[i].vwmaThirtyUp;\n      arrUp[i].vwmaFifty = arrUp[i].vwmaFiftyUp;\n      delete arrUp[i].vwmaFiftyUp;\n      arrUp[i].vwmaOneHun = arrUp[i].vwmaOneHunUp;\n      delete arrUp[i].vwmaOneHunUp;\n      arrUp[i].vwmaTwoHun = arrUp[i].vwmaTwoHunUp;\n      delete arrUp[i].vwmaTwoHunUp;\n      arrUp[i].williamsR = arrUp[i].williamsRUp;\n      delete arrUp[i].williamsRUp;\n      arrUp[i].cciTwenty = arrUp[i].cciUp;\n      delete arrUp[i].cciUp;\n      arrUp[i].bbUpper = arrUp[i].bbUpperUp;\n      delete arrUp[i].bbUpperUp;\n      arrUp[i].bbLower = arrUp[i].bbLowerUp;\n      delete arrUp[i].bbLowerUp;\n      arrUp[i].bbMiddle = arrUp[i].bbMiddleUp;\n      delete arrUp[i].bbMiddleUp;\n      arrUp[i].bbPercent = arrUp[i].bbPercentUp;\n      delete arrUp[i].bbPercentUp;\n\n      if (arrUp[i].bbPercent == undefined) {\n        arrUp[i].bbPercent = 'No Data';\n      }\n    }\n\n    for (let i = 0; i < arrDown.length; i++) {\n      // DOWNERS ------------------------------------------------------------------------------\n      arrDown[i].symbol = arrDown[i].symbolDown;\n      delete arrDown[i].symbolDown;\n      arrDown[i].change = arrDown[i].changeDown;\n      delete arrDown[i].changeDown;\n      arrDown[i].avgVolume = arrDown[i].avgVolumeDown;\n      delete arrDown[i].avgVolumeDown;\n      arrDown[i].changesPercentage = arrDown[i].changesPercentageDown;\n      delete arrDown[i].changesPercentageDown;\n      arrDown[i].emaEight = arrDown[i].emaEightDown;\n      delete arrDown[i].emaEightDown;\n      arrDown[i].emaTwelve = arrDown[i].emaTwelveDown;\n      delete arrDown[i].emaTwelveDown;\n      arrDown[i].emaTwenty = arrDown[i].emaTwentyDown;\n      delete arrDown[i].emaTwentyDown;\n      arrDown[i].emaTwentySix = arrDown[i].emaTwentySixDown;\n      delete arrDown[i].emaTwentySixDown;\n      arrDown[i].emaFifty = arrDown[i].emaFiftyDown;\n      delete arrDown[i].emaFiftyDown;\n      arrDown[i].emaTwoHun = arrDown[i].emaTwoHunDown;\n      delete arrDown[i].emaTwoHunDown;\n      arrDown[i].macd = arrDown[i].macdDown;\n      delete arrDown[i].macdDown;\n      arrDown[i].macdHistogram = arrDown[i].macdHistogramDown;\n      delete arrDown[i].macdHistogramDown;\n      arrDown[i].macdSignalLine = arrDown[i].macdSignalLineDown;\n      delete arrDown[i].macdSignalLineDown;\n      arrDown[i].price = arrDown[i].priceDown;\n      delete arrDown[i].priceDown;\n      arrDown[i].rsi = arrDown[i].rsiDown;\n      delete arrDown[i].rsiDown;\n      arrDown[i].smaFiveTeen = arrDown[i].smaFiveTeenDown;\n      delete arrDown[i].smaFiveTeenDown;\n      arrDown[i].smaTwenty = arrDown[i].smaTwentyDown;\n      delete arrDown[i].smaTwentyDown;\n      arrDown[i].smaThirty = arrDown[i].smaThirtyDown;\n      delete arrDown[i].smaThirtyDown;\n      arrDown[i].smaFifty = arrDown[i].smaFiftyDown;\n      delete arrDown[i].smaFiftyDown;\n      arrDown[i].smaOneHun = arrDown[i].smaOneHunDown;\n      delete arrDown[i].smaOneHunDown;\n      arrDown[i].smaTwoHun = arrDown[i].smaTwoHunDown;\n      delete arrDown[i].smaTwoHunDown;\n      arrDown[i].volume = arrDown[i].volumeDown;\n      delete arrDown[i].volumeDown;\n      arrDown[i].volumeYesterday = arrDown[i].volumeYesterdayDown;\n      delete arrDown[i].volumeYesterdayDown;\n      arrDown[i].vwap = arrDown[i].vwapDown;\n      delete arrDown[i].vwapDown;\n      arrDown[i].stochasticD = arrDown[i].stochasticDDown;\n      delete arrDown[i].stochasticDDown;\n      arrDown[i].stochasticK = arrDown[i].stochasticKDown;\n      delete arrDown[i].stochasticKDown;\n      arrDown[i].stochasticSignal = arrDown[i].stochasticSignalDown;\n      delete arrDown[i].stochasticSignalDown;\n      arrDown[i].wmaFiveTeen = arrDown[i].wmaFiveTeenDown;\n      delete arrDown[i].wmaFiveTeenDown;\n      arrDown[i].wmaTwenty = arrDown[i].wmaTwentyDown;\n      delete arrDown[i].wmaTwentyDown;\n      arrDown[i].wmaThirty = arrDown[i].wmaThirtyDown;\n      delete arrDown[i].wmaThirtyDown;\n      arrDown[i].wmaFifty = arrDown[i].wmaFiftyDown;\n      delete arrDown[i].wmaFiftyDown;\n      arrDown[i].wmaOneHun = arrDown[i].wmaOneHunDown;\n      delete arrDown[i].wmaOneHunDown;\n      arrDown[i].wmaTwoHun = arrDown[i].wmaTwoHunDown;\n      delete arrDown[i].wmaTwoHunDown;\n      arrDown[i].vwmaFiveTeen = arrDown[i].vwmaFiveTeenDown;\n      delete arrDown[i].vwmaFiveTeenDown;\n      arrDown[i].vwmaTwenty = arrDown[i].vwmaTwentyDown;\n      delete arrDown[i].vwmaTwentyDown;\n      arrDown[i].vwmaThirty = arrDown[i].vwmaThirtyDown;\n      delete arrDown[i].vwmaThirtyDown;\n      arrDown[i].vwmaFifty = arrDown[i].vwmaFiftyDown;\n      delete arrDown[i].vwmaFiftyDown;\n      arrDown[i].vwmaOneHun = arrDown[i].vwmaOneHunDown;\n      delete arrDown[i].vwmaOneHunDown;\n      arrDown[i].vwmaTwoHun = arrDown[i].vwmaTwoHunDown;\n      delete arrDown[i].vwmaTwoHunDown;\n      arrDown[i].williamsR = arrDown[i].williamsRDown;\n      delete arrDown[i].williamsRDown;\n      arrDown[i].cciTwenty = arrDown[i].cciDown;\n      delete arrDown[i].cciDown;\n      arrDown[i].bbUpper = arrDown[i].bbUpperDown;\n      delete arrDown[i].bbUpperDown;\n      arrDown[i].bbLower = arrDown[i].bbLowerDown;\n      delete arrDown[i].bbLowerDown;\n      arrDown[i].bbMiddle = arrDown[i].bbMiddleDown;\n      delete arrDown[i].bbMiddleDown;\n      arrDown[i].bbPercent = arrDown[i].bbPercentDown;\n      delete arrDown[i].bbPercentDown;\n    }\n\n    let finalStocksArr = arrDown.concat(arrUp);\n    return finalStocksArr;\n  } //----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\n\n\n  const returnedData = await filterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n  return returnedData;\n};","map":{"version":3,"sources":["/Users/austinolijar/Desktop/MERN-DeadCat/dead-cat/src/JS/ApiFunction.js"],"names":["nasdaqMasterKey","nyseMasterKey","handleDate","filterTradableSymbols","technicalAnalysis","dateObj","today","year","date","month","minutes","hour","time","timeNum","marketDay","todayDate","compileStocks","arr1","arr2","arr3","arr4","callback","finalChartFatDown","finalChartFatUp","finalChart","combinedStockDrop","concat","combinedStockUp","keys","filter","stock","symbol","match","i","length","sort","a","b","changesPercentage","holderObjDown","avgVolume","bbLower","bbMiddle","bbPercent","bbUpper","cciTwenty","change","dayHigh","dayLow","earningsAnnouncement","emaEight","emaFifty","emaTwelve","emaTwenty","emaTwentySix","emaTwoHun","eps","exchange","macd","macdHistogram","macdSignalLine","marketCap","name","open","pe","previousClose","price","priceAvg50","priceAvg200","rsi","sharesOutstanding","smaFifty","smaFiveTeen","smaOneHun","smaThirty","smaTwenty","smaTwoHun","stochasticD","stochasticK","stochasticSignal","timestamp","volume","vwap","vwmaFifty","vwmaFiveTeen","vwmaOneHun","vwmaThirty","vwmaTwenty","vwmaTwoHun","williamsR","wmaFifty","wmaFiveTeen","wmaOneHun","wmaThirty","wmaTwenty","wmaTwoHun","yearHigh","yearLow","yesterdayVolume","holderObjUp","push","slimChartDown","unshift","slimChartUp","returnedData","filterUpDownStocks","smaFunction","chartArr","dataPull","newestPull","num","culSMA","fiveTeenSMA","twentySMA","thirtySMA","fiftySMA","hunSMA","twoHunSMA","todayPricePull","historical","close","smaFiveResult","toFixed","smaTwentyResult","smaThirtyResult","smaFiftyResult","smaOneHunResult","smaTwoHunResult","e","wmaFunction","weight","wmaInterval","iWma","wmaCul","vwmaFunction","newPrice","newVol","volCul","totalCul","undefined","isNaN","emaFunction","macdCallBack","prevDayEmaSub","arrEma","macdTwelve","macdTwentySix","subEMA","finalSubEma","derp","pop","finalEma","macdFunction","averageMacd","iMacd","averageSum","reduce","finalAverageMacd","histogram","rsiFunction","iRSI","iRSIAdjusted","recentUpper","recentDowner","upMove","downMove","pastDownPeriod","pastUpPeriod","averageUp","averageDown","stochOsc1433Function","iSO","soLowHolder","soHighHolder","highestHigh","lowestLow","topForm","bottomForm","topFormTwo","bottomFormTwo","topFormThree","bottomFormThree","signalLineHolder","low","high","Math","max","min","sumTop","sumBottom","slowD","sumStochD","smaD","williamsRFunction","highs","lows","williams","cciFunction","tpvCul","tpv","tpvMa","tpvCurrent","recentTpv","partOne","meanD","map","x","meanDMap","abs","meanDSum","meanDiv","partTwo","cci","bollingerBandsFunction","smaCul","closeHolder","closeP","priceAdj","priceAdjAbs","priceAdjSqrt","partOneDev","partTwoDev","standardDev","sqrt","vwapFunction","dayLengthPeriod","volumeCul","tempVWAP","slice","newDateString","vwapFinal","setVolume","technicalIndicators","finalArr","j","resSMA","fetch","dataSMA","json","Object","console","log","resOscPulled","dataRecentPulled","resVWAP","dataVWAP","buildIt","stocksUp","stocksDown","symbolUp","changeUp","avgVolumeUp","changesPercentageUp","emaEightUp","emaTwelveUp","emaTwentyUp","emaTwentySixUp","emaFiftyUp","emaTwoHunUp","macdUp","macdHistogramUp","macdSignalLineUp","priceUp","rsiUp","smaFiveTeenUp","smaTwentyUp","smaThirtyUp","smaFiftyUp","smaOneHunUp","smaTwoHunUp","volumeUp","volumeYesterdayUp","vwapUp","stochasticDUp","stochasticKUp","stochasticSignalUp","wmaFiveTeenUp","wmaTwentyUp","wmaThirtyUp","wmaFiftyUp","wmaOneHunUp","wmaTwoHunUp","vwmaFiveTeenUp","vwmaTwentyUp","vwmaThirtyUp","vwmaFiftyUp","vwmaOneHunUp","vwmaTwoHunUp","williamsRUp","cciUp","bbUpperUp","bbLowerUp","bbMiddleUp","bbPercentUp","symbolDown","changeDown","avgVolumeDown","changesPercentageDown","emaEightDown","emaTwelveDown","emaTwentyDown","emaTwentySixDown","emaFiftyDown","emaTwoHunDown","macdDown","macdHistogramDown","macdSignalLineDown","priceDown","rsiDown","smaFiveTeenDown","smaTwentyDown","smaThirtyDown","smaFiftyDown","smaOneHunDown","smaTwoHunDown","volumeDown","volumeYesterdayDown","vwapDown","stochasticDDown","stochasticKDown","stochasticSignalDown","wmaFiveTeenDown","wmaTwentyDown","wmaThirtyDown","wmaFiftyDown","wmaOneHunDown","wmaTwoHunDown","vwmaFiveTeenDown","vwmaTwentyDown","vwmaThirtyDown","vwmaFiftyDown","vwmaOneHunDown","vwmaTwoHunDown","williamsRDown","cciDown","bbUpperDown","bbLowerDown","bbMiddleDown","bbPercentDown","arrUp","arrDown","volumeIncreaseUp","increase","decrease","volumeIncreaseDown","yesterdayVolIncreaseUp","yesterdayVolIncreaseDown","changeDownAdjusted","volumeIncreaseToday","volumeIncreaseYesterday","volumeYesterday","finalStocksArr"],"mappings":"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","sourcesContent":["import { nasdaqMasterKey, nyseMasterKey } from \"./masterKeys\";\n\nimport { handleDate } from \"./fetch-compile-functions/handleDate\";\nimport {filterTradableSymbols} from \"./fetch-compile-functions/filterTradableStocks\"\n// import { nyseFetch } from \"./functions/nyseFetch\";\n// import { nasdaqFetch } from \"./functions/nasdaqFetch\";\n\nexport const technicalAnalysis = async () => {\n  // DATE OBJ --------------------------\n  const dateObj = {\n    today: null,\n    year: null,\n    date: null,\n    month: null,\n    minutes: null,\n    hour: null,\n    time: null,\n    timeNum: null,\n    marketDay: null,\n    todayDate: null,\n  }\n  // SET DATE --------------------------\n  await handleDate(dateObj)\n\n// ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n\nasync function compileStocks(arr1, arr2, arr3, arr4, callback) {\n  //---------------------- COMBINE AND SORT LARGEST DROP -------------------------\n  let finalChartFatDown = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  let finalChartFatUp = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  let finalChart = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  // ------- THIS IS A FILTER FOR WEIRD STOCK SYMBOLS THAT SLIP IN ----------\n\n  let combinedStockDrop = [];\n  combinedStockDrop = combinedStockDrop.concat(arr1, arr2);\n\n  let combinedStockUp = [];\n  combinedStockUp = combinedStockUp.concat(arr3, arr4);\n\n  const keys = /^[A-Z]{1,4}$/g;\n  finalChartFatDown = combinedStockDrop.filter((stock) => {\n    return stock.symbol.match(keys);\n  });\n\n  finalChartFatUp = combinedStockUp.filter((stock) => {\n    return stock.symbol.match(keys);\n  });\n\n  for (let i = 0; i < finalChartFatDown.length; i++) {\n    finalChartFatDown.sort((a, b) => {\n      return a.changesPercentage - b.changesPercentage;\n    });\n  }\n\n  for (let i = 0; i < finalChartFatUp.length; i++) {\n    finalChartFatUp.sort((a, b) => {\n      return b.changesPercentage - a.changesPercentage;\n    });\n  }\n  // MAKE SURE ARR HAS RIGHT LENGTH TO LOAD ------------\n  const holderObjDown = {\n    avgVolume: -1,\n    bbLower: \"-1\",\n    bbMiddle: \"-1\",\n    bbPercent: \"-1\",\n    bbUpper: \"-1\",\n    cciTwenty: \"-1\",\n    change: -1,\n    changesPercentage: -1,\n    dayHigh: -1,\n    dayLow: -1,\n    earningsAnnouncement: \"-1\",\n    emaEight: \"-1\",\n    emaFifty: \"-1\",\n    emaTwelve: \"-1\",\n    emaTwenty: \"-1\",\n    emaTwentySix: \"-1\",\n    emaTwoHun: \"-1\",\n    eps: -1,\n    exchange: \"No Data\",\n    macd: \"-1\",\n    macdHistogram: \"-1\",\n    macdSignalLine: \"-1\",\n    marketCap: -1,\n    name: \"Placeholder for lack of Symbols\",\n    open: -1,\n    pe: -1,\n    previousClose: -1,\n    price: 1,\n    priceAvg50: -1,\n    priceAvg200: -1,\n    rsi: \"-1\",\n    sharesOutstanding: -1,\n    smaFifty: \"-1\",\n    smaFiveTeen: \"-1\",\n    smaOneHun: \"-1\",\n    smaThirty: \"-1\",\n    smaTwenty: \"-1\",\n    smaTwoHun: \"-1\",\n    stochasticD: \"-1\",\n    stochasticK: \"-1\",\n    stochasticSignal: \"-1\",\n    symbol: \"No Data\",\n    timestamp: -1,\n    volume: -1,\n    vwap: \"-1\",\n    vwmaFifty: \"-1\",\n    vwmaFiveTeen: \"-1\",\n    vwmaOneHun: \"-1\",\n    vwmaThirty: \"-1\",\n    vwmaTwenty: \"-1\",\n    vwmaTwoHun: \"-1\",\n    williamsR: \"-1\",\n    wmaFifty: \"-1\",\n    wmaFiveTeen: \"-1\",\n    wmaOneHun: \"-1\",\n    wmaThirty: \"-1\",\n    wmaTwenty: \"-1\",\n    wmaTwoHun: \"-1\",\n    yearHigh: -1,\n    yearLow: -1,\n    yesterdayVolume: -1,\n  };\n  const holderObjUp = {\n    avgVolume: 1,\n    bbLower: \"1\",\n    bbMiddle: \"1\",\n    bbPercent: \"1\",\n    bbUpper: \"1\",\n    cciTwenty: \"1\",\n    change: 1,\n    changesPercentage: 1,\n    dayHigh: 1,\n    dayLow: 1,\n    earningsAnnouncement: \"1\",\n    emaEight: \"1\",\n    emaFifty: \"1\",\n    emaTwelve: \"1\",\n    emaTwenty: \"1\",\n    emaTwentySix: \"1\",\n    emaTwoHun: \"1\",\n    eps: 1,\n    exchange: \"No Data\",\n    macd: \"1\",\n    macdHistogram: \"1\",\n    macdSignalLine: \"1\",\n    marketCap: 1,\n    name: \"Placeholder for lack of Symbols\",\n    open: 1,\n    pe: 1,\n    previousClose: 1,\n    price: 1,\n    priceAvg50: 1,\n    priceAvg200: 1,\n    rsi: \"1\",\n    sharesOutstanding: 1,\n    smaFifty: \"1\",\n    smaFiveTeen: \"1\",\n    smaOneHun: \"1\",\n    smaThirty: \"1\",\n    smaTwenty: \"1\",\n    smaTwoHun: \"1\",\n    stochasticD: \"1\",\n    stochasticK: \"1\",\n    stochasticSignal: \"1\",\n    symbol: \"No Data\",\n    timestamp: 1,\n    volume: 1,\n    vwap: \"1\",\n    vwmaFifty: \"1\",\n    vwmaFiveTeen: \"1\",\n    vwmaOneHun: \"1\",\n    vwmaThirty: \"1\",\n    vwmaTwenty: \"1\",\n    vwmaTwoHun: \"1\",\n    williamsR: \"1\",\n    wmaFifty: \"1\",\n    wmaFiveTeen: \"1\",\n    wmaOneHun: \"1\",\n    wmaThirty: \"1\",\n    wmaTwenty: \"1\",\n    wmaTwoHun: \"1\",\n    yearHigh: 1,\n    yearLow: 1,\n    yesterdayVolume: 1,\n  };\n\n  if (finalChartFatUp.length < 5) {\n    while (finalChartFatUp.length < 5) {\n      finalChartFatUp.push(holderObjUp);\n    }\n  }\n  if (finalChartFatDown.length < 5) {\n    while (finalChartFatDown.length < 5) {\n      finalChartFatDown.push(holderObjDown);\n    }\n  }\n  // SLIM CHAT DOWN SO IT'S NOT BLOATED\n  let slimChartDown = 4;\n  while (slimChartDown >= 0) {\n    finalChart.unshift(finalChartFatDown[slimChartDown]);\n    slimChartDown--;\n  }\n\n  let slimChartUp = 4;\n  while (slimChartUp >= 0) {\n    finalChart.unshift(finalChartFatUp[slimChartUp]);\n    slimChartUp--;\n  }\n\n  const returnedData = await callback(finalChart, filterUpDownStocks);\n  return returnedData;\n}\n// ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n\n// SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction smaFunction(chartArr, dataPull, newestPull, num) {\n  let culSMA = 0;\n\n  // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n  let fiveTeenSMA = 13;\n  let twentySMA = 18;\n  let thirtySMA = 28;\n  let fiftySMA = 48;\n  let hunSMA = 98;\n  let twoHunSMA = 198;\n\n  try {\n    const todayPricePull = newestPull[0].price;\n    // ------------- 15 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 13) {\n      chartArr[num].smaFiveTeen = \"No Data\";\n    } else {\n      while (fiveTeenSMA >= 0) {\n        culSMA += dataPull.historical[fiveTeenSMA].close;\n        fiveTeenSMA--;\n      }\n      let smaFiveResult = (culSMA + todayPricePull) / 15;\n      chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 20 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 19) {\n      chartArr[num].smaTwenty = \"No Data\";\n    } else {\n      while (twentySMA >= 0) {\n        culSMA += dataPull.historical[twentySMA].close;\n        twentySMA--;\n      }\n      let smaTwentyResult = (culSMA + todayPricePull) / 20;\n      chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 30 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 29) {\n      chartArr[num].smaThirty = \"No Data\";\n    } else {\n      while (thirtySMA >= 0) {\n        culSMA += dataPull.historical[thirtySMA].close;\n        thirtySMA--;\n      }\n      let smaThirtyResult = (culSMA + todayPricePull) / 30;\n      chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 50 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 49) {\n      chartArr[num].smaFifty = \"No Data\";\n    } else {\n      while (fiftySMA >= 0) {\n        culSMA += dataPull.historical[fiftySMA].close;\n        fiftySMA--;\n      }\n      let smaFiftyResult = (culSMA + todayPricePull) / 50;\n      chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 100 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 99) {\n      chartArr[num].smaOneHun = \"No Data\";\n    } else {\n      while (hunSMA >= 0) {\n        culSMA += dataPull.historical[hunSMA].close;\n        hunSMA--;\n      }\n      let smaOneHunResult = (culSMA + todayPricePull) / 100;\n      chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 200 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 199) {\n      chartArr[num].smaTwoHun = \"No Data\";\n    } else {\n      while (twoHunSMA >= 0) {\n        culSMA += dataPull.historical[twoHunSMA].close;\n        twoHunSMA--;\n      }\n      let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n      chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n      culSMA = 0;\n    }\n  } catch (e) {}\n}\n// WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction wmaFunction(chartArr, dataPull, newestPull, num) {\n  // WMA FiveTeen --------------------------------------------------------------------\n  let weight = 14;\n  let wmaInterval = 0;\n  let iWma = 15;\n  try {\n    let wmaCul = newestPull[0].price * 15;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].wmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFiveTeen = wmaCul / iWma;\n      chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n    }\n\n    // WMA Twenty --------------------------------------------------------------------\n    wmaCul = newestPull[0].price * 20;\n    weight = 19;\n    wmaInterval = 0;\n    iWma = 20;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].wmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwenty = wmaCul / iWma;\n      chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n    }\n\n    // WMA THIRTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 30;\n    weight = 29;\n    wmaInterval = 0;\n    iWma = 30;\n\n    if (dataPull.historical.length < 30) {\n      chartArr[num].wmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaThirty = wmaCul / iWma;\n      chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n    }\n\n    // WMA FIFTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 50;\n    weight = 49;\n    wmaInterval = 0;\n    iWma = 50;\n\n    if (dataPull.historical.length < 50) {\n      chartArr[num].wmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFifty = wmaCul / iWma;\n      chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n    }\n\n    // WMA ONE HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 100;\n    weight = 99;\n    wmaInterval = 0;\n    iWma = 100;\n\n    if (dataPull.historical.length < 100) {\n      chartArr[num].wmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaOneHun = wmaCul / iWma;\n      chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n    }\n\n    // WMA TWO HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 200;\n    weight = 199;\n    wmaInterval = 0;\n    iWma = 200;\n\n    if (dataPull.historical.length < 200) {\n      chartArr[num].wmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwoHun = wmaCul / iWma;\n      chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwmaFunction(chartArr, dataPull, newestPull, num) {\n  // VWMA FIVETEEN --------------------------------------------------------------------\n\n  try {\n    let price = 0;\n    let volume = 0;\n    const newPrice = newestPull[0].price;\n    const newVol = newestPull[0].volume;\n\n    let volCul = newestPull[0].volume;\n    let totalCul = newPrice * newVol;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].vwmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n\n      }\n\n      const vwmaFiveTeen = totalCul / volCul;\n      \n      chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n    }\n\n  \n\n    // VWMA TWENTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].vwmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaTwenty = totalCul / volCul;\n     \n      chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n    }\n\n    // VWMA THIRTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 29) {\n      chartArr[num].vwmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaThirty = totalCul / volCul;\n      chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n    }\n\n    // VWMA FIFTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 49) {\n      chartArr[num].vwmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaFifty = totalCul / volCul;\n      chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n    }\n\n    // VWMA ONEHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 99) {\n      chartArr[num].vwmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaOneHun = totalCul / volCul;\n      chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n    }\n\n    // VWMA TWOHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 199) {\n      chartArr[num].vwmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaTwoHun = totalCul / volCul;\n      chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n  let emaEight = 14;\n  let emaTwelve = 22;\n  let emaTwenty = 38;\n  let emaTwentySix = 50;\n  let emaFifty = 98;\n  let emaTwoHun = 398;\n  let prevDayEmaSub = 0;\n  let arrEma = [];\n\n  let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n  let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n  try {\n    const newPrice = newestPull[0].price;\n\n    // EMA EIGHT ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 16) {\n      chartArr[num].emaEight = \"No Data\";\n    } else {\n      while (emaEight >= 15) {\n        prevDayEmaSub += dataPull.historical[emaEight].close;\n        emaEight--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 8;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 9) * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaEight--;\n      while (emaEight >= 0) {\n        let derp =\n          (2 / 9) * (dataPull.historical[emaEight].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaEight--;\n      }\n\n      const finalEma = (2 / 9) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaEight = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n    // EMA TWELVE ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 24) {\n      chartArr[num].emaTwelve = \"No Data\";\n    } else {\n      while (emaTwelve >= 11) {\n        prevDayEmaSub += dataPull.historical[emaTwelve].close;\n        emaTwelve--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n      const subEMA = prevDayEmaSub / 12;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 13) * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwelve--;\n\n      while (emaTwelve >= 0) {\n        let derp =\n          (2 / 13) * (dataPull.historical[emaTwelve].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwelve < 8 && emaTwelve >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwelve.unshift(derp);\n        }\n        emaTwelve--;\n      }\n\n      const finalEma = (2 / 13) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwelve.unshift(finalEma);\n\n      chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 40) {\n      chartArr[num].emaTwenty = \"No Data\";\n    } else {\n      while (emaTwenty >= 19) {\n        prevDayEmaSub += dataPull.historical[emaTwenty].close;\n        emaTwenty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 20;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 21) * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwenty--;\n      while (emaTwenty >= 0) {\n        let derp =\n          (2 / 21) * (dataPull.historical[emaTwenty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwenty--;\n      }\n\n      const finalEma = (2 / 21) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY SIX ----------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 51) {\n      chartArr[num].emaTwentySix = \"No Data\";\n    } else {\n      while (emaTwentySix >= 25) {\n        prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n        emaTwentySix--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 26;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 27) * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwentySix--;\n      while (emaTwentySix >= 0) {\n        let derp =\n          (2 / 27) * (dataPull.historical[emaTwentySix].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwentySix < 8 && emaTwentySix >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwentySix.unshift(derp);\n        }\n        emaTwentySix--;\n      }\n\n      const finalEma = (2 / 27) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwentySix.unshift(finalEma);\n\n      chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA FIFTY -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 100) {\n      chartArr[num].emaFifty = \"No Data\";\n    } else {\n      while (emaFifty >= 49) {\n        prevDayEmaSub += dataPull.historical[emaFifty].close;\n        emaFifty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 50;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 51) * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaFifty--;\n      while (emaFifty >= 0) {\n        let derp =\n          (2 / 51) * (dataPull.historical[emaFifty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaFifty--;\n      }\n\n      const finalEma = (2 / 51) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaFifty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 400) {\n      chartArr[num].emaTwoHun = \"No Data\";\n    } else {\n      while (emaTwoHun >= 199) {\n        prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n        emaTwoHun--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 200;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 201) * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwoHun--;\n      while (emaTwoHun >= 0) {\n        let derp =\n          (2 / 201) * (dataPull.historical[emaTwoHun].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwoHun--;\n      }\n\n      const finalEma = (2 / 201) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n  } catch (e) {}\n\n  // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n  macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n}\n// MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\nfunction macdFunction(chartArr, num, arr1, arr2) {\n  const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n  chartArr[num].macd = macd.toFixed(2);\n  // CALCULATE SIGNAL LINE ----------------\n  let averageMacd = [];\n  let iMacd = 8;\n\n  try {\n    while (iMacd >= 0) {\n      averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n      iMacd--;\n    }\n    let averageSum = averageMacd.reduce((a, b) => a + b);\n    let finalAverageMacd = averageSum / 9;\n    let macdSignalLine =\n      (2 / 9) * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n    chartArr[num].macdSignalLine = macdSignalLine.toFixed(2);\n    // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n    let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n    chartArr[num].macdHistogram = histogram.toFixed(2);\n    // FOR NO DATA TO PULL FROM\n    if (chartArr[num].macdHistogram === \"NaN\") {\n      chartArr[num].macdHistogram = \"No Data\";\n    }\n    if (chartArr[num].macd === \"NaN\") {\n      chartArr[num].macd = \"No Data\";\n    }\n    if (chartArr[num].macdSignalLine === \"NaN\") {\n      chartArr[num].macdSignalLine = \"No Data\";\n    }\n  } catch (e) {}\n}\n// RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction rsiFunction(chartArr, dataPull, newestPull, num) {\n  let iRSI = 13;\n  let iRSIAdjusted = 14;\n  let recentUpper = 0;\n  let recentDowner = 0;\n  let upMove = 0;\n  let downMove = 0;\n  let pastDownPeriod = 0;\n  let pastUpPeriod = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n    if (dataPull.historical.length <= 14) {\n      chartArr[num].rsi = \"No Data\";\n    } else {\n      // LOOP FOR AVERAGE\n      while (iRSI >= 0) {\n        if (\n          dataPull.historical[iRSI].close >\n          dataPull.historical[iRSIAdjusted].close\n        ) {\n          upMove +=\n            dataPull.historical[iRSI].close -\n            dataPull.historical[iRSIAdjusted].close;\n        } else {\n          downMove +=\n            dataPull.historical[iRSIAdjusted].close -\n            dataPull.historical[iRSI].close;\n        }\n        iRSI--;\n        iRSIAdjusted--;\n      }\n\n      let averageUp = upMove / 14;\n      let averageDown = downMove / 14;\n\n      // MOST RECENT DIFFERENCE\n      if (newPrice > dataPull.historical[0].close) {\n        recentUpper = newPrice - dataPull.historical[0].close;\n      } else {\n        recentDowner = dataPull.historical[0].close - newPrice;\n      }\n\n      pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n      pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n\n      let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n      chartArr[num].rsi = rsi.toFixed(2);\n    }\n  } catch (e) {}\n}\n// STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n  let iSO = 13;\n\n  let soLowHolder = [];\n  let soHighHolder = [];\n  let highestHigh = 0;\n  let lowestLow = 0;\n  // FIRST %D\n  let topForm = [];\n  let bottomForm = [];\n  // SECOND %D\n  let topFormTwo = [];\n  let bottomFormTwo = [];\n  // THIRD %D\n  let topFormThree = [];\n  let bottomFormThree = [];\n  // HOLDING SET OF %D FOR 14 3 3\n  let signalLineHolder = [];\n  try {\n    let newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 18) {\n      chartArr[num].stochasticK = \"No Data\";\n    } else {\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n\n      while (iSO >= 0) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      soHighHolder.push(newPrice);\n      soLowHolder.push(newPrice);\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      if (lowestLow === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      if (highestHigh === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      topForm.push(newPrice - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      //FOR %K\n      chartArr[num].stochasticK = (\n        ((newPrice - lowestLow) / (highestHigh - lowestLow)) *\n        100\n      ).toFixed(2);\n\n      // RESET HOLDER AND VARs --------------------------------------------------------\n\n      iSO = 14;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n      while (iSO >= 1) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[0].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[0].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      // RESET HOLDER AND VARs ------------------------------------------------\n\n      iSO = 15;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 2) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[1].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[1].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[1].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      let sumTop = topForm.reduce((a, b) => a + b, 0);\n      let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n\n      let slowD = (sumTop / sumBottom) * 100;\n\n      // FOR %D\n      chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------------------------------\n\n      iSO = 16;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n      while (iSO >= 3) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormTwo.push(dataPull.historical[2].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[2].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------\n\n      iSO = 17;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 4) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormThree.push(dataPull.historical[3].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormThree.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      // ----------- TALLY UP LAST SMOOTHING -------------------------------\n      const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n      let smaD = sumStochD / 3;\n\n      if (smaD < 0) {\n        smaD *= -1;\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      } else {\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      }\n    }\n  } catch (e) {}\n}\n// WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction williamsRFunction(chartArr, dataPull, newestPull, num) {\n  let highs = [];\n  let lows = [];\n  let lowestLow = 0;\n  let highestHigh = 0;\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].williams = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        highs.push(dataPull.historical[i].high);\n        lows.push(dataPull.historical[i].low);\n      }\n\n      highs.push(newPrice);\n      lows.push(newPrice);\n\n      lowestLow = Math.min(...lows);\n      highestHigh = Math.max(...highs);\n\n      const williams =\n        ((highestHigh - dataPull.historical[0].close) /\n          (highestHigh - lowestLow)) *\n        -100;\n\n      chartArr[num].williamsR = williams.toFixed(2);\n    }\n  } catch (e) {}\n}\n// CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction cciFunction(chartArr, dataPull, newestPull, num) {\n  let tpvCul = 0;\n  let tpv = [];\n  let tpvMa = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    let tpvCurrent = newPrice;\n    const recentTpv = newPrice;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].cciTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 19; i++) {\n        const { high, close, low } = dataPull.historical[i];\n        tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n        tpvCurrent = (close + high + low) / 3;\n      }\n      // ---- TPV SMA ------------------------\n      tpvCul = tpv.reduce((a, b) => a + b);\n      tpvMa = tpvCul / 20;\n      // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n      const partOne = recentTpv - tpvMa;\n\n      const meanD = tpv.map((x) => x - tpvMa);\n      const meanDMap = meanD.map((x) => Math.abs(x));\n      const meanDSum = meanDMap.reduce((a, b) => a + b);\n      const meanDiv = meanDSum / 20;\n      // PART TWO OF FORMULA --------------\n      const partTwo = meanDiv * 0.015;\n      // CCI ------------------------------\n      const cci = partOne / partTwo;\n\n      chartArr[num].cciTwenty = cci.toFixed(2);\n    }\n  } catch (e) {}\n}\n// BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n  let smaCul = 0;\n  let closeHolder = [];\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].bbUpper = \"No Data\";\n      chartArr[num].bbLower = \"No Data\";\n      chartArr[num].bbMiddle = \"No Data\";\n    } else {\n      let closeP = newPrice;\n      for (let i = 0; i <= 19; i++) {\n        closeHolder.push(closeP);\n        smaCul += closeP;\n        closeP = dataPull.historical[i].close;\n      }\n      // STANDARD DEVIATION CALC --------------------------------\n      const smaTwenty = smaCul / 20;\n\n      const priceAdj = closeHolder.map((x) => x - smaTwenty);\n\n      const priceAdjAbs = priceAdj.map((x) => Math.abs(x));\n\n      const priceAdjSqrt = priceAdjAbs.map((x) => x * x);\n\n      const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n\n      const partTwoDev = partOneDev / 20;\n      const standardDev = Math.sqrt(partTwoDev);\n      // BB BAND CALC --------------------------------------------\n      const bbUpper = smaTwenty + standardDev * 2;\n      const bbLower = smaTwenty - standardDev * 2;\n\n      const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n\n      chartArr[num].bbUpper = bbUpper.toFixed(2);\n      chartArr[num].bbLower = bbLower.toFixed(2);\n      chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n      chartArr[num].bbPercent = bbPercent.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwapFunction(chartArr, dataPull, num) {\n  // ----------- VWAP CALUC -------------------------------------------\n  let dayLengthPeriod = 0;\n  let tpvCul = 0;\n  let volumeCul = 0;\n  let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n  try {\n    // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n    while (dataPull[dayLengthPeriod].date.slice(0, 10) == dateObj.newDateString) {\n      dayLengthPeriod++;\n    }\n  \n    // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n    for (let i = 0; i < dayLengthPeriod; i++) {\n      const { volume, high, close, low, date } = dataPull[i];\n      let tpv = (high + low + close) / 3;\n      if (date.slice(0, 10) == dateObj.newDateString) {\n        tpvCul += tpv * volume;\n        volumeCul += volume;\n      }\n      var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n      tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n    }\n    let vwap = tempVWAP[0].toFixed(2);\n    chartArr[num].vwap = vwap;\n  } catch (e) {\n  }\n}\n// SET VOLUME FOR LATER\nfunction setVolume(chartArr, dataPull, newestPull, num) {\n  // SET RECENT YESTERDAY VOLUME\n  try {\n    if (dataPull.historical.length <= 0) {\n      chartArr[num].yesterdayVolume = 0;\n    } else {\n      chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n      if (dateObj.marketDay == 0 || dateObj.marketDay == 6) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (dateObj.marketDay >= 1 && dateObj.marketDay <= 5 && dateObj.timeNum < 930) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (dateObj.timeNum > 1830) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n    }\n    if (newestPull.length < 0) {\n      chartArr[num].volume = 0;\n    } else {\n      // SET RECENT VOLUME\n      chartArr[num].volume = newestPull[0].volume;\n    }\n  } catch (e) {}\n}\n\n// TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\nasync function technicalIndicators(finalArr, callback) {\n  let j = 0;\n\n  while (j < finalArr.length) {\n    // LOOP FOR TECHNICAL SYMBOL\n\n    // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n    const { symbol } = finalArr[j];\n\n    //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n    const resSMA = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataSMA).length) {\n        console.log(\"no SMA Pull data found\");\n      }\n    } catch (e) {}\n\n    //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n    const resOscPulled = await fetch(\n      `https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataRecentPulled = await resOscPulled.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataRecentPulled).length) {\n        console.log(\"no Recent Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    const resVWAP = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataVWAP = await resVWAP.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataVWAP).length) {\n        console.log(\"no VWAP Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    vwapFunction(finalArr, dataVWAP, j);\n\n    // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    smaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    wmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    vwmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n    emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction);\n\n    // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    rsiFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n\n    // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    williamsRFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    cciFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // SET VOLUME PROPERTIES\n    setVolume(finalArr, dataSMA, dataRecentPulled, j);\n\n    j++; // UPDATE WHILE LOOP\n  } // THIS IS THE END OF LOOP\n  const returnedData = await callback(finalArr, buildIt);\n  return returnedData;\n  \n}\nasync function filterUpDownStocks(finalArr, callback) {\n  let stocksUp = [];\n  let stocksDown = [];\n\n  let j = 0;\n\n  while (j < finalArr.length) {\n    const { changesPercentage } = finalArr[j];\n\n    if (changesPercentage > 0) {\n      stocksUp.push(finalArr[j]);\n    } else {\n      stocksDown.push(finalArr[j]);\n    }\n\n    j++;\n  } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n\n  // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n  for (let i = 0; i < stocksUp.length; i++) {\n    // UPPER ------------------------------------------------------------------------------\n    stocksUp[i].symbolUp = stocksUp[i].symbol;\n    delete stocksUp[i].symbol;\n    stocksUp[i].changeUp = stocksUp[i].change;\n    delete stocksUp[i].change;\n    stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n    delete stocksUp[i].avgVolume;\n    stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n    delete stocksUp[i].changesPercentage;\n    stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n    delete stocksUp[i].emaEight;\n    stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n    delete stocksUp[i].emaTwelve;\n    stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n    delete stocksUp[i].emaTwenty;\n    stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n    delete stocksUp[i].emaTwentySix;\n    stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n    delete stocksUp[i].emaFifty;\n    stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n    delete stocksUp[i].emaTwoHun;\n    stocksUp[i].macdUp = stocksUp[i].macd;\n    delete stocksUp[i].macd;\n    stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n    delete stocksUp[i].macdHistogram;\n    stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n    delete stocksUp[i].macdSignalLine;\n    stocksUp[i].priceUp = stocksUp[i].price;\n    delete stocksUp[i].price;\n    stocksUp[i].rsiUp = stocksUp[i].rsi;\n    delete stocksUp[i].rsi;\n    stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n    delete stocksUp[i].smaFiveTeen;\n    stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n    delete stocksUp[i].smaTwenty;\n    stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n    delete stocksUp[i].smaThirty;\n    stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n    delete stocksUp[i].smaFifty;\n    stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n    delete stocksUp[i].smaOneHun;\n    stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n    delete stocksUp[i].smaTwoHun;\n    stocksUp[i].volumeUp = stocksUp[i].volume;\n    delete stocksUp[i].volume;\n    stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n    delete stocksUp[i].yesterdayVolume;\n    stocksUp[i].vwapUp = stocksUp[i].vwap;\n    delete stocksUp[i].vwap;\n    stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n    delete stocksUp[i].stochasticD;\n    stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n    delete stocksUp[i].stochasticK;\n    stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n    delete stocksUp[i].stochasticSignal;\n    stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n    delete stocksUp[i].wmaFiveTeen;\n    stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n    delete stocksUp[i].wmaTwenty;\n    stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n    delete stocksUp[i].wmaThirty;\n    stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n    delete stocksUp[i].wmaFifty;\n    stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n    delete stocksUp[i].wmaOneHun;\n    stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n    delete stocksUp[i].wmaTwoHun;\n    stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n    delete stocksUp[i].vwmaFiveTeen;\n    stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n    delete stocksUp[i].vwmaTwenty;\n    stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n    delete stocksUp[i].vwmaThirty;\n    stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n    delete stocksUp[i].vwmaFifty;\n    stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n    delete stocksUp[i].vwmaOneHun;\n    stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n    delete stocksUp[i].vwmaTwoHun;\n    stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n    delete stocksUp[i].williamsR;\n    stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n    delete stocksUp[i].cciTwenty;\n    stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n    delete stocksUp[i].bbUpper;\n    stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n    delete stocksUp[i].bbLower;\n    stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n    delete stocksUp[i].bbMiddle;\n    stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n    delete stocksUp[i].bbPercent;\n    // DOWNERS ------------------------------------------------------------------------------\n    stocksDown[i].symbolDown = stocksDown[i].symbol;\n    delete stocksDown[i].symbol;\n    stocksDown[i].changeDown = stocksDown[i].change;\n    delete stocksDown[i].change;\n    stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n    delete stocksDown[i].avgVolume;\n    stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n    delete stocksDown[i].changesPercentage;\n    stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n    delete stocksDown[i].emaEight;\n    stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n    delete stocksDown[i].emaTwelve;\n    stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n    delete stocksDown[i].emaTwenty;\n    stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n    delete stocksDown[i].emaTwentySix;\n    stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n    delete stocksDown[i].emaFifty;\n    stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n    delete stocksDown[i].emaTwoHun;\n    stocksDown[i].macdDown = stocksDown[i].macd;\n    delete stocksDown[i].macd;\n    stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n    delete stocksDown[i].macdHistogram;\n    stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n    delete stocksDown[i].macdSignalLine;\n    stocksDown[i].priceDown = stocksDown[i].price;\n    delete stocksDown[i].price;\n    stocksDown[i].rsiDown = stocksDown[i].rsi;\n    delete stocksDown[i].rsi;\n    stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n    delete stocksDown[i].smaFiveTeen;\n    stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n    delete stocksDown[i].smaTwenty;\n    stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n    delete stocksDown[i].smaThirty;\n    stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n    delete stocksDown[i].smaFifty;\n    stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n    delete stocksDown[i].smaOneHun;\n    stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n    delete stocksDown[i].smaTwoHun;\n    stocksDown[i].volumeDown = stocksDown[i].volume;\n    delete stocksDown[i].volume;\n    stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n    delete stocksDown[i].yesterdayVolume;\n    stocksDown[i].vwapDown = stocksDown[i].vwap;\n    delete stocksDown[i].vwap;\n    stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n    delete stocksDown[i].stochasticD;\n    stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n    delete stocksDown[i].stochasticK;\n    stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n    delete stocksDown[i].stochasticSignal;\n    stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n    delete stocksDown[i].wmaFiveTeen;\n    stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n    delete stocksDown[i].wmaTwenty;\n    stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n    delete stocksDown[i].wmaThirty;\n    stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n    delete stocksDown[i].wmaFifty;\n    stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n    delete stocksDown[i].wmaOneHun;\n    stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n    delete stocksDown[i].wmaTwoHun;\n    stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n    delete stocksDown[i].vwmaFiveTeen;\n    stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n    delete stocksDown[i].vwmaTwenty;\n    stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n    delete stocksDown[i].vwmaThirty;\n    stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n    delete stocksDown[i].vwmaFifty;\n    stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n    delete stocksDown[i].vwmaOneHun;\n    stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n    delete stocksDown[i].vwmaTwoHun;\n    stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n    delete stocksDown[i].williamsR;\n    stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n    delete stocksDown[i].cciTwenty;\n    stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n    delete stocksDown[i].bbUpper;\n    stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n    delete stocksDown[i].bbLower;\n    stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n    delete stocksDown[i].bbMiddle;\n    stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n    delete stocksDown[i].bbPercent;\n  }\n  const returnedData = await callback(stocksUp, stocksDown);\n  return returnedData;\n}\nfunction buildIt(arrUp, arrDown) {\n  for (let i = 0; i < arrUp.length; i++) {\n    // DECONSTRUCTING UP AND DOWN VAR\n   var {\n      avgVolumeUp,\n      volumeYesterdayUp,\n      changeUp,\n      changesPercentageUp,\n      priceUp,\n      symbolUp,\n      volumeUp,\n      vwapUp,\n      smaFiveTeenUp,\n      smaTwentyUp,\n      smaThirtyUp,\n      smaFiftyUp,\n      smaOneHunUp,\n      smaTwoHunUp,\n      emaEightUp,\n      emaTwelveUp,\n      emaTwentyUp,\n      emaTwentySixUp,\n      emaFiftyUp,\n      emaTwoHunUp,\n      wmaFiveTeenUp,\n      wmaTwentyUp,\n      wmaThirtyUp,\n      wmaFiftyUp,\n      wmaOneHunUp,\n      wmaTwoHunUp,\n      vwmaFiveTeenUp,\n      vwmaTwentyUp,\n      vwmaThirtyUp,\n      vwmaFiftyUp,\n      vwmaOneHunUp,\n      vwmaTwoHunUp,\n      macdUp,\n      macdHistogramUp,\n      macdSignalLineUp,\n      rsiUp,\n      stochasticDUp,\n      stochasticKUp,\n      stochasticSignalUp,\n      cciUp,\n      bbMiddleUp,\n      bbLowerUp,\n      bbUpperUp,\n      bbPercentUp,\n      williamsRUp,\n    } = arrUp[i];\n    var {\n      avgVolumeDown,\n      volumeYesterdayDown,\n      changeDown,\n      changesPercentageDown,\n      priceDown,\n      symbolDown,\n      volumeDown,\n      vwapDown,\n      smaFiveTeenDown,\n      smaTwentyDown,\n      smaThirtyDown,\n      smaFiftyDown,\n      smaOneHunDown,\n      smaTwoHunDown,\n      emaEightDown,\n      emaTwelveDown,\n      emaTwentyDown,\n      emaTwentySixDown,\n      emaFiftyDown,\n      emaTwoHunDown,\n      wmaFiveTeenDown,\n      wmaTwentyDown,\n      wmaThirtyDown,\n      wmaFiftyDown,\n      wmaOneHunDown,\n      wmaTwoHunDown,\n      vwmaFiveTeenDown,\n      vwmaTwentyDown,\n      vwmaThirtyDown,\n      vwmaFiftyDown,\n      vwmaOneHunDown,\n      vwmaTwoHunDown,\n      macdDown,\n      macdHistogramDown,\n      macdSignalLineDown,\n      rsiDown,\n      stochasticDDown,\n      stochasticKDown,\n      stochasticSignalDown,\n      cciDown,\n      bbMiddleDown,\n      bbLowerDown,\n      bbUpperDown,\n      bbPercentDown,\n      williamsRDown,\n    } = arrDown[i];\n\n    // ADJUST TO FIXED --------------------------------------------------------\n    if (arrUp[i].priceUp == undefined) {\n      arrUp[i].priceUp = 0;\n    }\n    if (arrDown[i].priceDown == undefined) {\n      arrDown[i].priceDown = 0;\n    }\n\n    priceUp = priceUp.toFixed(2);\n    priceDown = priceDown.toFixed(2);\n    if (arrUp[i].changesPercentageUp == undefined) {\n      arrUp[i].changesPercentageUp = 0;\n    }\n    if (arrDown[i].changesPercentageDown == undefined) {\n      arrDown[i].changesPercentageDown = 0;\n    }\n    changesPercentageUp = changesPercentageUp.toFixed(2);\n    changesPercentageDown = changesPercentageDown.toFixed(2);\n\n    if (arrUp[i].changeUp == undefined) {\n      arrUp[i].changeUp = 0;\n    }\n    if (arrDown[i].changeDown == undefined) {\n      arrDown[i].changeDown = 0;\n    }\n    changeUp = changeUp.toFixed(2);\n    changeDown = changeDown.toFixed(2);\n    // UP VOLUME INCREASE ----------------------------\n    if (arrUp[i].volumeUp == undefined) {\n      arrUp[i].volumeUp = 0;\n    }\n    if (arrDown[i].volumeDown == undefined) {\n      arrDown[i].volumeDown = 0;\n    }\n\n    var volumeIncreaseUp = 0;\n\n    if (volumeUp > avgVolumeUp) {\n      let increase = volumeUp - avgVolumeUp;\n      volumeIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeUp;\n      volumeIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n    // DOWN VOLUME INCREASE ----------------------------\n    var volumeIncreaseDown = 0;\n\n    if (volumeDown > avgVolumeDown) {\n      let increase = volumeDown - avgVolumeDown;\n      volumeIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeDown;\n      volumeIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n    volumeIncreaseUp = volumeIncreaseUp.toFixed(2);\n\n    // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n\n    // YESTERDAY UP VOLUME INCREASE ----------------------------\n    if (arrUp[i].volumeYesterdayUp == undefined) {\n      arrUp[i].volumeYesterdayUp = 0;\n    }\n    if (volumeYesterdayDown == undefined) {\n      volumeYesterdayDown = 0;\n    }\n    if (arrUp[i].avgVolumeUp == undefined) {\n      arrUp[i].avgVolumeUp = 0;\n    }\n    if (arrDown[i].avgVolumeDown == undefined) {\n      arrDown[i].avgVolumeDown = 0;\n    }\n    var yesterdayVolIncreaseUp = 0;\n\n    if (volumeYesterdayUp > avgVolumeUp) {\n      let increase = volumeYesterdayUp - avgVolumeUp;\n      yesterdayVolIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeYesterdayUp;\n      yesterdayVolIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n\n    yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2);\n\n    // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n    var yesterdayVolIncreaseDown = 0;\n\n    if (volumeYesterdayDown > avgVolumeDown) {\n      let increase = volumeYesterdayDown - avgVolumeDown;\n      yesterdayVolIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeYesterdayDown;\n      yesterdayVolIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2);\n\n    // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n    var changeDownAdjusted = changeDown;\n\n    if (changeDownAdjusted < 0) {\n      changeDownAdjusted = changeDownAdjusted * -1;\n      changeDownAdjusted = changeDownAdjusted.toFixed(2);\n    }\n    // NaN CHECK ----------------------------------------\n    if (isNaN(yesterdayVolIncreaseDown)) {\n      yesterdayVolIncreaseDown = \"No Data\";\n    }\n    if (isNaN(yesterdayVolIncreaseUp)) {\n      yesterdayVolIncreaseUp = \"No Data\";\n    }\n    // ADJUST TO POSITIVE\n    if (stochasticDUp < 0) {\n      stochasticDUp = stochasticDUp * -1;\n    }\n    if (stochasticKUp < 0) {\n      stochasticKUp = stochasticKUp * -1;\n    }\n    if (stochasticDDown < 0) {\n      stochasticDDown = stochasticDDown * -1;\n    }\n    if (stochasticKDown < 0) {\n      stochasticKDown = stochasticKDown * -1;\n    }\n    // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n    if (arrUp[i].avgVolumeUp == undefined) {\n      arrUp[i].avgVolumeUp = \"No Data\";\n    }\n    if (arrDown[i].avgVolumeDown == undefined) {\n      arrDown[i].avgVolumeDown = \"No Data\";\n    }\n    if (arrUp[i].volumeUp == undefined) {\n      arrUp[i].volumeUp = \"No Data\";\n    }\n    if (arrDown[i].volumeDown == undefined) {\n      arrDown[i].volumeDown = \"No Data\";\n    }\n    if (arrUp[i].volumeIncreaseUp == undefined) {\n      arrUp[i].volumeIncreaseUp = \"No Data\";\n    }\n    if (arrDown[i].volumeIncreaseDown == undefined) {\n      arrDown[i].volumeIncreaseDown = \"No Data\";\n    }\n    if (arrUp[i].volumeYesterdayUp == undefined) {\n      arrUp[i].volumeYesterdayUp = \"No Data\";\n    }\n    if (arrDown[i].volumeYesterdayDown == undefined) {\n      arrDown[i].volumeYesterdayDown = \"No Data\";\n    }\n\n    if (arrUp[i].smaFiveTeenUp == undefined) {\n      arrUp[i].smaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].smaFiveTeenDown == undefined) {\n      arrDown[i].smaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].smaTwentyUp == undefined) {\n      arrUp[i].smaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].smaTwentyDown == undefined) {\n      arrDown[i].smaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].smaThirtyUp == undefined) {\n      arrUp[i].smaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].smaThirtyDown == undefined) {\n      arrDown[i].smaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].smaFiftyUp == undefined) {\n      arrUp[i].smaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].smaFiftyDown == undefined) {\n      arrDown[i].smaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].smaOneHunUp == undefined) {\n      arrUp[i].smaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].smaOneHunDown == undefined) {\n      arrDown[i].smaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].smaTwoHunUp == undefined) {\n      arrUp[i].smaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].smaTwoHunDown == undefined) {\n      arrDown[i].smaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].emaEightUp == undefined) {\n      arrUp[i].emaEightUp = \"No Data\";\n    }\n    if (arrDown[i].emaEightDown == undefined) {\n      arrDown[i].emaEightDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwelveUp == undefined) {\n      arrUp[i].emaTwelveUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwelveDown == undefined) {\n      arrDown[i].emaTwelveDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwentyUp == undefined) {\n      arrUp[i].emaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwentyDown == undefined) {\n      arrDown[i].emaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwentySixUp == undefined) {\n      arrUp[i].emaTwentySixUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwentySixDown == undefined) {\n      arrDown[i].emaTwentySixDown = \"No Data\";\n    }\n    if (arrUp[i].emaFiftyUp == undefined) {\n      arrUp[i].emaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].emaFiftyDown == undefined) {\n      arrDown[i].emaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwoHunUp == undefined) {\n      arrUp[i].emaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwoHunDown == undefined) {\n      arrDown[i].emaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].wmaFiveTeenUp == undefined) {\n      arrUp[i].wmaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].wmaFiveTeenDown == undefined) {\n      arrDown[i].wmaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].wmaTwentyUp == undefined) {\n      arrUp[i].wmaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaTwentyDown == undefined) {\n      arrDown[i].wmaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaThirtyUp == undefined) {\n      arrUp[i].wmaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaThirtyDown == undefined) {\n      arrDown[i].wmaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaFiftyUp == undefined) {\n      arrUp[i].wmaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaFiftyDown == undefined) {\n      arrDown[i].wmaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaOneHunUp == undefined) {\n      arrUp[i].wmaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].wmaOneHunDown == undefined) {\n      arrDown[i].wmaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].wmaTwoHunUp == undefined) {\n      arrUp[i].wmaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].wmaTwoHunDown == undefined) {\n      arrDown[i].wmaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].vwmaFiveTeenUp == undefined) {\n      arrUp[i].vwmaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaFiveTeenDown == undefined) {\n      arrDown[i].vwmaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaTwentyUp == undefined) {\n      arrUp[i].vwmaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaTwentyDown == undefined) {\n      arrDown[i].vwmaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaThirtyUp == undefined) {\n      arrUp[i].vwmaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaThirtyDown == undefined) {\n      arrDown[i].vwmaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaFiftyUp == undefined) {\n      arrUp[i].vwmaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaFiftyDown == undefined) {\n      arrDown[i].vwmaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaOneHunUp == undefined) {\n      arrUp[i].vwmaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaOneHunDown == undefined) {\n      arrDown[i].vwmaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaTwoHunUp == undefined) {\n      arrUp[i].vwmaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaTwoHunDown == undefined) {\n      arrDown[i].vwmaTwoHunDown = \"No Data\";\n    }\n\n    if (arrDown[i].vwapDown == undefined) {\n      arrDown[i].vwapDown = \"No Data\";\n    }\n    if (arrUp[i].vwapUp == undefined) {\n      arrUp[i].vwapUp = \"No Data\";\n    }\n\n    if (arrDown[i].macdDown == undefined) {\n      arrDown[i].macdDown = \"No Data\";\n    }\n    if (arrUp[i].macdUp == undefined) {\n      arrUp[i].macdUp = \"No Data\";\n    }\n\n    if (arrDown[i].rsiDown == undefined) {\n      arrDown[i].rsiDown = \"No Data\";\n    }\n    if (arrUp[i].rsiUp == undefined) {\n      arrUp[i].rsiUp = \"No Data\";\n    }\n    if (arrDown[i].cciDown == undefined) {\n      arrDown[i].cciDown = \"No Data\";\n    }\n    if (arrUp[i].cciUp == undefined) {\n      arrUp[i].cciUp = \"No Data\";\n    }\n    if (arrDown[i].williamsRDown == undefined) {\n      arrDown[i].williamsRDown = \"No Data\";\n    }\n    if (arrUp[i].williamsRUp == undefined) {\n      arrUp[i].williamsRUp = \"No Data\";\n    }\n    if (arrUp[i].stochasticKUp == undefined) {\n      arrUp[i].stochasticKUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticKDown == undefined) {\n      arrDown[i].stochasticKDown = \"No Data\";\n    }\n    if (arrUp[i].stochasticDUp == undefined) {\n      arrUp[i].stochasticDUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticDDown == undefined) {\n      arrDown[i].stochasticDDown = \"No Data\";\n    }\n    if (arrUp[i].stochasticSignalUp == undefined) {\n      arrUp[i].stochasticSignalUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticSignalDown == undefined) {\n      arrDown[i].stochasticSignalDown = \"No Data\";\n    }\n\n    if (arrDown[i].bbMiddleDown == undefined) {\n      arrDown[i].bbMiddleDown = \"No Data\";\n    }\n    if (arrUp[i].bbMiddleUp == undefined) {\n      arrUp[i].bbMiddleUp = \"No Data\";\n    }\n    if (arrDown[i].bbLowerDown == undefined) {\n      arrDown[i].bbLowerDown = \"No Data\";\n    }\n    if (arrUp[i].bbLowerUp == undefined) {\n      arrUp[i].bbLowerUp = \"No Data\";\n    }\n    if (arrDown[i].bbUpperDown == undefined) {\n      arrDown[i].bbUpperDown = \"No Data\";\n    }\n    if (arrUp[i].bbUpperUp == undefined) {\n      arrUp[i].bbUpperUp = \"No Data\";\n    }\n    if (arrDown[i].bbPercentDown == undefined) {\n      arrDown[i].bbPercentDown = \"No Data\";\n    }\n\n    if (arrUp[i].bbPercentUp == undefined) {\n      arrUp[i].bbPercentUp = \"No Data\";\n    }\n    if (arrDown[i].macdHistogramDown == undefined) {\n      arrDown[i].macdHistogramDown = \"No Data\";\n    }\n    if (arrDown[i].macdSignalLineDown == undefined) {\n      arrDown[i].macdSignalLineDown = \"No Data\";\n    }\n    if (arrUp[i].macdHistogramUp == undefined) {\n      arrUp[i].macdHistogramUp = \"No Data\";\n    }\n    if (arrUp[i].macdSignalLineUp == undefined) {\n      arrUp[i].macdSignalLineUp = \"No Data\";\n    }\n    if (arrUp[i].symbolUp == undefined) {\n      arrUp[i].symbolUp = \"No Data\";\n    }\n    if (arrDown[i].symbolDown == undefined) {\n      arrDown[i].symbolDown = \"No Data\";\n    }\n\n    arrUp[i].volumeIncreaseToday = volumeIncreaseUp\n    arrUp[i].volumeIncreaseYesterday = yesterdayVolIncreaseUp\n    arrDown[i].volumeIncreaseToday = volumeIncreaseDown\n    arrDown[i].volumeIncreaseYesterday = yesterdayVolIncreaseDown\n  }\n \n \n  for (let i = 0; i < arrUp.length; i++) {\n    // // UPPER ------------------------------------------------------------------------------\n\n    arrUp[i].symbol = arrUp[i].symbolUp;\n    delete arrUp[i].symbolUp;\n    arrUp[i].change = arrUp[i].changeUp;\n    delete arrUp[i].changeUp;\n    arrUp[i].avgVolume = arrUp[i].avgVolumeUp;\n    delete arrUp[i].avgVolumeUp;\n    arrUp[i].changesPercentage = arrUp[i].changesPercentageUp;\n    delete arrUp[i].changesPercentageUp;\n    arrUp[i].emaEight = arrUp[i].emaEightUp;\n    delete arrUp[i].emaEightUp;\n    arrUp[i].emaTwelve = arrUp[i].emaTwelveUp;\n    delete arrUp[i].emaTwelveUp;\n    arrUp[i].emaTwenty = arrUp[i].emaTwentyUp;\n    delete arrUp[i].emaTwentyUp;\n    arrUp[i].emaTwentySix = arrUp[i].emaTwentySixUp;\n    delete arrUp[i].emaTwentySixUp;\n    arrUp[i].emaFifty = arrUp[i].emaFiftyUp;\n    delete arrUp[i].emaFiftyUp;\n    arrUp[i].emaTwoHun = arrUp[i].emaTwoHunUp;\n    delete arrUp[i].emaTwoHunUp;\n    arrUp[i].macd = arrUp[i].macdUp;\n    delete arrUp[i].macdUp;\n    arrUp[i].macdHistogram = arrUp[i].macdHistogramUp;\n    delete arrUp[i].macdHistogramUp;\n    arrUp[i].macdSignalLine = arrUp[i].macdSignalLineUp;\n    delete arrUp[i].macdSignalLineUp;\n    arrUp[i].price = arrUp[i].priceUp;\n    delete arrUp[i].priceUp;\n    arrUp[i].rsi = arrUp[i].rsiUp;\n    delete arrUp[i].rsiUp;\n    arrUp[i].smaFiveTeen = arrUp[i].smaFiveTeenUp;\n    delete arrUp[i].smaFiveTeenUp;\n    arrUp[i].smaTwenty = arrUp[i].smaTwentyUp;\n    delete arrUp[i].smaTwentyUp;\n    arrUp[i].smaThirty = arrUp[i].smaThirtyUp;\n    delete arrUp[i].smaThirtyUp;\n    arrUp[i].smaFifty = arrUp[i].smaFiftyUp;\n    delete arrUp[i].smaFiftyUp;\n    arrUp[i].smaOneHun = arrUp[i].smaOneHunUp;\n    delete arrUp[i].smaOneHunUp;\n    arrUp[i].smaTwoHun = arrUp[i].smaTwoHunUp;\n    delete arrUp[i].smaTwoHunUp;\n    arrUp[i].volume = arrUp[i].volumeUp;\n    delete arrUp[i].volumeUp;\n    arrUp[i].volumeYesterday = arrUp[i].volumeYesterdayUp;\n    delete arrUp[i].volumeYesterdayUp;\n    arrUp[i].vwap = arrUp[i].vwapUp;\n    delete arrUp[i].vwapUp;\n    arrUp[i].stochasticD = arrUp[i].stochasticDUp;\n    delete arrUp[i].stochasticDUp;\n    arrUp[i].stochasticK = arrUp[i].stochasticKUp;\n    delete arrUp[i].stochasticKUp;\n    arrUp[i].stochasticSignal = arrUp[i].stochasticSignalUp;\n    delete arrUp[i].stochasticSignalUp;\n    arrUp[i].wmaFiveTeen = arrUp[i].wmaFiveTeenUp;\n    delete arrUp[i].wmaFiveTeenUp;\n    arrUp[i].wmaTwenty = arrUp[i].wmaTwentyUp;\n    delete arrUp[i].wmaTwentyUp;\n    arrUp[i].wmaThirty = arrUp[i].wmaThirtyUp;\n    delete arrUp[i].wmaThirtyUp;\n    arrUp[i].wmaFifty = arrUp[i].wmaFiftyUp;\n    delete arrUp[i].wmaFiftyUp;\n    arrUp[i].wmaOneHun = arrUp[i].wmaOneHunUp;\n    delete arrUp[i].wmaOneHunUp;\n    arrUp[i].wmaTwoHun = arrUp[i].wmaTwoHunUp;\n    delete arrUp[i].wmaTwoHunUp;\n    arrUp[i].vwmaFiveTeen = arrUp[i].vwmaFiveTeenUp;\n    delete arrUp[i].vwmaFiveTeenUp;\n    arrUp[i].vwmaTwenty = arrUp[i].vwmaTwentyUp;\n    delete arrUp[i].vwmaTwentyUp;\n    arrUp[i].vwmaThirty = arrUp[i].vwmaThirtyUp;\n    delete arrUp[i].vwmaThirtyUp;\n    arrUp[i].vwmaFifty = arrUp[i].vwmaFiftyUp;\n    delete arrUp[i].vwmaFiftyUp;\n    arrUp[i].vwmaOneHun = arrUp[i].vwmaOneHunUp;\n    delete arrUp[i].vwmaOneHunUp;\n    arrUp[i].vwmaTwoHun = arrUp[i].vwmaTwoHunUp;\n    delete arrUp[i].vwmaTwoHunUp;\n    arrUp[i].williamsR = arrUp[i].williamsRUp;\n    delete arrUp[i].williamsRUp;\n    arrUp[i].cciTwenty = arrUp[i].cciUp;\n    delete arrUp[i].cciUp;\n    arrUp[i].bbUpper = arrUp[i].bbUpperUp;\n    delete arrUp[i].bbUpperUp;\n    arrUp[i].bbLower = arrUp[i].bbLowerUp;\n    delete arrUp[i].bbLowerUp;\n    arrUp[i].bbMiddle = arrUp[i].bbMiddleUp;\n    delete arrUp[i].bbMiddleUp;\n    arrUp[i].bbPercent = arrUp[i].bbPercentUp;\n    delete arrUp[i].bbPercentUp;\n\n    if (arrUp[i].bbPercent == undefined) {\n      arrUp[i].bbPercent = 'No Data'\n    }\n  }\n  for (let i = 0; i < arrDown.length; i++) {\n    // DOWNERS ------------------------------------------------------------------------------\n\n    arrDown[i].symbol = arrDown[i].symbolDown;\n    delete arrDown[i].symbolDown;\n    arrDown[i].change = arrDown[i].changeDown;\n    delete arrDown[i].changeDown;\n    arrDown[i].avgVolume = arrDown[i].avgVolumeDown;\n    delete arrDown[i].avgVolumeDown;\n    arrDown[i].changesPercentage = arrDown[i].changesPercentageDown;\n    delete arrDown[i].changesPercentageDown;\n    arrDown[i].emaEight = arrDown[i].emaEightDown;\n    delete arrDown[i].emaEightDown;\n    arrDown[i].emaTwelve = arrDown[i].emaTwelveDown;\n    delete arrDown[i].emaTwelveDown;\n    arrDown[i].emaTwenty = arrDown[i].emaTwentyDown;\n    delete arrDown[i].emaTwentyDown;\n    arrDown[i].emaTwentySix = arrDown[i].emaTwentySixDown;\n    delete arrDown[i].emaTwentySixDown;\n    arrDown[i].emaFifty = arrDown[i].emaFiftyDown;\n    delete arrDown[i].emaFiftyDown;\n    arrDown[i].emaTwoHun = arrDown[i].emaTwoHunDown;\n    delete arrDown[i].emaTwoHunDown;\n    arrDown[i].macd = arrDown[i].macdDown;\n    delete arrDown[i].macdDown;\n    arrDown[i].macdHistogram = arrDown[i].macdHistogramDown;\n    delete arrDown[i].macdHistogramDown;\n    arrDown[i].macdSignalLine = arrDown[i].macdSignalLineDown;\n    delete arrDown[i].macdSignalLineDown;\n    arrDown[i].price = arrDown[i].priceDown;\n    delete arrDown[i].priceDown;\n    arrDown[i].rsi = arrDown[i].rsiDown;\n    delete arrDown[i].rsiDown;\n    arrDown[i].smaFiveTeen = arrDown[i].smaFiveTeenDown;\n    delete arrDown[i].smaFiveTeenDown;\n    arrDown[i].smaTwenty = arrDown[i].smaTwentyDown;\n    delete arrDown[i].smaTwentyDown;\n    arrDown[i].smaThirty = arrDown[i].smaThirtyDown;\n    delete arrDown[i].smaThirtyDown;\n    arrDown[i].smaFifty = arrDown[i].smaFiftyDown;\n    delete arrDown[i].smaFiftyDown;\n    arrDown[i].smaOneHun = arrDown[i].smaOneHunDown;\n    delete arrDown[i].smaOneHunDown;\n    arrDown[i].smaTwoHun = arrDown[i].smaTwoHunDown;\n    delete arrDown[i].smaTwoHunDown;\n    arrDown[i].volume = arrDown[i].volumeDown;\n    delete arrDown[i].volumeDown;\n    arrDown[i].volumeYesterday = arrDown[i].volumeYesterdayDown;\n    delete arrDown[i].volumeYesterdayDown;\n    arrDown[i].vwap = arrDown[i].vwapDown;\n    delete arrDown[i].vwapDown;\n    arrDown[i].stochasticD = arrDown[i].stochasticDDown;\n    delete arrDown[i].stochasticDDown;\n    arrDown[i].stochasticK = arrDown[i].stochasticKDown;\n    delete arrDown[i].stochasticKDown;\n    arrDown[i].stochasticSignal = arrDown[i].stochasticSignalDown;\n    delete arrDown[i].stochasticSignalDown;\n    arrDown[i].wmaFiveTeen = arrDown[i].wmaFiveTeenDown;\n    delete arrDown[i].wmaFiveTeenDown;\n    arrDown[i].wmaTwenty = arrDown[i].wmaTwentyDown;\n    delete arrDown[i].wmaTwentyDown;\n    arrDown[i].wmaThirty = arrDown[i].wmaThirtyDown;\n    delete arrDown[i].wmaThirtyDown;\n    arrDown[i].wmaFifty = arrDown[i].wmaFiftyDown;\n    delete arrDown[i].wmaFiftyDown;\n    arrDown[i].wmaOneHun = arrDown[i].wmaOneHunDown;\n    delete arrDown[i].wmaOneHunDown;\n    arrDown[i].wmaTwoHun = arrDown[i].wmaTwoHunDown;\n    delete arrDown[i].wmaTwoHunDown;\n    arrDown[i].vwmaFiveTeen = arrDown[i].vwmaFiveTeenDown;\n    delete arrDown[i].vwmaFiveTeenDown;\n    arrDown[i].vwmaTwenty = arrDown[i].vwmaTwentyDown;\n    delete arrDown[i].vwmaTwentyDown;\n    arrDown[i].vwmaThirty = arrDown[i].vwmaThirtyDown;\n    delete arrDown[i].vwmaThirtyDown;\n    arrDown[i].vwmaFifty = arrDown[i].vwmaFiftyDown;\n    delete arrDown[i].vwmaFiftyDown;\n    arrDown[i].vwmaOneHun = arrDown[i].vwmaOneHunDown;\n    delete arrDown[i].vwmaOneHunDown;\n    arrDown[i].vwmaTwoHun = arrDown[i].vwmaTwoHunDown;\n    delete arrDown[i].vwmaTwoHunDown;\n    arrDown[i].williamsR = arrDown[i].williamsRDown;\n    delete arrDown[i].williamsRDown;\n    arrDown[i].cciTwenty = arrDown[i].cciDown;\n    delete arrDown[i].cciDown;\n    arrDown[i].bbUpper = arrDown[i].bbUpperDown;\n    delete arrDown[i].bbUpperDown;\n    arrDown[i].bbLower = arrDown[i].bbLowerDown;\n    delete arrDown[i].bbLowerDown;\n    arrDown[i].bbMiddle = arrDown[i].bbMiddleDown;\n    delete arrDown[i].bbMiddleDown;\n    arrDown[i].bbPercent = arrDown[i].bbPercentDown;\n    delete arrDown[i].bbPercentDown;\n  }\n\n \n  let finalStocksArr = arrDown.concat(arrUp)\n  return finalStocksArr;\n\n}\n//----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\nconst returnedData = await filterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n\nreturn returnedData;\n\n}"]},"metadata":{},"sourceType":"module"}