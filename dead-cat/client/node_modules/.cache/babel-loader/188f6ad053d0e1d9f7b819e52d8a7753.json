{"ast":null,"code":"var _jsxFileName = \"/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/PortfolioSettings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport InputRadioSettings from './InputRadioSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PortfolioSettings = props => {\n  _s();\n\n  const [checked, setChecked] = useState('default');\n  const [radioInputs, setRadioInputs] = useState([{\n    checked: true,\n    id: 'default-setting',\n    value: 'default'\n  }, {\n    checked: false,\n    id: 'portfolio-setting',\n    value: 'portfolio'\n  }]);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(checked) // CHECK WHICH ONE IS MARKED\n\n    props.handleSaveSettings();\n    props.changeDefaultOrPortfolio(checked);\n  };\n\n  const handleChangeSettings = e => {\n    setChecked(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(props.portfolioSettingsStored);\n  }, [props.portfolioSettingStored]); // INPUTS =========================\n  // NEED TO CHANGE LATER ---------- HAVE THE CHECKED BTN BE WHATEVER IS IN LOCAL STORAGE\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.showSettings ? \"active-settings portfolio-settings-cont\" : \"portfolio-settings-cont\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"What To Show On Load\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"default-setting\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputRadioSettings, {\n          activePortfolio: props.activePortfolio,\n          radioInputs: radioInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"portfolio-setting\",\n          children: \"Show Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputRadioSettings, {\n          activePortfolio: props.activePortfolio,\n          radioInputs: radioInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Save Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PortfolioSettings, \"twG2jNR7TGbeBd0vkZPW8e2n9ow=\");\n\n_c = PortfolioSettings;\nexport default PortfolioSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioSettings\");","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/PortfolioSettings.js"],"names":["useState","useEffect","InputRadioSettings","PortfolioSettings","props","checked","setChecked","radioInputs","setRadioInputs","id","value","handleSubmit","e","preventDefault","handleSaveSettings","changeDefaultOrPortfolio","handleChangeSettings","target","console","log","portfolioSettingsStored","portfolioSettingStored","showSettings","activePortfolio"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAEjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,SAAD,CAAtC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAC3C;AAACK,IAAAA,OAAO,EAAE,IAAV;AACAI,IAAAA,EAAE,EAAE,iBADJ;AAEAC,IAAAA,KAAK,EAAE;AAFP,GAD2C,EAK3C;AAACL,IAAAA,OAAO,EAAE,KAAV;AACAI,IAAAA,EAAE,EAAE,mBADJ;AAEAC,IAAAA,KAAK,EAAE;AAFP,GAL2C,CAAD,CAA9C;;AAYD,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF,GAD2B,CAE3B;;AACAT,IAAAA,KAAK,CAACU,kBAAN;AACAV,IAAAA,KAAK,CAACW,wBAAN,CAA+BV,OAA/B;AACA,GALD;;AAOA,QAAMW,oBAAoB,GAAIJ,CAAD,IAAO;AAChCN,IAAAA,UAAU,CAACM,CAAC,CAACK,MAAF,CAASP,KAAV,CAAV;AACH,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACfiB,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACgB,uBAAlB;AACA,GAFQ,EAEN,CAAChB,KAAK,CAACiB,sBAAP,CAFM,CAAT,CA1BkC,CA8BrC;AAIA;;AACI,sBACI;AAAK,IAAA,SAAS,EAAEjB,KAAK,CAACkB,YAAN,GAAqB,yCAArB,GAAiE,yBAAjF;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAGV,CAAD,IAAOD,YAAY,CAACC,CAAD,CAAnC;AAAA,6BACQ;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEA;AAAO,UAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,kBAAD;AAAoB,UAAA,eAAe,EAAER,KAAK,CAACmB,eAA3C;AAA4D,UAAA,WAAW,EAAEhB;AAAzE;AAAA;AAAA;AAAA;AAAA,gBAHA,eAKA;AAAO,UAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAMA,QAAC,kBAAD;AAAoB,UAAA,eAAe,EAAEH,KAAK,CAACmB,eAA3C;AAA6D,UAAA,WAAW,EAAEhB;AAA1E;AAAA;AAAA;AAAA;AAAA,gBANA,eAQA;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAnDD;;GAAMJ,iB;;KAAAA,iB;AAqDN,eAAeA,iBAAf","sourcesContent":["import {useState, useEffect} from 'react'\n\nimport InputRadioSettings from './InputRadioSettings'\n\nconst PortfolioSettings = (props) => {\n\n    const [checked, setChecked] = useState('default')\n    const [radioInputs, setRadioInputs] = useState([\n        {checked: true,\n        id: 'default-setting',\n        value: 'default'\n        },\n        {checked: false,\n        id: 'portfolio-setting',\n        value: 'portfolio'\n        }\n    ])\n\n\n   const handleSubmit = (e) => {\n    e.preventDefault()\n    // console.log(checked) // CHECK WHICH ONE IS MARKED\n    props.handleSaveSettings()\n    props.changeDefaultOrPortfolio(checked)\n   }\n\n   const handleChangeSettings = (e) => {\n       setChecked(e.target.value)\n   }\n\n   useEffect(() => {\n    console.log(props.portfolioSettingsStored)\n   }, [props.portfolioSettingStored])\n\n// INPUTS =========================\n\n\n\n// NEED TO CHANGE LATER ---------- HAVE THE CHECKED BTN BE WHATEVER IS IN LOCAL STORAGE\n    return(\n        <div className={props.showSettings ? \"active-settings portfolio-settings-cont\" : \"portfolio-settings-cont\" }>\n            <form onSubmit={(e) => handleSubmit(e)}>\n                    <fieldset>\n                        <legend>What To Show On Load</legend>\n                    <label htmlFor=\"default-setting\">Default</label>\n                    <InputRadioSettings activePortfolio={props.activePortfolio} radioInputs={radioInputs}/>\n                    {/* <input  tabIndex={props.activePortfolio ? -1 : 0} onChange={(e) => handleChangeSettings(e)} name=\"settings\" id=\"default-setting\" type=\"radio\" value=\"default\"/> */}\n                    <label htmlFor=\"portfolio-setting\">Show Portfolio</label>\n                    <InputRadioSettings activePortfolio={props.activePortfolio}  radioInputs={radioInputs}/>\n                    {/* <input  tabIndex={props.activePortfolio ? -1 : 0} onChange={(e) => handleChangeSettings(e)} name=\"settings\" id=\"portfolio-setting\" type=\"radio\" value=\"portfolio\"/> */}\n                    <input type=\"submit\" value=\"Save Settings\"/>\n                    </fieldset>\n            </form>\n        </div>\n    )\n}\n\nexport default PortfolioSettings;"]},"metadata":{},"sourceType":"module"}