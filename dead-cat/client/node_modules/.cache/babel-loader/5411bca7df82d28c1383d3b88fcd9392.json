{"ast":null,"code":"var _jsxFileName = \"/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/PortfolioSettings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PortfolioSettings = props => {\n  _s();\n\n  localStorage.clear();\n  const [checked, setChecked] = useState(null);\n  const [inputVal, setInputVal] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(checked) // CHECK WHICH ONE IS MARKED\n\n    props.handleSaveSettings();\n    props.changeDefaultOrPortfolio(inputVal);\n  };\n\n  const handleChangeSettings = e => {\n    setInputVal(e.target.value);\n    console.log(inputVal, 'input val change');\n  }; //    useEffect(() => {\n  //     console.log(checked)\n  //     if (checked === 'default') {\n  //         setChecked(true)\n  //     } else if (checked === 'portfolio') {\n  //         setChecked(false)\n  //     }\n  //    }, [checked])\n\n\n  useEffect(() => {\n    const checkedStorage = JSON.parse(localStorage.getItem('deadCatSettings'));\n\n    if (checkedStorage === 'default') {\n      setChecked(true);\n    } else if (checked === 'portfolio') {\n      setChecked(false);\n    }\n\n    console.log(checkedStorage, 'in settings', checked);\n  }, []); // NEED TO CHANGE LATER ---------- HAVE THE CHECKED BTN BE WHATEVER IS IN LOCAL STORAGE\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.showSettings ? \"active-settings portfolio-settings-cont\" : \"portfolio-settings-cont\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"What To Show On Load\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"default-setting\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), checked ? /*#__PURE__*/_jsxDEV(\"input\", {\n          tabIndex: props.activePortfolio ? -1 : 0,\n          onChange: e => handleChangeSettings(e),\n          name: \"settings\",\n          id: \"default-setting\",\n          type: \"radio\",\n          value: \"default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultChecked: true,\n          tabIndex: props.activePortfolio ? -1 : 0,\n          onChange: e => handleChangeSettings(e),\n          name: \"settings\",\n          id: \"default-setting\",\n          type: \"radio\",\n          value: \"default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 194\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"portfolio-setting\",\n          children: \"Show Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), checked ? /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultChecked: true,\n          tabIndex: props.activePortfolio ? -1 : 0,\n          onChange: e => handleChangeSettings(e),\n          name: \"settings\",\n          id: \"portfolio-setting\",\n          type: \"radio\",\n          value: \"portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          tabIndex: props.activePortfolio ? -1 : 0,\n          onChange: e => handleChangeSettings(e),\n          name: \"settings\",\n          id: \"portfolio-setting\",\n          type: \"radio\",\n          value: \"portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 212\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultChecked: true,\n          type: \"submit\",\n          value: \"Save Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PortfolioSettings, \"qZ/oFUitkW05tIQn2cLxjuzQ6xY=\");\n\n_c = PortfolioSettings;\nexport default PortfolioSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioSettings\");","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/PortfolioSettings.js"],"names":["useState","useEffect","PortfolioSettings","props","localStorage","clear","checked","setChecked","inputVal","setInputVal","handleSubmit","e","preventDefault","handleSaveSettings","changeDefaultOrPortfolio","handleChangeSettings","target","value","console","log","checkedStorage","JSON","parse","getItem","showSettings","activePortfolio"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\nconst PortfolioSettings = (props) => {\nlocalStorage.clear()\n    const [checked, setChecked] = useState(null)\n    const [inputVal, setInputVal] = useState('')\n\n   const handleSubmit = (e) => {\n    e.preventDefault()\n    // console.log(checked) // CHECK WHICH ONE IS MARKED\n    props.handleSaveSettings()\n    props.changeDefaultOrPortfolio(inputVal)\n   }\n\n   const handleChangeSettings = (e) => {\n       setInputVal(e.target.value)\n       console.log(inputVal, 'input val change')\n   }\n\n//    useEffect(() => {\n//     console.log(checked)\n//     if (checked === 'default') {\n//         setChecked(true)\n//     } else if (checked === 'portfolio') {\n//         setChecked(false)\n//     }\n//    }, [checked])\n\n\n   useEffect(() => {\n    const checkedStorage = JSON.parse(localStorage.getItem('deadCatSettings'));\n\n    if (checkedStorage === 'default') {\n        setChecked(true)\n    } else if (checked === 'portfolio') {\n        setChecked(false)\n    }\n    console.log(checkedStorage, 'in settings', checked)\n\n   }, [])\n\n// NEED TO CHANGE LATER ---------- HAVE THE CHECKED BTN BE WHATEVER IS IN LOCAL STORAGE\n    return(\n        <div className={props.showSettings ? \"active-settings portfolio-settings-cont\" : \"portfolio-settings-cont\" }>\n            <form onSubmit={(e) => handleSubmit(e)}>\n                    <fieldset>\n                        <legend>What To Show On Load</legend>\n                    <label  htmlFor=\"default-setting\">Default</label>\n                    {checked ? <input  tabIndex={props.activePortfolio ? -1 : 0} onChange={(e) => handleChangeSettings(e)} name=\"settings\" id=\"default-setting\" type=\"radio\" value=\"default\"/> : <input defaultChecked  tabIndex={props.activePortfolio ? -1 : 0} onChange={(e) => handleChangeSettings(e)} name=\"settings\" id=\"default-setting\" type=\"radio\" value=\"default\"/>}\n                    <label htmlFor=\"portfolio-setting\">Show Portfolio</label>\n                    {checked ? <input defaultChecked tabIndex={props.activePortfolio ? -1 : 0} onChange={(e) => handleChangeSettings(e)} name=\"settings\" id=\"portfolio-setting\" type=\"radio\" value=\"portfolio\"/> : <input  tabIndex={props.activePortfolio ? -1 : 0} onChange={(e) => handleChangeSettings(e)} name=\"settings\" id=\"portfolio-setting\" type=\"radio\" value=\"portfolio\"/>}\n                    <input defaultChecked type=\"submit\" value=\"Save Settings\"/>\n                    </fieldset>\n            </form>\n        </div>\n    )\n}\n\nexport default PortfolioSettings;"]},"metadata":{},"sourceType":"module"}