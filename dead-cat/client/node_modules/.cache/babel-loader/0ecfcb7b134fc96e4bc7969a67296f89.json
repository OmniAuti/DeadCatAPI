{"ast":null,"code":"export const technicalPortfolioAnalysis = async arr => {\n  /// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------\n  const today = new Date();\n  const year = today.getFullYear();\n  let date = today.getUTCDate();\n  let month = today.getUTCMonth() + 1;\n  let minutes = today.getUTCMinutes();\n  let hour = today.getUTCHours(); // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n  //CALC FOR UTC TO EST\n\n  hour = hour - 4; // CALC FOR EARLY MORNING HOURS UTC\n\n  if (hour < 0) {\n    hour = hour + 24;\n  } // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  const time = `${hour}${minutes}`;\n  const timeNum = parseInt(time); // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n\n  const marketDay = today.getDay(); // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n\n  if (marketDay == 0) {\n    date = date - 2; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 27;\n      }\n    }\n  } else if (marketDay == 6) {\n    date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      }\n    }\n  } // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n\n\n  if (marketDay == 1 && timeNum < 930) {\n    date = date - 3; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 27;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 26;\n      }\n    }\n  } else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {\n    // ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n    date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month == 0) {\n          month = 1;\n        }\n\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        date = 28;\n      }\n    }\n  } // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n\n\n  if (date < 10) {\n    date = `0${date}`;\n  }\n\n  if (month < 10) {\n    month = `0${month}`;\n  } // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n\n\n  let todayDate = `${year}-${month}-${date}`; //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n\n  if (todayDate === \"2021-11-25\") {\n    todayDate = \"2021-11-24\";\n  } else if (todayDate === \"2021-12-24\") {\n    todayDate = \"2021-12-23\";\n  } else if (todayDate === \"2022-01-17\") {\n    todayDate = \"2022-01-14\";\n  } else if (todayDate === \"2022-02-21\") {\n    todayDate = \"2022-02-18\";\n  } else if (todayDate === \"2022-04-15\") {\n    todayDate = \"2022-04-14\";\n  } else if (todayDate === \"2022-05-30\") {\n    todayDate = \"2022-05-27\";\n  } else if (todayDate === \"2022-06-20\") {\n    todayDate = \"2022-06-17\";\n  } else if (todayDate === \"2022-07-04\") {\n    todayDate = \"2022-07-01\";\n  } else if (todayDate === \"2022-09-05\") {\n    todayDate = \"2022-09-02\";\n  } else if (todayDate === \"2022-11-24\") {\n    todayDate = \"2022-11-23\";\n  } else if (todayDate === \"2022-12-26\") {\n    todayDate = \"2022-12-23\";\n  } // THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n\n\n  let newDateString = todayDate;\n\n  if (hour + 4 >= 24) {\n    const dateNumSlice = parseInt(date);\n    const dateSliceStart = todayDate.slice(0, 8);\n    let newDateNum = dateNumSlice - 1;\n\n    if (newDateNum < 10) {\n      newDateNum = `0${newDateNum}`;\n    }\n\n    newDateString = `${dateSliceStart}${newDateNum}`;\n    newDateString = newDateString.toString(); // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date == 1 && hour + 4 >= 24) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 31;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n        newDateString = `${year}-${month}-${date}`;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n        newDateString = `${year}-${month}-${date}`;\n      }\n    }\n  } // ---------------------- END OF DATE -------------------------------------\n  // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n\n\n  async function filterTradableSymbols(arr1, arr2, compileCallback) {\n    // ===============================================================================================\n    let nyseHolderDown = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n\n    let nyseHolderUp = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n\n    let nasdaqHolderDown = [];\n    let nasdaqHolderUp = [];\n\n    try {\n      // ------ FETCH NYSE\n      const res = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNyse = await res.json(); // ------ FETCH NASDAQ\n\n      const resTwo = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNas = await resTwo.json(); // FILTER THESE STOCKS DOWN TO JUST WHAT IS IN PORTFOLIO\n\n      const combinedStock = dataNyse.concat(dataNas);\n      combinedStock.filter(stock => portfolio.includes(stock));\n      console.log(combinedStock, 'this is the right list'); //--------- CATCH\n    } catch (e) {}\n\n    return returnedData;\n  } // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function smaFunction(searchedTicker, dataPull, newestPull) {\n    let culSMA = 0; // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n\n    let fiveTeenSMA = 13;\n    let twentySMA = 18;\n    let thirtySMA = 28;\n    let fiftySMA = 48;\n    let hunSMA = 98;\n    let twoHunSMA = 198;\n    const todayPricePull = newestPull[0].price;\n\n    try {\n      // ------------- 15 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 13) {\n        searchedTicker.smaFiveTeen = \"No Data\";\n      } else {\n        while (fiveTeenSMA >= 0) {\n          culSMA += dataPull.historical[fiveTeenSMA].close;\n          fiveTeenSMA--;\n        }\n\n        let smaFiveResult = (culSMA + todayPricePull) / 15;\n        searchedTicker.smaFiveTeen = smaFiveResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 20 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 19) {\n        searchedTicker.smaTwenty = \"No Data\";\n      } else {\n        while (twentySMA >= 0) {\n          culSMA += dataPull.historical[twentySMA].close;\n          twentySMA--;\n        }\n\n        let smaTwentyResult = (culSMA + todayPricePull) / 20;\n        searchedTicker.smaTwenty = smaTwentyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 30 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 29) {\n        searchedTicker.smaThirty = \"No Data\";\n      } else {\n        while (thirtySMA >= 0) {\n          culSMA += dataPull.historical[thirtySMA].close;\n          thirtySMA--;\n        }\n\n        let smaThirtyResult = (culSMA + todayPricePull) / 30;\n        searchedTicker.smaThirty = smaThirtyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 50 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 49) {\n        searchedTicker.smaFifty = \"No Data\";\n      } else {\n        while (fiftySMA >= 0) {\n          culSMA += dataPull.historical[fiftySMA].close;\n          fiftySMA--;\n        }\n\n        let smaFiftyResult = (culSMA + todayPricePull) / 50;\n        searchedTicker.smaFifty = smaFiftyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 100 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 99) {\n        searchedTicker.smaOneHun = \"No Data\";\n      } else {\n        while (hunSMA >= 0) {\n          culSMA += dataPull.historical[hunSMA].close;\n          hunSMA--;\n        }\n\n        let smaOneHunResult = (culSMA + todayPricePull) / 100;\n        searchedTicker.smaOneHun = smaOneHunResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 200 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 199) {\n        searchedTicker.smaTwoHun = \"No Data\";\n      } else {\n        while (twoHunSMA >= 0) {\n          culSMA += dataPull.historical[twoHunSMA].close;\n          twoHunSMA--;\n        }\n\n        let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n        searchedTicker.smaTwoHun = smaTwoHunResult.toFixed(2);\n        culSMA = 0;\n      }\n    } catch (e) {}\n  } // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function wmaFunction(searchedTicker, dataPull, newestPull) {\n    // WMA FiveTeen --------------------------------------------------------------------\n    let wmaCul = newestPull[0].price * 15;\n    let weight = 14;\n    let wmaInterval = 0;\n    let iWma = 15;\n\n    try {\n      if (dataPull.historical.length < 14) {\n        searchedTicker.wmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFiveTeen = wmaCul / iWma;\n        searchedTicker.wmaFiveTeen = wmaFiveTeen.toFixed(2);\n      } // WMA Twenty --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 20;\n      weight = 19;\n      wmaInterval = 0;\n      iWma = 20;\n\n      if (dataPull.historical.length < 19) {\n        searchedTicker.wmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwenty = wmaCul / iWma;\n        searchedTicker.wmaTwenty = wmaTwenty.toFixed(2);\n      } // WMA THIRTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 30;\n      weight = 29;\n      wmaInterval = 0;\n      iWma = 30;\n\n      if (dataPull.historical.length < 30) {\n        searchedTicker.wmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaThirty = wmaCul / iWma;\n        searchedTicker.wmaThirty = wmaThirty.toFixed(2);\n      } // WMA FIFTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 50;\n      weight = 49;\n      wmaInterval = 0;\n      iWma = 50;\n\n      if (dataPull.historical.length < 50) {\n        searchedTicker.wmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFifty = wmaCul / iWma;\n        searchedTicker.wmaFifty = wmaFifty.toFixed(2);\n      } // WMA ONE HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 100;\n      weight = 99;\n      wmaInterval = 0;\n      iWma = 100;\n\n      if (dataPull.historical.length < 100) {\n        searchedTicker.wmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaOneHun = wmaCul / iWma;\n        searchedTicker.wmaOneHun = wmaOneHun.toFixed(2);\n      } // WMA TWO HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 200;\n      weight = 199;\n      wmaInterval = 0;\n      iWma = 200;\n\n      if (dataPull.historical.length < 200) {\n        searchedTicker.wmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwoHun = wmaCul / iWma;\n        searchedTicker.wmaTwoHun = wmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwmaFunction(searchedTicker, dataPull, newestPull) {\n    // VWMA FIVETEEN --------------------------------------------------------------------\n    const newPrice = newestPull[0].price;\n    const newVol = newestPull[0].volume;\n    let volCul = newestPull[0].volume;\n    let totalCul = newPrice * newVol;\n    let price = 0;\n    let volume = 0;\n\n    try {\n      if (dataPull.historical.length < 14) {\n        searchedTicker.vwmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaFiveTeen = totalCul / volCul;\n        searchedTicker.vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n      } // VWMA TWENTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 19) {\n        searchedTicker.vwmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaTwenty = totalCul / volCul;\n        searchedTicker.vwmaTwenty = vwmaTwenty.toFixed(2);\n      } // VWMA THIRTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 29) {\n        searchedTicker.vwmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaThirty = totalCul / volCul;\n        searchedTicker.vwmaThirty = vwmaThirty.toFixed(2);\n      } // VWMA FIFTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 49) {\n        searchedTicker.vwmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaFifty = totalCul / volCul;\n        searchedTicker.vwmaFifty = vwmaFifty.toFixed(2);\n      } // VWMA ONEHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 99) {\n        searchedTicker.vwmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaOneHun = totalCul / volCul;\n        searchedTicker.vwmaOneHun = vwmaOneHun.toFixed(2);\n      } // VWMA TWOHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 199) {\n        searchedTicker.vwmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaTwoHun = totalCul / volCul;\n        searchedTicker.vwmaTwoHun = vwmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function emaFunction(searchedTicker, dataPull, newestPull, macdCallBack) {\n    const newPrice = newestPull[0].price;\n    let emaEight = 14;\n    let emaTwelve = 22;\n    let emaTwenty = 38;\n    let emaTwentySix = 50;\n    let emaFifty = 98;\n    let emaTwoHun = 398;\n    let prevDayEmaSub = 0;\n    let arrEma = [];\n    let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n\n    let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n    try {\n      // EMA EIGHT ----------------------------------------------------------------------\n      if (dataPull.historical.length <= 16) {\n        searchedTicker.emaEight = \"No Data\";\n      } else {\n        while (emaEight >= 15) {\n          prevDayEmaSub += dataPull.historical[emaEight].close;\n          emaEight--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 8; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 9 * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaEight--;\n\n        while (emaEight >= 0) {\n          let derp = 2 / 9 * (dataPull.historical[emaEight].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaEight--;\n        }\n\n        const finalEma = 2 / 9 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        searchedTicker.emaEight = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWELVE ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 24) {\n        searchedTicker.emaTwelve = \"No Data\";\n      } else {\n        while (emaTwelve >= 11) {\n          prevDayEmaSub += dataPull.historical[emaTwelve].close;\n          emaTwelve--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 12; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 13 * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwelve--;\n\n        while (emaTwelve >= 0) {\n          let derp = 2 / 13 * (dataPull.historical[emaTwelve].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwelve < 8 && emaTwelve >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwelve.unshift(derp);\n          }\n\n          emaTwelve--;\n        }\n\n        const finalEma = 2 / 13 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwelve.unshift(finalEma);\n        searchedTicker.emaTwelve = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 40) {\n        searchedTicker.emaTwenty = \"No Data\";\n      } else {\n        while (emaTwenty >= 19) {\n          prevDayEmaSub += dataPull.historical[emaTwenty].close;\n          emaTwenty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 20; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 21 * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwenty--;\n\n        while (emaTwenty >= 0) {\n          let derp = 2 / 21 * (dataPull.historical[emaTwenty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwenty--;\n        }\n\n        const finalEma = 2 / 21 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        searchedTicker.emaTwenty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY SIX ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 51) {\n        searchedTicker.emaTwentySix = \"No Data\";\n      } else {\n        while (emaTwentySix >= 25) {\n          prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n          emaTwentySix--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 26; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 27 * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwentySix--;\n\n        while (emaTwentySix >= 0) {\n          let derp = 2 / 27 * (dataPull.historical[emaTwentySix].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwentySix < 8 && emaTwentySix >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwentySix.unshift(derp);\n          }\n\n          emaTwentySix--;\n        }\n\n        const finalEma = 2 / 27 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwentySix.unshift(finalEma);\n        searchedTicker.emaTwentySix = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA FIFTY -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 100) {\n        searchedTicker.emaFifty = \"No Data\";\n      } else {\n        while (emaFifty >= 49) {\n          prevDayEmaSub += dataPull.historical[emaFifty].close;\n          emaFifty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 50; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 51 * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaFifty--;\n\n        while (emaFifty >= 0) {\n          let derp = 2 / 51 * (dataPull.historical[emaFifty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaFifty--;\n        }\n\n        const finalEma = 2 / 51 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        searchedTicker.emaFifty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 400) {\n        searchedTicker.emaTwoHun = \"No Data\";\n      } else {\n        while (emaTwoHun >= 199) {\n          prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n          emaTwoHun--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 200; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 201 * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwoHun--;\n\n        while (emaTwoHun >= 0) {\n          let derp = 2 / 201 * (dataPull.historical[emaTwoHun].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwoHun--;\n        }\n\n        const finalEma = 2 / 201 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        searchedTicker.emaTwoHun = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n    } catch (e) {} // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n    macdCallBack(searchedTicker, macdTwelve, macdTwentySix);\n  } // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function macdFunction(searchedTicker, arr1, arr2) {\n    const macd = searchedTicker.emaTwelve - searchedTicker.emaTwentySix;\n    searchedTicker.macd = macd.toFixed(2); // CALCULATE SIGNAL LINE ----------------\n\n    let averageMacd = [];\n    let iMacd = 8;\n\n    try {\n      while (iMacd >= 0) {\n        averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n        iMacd--;\n      }\n\n      let averageSum = averageMacd.reduce((a, b) => a + b);\n      let finalAverageMacd = averageSum / 9;\n      let macdSignalLine = 2 / 9 * (searchedTicker.macd - finalAverageMacd) + finalAverageMacd;\n      searchedTicker.macdSignalLine = macdSignalLine.toFixed(2); // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n\n      let histogram = searchedTicker.macd - searchedTicker.macdSignalLine;\n      searchedTicker.macdHistogram = histogram.toFixed(2); // FOR NO DATA TO PULL FROM\n\n      if (searchedTicker.macdHistogram === \"NaN\") {\n        searchedTicker.macdHistogram = \"No Data\";\n      }\n\n      if (searchedTicker.macd === \"NaN\") {\n        searchedTicker.macd = \"No Data\";\n      }\n\n      if (searchedTicker.macdSignalLine === \"NaN\") {\n        searchedTicker.macdSignalLine = \"No Data\";\n      }\n    } catch (e) {}\n  } // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function rsiFunction(searchedTicker, dataPull, newestPull) {\n    const newPrice = newestPull[0].price;\n    let iRSI = 13;\n    let iRSIAdjusted = 14;\n    let recentUpper = 0;\n    let recentDowner = 0;\n    let upMove = 0;\n    let downMove = 0;\n    let pastDownPeriod = 0;\n    let pastUpPeriod = 0;\n\n    try {\n      // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n      if (dataPull.historical.length <= 14) {\n        searchedTicker.rsi = \"No Data\";\n      } else {\n        // LOOP FOR AVERAGE\n        while (iRSI >= 0) {\n          if (dataPull.historical[iRSI].close > dataPull.historical[iRSIAdjusted].close) {\n            upMove += dataPull.historical[iRSI].close - dataPull.historical[iRSIAdjusted].close;\n          } else {\n            downMove += dataPull.historical[iRSIAdjusted].close - dataPull.historical[iRSI].close;\n          }\n\n          iRSI--;\n          iRSIAdjusted--;\n        }\n\n        let averageUp = upMove / 14;\n        let averageDown = downMove / 14; // MOST RECENT DIFFERENCE\n\n        if (newPrice > dataPull.historical[0].close) {\n          recentUpper = newPrice - dataPull.historical[0].close;\n        } else {\n          recentDowner = dataPull.historical[0].close - newPrice;\n        }\n\n        pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n        pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n        let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n        searchedTicker.rsi = rsi.toFixed(2);\n      }\n    } catch (e) {}\n  } // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function stochOsc1433Function(searchedTicker, dataPull, newestPull) {\n    let newPrice = newestPull[0].price;\n    let iSO = 13;\n    let soLowHolder = [];\n    let soHighHolder = [];\n    let highestHigh = 0;\n    let lowestLow = 0; // FIRST %D\n\n    let topForm = [];\n    let bottomForm = []; // SECOND %D\n\n    let topFormTwo = [];\n    let bottomFormTwo = []; // THIRD %D\n\n    let topFormThree = [];\n    let bottomFormThree = []; // HOLDING SET OF %D FOR 14 3 3\n\n    let signalLineHolder = [];\n\n    try {\n      if (dataPull.historical.length < 18) {\n        searchedTicker.stochasticK = \"No Data\";\n      } else {\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n        while (iSO >= 0) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        soHighHolder.push(newPrice);\n        soLowHolder.push(newPrice);\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        if (lowestLow === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        if (highestHigh === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        topForm.push(newPrice - lowestLow);\n        bottomForm.push(highestHigh - lowestLow); //FOR %K\n\n        searchedTicker.stochasticK = ((newPrice - lowestLow) / (highestHigh - lowestLow) * 100).toFixed(2); // VERY IMPORT - REWORK THE STOCHASTIC NAMES AND THATS WHY ITS UNDEFINDED. REWRITE TO SHOW IN TECHIN\n        // RESET HOLDER AND VARs --------------------------------------------------------\n\n        iSO = 14;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n        while (iSO >= 1) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[0].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[0].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow); // RESET HOLDER AND VARs ------------------------------------------------\n\n        iSO = 15;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 2) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[1].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[1].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[1].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        let sumTop = topForm.reduce((a, b) => a + b, 0);\n        let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n        let slowD = sumTop / sumBottom * 100; // FOR %D\n\n        searchedTicker.stochasticD = (slowD / 3).toFixed(2);\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------------------------------\n\n        iSO = 16;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n        while (iSO >= 3) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormTwo.push(dataPull.historical[2].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[2].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------\n\n        iSO = 17;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 4) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormThree.push(dataPull.historical[3].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormThree.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); // ----------- TALLY UP LAST SMOOTHING -------------------------------\n\n        const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n        let smaD = sumStochD / 3;\n\n        if (smaD < 0) {\n          smaD *= -1;\n          searchedTicker.stochasticSignal = smaD.toFixed(2);\n        } else {\n          searchedTicker.stochasticSignal = smaD.toFixed(2);\n        }\n      }\n    } catch (e) {}\n  } // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function williamsRFunction(searchedTicker, dataPull, newestPull) {\n    const newPrice = newestPull[0].price;\n    let highs = [];\n    let lows = [];\n    let lowestLow = 0;\n    let highestHigh = 0;\n\n    try {\n      if (dataPull.historical.length < 14) {\n        searchedTicker.williams = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          highs.push(dataPull.historical[i].high);\n          lows.push(dataPull.historical[i].low);\n        }\n\n        highs.push(newPrice);\n        lows.push(newPrice);\n        lowestLow = Math.min(...lows);\n        highestHigh = Math.max(...highs);\n        const williams = (highestHigh - dataPull.historical[0].close) / (highestHigh - lowestLow) * -100;\n        searchedTicker.williamsR = williams.toFixed(2);\n      }\n    } catch (e) {}\n  } // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function cciFunction(searchedTicker, dataPull, newestPull) {\n    const newPrice = newestPull[0].price;\n    let tpvCul = 0;\n    let tpv = [];\n    let tpvMa = 0;\n    let tpvCurrent = newPrice;\n    const recentTpv = newPrice;\n\n    try {\n      if (dataPull.historical.length < 19) {\n        searchedTicker.cciTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 19; i++) {\n          const {\n            high,\n            close,\n            low\n          } = dataPull.historical[i];\n          tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n\n          tpvCurrent = (close + high + low) / 3;\n        } // ---- TPV SMA ------------------------\n\n\n        tpvCul = tpv.reduce((a, b) => a + b);\n        tpvMa = tpvCul / 20; // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n\n        const partOne = recentTpv - tpvMa;\n        const meanD = tpv.map(x => x - tpvMa);\n        const meanDMap = meanD.map(x => Math.abs(x));\n        const meanDSum = meanDMap.reduce((a, b) => a + b);\n        const meanDiv = meanDSum / 20; // PART TWO OF FORMULA --------------\n\n        const partTwo = meanDiv * 0.015; // CCI ------------------------------\n\n        const cci = partOne / partTwo;\n        searchedTicker.cciTwenty = cci.toFixed(2);\n      }\n    } catch (e) {}\n  } // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function bollingerBandsFunction(searchedTicker, dataPull, newestPull) {\n    const newPrice = newestPull[0].price;\n    let smaCul = 0;\n    let closeHolder = [];\n\n    try {\n      if (dataPull.historical.length < 19) {\n        searchedTicker.bbUpper = \"No Data\";\n        searchedTicker.bbLower = \"No Data\";\n        searchedTicker.bbMiddle = \"No Data\";\n      } else {\n        let closeP = newPrice;\n\n        for (let i = 0; i <= 19; i++) {\n          closeHolder.push(closeP);\n          smaCul += closeP;\n          closeP = dataPull.historical[i].close;\n        } // STANDARD DEVIATION CALC --------------------------------\n\n\n        const smaTwenty = smaCul / 20;\n        const priceAdj = closeHolder.map(x => x - smaTwenty);\n        const priceAdjAbs = priceAdj.map(x => Math.abs(x));\n        const priceAdjSqrt = priceAdjAbs.map(x => x * x);\n        const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n        const partTwoDev = partOneDev / 20;\n        const standardDev = Math.sqrt(partTwoDev); // BB BAND CALC --------------------------------------------\n\n        const bbUpper = smaTwenty + standardDev * 2;\n        const bbLower = smaTwenty - standardDev * 2;\n        const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n        searchedTicker.bbUpper = bbUpper.toFixed(2);\n        searchedTicker.bbLower = bbLower.toFixed(2);\n        searchedTicker.bbMiddle = smaTwenty.toFixed(2);\n        searchedTicker.bbPercent = bbPercent.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwapFunction(searchedTicker, dataPull) {\n    // ----------- VWAP CALUC -------------------------------------------\n    let dayLengthPeriod = 0;\n    let tpvCul = 0;\n    let volumeCul = 0;\n    let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n    try {\n      // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n      while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n        dayLengthPeriod++;\n      } // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n\n      for (let i = 0; i < dayLengthPeriod; i++) {\n        const {\n          volume,\n          high,\n          close,\n          low,\n          date\n        } = dataPull[i];\n        let tpv = (high + low + close) / 3;\n\n        if (date.slice(0, 10) == newDateString) {\n          tpvCul += tpv * volume;\n          volumeCul += volume;\n        }\n\n        var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n\n        tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n      }\n\n      let vwap = tempVWAP[0].toFixed(2);\n      searchedTicker.vwap = vwap;\n    } catch (e) {}\n  } // VOLUME FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function setVolume(searchedTicker, dataPull, newestPull) {\n    // SET RECENT YESTERDAY VOLUME\n    if (dataPull.historical.length <= 0) {\n      searchedTicker.yesterdayVolume = 0;\n    } else {\n      searchedTicker.yesterdayVolume = dataPull.historical[0].volume;\n\n      if (marketDay == 0 || marketDay == 6) {\n        searchedTicker.yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n        searchedTicker.yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (timeNum > 1830) {\n        searchedTicker.yesterdayVolume = dataPull.historical[1].volume;\n      }\n    } // SET RECENT VOLUME\n\n\n    if (newestPull.length <= 0) {\n      searchedTicker.volume = 0;\n    } else {\n      searchedTicker.volume = newestPull[0].volume;\n    }\n  } // WHERE THE MAGIC HAPPENS\n  // TA FUNCTION ---------------------------------------------------------------------\n\n\n  async function technicalIndicators(symbol, searchedSymbol, callBack) {\n    let j = 0;\n\n    try {\n      while (j < 1) {\n        // LOOP FOR TECHNICAL SEARCHED TICKER\n        try {\n          // ------ FETCH NASDAQ\n          const resTwo = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n          const dataNas = await resTwo.json();\n\n          for (let i = 0; i < dataNas.length; i++) {\n            if (dataNas[i].symbol == symbol) {\n              searchedSymbol = dataNas[i];\n              break;\n            }\n          } // ------ FETCH NYSE\n\n\n          const res = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n          const dataNyse = await res.json();\n\n          for (let i = 0; i < dataNyse.length; i++) {\n            if (dataNyse[i].symbol == symbol) {\n              searchedSymbol = dataNyse[i];\n              break;\n            }\n          }\n        } catch (e) {\n          alert(\"Unable to locate stock ticker. Please check your input and try again!\");\n        } // WILL BREAK OUT IF SYMBOL DOESNT EXIST\n\n\n        if (searchedSymbol.price == undefined) {\n          alert(\"Unable to locate stock ticker. Please check your input and try again!\");\n          return;\n        } //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n\n\n        const resSMA = await fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n        const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n        // ERROR CHECK FOR EMPTY PULL\n\n        if (Object.keys(dataSMA).length === 0 && dataSMA.constructor === Object) {\n          alert(\"There may be a technical issue with this ticker. Please check your input and try again later!\");\n          return;\n        } //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n\n\n        const resOscPulled = await fetch(`https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n        const dataRecentPulled = await resOscPulled.json(); // ERROR CHECK FOR EMPTY PULL\n\n        if (Object.keys(dataRecentPulled).length === 0 && dataRecentPulled.constructor === Object) {\n          alert(\"There may be a technical issue with this ticker. Please check your input and try again later!\");\n          return;\n        } // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n        const resVWAP = await fetch(`https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n        const dataVWAP = await resVWAP.json(); // ERROR CHECK FOR EMPTY PULL\n\n        if (Object.keys(dataVWAP).length === 0 && dataVWAP.constructor === Object) {\n          alert(\"There may be a technical issue with this ticker. Please check your input and try again later!\");\n          return;\n        }\n\n        vwapFunction(searchedSymbol, dataVWAP); // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        smaFunction(searchedSymbol, dataSMA, dataRecentPulled); // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        wmaFunction(searchedSymbol, dataSMA, dataRecentPulled); // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        vwmaFunction(searchedSymbol, dataSMA, dataRecentPulled); // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n\n        emaFunction(searchedSymbol, dataSMA, dataRecentPulled, macdFunction); // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        rsiFunction(searchedSymbol, dataSMA, dataRecentPulled); // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        stochOsc1433Function(searchedSymbol, dataSMA, dataRecentPulled); // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        williamsRFunction(searchedSymbol, dataSMA, dataRecentPulled); // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        cciFunction(searchedSymbol, dataSMA, dataRecentPulled); // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        bollingerBandsFunction(searchedSymbol, dataSMA, dataRecentPulled); // SET VOLUME PROPERTIES\n\n        setVolume(searchedSymbol, dataSMA, dataRecentPulled);\n        j++; // UPDATE WHILE LOOP\n      } // THIS IS THE END OF LOOP\n\n    } catch (e) {// END OF TRY\n    }\n\n    const returnedData = await callBack(searchedSymbol); // BUILD HTML TO DISPLAY\n\n    return returnedData;\n  } // BUILD OUT HTML ------------------------------------------------------\n\n\n  async function buildSearchTech(obj) {\n    let {\n      symbol,\n      price,\n      change,\n      changesPercentage,\n      avgVolume,\n      volume,\n      yesterdayVolume,\n      vwap,\n      smaFiveTeen,\n      smaTwenty,\n      smaThirty,\n      smaFifty,\n      smaOneHun,\n      smaTwoHun,\n      emaEight,\n      emaTwelve,\n      emaTwenty,\n      emaTwentySix,\n      emaFifty,\n      emaTwoHun,\n      wmaFiveTeen,\n      wmaTwenty,\n      wmaThirty,\n      wmaFifty,\n      wmaOneHun,\n      wmaTwoHun,\n      vwmaFiveTeen,\n      vwmaTwenty,\n      vwmaThirty,\n      vwmaFifty,\n      vwmaOneHun,\n      vwmaTwoHun,\n      macd,\n      macdHistogram,\n      macdSignalLine,\n      rsi,\n      stochasticD,\n      stochasticK,\n      stochasticSignal,\n      cciTwenty,\n      bbMiddle,\n      bbLower,\n      bbUpper,\n      bbPercent,\n      williamsR\n    } = obj;\n    let directionArrow = \"up\"; // SETS ARROW FOR UP AND DOWN --------------\n\n    if (changesPercentage < 0) {\n      obj.directionArrow = \"down\";\n    } else {\n      obj.directionArrow = \"up\";\n    } // CHANGE TO POSITIVE BUT ARROW POINTS DOWN OR UP ----------\n\n\n    if (change < 0) {\n      obj.change = change * -1;\n    } // ADJUST TO FIXED --------------------------------------------------------\n\n\n    price = price.toFixed(2);\n    change = change.toFixed(2);\n    changesPercentage = changesPercentage.toFixed(2); // VOLUME INCREASE TODAY ----------\n\n    let volumeIncrease = 0;\n\n    if (volume > avgVolume) {\n      let increase = volume - avgVolume;\n      volumeIncrease = increase / avgVolume * 100;\n    } else {\n      let decrease = avgVolume - volume;\n      volumeIncrease = decrease / avgVolume * -100;\n    }\n\n    volumeIncrease = volumeIncrease.toFixed(2); // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n\n    let yesterdayVolIncrease = 0;\n\n    if (yesterdayVolume > avgVolume) {\n      let increase = yesterdayVolume - avgVolume;\n      yesterdayVolIncrease = increase / avgVolume * 100;\n    } else {\n      let decrease = avgVolume - yesterdayVolume;\n      yesterdayVolIncrease = decrease / avgVolume * -100;\n    }\n\n    yesterdayVolIncrease = yesterdayVolIncrease.toFixed(2); // NaN CHECK ----------------------------------------\n\n    if (isNaN(yesterdayVolIncrease)) {\n      obj.yesterdayVolIncrease = \"No Data\";\n    } // ADJUST TO POSITIVE\n\n\n    if (obj.stochasticD < 0) {\n      obj.stochasticD = obj.stochasticD * -1;\n    }\n\n    if (obj.stochasticK < 0) {\n      obj.stochasticK = obj.stochasticK * -1;\n    }\n\n    if (obj.stochasticD < 0) {\n      obj.stochasticD = obj.stochasticD * -1;\n    }\n\n    if (obj.stochasticK < 0) {\n      obj.stochasticK = obj.stochasticK * -1;\n    } // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n\n\n    if (obj.avgVolume == undefined) {\n      obj.avgVolume = \"No Data\";\n    }\n\n    if (obj.volume == undefined) {\n      obj.volume = \"No Data\";\n    }\n\n    if (obj.volumeIncrease == undefined) {\n      obj.volumeIncrease = \"No Data\";\n    }\n\n    if (obj.yesterdayVolume == undefined) {\n      obj.yesterdayVolume = \"No Data\";\n    }\n\n    if (obj.smaFiveTeen == undefined) {\n      obj.smaFiveTeen = \"No Data\";\n    }\n\n    if (obj.smaTwenty == undefined) {\n      obj.smaTwenty = \"No Data\";\n    }\n\n    if (obj.smaThirty == undefined) {\n      obj.smaThirty = \"No Data\";\n    }\n\n    if (obj.smaFifty == undefined) {\n      obj.smaFifty = \"No Data\";\n    }\n\n    if (obj.smaOneHun == undefined) {\n      obj.smaOneHun = \"No Data\";\n    }\n\n    if (obj.smaTwoHun == undefined) {\n      obj.smaTwoHun = \"No Data\";\n    }\n\n    if (obj.emaEight == undefined) {\n      obj.emaEight = \"No Data\";\n    }\n\n    if (obj.emaTwelve == undefined) {\n      obj.emaTwelve = \"No Data\";\n    }\n\n    if (obj.emaTwenty == undefined) {\n      obj.emaTwenty = \"No Data\";\n    }\n\n    if (obj.emaTwentySix == undefined) {\n      obj.emaTwentySix = \"No Data\";\n    }\n\n    if (obj.emaFifty == undefined) {\n      obj.emaFifty = \"No Data\";\n    }\n\n    if (obj.emaTwoHun == undefined) {\n      obj.emaTwoHun = \"No Data\";\n    }\n\n    if (obj.wmaFiveTeen == undefined) {\n      obj.wmaFiveTeen = \"No Data\";\n    }\n\n    if (obj.wmaTwenty == undefined) {\n      obj.wmaTwenty = \"No Data\";\n    }\n\n    if (obj.wmaThirty == undefined) {\n      obj.wmaThirty = \"No Data\";\n    }\n\n    if (obj.wmaFifty == undefined) {\n      obj.wmaFifty = \"No Data\";\n    }\n\n    if (obj.wmaOneHun == undefined) {\n      obj.wmaOneHun = \"No Data\";\n    }\n\n    if (obj.wmaTwoHun == undefined) {\n      obj.wmaTwoHun = \"No Data\";\n    }\n\n    if (obj.vwmaFiveTeen == undefined) {\n      obj.vwmaFiveTeen = \"No Data\";\n    }\n\n    if (obj.vwmaTwenty == undefined) {\n      obj.vwmaTwenty = \"No Data\";\n    }\n\n    if (obj.vwmaThirty == undefined) {\n      obj.vwmaThirty = \"No Data\";\n    }\n\n    if (obj.vwmaFifty == undefined) {\n      obj.vwmaFifty = \"No Data\";\n    }\n\n    if (obj.vwmaOneHun == undefined) {\n      obj.vwmaOneHun = \"No Data\";\n    }\n\n    if (obj.vwmaTwoHun == undefined) {\n      obj.vwmaTwoHun = \"No Data\";\n    }\n\n    if (obj.vwap == undefined) {\n      obj.vwap = \"No Data\";\n    }\n\n    if (obj.macd == undefined) {\n      obj.macd = \"No Data\";\n    }\n\n    if (obj.rsi == undefined) {\n      obj.rsi = \"No Data\";\n    }\n\n    if (obj.cciTwenty == undefined) {\n      obj.cciTwenty = \"No Data\";\n    }\n\n    if (obj.williamsR == undefined) {\n      obj.williamsR = \"No Data\";\n    }\n\n    if (obj.stochasticK == undefined) {\n      obj.stochasticK = \"No Data\";\n    }\n\n    if (obj.stochasticD == undefined) {\n      obj.stochasticD = \"No Data\";\n    }\n\n    if (obj.stochasticSignal == undefined) {\n      obj.stochasticSignal = \"No Data\";\n    }\n\n    if (obj.bbMiddle == undefined) {\n      obj.bbMiddle = \"No Data\";\n    }\n\n    if (obj.bbLower == undefined) {\n      obj.bbLower = \"No Data\";\n    }\n\n    if (obj.bbUpper == undefined) {\n      obj.bbUpper = \"No Data\";\n    }\n\n    if (obj.bbPercent == undefined) {\n      obj.bbPercent = \"No Data\";\n    } // ADJUST TO POSITIVE\n\n\n    if (obj.stochasticD < 0) {\n      obj.stochasticD = obj.stochasticD * -1;\n    }\n\n    if (obj.stochasticK < 0) {\n      obj.stochasticK = obj.stochasticK * -1;\n    }\n\n    if (obj.stochasticD < 0) {\n      obj.stochasticD = obj.stochasticD * -1;\n    }\n\n    if (obj.stochasticK < 0) {\n      obj.stochasticK = obj.stochasticK * -1;\n    }\n\n    obj.volumeIncreaseToday = volumeIncrease;\n    obj.volumeIncreaseYesterday = yesterdayVolIncrease;\n    obj.volumeYesterday = yesterdayVolume; // SET BOX SHADOW OF BULL AND BEAR\n    // if (changesPercentage < 0) {\n    //   document.querySelector(\".search-symbol-box\").style.boxShadow =\n    //     \"inset 0px 2px 3px var(--bear-market-color), inset 0px 2px 2px var(--bear-market-color)\";\n    // } else if (changesPercentage > 0) {\n    //   document.querySelector(\".search-symbol-box\").style.boxShadow =\n    //     \"inset 0px 2px 3px var(--bull-market-color), inset 0px 2px 2px var(--bull-market-color)\";\n    // }\n\n    const returnedData = obj;\n    return returnedData;\n  }\n\n  const returnedData = await technicalIndicators(symbol, symbolObj, buildSearchTech);\n  return returnedData;\n};","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/JS/APIPortfolioFunction.js"],"names":["technicalPortfolioAnalysis","arr","today","Date","year","getFullYear","date","getUTCDate","month","getUTCMonth","minutes","getUTCMinutes","hour","getUTCHours","time","timeNum","parseInt","marketDay","getDay","todayDate","newDateString","dateNumSlice","dateSliceStart","slice","newDateNum","toString","filterTradableSymbols","arr1","arr2","compileCallback","nyseHolderDown","nyseHolderUp","nasdaqHolderDown","nasdaqHolderUp","res","fetch","dataNyse","json","resTwo","dataNas","combinedStock","concat","filter","stock","portfolio","includes","console","log","e","returnedData","smaFunction","searchedTicker","dataPull","newestPull","culSMA","fiveTeenSMA","twentySMA","thirtySMA","fiftySMA","hunSMA","twoHunSMA","todayPricePull","price","historical","length","smaFiveTeen","close","smaFiveResult","toFixed","smaTwenty","smaTwentyResult","smaThirty","smaThirtyResult","smaFifty","smaFiftyResult","smaOneHun","smaOneHunResult","smaTwoHun","smaTwoHunResult","wmaFunction","wmaCul","weight","wmaInterval","iWma","wmaFiveTeen","i","wmaTwenty","wmaThirty","wmaFifty","wmaOneHun","wmaTwoHun","vwmaFunction","newPrice","newVol","volume","volCul","totalCul","vwmaFiveTeen","vwmaTwenty","vwmaThirty","vwmaFifty","vwmaOneHun","vwmaTwoHun","emaFunction","macdCallBack","emaEight","emaTwelve","emaTwenty","emaTwentySix","emaFifty","emaTwoHun","prevDayEmaSub","arrEma","macdTwelve","macdTwentySix","subEMA","finalSubEma","unshift","derp","pop","finalEma","macdFunction","macd","averageMacd","iMacd","averageSum","reduce","a","b","finalAverageMacd","macdSignalLine","histogram","macdHistogram","rsiFunction","iRSI","iRSIAdjusted","recentUpper","recentDowner","upMove","downMove","pastDownPeriod","pastUpPeriod","rsi","averageUp","averageDown","stochOsc1433Function","iSO","soLowHolder","soHighHolder","highestHigh","lowestLow","topForm","bottomForm","topFormTwo","bottomFormTwo","topFormThree","bottomFormThree","signalLineHolder","stochasticK","push","low","high","Math","max","min","sumTop","sumBottom","slowD","stochasticD","sumStochD","smaD","stochasticSignal","williamsRFunction","highs","lows","williams","williamsR","cciFunction","tpvCul","tpv","tpvMa","tpvCurrent","recentTpv","cciTwenty","partOne","meanD","map","x","meanDMap","abs","meanDSum","meanDiv","partTwo","cci","bollingerBandsFunction","smaCul","closeHolder","bbUpper","bbLower","bbMiddle","closeP","priceAdj","priceAdjAbs","priceAdjSqrt","partOneDev","partTwoDev","standardDev","sqrt","bbPercent","vwapFunction","dayLengthPeriod","volumeCul","tempVWAP","vwapFinal","vwap","setVolume","yesterdayVolume","technicalIndicators","symbol","searchedSymbol","callBack","j","alert","undefined","resSMA","dataSMA","Object","keys","constructor","resOscPulled","dataRecentPulled","resVWAP","dataVWAP","buildSearchTech","obj","change","changesPercentage","avgVolume","directionArrow","volumeIncrease","increase","decrease","yesterdayVolIncrease","isNaN","volumeIncreaseToday","volumeIncreaseYesterday","volumeYesterday","symbolObj"],"mappings":"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","sourcesContent":["export const technicalPortfolioAnalysis = async (arr) => {\n  /// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------\n  const today = new Date();\n  const year = today.getFullYear();\n  let date = today.getUTCDate();\n  let month = today.getUTCMonth() + 1;\n  let minutes = today.getUTCMinutes();\n  let hour = today.getUTCHours();\n  // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n\n  //CALC FOR UTC TO EST\n  hour = hour - 4;\n  // CALC FOR EARLY MORNING HOURS UTC\n  if (hour < 0) {\n    hour = hour + 24;\n  }\n\n  // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  const time = `${hour}${minutes}`;\n  const timeNum = parseInt(time);\n\n  // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n  const marketDay = today.getDay();\n  // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n  if (marketDay == 0) {\n    date = date - 2;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 27;\n      }\n    }\n  } else if (marketDay == 6) {\n    date = date - 1;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      }\n    }\n  }\n  // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n  if (marketDay == 1 && timeNum < 930) {\n    date = date - 3;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 27;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 26;\n      }\n    }\n  } else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {\n    // ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n    date = date - 1;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month == 0) {\n          month = 1;\n        }\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        date = 28;\n      }\n    }\n  }\n\n  // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n  if (date < 10) {\n    date = `0${date}`;\n  }\n  if (month < 10) {\n    month = `0${month}`;\n  }\n\n  // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n  let todayDate = `${year}-${month}-${date}`;\n  //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n  if (todayDate === \"2021-11-25\") {\n    todayDate = \"2021-11-24\";\n  } else if (todayDate === \"2021-12-24\") {\n    todayDate = \"2021-12-23\";\n  } else if (todayDate === \"2022-01-17\") {\n    todayDate = \"2022-01-14\";\n  } else if (todayDate === \"2022-02-21\") {\n    todayDate = \"2022-02-18\";\n  } else if (todayDate === \"2022-04-15\") {\n    todayDate = \"2022-04-14\";\n  } else if (todayDate === \"2022-05-30\") {\n    todayDate = \"2022-05-27\";\n  } else if (todayDate === \"2022-06-20\") {\n    todayDate = \"2022-06-17\";\n  } else if (todayDate === \"2022-07-04\") {\n    todayDate = \"2022-07-01\";\n  } else if (todayDate === \"2022-09-05\") {\n    todayDate = \"2022-09-02\";\n  } else if (todayDate === \"2022-11-24\") {\n    todayDate = \"2022-11-23\";\n  } else if (todayDate === \"2022-12-26\") {\n    todayDate = \"2022-12-23\";\n  }\n  // THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n  let newDateString = todayDate;\n\n  if (hour + 4 >= 24) {\n    const dateNumSlice = parseInt(date);\n    const dateSliceStart = todayDate.slice(0, 8);\n    let newDateNum = dateNumSlice - 1;\n    if (newDateNum < 10) {\n      newDateNum = `0${newDateNum}`;\n    }\n    newDateString = `${dateSliceStart}${newDateNum}`;\n    newDateString = newDateString.toString();\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date == 1 && hour + 4 >= 24) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 31;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n        newDateString = `${year}-${month}-${date}`;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n        newDateString = `${year}-${month}-${date}`;\n      }\n    }\n  }\n\n  // ---------------------- END OF DATE -------------------------------------\n\n  // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n  async function filterTradableSymbols(arr1, arr2, compileCallback) {\n\n\n\n\n    // ===============================================================================================\n    let nyseHolderDown = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n    let nyseHolderUp = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n    let nasdaqHolderDown = [];\n    let nasdaqHolderUp = [];\n\n    try {\n      // ------ FETCH NYSE\n      const res = await fetch(\n        \"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n      );\n      const dataNyse = await res.json();\n\n      // ------ FETCH NASDAQ\n      const resTwo = await fetch(\n        \"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n      );\n      const dataNas = await resTwo.json();\n\n      // FILTER THESE STOCKS DOWN TO JUST WHAT IS IN PORTFOLIO\n      const combinedStock = dataNyse.concat(dataNas);\n\n      combinedStock.filter(stock => portfolio.includes(stock))\n      console.log(combinedStock, 'this is the right list')\n\n      //--------- CATCH\n    } catch (e) {}\n\n\n\n\n    return returnedData;\n  }\n\n  // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function smaFunction(searchedTicker, dataPull, newestPull) {\n    let culSMA = 0;\n\n    // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n    let fiveTeenSMA = 13;\n    let twentySMA = 18;\n    let thirtySMA = 28;\n    let fiftySMA = 48;\n    let hunSMA = 98;\n    let twoHunSMA = 198;\n\n    const todayPricePull = newestPull[0].price;\n\n    try {\n      // ------------- 15 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 13) {\n        searchedTicker.smaFiveTeen = \"No Data\";\n      } else {\n        while (fiveTeenSMA >= 0) {\n          culSMA += dataPull.historical[fiveTeenSMA].close;\n          fiveTeenSMA--;\n        }\n        let smaFiveResult = (culSMA + todayPricePull) / 15;\n        searchedTicker.smaFiveTeen = smaFiveResult.toFixed(2);\n        culSMA = 0;\n      }\n      // ------------- 20 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 19) {\n        searchedTicker.smaTwenty = \"No Data\";\n      } else {\n        while (twentySMA >= 0) {\n          culSMA += dataPull.historical[twentySMA].close;\n          twentySMA--;\n        }\n        let smaTwentyResult = (culSMA + todayPricePull) / 20;\n        searchedTicker.smaTwenty = smaTwentyResult.toFixed(2);\n        culSMA = 0;\n      }\n      // ------------- 30 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 29) {\n        searchedTicker.smaThirty = \"No Data\";\n      } else {\n        while (thirtySMA >= 0) {\n          culSMA += dataPull.historical[thirtySMA].close;\n          thirtySMA--;\n        }\n        let smaThirtyResult = (culSMA + todayPricePull) / 30;\n        searchedTicker.smaThirty = smaThirtyResult.toFixed(2);\n        culSMA = 0;\n      }\n      // ------------- 50 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 49) {\n        searchedTicker.smaFifty = \"No Data\";\n      } else {\n        while (fiftySMA >= 0) {\n          culSMA += dataPull.historical[fiftySMA].close;\n          fiftySMA--;\n        }\n        let smaFiftyResult = (culSMA + todayPricePull) / 50;\n        searchedTicker.smaFifty = smaFiftyResult.toFixed(2);\n        culSMA = 0;\n      }\n      // ------------- 100 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 99) {\n        searchedTicker.smaOneHun = \"No Data\";\n      } else {\n        while (hunSMA >= 0) {\n          culSMA += dataPull.historical[hunSMA].close;\n          hunSMA--;\n        }\n        let smaOneHunResult = (culSMA + todayPricePull) / 100;\n        searchedTicker.smaOneHun = smaOneHunResult.toFixed(2);\n        culSMA = 0;\n      }\n      // ------------- 200 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 199) {\n        searchedTicker.smaTwoHun = \"No Data\";\n      } else {\n        while (twoHunSMA >= 0) {\n          culSMA += dataPull.historical[twoHunSMA].close;\n          twoHunSMA--;\n        }\n        let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n        searchedTicker.smaTwoHun = smaTwoHunResult.toFixed(2);\n        culSMA = 0;\n      }\n    } catch (e) {}\n  }\n  // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function wmaFunction(searchedTicker, dataPull, newestPull) {\n    // WMA FiveTeen --------------------------------------------------------------------\n    let wmaCul = newestPull[0].price * 15;\n    let weight = 14;\n    let wmaInterval = 0;\n    let iWma = 15;\n\n    try {\n      if (dataPull.historical.length < 14) {\n        searchedTicker.wmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaFiveTeen = wmaCul / iWma;\n        searchedTicker.wmaFiveTeen = wmaFiveTeen.toFixed(2);\n      }\n\n      // WMA Twenty --------------------------------------------------------------------\n      wmaCul = newestPull[0].price * 20;\n      weight = 19;\n      wmaInterval = 0;\n      iWma = 20;\n\n      if (dataPull.historical.length < 19) {\n        searchedTicker.wmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaTwenty = wmaCul / iWma;\n        searchedTicker.wmaTwenty = wmaTwenty.toFixed(2);\n      }\n\n      // WMA THIRTY --------------------------------------------------------------------\n\n      wmaCul = newestPull[0].price * 30;\n      weight = 29;\n      wmaInterval = 0;\n      iWma = 30;\n\n      if (dataPull.historical.length < 30) {\n        searchedTicker.wmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaThirty = wmaCul / iWma;\n        searchedTicker.wmaThirty = wmaThirty.toFixed(2);\n      }\n\n      // WMA FIFTY --------------------------------------------------------------------\n\n      wmaCul = newestPull[0].price * 50;\n      weight = 49;\n      wmaInterval = 0;\n      iWma = 50;\n\n      if (dataPull.historical.length < 50) {\n        searchedTicker.wmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaFifty = wmaCul / iWma;\n        searchedTicker.wmaFifty = wmaFifty.toFixed(2);\n      }\n\n      // WMA ONE HUNDRED --------------------------------------------------------------------\n\n      wmaCul = newestPull[0].price * 100;\n      weight = 99;\n      wmaInterval = 0;\n      iWma = 100;\n\n      if (dataPull.historical.length < 100) {\n        searchedTicker.wmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaOneHun = wmaCul / iWma;\n        searchedTicker.wmaOneHun = wmaOneHun.toFixed(2);\n      }\n\n      // WMA TWO HUNDRED --------------------------------------------------------------------\n\n      wmaCul = newestPull[0].price * 200;\n      weight = 199;\n      wmaInterval = 0;\n      iWma = 200;\n\n      if (dataPull.historical.length < 200) {\n        searchedTicker.wmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaTwoHun = wmaCul / iWma;\n        searchedTicker.wmaTwoHun = wmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function vwmaFunction(searchedTicker, dataPull, newestPull) {\n    // VWMA FIVETEEN --------------------------------------------------------------------\n\n    const newPrice = newestPull[0].price;\n    const newVol = newestPull[0].volume;\n\n    let volCul = newestPull[0].volume;\n    let totalCul = newPrice * newVol;\n    let price = 0;\n    let volume = 0;\n\n    try {\n      if (dataPull.historical.length < 14) {\n        searchedTicker.vwmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n        const vwmaFiveTeen = totalCul / volCul;\n        searchedTicker.vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n      }\n\n      // VWMA TWENTY --------------------------------------------------------------------\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 19) {\n        searchedTicker.vwmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n        const vwmaTwenty = totalCul / volCul;\n        searchedTicker.vwmaTwenty = vwmaTwenty.toFixed(2);\n      }\n\n      // VWMA THIRTY --------------------------------------------------------------------\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 29) {\n        searchedTicker.vwmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n        const vwmaThirty = totalCul / volCul;\n        searchedTicker.vwmaThirty = vwmaThirty.toFixed(2);\n      }\n\n      // VWMA FIFTY --------------------------------------------------------------------\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 49) {\n        searchedTicker.vwmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n        const vwmaFifty = totalCul / volCul;\n        searchedTicker.vwmaFifty = vwmaFifty.toFixed(2);\n      }\n\n      // VWMA ONEHUN --------------------------------------------------------------------\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 99) {\n        searchedTicker.vwmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n        const vwmaOneHun = totalCul / volCul;\n        searchedTicker.vwmaOneHun = vwmaOneHun.toFixed(2);\n      }\n\n      // VWMA TWOHUN --------------------------------------------------------------------\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 199) {\n        searchedTicker.vwmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n        const vwmaTwoHun = totalCul / volCul;\n        searchedTicker.vwmaTwoHun = vwmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function emaFunction(searchedTicker, dataPull, newestPull, macdCallBack) {\n    const newPrice = newestPull[0].price;\n\n    let emaEight = 14;\n    let emaTwelve = 22;\n    let emaTwenty = 38;\n    let emaTwentySix = 50;\n    let emaFifty = 98;\n    let emaTwoHun = 398;\n    let prevDayEmaSub = 0;\n    let arrEma = [];\n\n    let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n    let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n    try {\n      // EMA EIGHT ----------------------------------------------------------------------\n      if (dataPull.historical.length <= 16) {\n        searchedTicker.emaEight = \"No Data\";\n      } else {\n        while (emaEight >= 15) {\n          prevDayEmaSub += dataPull.historical[emaEight].close;\n          emaEight--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n        const subEMA = prevDayEmaSub / 8;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 9) * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaEight--;\n        while (emaEight >= 0) {\n          let derp =\n            (2 / 9) * (dataPull.historical[emaEight].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaEight--;\n        }\n\n        const finalEma = (2 / 9) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n\n        searchedTicker.emaEight = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n\n      // EMA TWELVE ----------------------------------------------------------------------\n      if (dataPull.historical.length <= 24) {\n        searchedTicker.emaTwelve = \"No Data\";\n      } else {\n        while (emaTwelve >= 11) {\n          prevDayEmaSub += dataPull.historical[emaTwelve].close;\n          emaTwelve--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n        const subEMA = prevDayEmaSub / 12;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 13) * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwelve--;\n\n        while (emaTwelve >= 0) {\n          let derp =\n            (2 / 13) * (dataPull.historical[emaTwelve].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          if (emaTwelve < 8 && emaTwelve >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwelve.unshift(derp);\n          }\n          emaTwelve--;\n        }\n\n        const finalEma = (2 / 13) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwelve.unshift(finalEma);\n\n        searchedTicker.emaTwelve = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n\n      // EMA TWENTY ----------------------------------------------------------------------\n      if (dataPull.historical.length <= 40) {\n        searchedTicker.emaTwenty = \"No Data\";\n      } else {\n        while (emaTwenty >= 19) {\n          prevDayEmaSub += dataPull.historical[emaTwenty].close;\n          emaTwenty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n        const subEMA = prevDayEmaSub / 20;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 21) * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwenty--;\n        while (emaTwenty >= 0) {\n          let derp =\n            (2 / 21) * (dataPull.historical[emaTwenty].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwenty--;\n        }\n\n        const finalEma = (2 / 21) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n\n        searchedTicker.emaTwenty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n\n      // EMA TWENTY SIX ----------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 51) {\n        searchedTicker.emaTwentySix = \"No Data\";\n      } else {\n        while (emaTwentySix >= 25) {\n          prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n          emaTwentySix--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n        const subEMA = prevDayEmaSub / 26;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 27) * (dataPull.historical[emaTwentySix].close - subEMA) +\n          subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwentySix--;\n        while (emaTwentySix >= 0) {\n          let derp =\n            (2 / 27) * (dataPull.historical[emaTwentySix].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          if (emaTwentySix < 8 && emaTwentySix >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwentySix.unshift(derp);\n          }\n          emaTwentySix--;\n        }\n\n        const finalEma = (2 / 27) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwentySix.unshift(finalEma);\n\n        searchedTicker.emaTwentySix = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n\n      // EMA FIFTY -----------------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 100) {\n        searchedTicker.emaFifty = \"No Data\";\n      } else {\n        while (emaFifty >= 49) {\n          prevDayEmaSub += dataPull.historical[emaFifty].close;\n          emaFifty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n        const subEMA = prevDayEmaSub / 50;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 51) * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaFifty--;\n        while (emaFifty >= 0) {\n          let derp =\n            (2 / 51) * (dataPull.historical[emaFifty].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaFifty--;\n        }\n\n        const finalEma = (2 / 51) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n\n        searchedTicker.emaFifty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n\n      // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 400) {\n        searchedTicker.emaTwoHun = \"No Data\";\n      } else {\n        while (emaTwoHun >= 199) {\n          prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n          emaTwoHun--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n        const subEMA = prevDayEmaSub / 200;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 201) * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwoHun--;\n        while (emaTwoHun >= 0) {\n          let derp =\n            (2 / 201) * (dataPull.historical[emaTwoHun].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwoHun--;\n        }\n\n        const finalEma = (2 / 201) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n\n        searchedTicker.emaTwoHun = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n    } catch (e) {}\n\n    // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n    macdCallBack(searchedTicker, macdTwelve, macdTwentySix);\n  }\n  // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n  function macdFunction(searchedTicker, arr1, arr2) {\n    const macd = searchedTicker.emaTwelve - searchedTicker.emaTwentySix;\n    searchedTicker.macd = macd.toFixed(2);\n    // CALCULATE SIGNAL LINE ----------------\n    let averageMacd = [];\n    let iMacd = 8;\n\n    try {\n      while (iMacd >= 0) {\n        averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n        iMacd--;\n      }\n      let averageSum = averageMacd.reduce((a, b) => a + b);\n      let finalAverageMacd = averageSum / 9;\n      let macdSignalLine =\n        (2 / 9) * (searchedTicker.macd - finalAverageMacd) + finalAverageMacd;\n      searchedTicker.macdSignalLine = macdSignalLine.toFixed(2);\n      // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n      let histogram = searchedTicker.macd - searchedTicker.macdSignalLine;\n      searchedTicker.macdHistogram = histogram.toFixed(2);\n      // FOR NO DATA TO PULL FROM\n      if (searchedTicker.macdHistogram === \"NaN\") {\n        searchedTicker.macdHistogram = \"No Data\";\n      }\n      if (searchedTicker.macd === \"NaN\") {\n        searchedTicker.macd = \"No Data\";\n      }\n      if (searchedTicker.macdSignalLine === \"NaN\") {\n        searchedTicker.macdSignalLine = \"No Data\";\n      }\n    } catch (e) {}\n  }\n  // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function rsiFunction(searchedTicker, dataPull, newestPull) {\n    const newPrice = newestPull[0].price;\n\n    let iRSI = 13;\n    let iRSIAdjusted = 14;\n    let recentUpper = 0;\n    let recentDowner = 0;\n    let upMove = 0;\n    let downMove = 0;\n    let pastDownPeriod = 0;\n    let pastUpPeriod = 0;\n\n    try {\n      // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n      if (dataPull.historical.length <= 14) {\n        searchedTicker.rsi = \"No Data\";\n      } else {\n        // LOOP FOR AVERAGE\n        while (iRSI >= 0) {\n          if (\n            dataPull.historical[iRSI].close >\n            dataPull.historical[iRSIAdjusted].close\n          ) {\n            upMove +=\n              dataPull.historical[iRSI].close -\n              dataPull.historical[iRSIAdjusted].close;\n          } else {\n            downMove +=\n              dataPull.historical[iRSIAdjusted].close -\n              dataPull.historical[iRSI].close;\n          }\n          iRSI--;\n          iRSIAdjusted--;\n        }\n\n        let averageUp = upMove / 14;\n        let averageDown = downMove / 14;\n\n        // MOST RECENT DIFFERENCE\n        if (newPrice > dataPull.historical[0].close) {\n          recentUpper = newPrice - dataPull.historical[0].close;\n        } else {\n          recentDowner = dataPull.historical[0].close - newPrice;\n        }\n\n        pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n        pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n\n        let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n        searchedTicker.rsi = rsi.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  function stochOsc1433Function(searchedTicker, dataPull, newestPull) {\n    let newPrice = newestPull[0].price;\n\n    let iSO = 13;\n\n    let soLowHolder = [];\n    let soHighHolder = [];\n    let highestHigh = 0;\n    let lowestLow = 0;\n    // FIRST %D\n    let topForm = [];\n    let bottomForm = [];\n    // SECOND %D\n    let topFormTwo = [];\n    let bottomFormTwo = [];\n    // THIRD %D\n    let topFormThree = [];\n    let bottomFormThree = [];\n    // HOLDING SET OF %D FOR 14 3 3\n    let signalLineHolder = [];\n\n    try {\n      if (dataPull.historical.length < 18) {\n        searchedTicker.stochasticK = \"No Data\";\n      } else {\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n\n        while (iSO >= 0) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        soHighHolder.push(newPrice);\n        soLowHolder.push(newPrice);\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        if (lowestLow === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        if (highestHigh === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        topForm.push(newPrice - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n\n        //FOR %K\n        searchedTicker.stochasticK = (\n          ((newPrice - lowestLow) / (highestHigh - lowestLow)) *\n          100\n        ).toFixed(2);\n        // VERY IMPORT - REWORK THE STOCHASTIC NAMES AND THATS WHY ITS UNDEFINDED. REWRITE TO SHOW IN TECHIN\n\n        // RESET HOLDER AND VARs --------------------------------------------------------\n\n        iSO = 14;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n\n        // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n        while (iSO >= 1) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        topForm.push(dataPull.historical[0].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n\n        topFormTwo.push(dataPull.historical[0].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n\n        // RESET HOLDER AND VARs ------------------------------------------------\n\n        iSO = 15;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n\n        // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 2) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        topForm.push(dataPull.historical[1].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n\n        topFormTwo.push(dataPull.historical[1].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n\n        topFormThree.push(dataPull.historical[1].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow);\n\n        // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        let sumTop = topForm.reduce((a, b) => a + b, 0);\n        let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n\n        let slowD = (sumTop / sumBottom) * 100;\n\n        // FOR %D\n        searchedTicker.stochasticD = (slowD / 3).toFixed(2);\n\n        signalLineHolder.push(slowD);\n\n        //RESET VARS ---------------------------------------------------------------------\n\n        iSO = 16;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0;\n\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n        while (iSO >= 3) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        topFormTwo.push(dataPull.historical[2].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n\n        topFormThree.push(dataPull.historical[2].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow);\n\n        // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n\n        slowD = (sumTop / sumBottom) * 100;\n\n        signalLineHolder.push(slowD);\n\n        //RESET VARS ---------------------------------------------\n\n        iSO = 17;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0;\n\n        // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 4) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        topFormThree.push(dataPull.historical[3].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow);\n\n        // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormThree.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n\n        slowD = (sumTop / sumBottom) * 100;\n\n        signalLineHolder.push(slowD);\n\n        // ----------- TALLY UP LAST SMOOTHING -------------------------------\n        const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n        let smaD = sumStochD / 3;\n\n        if (smaD < 0) {\n          smaD *= -1;\n          searchedTicker.stochasticSignal = smaD.toFixed(2);\n        } else {\n          searchedTicker.stochasticSignal = smaD.toFixed(2);\n        }\n      }\n    } catch (e) {}\n  }\n  // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  function williamsRFunction(searchedTicker, dataPull, newestPull) {\n    const newPrice = newestPull[0].price;\n\n    let highs = [];\n    let lows = [];\n    let lowestLow = 0;\n    let highestHigh = 0;\n    try {\n      if (dataPull.historical.length < 14) {\n        searchedTicker.williams = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          highs.push(dataPull.historical[i].high);\n          lows.push(dataPull.historical[i].low);\n        }\n\n        highs.push(newPrice);\n        lows.push(newPrice);\n\n        lowestLow = Math.min(...lows);\n        highestHigh = Math.max(...highs);\n\n        const williams =\n          ((highestHigh - dataPull.historical[0].close) /\n            (highestHigh - lowestLow)) *\n          -100;\n\n        searchedTicker.williamsR = williams.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  function cciFunction(searchedTicker, dataPull, newestPull) {\n    const newPrice = newestPull[0].price;\n\n    let tpvCul = 0;\n    let tpv = [];\n    let tpvMa = 0;\n    let tpvCurrent = newPrice;\n    const recentTpv = newPrice;\n    try {\n      if (dataPull.historical.length < 19) {\n        searchedTicker.cciTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 19; i++) {\n          const { high, close, low } = dataPull.historical[i];\n          tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n          tpvCurrent = (close + high + low) / 3;\n        }\n        // ---- TPV SMA ------------------------\n        tpvCul = tpv.reduce((a, b) => a + b);\n        tpvMa = tpvCul / 20;\n        // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n        const partOne = recentTpv - tpvMa;\n\n        const meanD = tpv.map((x) => x - tpvMa);\n        const meanDMap = meanD.map((x) => Math.abs(x));\n        const meanDSum = meanDMap.reduce((a, b) => a + b);\n        const meanDiv = meanDSum / 20;\n        // PART TWO OF FORMULA --------------\n        const partTwo = meanDiv * 0.015;\n        // CCI ------------------------------\n        const cci = partOne / partTwo;\n\n        searchedTicker.cciTwenty = cci.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  function bollingerBandsFunction(searchedTicker, dataPull, newestPull) {\n    const newPrice = newestPull[0].price;\n\n    let smaCul = 0;\n    let closeHolder = [];\n    try {\n      if (dataPull.historical.length < 19) {\n        searchedTicker.bbUpper = \"No Data\";\n        searchedTicker.bbLower = \"No Data\";\n        searchedTicker.bbMiddle = \"No Data\";\n      } else {\n        let closeP = newPrice;\n        for (let i = 0; i <= 19; i++) {\n          closeHolder.push(closeP);\n          smaCul += closeP;\n          closeP = dataPull.historical[i].close;\n        }\n        // STANDARD DEVIATION CALC --------------------------------\n        const smaTwenty = smaCul / 20;\n\n        const priceAdj = closeHolder.map((x) => x - smaTwenty);\n\n        const priceAdjAbs = priceAdj.map((x) => Math.abs(x));\n\n        const priceAdjSqrt = priceAdjAbs.map((x) => x * x);\n\n        const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n\n        const partTwoDev = partOneDev / 20;\n        const standardDev = Math.sqrt(partTwoDev);\n        // BB BAND CALC --------------------------------------------\n        const bbUpper = smaTwenty + standardDev * 2;\n        const bbLower = smaTwenty - standardDev * 2;\n\n        const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n\n        searchedTicker.bbUpper = bbUpper.toFixed(2);\n        searchedTicker.bbLower = bbLower.toFixed(2);\n        searchedTicker.bbMiddle = smaTwenty.toFixed(2);\n        searchedTicker.bbPercent = bbPercent.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function vwapFunction(searchedTicker, dataPull) {\n    // ----------- VWAP CALUC -------------------------------------------\n    let dayLengthPeriod = 0;\n    let tpvCul = 0;\n    let volumeCul = 0;\n    let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n    try {\n      // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n      while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n        dayLengthPeriod++;\n      }\n\n      // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n      for (let i = 0; i < dayLengthPeriod; i++) {\n        const { volume, high, close, low, date } = dataPull[i];\n        let tpv = (high + low + close) / 3;\n        if (date.slice(0, 10) == newDateString) {\n          tpvCul += tpv * volume;\n          volumeCul += volume;\n        }\n        var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n        tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n      }\n      let vwap = tempVWAP[0].toFixed(2);\n      searchedTicker.vwap = vwap;\n    } catch (e) {}\n  }\n  // VOLUME FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function setVolume(searchedTicker, dataPull, newestPull) {\n    // SET RECENT YESTERDAY VOLUME\n    if (dataPull.historical.length <= 0) {\n      searchedTicker.yesterdayVolume = 0;\n    } else {\n      searchedTicker.yesterdayVolume = dataPull.historical[0].volume;\n      if (marketDay == 0 || marketDay == 6) {\n        searchedTicker.yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n        searchedTicker.yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (timeNum > 1830) {\n        searchedTicker.yesterdayVolume = dataPull.historical[1].volume;\n      }\n    }\n    // SET RECENT VOLUME\n    if (newestPull.length <= 0) {\n      searchedTicker.volume = 0;\n    } else {\n      searchedTicker.volume = newestPull[0].volume;\n    }\n  }\n\n  // WHERE THE MAGIC HAPPENS\n  // TA FUNCTION ---------------------------------------------------------------------\n  async function technicalIndicators(symbol, searchedSymbol, callBack) {\n    let j = 0;\n    try {\n      while (j < 1) {\n        // LOOP FOR TECHNICAL SEARCHED TICKER\n        try {\n          // ------ FETCH NASDAQ\n          const resTwo = await fetch(\n            \"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n          );\n          const dataNas = await resTwo.json();\n\n          for (let i = 0; i < dataNas.length; i++) {\n            if (dataNas[i].symbol == symbol) {\n              searchedSymbol = dataNas[i];\n              break;\n            }\n          }\n\n          // ------ FETCH NYSE\n          const res = await fetch(\n            \"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n          );\n          const dataNyse = await res.json();\n\n          for (let i = 0; i < dataNyse.length; i++) {\n            if (dataNyse[i].symbol == symbol) {\n              searchedSymbol = dataNyse[i];\n              break;\n            }\n          }\n        } catch (e) {\n          alert(\n            \"Unable to locate stock ticker. Please check your input and try again!\"\n          );\n        }\n        // WILL BREAK OUT IF SYMBOL DOESNT EXIST\n        if (searchedSymbol.price == undefined) {\n          alert(\n            \"Unable to locate stock ticker. Please check your input and try again!\"\n          );\n          return;\n        }\n        //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n        const resSMA = await fetch(\n          `https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n        );\n        const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n        // ERROR CHECK FOR EMPTY PULL\n        if (\n          Object.keys(dataSMA).length === 0 &&\n          dataSMA.constructor === Object\n        ) {\n          alert(\n            \"There may be a technical issue with this ticker. Please check your input and try again later!\"\n          );\n          return;\n        }\n\n        //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n        const resOscPulled = await fetch(\n          `https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n        );\n        const dataRecentPulled = await resOscPulled.json();\n        // ERROR CHECK FOR EMPTY PULL\n        if (\n          Object.keys(dataRecentPulled).length === 0 &&\n          dataRecentPulled.constructor === Object\n        ) {\n          alert(\n            \"There may be a technical issue with this ticker. Please check your input and try again later!\"\n          );\n          return;\n        }\n\n        // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n        const resVWAP = await fetch(\n          `https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n        );\n        const dataVWAP = await resVWAP.json();\n\n        // ERROR CHECK FOR EMPTY PULL\n        if (\n          Object.keys(dataVWAP).length === 0 &&\n          dataVWAP.constructor === Object\n        ) {\n          alert(\n            \"There may be a technical issue with this ticker. Please check your input and try again later!\"\n          );\n          return;\n        }\n\n        vwapFunction(searchedSymbol, dataVWAP);\n\n        // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        smaFunction(searchedSymbol, dataSMA, dataRecentPulled);\n\n        // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        wmaFunction(searchedSymbol, dataSMA, dataRecentPulled);\n\n        // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        vwmaFunction(searchedSymbol, dataSMA, dataRecentPulled);\n\n        // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n        emaFunction(searchedSymbol, dataSMA, dataRecentPulled, macdFunction);\n\n        // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        rsiFunction(searchedSymbol, dataSMA, dataRecentPulled);\n\n        // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        stochOsc1433Function(searchedSymbol, dataSMA, dataRecentPulled);\n\n        // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        williamsRFunction(searchedSymbol, dataSMA, dataRecentPulled);\n\n        // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        cciFunction(searchedSymbol, dataSMA, dataRecentPulled);\n\n        // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        bollingerBandsFunction(searchedSymbol, dataSMA, dataRecentPulled);\n\n        // SET VOLUME PROPERTIES\n        setVolume(searchedSymbol, dataSMA, dataRecentPulled);\n\n        j++; // UPDATE WHILE LOOP\n      } // THIS IS THE END OF LOOP\n    } catch (e) {\n      // END OF TRY\n    }\n    const returnedData = await callBack(searchedSymbol); // BUILD HTML TO DISPLAY\n    return returnedData;\n  }\n  // BUILD OUT HTML ------------------------------------------------------\n  async function buildSearchTech(obj) {\n    let {\n      symbol,\n      price,\n      change,\n      changesPercentage,\n      avgVolume,\n      volume,\n      yesterdayVolume,\n      vwap,\n      smaFiveTeen,\n      smaTwenty,\n      smaThirty,\n      smaFifty,\n      smaOneHun,\n      smaTwoHun,\n      emaEight,\n      emaTwelve,\n      emaTwenty,\n      emaTwentySix,\n      emaFifty,\n      emaTwoHun,\n      wmaFiveTeen,\n      wmaTwenty,\n      wmaThirty,\n      wmaFifty,\n      wmaOneHun,\n      wmaTwoHun,\n      vwmaFiveTeen,\n      vwmaTwenty,\n      vwmaThirty,\n      vwmaFifty,\n      vwmaOneHun,\n      vwmaTwoHun,\n      macd,\n      macdHistogram,\n      macdSignalLine,\n      rsi,\n      stochasticD,\n      stochasticK,\n      stochasticSignal,\n      cciTwenty,\n      bbMiddle,\n      bbLower,\n      bbUpper,\n      bbPercent,\n      williamsR,\n    } = obj;\n\n    let directionArrow = \"up\";\n\n    // SETS ARROW FOR UP AND DOWN --------------\n    if (changesPercentage < 0) {\n      obj.directionArrow = \"down\";\n    } else {\n      obj.directionArrow = \"up\";\n    }\n    // CHANGE TO POSITIVE BUT ARROW POINTS DOWN OR UP ----------\n    if (change < 0) {\n      obj.change = change * -1;\n    }\n\n    // ADJUST TO FIXED --------------------------------------------------------\n\n    price = price.toFixed(2);\n\n    change = change.toFixed(2);\n\n    changesPercentage = changesPercentage.toFixed(2);\n\n    // VOLUME INCREASE TODAY ----------\n    let volumeIncrease = 0;\n\n    if (volume > avgVolume) {\n      let increase = volume - avgVolume;\n      volumeIncrease = (increase / avgVolume) * 100;\n    } else {\n      let decrease = avgVolume - volume;\n      volumeIncrease = (decrease / avgVolume) * -100;\n    }\n\n    volumeIncrease = volumeIncrease.toFixed(2);\n\n    // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n    let yesterdayVolIncrease = 0;\n\n    if (yesterdayVolume > avgVolume) {\n      let increase = yesterdayVolume - avgVolume;\n      yesterdayVolIncrease = (increase / avgVolume) * 100;\n    } else {\n      let decrease = avgVolume - yesterdayVolume;\n      yesterdayVolIncrease = (decrease / avgVolume) * -100;\n    }\n\n    yesterdayVolIncrease = yesterdayVolIncrease.toFixed(2);\n\n    // NaN CHECK ----------------------------------------\n    if (isNaN(yesterdayVolIncrease)) {\n      obj.yesterdayVolIncrease = \"No Data\";\n    }\n\n    // ADJUST TO POSITIVE\n    if (obj.stochasticD < 0) {\n      obj.stochasticD = obj.stochasticD * -1;\n    }\n    if (obj.stochasticK < 0) {\n      obj.stochasticK = obj.stochasticK * -1;\n    }\n    if (obj.stochasticD < 0) {\n      obj.stochasticD = obj.stochasticD * -1;\n    }\n    if (obj.stochasticK < 0) {\n      obj.stochasticK = obj.stochasticK * -1;\n    }\n\n    // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n\n    if (obj.avgVolume == undefined) {\n      obj.avgVolume = \"No Data\";\n    }\n\n    if (obj.volume == undefined) {\n      obj.volume = \"No Data\";\n    }\n\n    if (obj.volumeIncrease == undefined) {\n      obj.volumeIncrease = \"No Data\";\n    }\n\n    if (obj.yesterdayVolume == undefined) {\n      obj.yesterdayVolume = \"No Data\";\n    }\n\n    if (obj.smaFiveTeen == undefined) {\n      obj.smaFiveTeen = \"No Data\";\n    }\n\n    if (obj.smaTwenty == undefined) {\n      obj.smaTwenty = \"No Data\";\n    }\n\n    if (obj.smaThirty == undefined) {\n      obj.smaThirty = \"No Data\";\n    }\n\n    if (obj.smaFifty == undefined) {\n      obj.smaFifty = \"No Data\";\n    }\n\n    if (obj.smaOneHun == undefined) {\n      obj.smaOneHun = \"No Data\";\n    }\n\n    if (obj.smaTwoHun == undefined) {\n      obj.smaTwoHun = \"No Data\";\n    }\n\n    if (obj.emaEight == undefined) {\n      obj.emaEight = \"No Data\";\n    }\n\n    if (obj.emaTwelve == undefined) {\n      obj.emaTwelve = \"No Data\";\n    }\n\n    if (obj.emaTwenty == undefined) {\n      obj.emaTwenty = \"No Data\";\n    }\n\n    if (obj.emaTwentySix == undefined) {\n      obj.emaTwentySix = \"No Data\";\n    }\n\n    if (obj.emaFifty == undefined) {\n      obj.emaFifty = \"No Data\";\n    }\n\n    if (obj.emaTwoHun == undefined) {\n      obj.emaTwoHun = \"No Data\";\n    }\n\n    if (obj.wmaFiveTeen == undefined) {\n      obj.wmaFiveTeen = \"No Data\";\n    }\n\n    if (obj.wmaTwenty == undefined) {\n      obj.wmaTwenty = \"No Data\";\n    }\n\n    if (obj.wmaThirty == undefined) {\n      obj.wmaThirty = \"No Data\";\n    }\n\n    if (obj.wmaFifty == undefined) {\n      obj.wmaFifty = \"No Data\";\n    }\n\n    if (obj.wmaOneHun == undefined) {\n      obj.wmaOneHun = \"No Data\";\n    }\n\n    if (obj.wmaTwoHun == undefined) {\n      obj.wmaTwoHun = \"No Data\";\n    }\n\n    if (obj.vwmaFiveTeen == undefined) {\n      obj.vwmaFiveTeen = \"No Data\";\n    }\n    if (obj.vwmaTwenty == undefined) {\n      obj.vwmaTwenty = \"No Data\";\n    }\n    if (obj.vwmaThirty == undefined) {\n      obj.vwmaThirty = \"No Data\";\n    }\n    if (obj.vwmaFifty == undefined) {\n      obj.vwmaFifty = \"No Data\";\n    }\n    if (obj.vwmaOneHun == undefined) {\n      obj.vwmaOneHun = \"No Data\";\n    }\n    if (obj.vwmaTwoHun == undefined) {\n      obj.vwmaTwoHun = \"No Data\";\n    }\n\n    if (obj.vwap == undefined) {\n      obj.vwap = \"No Data\";\n    }\n\n    if (obj.macd == undefined) {\n      obj.macd = \"No Data\";\n    }\n\n    if (obj.rsi == undefined) {\n      obj.rsi = \"No Data\";\n    }\n    if (obj.cciTwenty == undefined) {\n      obj.cciTwenty = \"No Data\";\n    }\n\n    if (obj.williamsR == undefined) {\n      obj.williamsR = \"No Data\";\n    }\n\n    if (obj.stochasticK == undefined) {\n      obj.stochasticK = \"No Data\";\n    }\n    if (obj.stochasticD == undefined) {\n      obj.stochasticD = \"No Data\";\n    }\n    if (obj.stochasticSignal == undefined) {\n      obj.stochasticSignal = \"No Data\";\n    }\n\n    if (obj.bbMiddle == undefined) {\n      obj.bbMiddle = \"No Data\";\n    }\n    if (obj.bbLower == undefined) {\n      obj.bbLower = \"No Data\";\n    }\n    if (obj.bbUpper == undefined) {\n      obj.bbUpper = \"No Data\";\n    }\n    if (obj.bbPercent == undefined) {\n      obj.bbPercent = \"No Data\";\n    }\n\n    // ADJUST TO POSITIVE\n    if (obj.stochasticD < 0) {\n      obj.stochasticD = obj.stochasticD * -1;\n    }\n    if (obj.stochasticK < 0) {\n      obj.stochasticK = obj.stochasticK * -1;\n    }\n    if (obj.stochasticD < 0) {\n      obj.stochasticD = obj.stochasticD * -1;\n    }\n    if (obj.stochasticK < 0) {\n      obj.stochasticK = obj.stochasticK * -1;\n    }\n\n    obj.volumeIncreaseToday = volumeIncrease;\n    obj.volumeIncreaseYesterday = yesterdayVolIncrease;\n    obj.volumeYesterday = yesterdayVolume;\n\n    // SET BOX SHADOW OF BULL AND BEAR\n    // if (changesPercentage < 0) {\n    //   document.querySelector(\".search-symbol-box\").style.boxShadow =\n    //     \"inset 0px 2px 3px var(--bear-market-color), inset 0px 2px 2px var(--bear-market-color)\";\n    // } else if (changesPercentage > 0) {\n    //   document.querySelector(\".search-symbol-box\").style.boxShadow =\n    //     \"inset 0px 2px 3px var(--bull-market-color), inset 0px 2px 2px var(--bull-market-color)\";\n    // }\n\n    const returnedData = obj;\n    return returnedData;\n  }\n\n  const returnedData = await technicalIndicators(\n    symbol,\n    symbolObj,\n    buildSearchTech\n  );\n  return returnedData;\n};\n"]},"metadata":{},"sourceType":"module"}