{"ast":null,"code":"import { nasdaqMasterKey, nyseMasterKey } from \"./masterKeys\";\nimport { handleDate } from \"./fetch-compile-functions/handleDate\"; // import { nyseFetch } from \"./functions/nyseFetch\";\n// import { nasdaqFetch } from \"./functions/nasdaqFetch\";\n\nexport const technicalAnalysis = async () => {\n  // DATE OBJ --------------------------\n  const dateObj = {\n    today: null,\n    year: null,\n    date: null,\n    month: null,\n    minutes: null,\n    hour: null,\n    time: null,\n    timeNum: null,\n    marketDay: null,\n    todayDate: null\n  }; // SET DATE --------------------------\n\n  await handleDate(dateObj); // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n\n  async function filterTradableSymbols(arr1, arr2, compileCallback) {\n    let nyseHolderDown = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n\n    let nyseHolderUp = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n\n    let nasdaqHolderDown = [];\n    let nasdaqHolderUp = [];\n\n    try {\n      // ------ FETCH NYSE\n      const res = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNyse = await res.json(); // ----- FILTER TRADABLE SYMBOLS ON NYSE THAT HAVE DROPPED\n\n      for (let i = 0; i < dataNyse.length; i++) {\n        if (dataNyse[i].changesPercentage < -5 && arr1.indexOf(dataNyse[i].symbol) > 0 && dataNyse[i].price > .1) {\n          nyseHolderDown.push(dataNyse[i]);\n        }\n      }\n\n      for (let i = 0; i < dataNyse.length; i++) {\n        if (dataNyse[i].changesPercentage > 5 && arr1.indexOf(dataNyse[i].symbol) > 0 && dataNyse[i].price > .1) {\n          nyseHolderUp.push(dataNyse[i]);\n        }\n      } // ------ FETCH NASDAQ\n\n\n      const resTwo = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNas = await resTwo.json(); // ----- FILTER TRADABLE SYMBOLS ON NASDAQ THAT HAVE DROPPED\n\n      for (let i = 0; i < dataNas.length; i++) {\n        if (dataNas[i].changesPercentage < -5 && arr2.indexOf(dataNas[i].symbol) > 0 && dataNas[i].price > 1) {\n          nasdaqHolderDown.push(dataNas[i]);\n        }\n      }\n\n      for (let i = 0; i < dataNas.length; i++) {\n        if (dataNas[i].changesPercentage > 5 && arr2.indexOf(dataNas[i].symbol) > 0 && dataNas[i].price > 1) {\n          nasdaqHolderUp.push(dataNas[i]);\n        }\n      } //--------- CATCH\n\n    } catch (e) {}\n\n    const returnedData = await compileCallback(nasdaqHolderDown, nyseHolderDown, nyseHolderUp, nasdaqHolderUp, technicalIndicators); // CALLBACK FOR STOCK FILTER\n\n    return returnedData;\n  }\n\n  async function compileStocks(arr1, arr2, arr3, arr4, callback) {\n    //---------------------- COMBINE AND SORT LARGEST DROP -------------------------\n    let finalChartFatDown = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n\n    let finalChartFatUp = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n\n    let finalChart = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n    // ------- THIS IS A FILTER FOR WEIRD STOCK SYMBOLS THAT SLIP IN ----------\n\n    let combinedStockDrop = [];\n    combinedStockDrop = combinedStockDrop.concat(arr1, arr2);\n    let combinedStockUp = [];\n    combinedStockUp = combinedStockUp.concat(arr3, arr4);\n    const keys = /^[A-Z]{1,4}$/g;\n    finalChartFatDown = combinedStockDrop.filter(stock => {\n      return stock.symbol.match(keys);\n    });\n    finalChartFatUp = combinedStockUp.filter(stock => {\n      return stock.symbol.match(keys);\n    });\n\n    for (let i = 0; i < finalChartFatDown.length; i++) {\n      finalChartFatDown.sort((a, b) => {\n        return a.changesPercentage - b.changesPercentage;\n      });\n    }\n\n    for (let i = 0; i < finalChartFatUp.length; i++) {\n      finalChartFatUp.sort((a, b) => {\n        return b.changesPercentage - a.changesPercentage;\n      });\n    } // MAKE SURE ARR HAS RIGHT LENGTH TO LOAD ------------\n\n\n    const holderObjDown = {\n      avgVolume: -1,\n      bbLower: \"-1\",\n      bbMiddle: \"-1\",\n      bbPercent: \"-1\",\n      bbUpper: \"-1\",\n      cciTwenty: \"-1\",\n      change: -1,\n      changesPercentage: -1,\n      dayHigh: -1,\n      dayLow: -1,\n      earningsAnnouncement: \"-1\",\n      emaEight: \"-1\",\n      emaFifty: \"-1\",\n      emaTwelve: \"-1\",\n      emaTwenty: \"-1\",\n      emaTwentySix: \"-1\",\n      emaTwoHun: \"-1\",\n      eps: -1,\n      exchange: \"No Data\",\n      macd: \"-1\",\n      macdHistogram: \"-1\",\n      macdSignalLine: \"-1\",\n      marketCap: -1,\n      name: \"Placeholder for lack of Symbols\",\n      open: -1,\n      pe: -1,\n      previousClose: -1,\n      price: 1,\n      priceAvg50: -1,\n      priceAvg200: -1,\n      rsi: \"-1\",\n      sharesOutstanding: -1,\n      smaFifty: \"-1\",\n      smaFiveTeen: \"-1\",\n      smaOneHun: \"-1\",\n      smaThirty: \"-1\",\n      smaTwenty: \"-1\",\n      smaTwoHun: \"-1\",\n      stochasticD: \"-1\",\n      stochasticK: \"-1\",\n      stochasticSignal: \"-1\",\n      symbol: \"No Data\",\n      timestamp: -1,\n      volume: -1,\n      vwap: \"-1\",\n      vwmaFifty: \"-1\",\n      vwmaFiveTeen: \"-1\",\n      vwmaOneHun: \"-1\",\n      vwmaThirty: \"-1\",\n      vwmaTwenty: \"-1\",\n      vwmaTwoHun: \"-1\",\n      williamsR: \"-1\",\n      wmaFifty: \"-1\",\n      wmaFiveTeen: \"-1\",\n      wmaOneHun: \"-1\",\n      wmaThirty: \"-1\",\n      wmaTwenty: \"-1\",\n      wmaTwoHun: \"-1\",\n      yearHigh: -1,\n      yearLow: -1,\n      yesterdayVolume: -1\n    };\n    const holderObjUp = {\n      avgVolume: 1,\n      bbLower: \"1\",\n      bbMiddle: \"1\",\n      bbPercent: \"1\",\n      bbUpper: \"1\",\n      cciTwenty: \"1\",\n      change: 1,\n      changesPercentage: 1,\n      dayHigh: 1,\n      dayLow: 1,\n      earningsAnnouncement: \"1\",\n      emaEight: \"1\",\n      emaFifty: \"1\",\n      emaTwelve: \"1\",\n      emaTwenty: \"1\",\n      emaTwentySix: \"1\",\n      emaTwoHun: \"1\",\n      eps: 1,\n      exchange: \"No Data\",\n      macd: \"1\",\n      macdHistogram: \"1\",\n      macdSignalLine: \"1\",\n      marketCap: 1,\n      name: \"Placeholder for lack of Symbols\",\n      open: 1,\n      pe: 1,\n      previousClose: 1,\n      price: 1,\n      priceAvg50: 1,\n      priceAvg200: 1,\n      rsi: \"1\",\n      sharesOutstanding: 1,\n      smaFifty: \"1\",\n      smaFiveTeen: \"1\",\n      smaOneHun: \"1\",\n      smaThirty: \"1\",\n      smaTwenty: \"1\",\n      smaTwoHun: \"1\",\n      stochasticD: \"1\",\n      stochasticK: \"1\",\n      stochasticSignal: \"1\",\n      symbol: \"No Data\",\n      timestamp: 1,\n      volume: 1,\n      vwap: \"1\",\n      vwmaFifty: \"1\",\n      vwmaFiveTeen: \"1\",\n      vwmaOneHun: \"1\",\n      vwmaThirty: \"1\",\n      vwmaTwenty: \"1\",\n      vwmaTwoHun: \"1\",\n      williamsR: \"1\",\n      wmaFifty: \"1\",\n      wmaFiveTeen: \"1\",\n      wmaOneHun: \"1\",\n      wmaThirty: \"1\",\n      wmaTwenty: \"1\",\n      wmaTwoHun: \"1\",\n      yearHigh: 1,\n      yearLow: 1,\n      yesterdayVolume: 1\n    };\n\n    if (finalChartFatUp.length < 5) {\n      while (finalChartFatUp.length < 5) {\n        finalChartFatUp.push(holderObjUp);\n      }\n    }\n\n    if (finalChartFatDown.length < 5) {\n      while (finalChartFatDown.length < 5) {\n        finalChartFatDown.push(holderObjDown);\n      }\n    } // SLIM CHAT DOWN SO IT'S NOT BLOATED\n\n\n    let slimChartDown = 4;\n\n    while (slimChartDown >= 0) {\n      finalChart.unshift(finalChartFatDown[slimChartDown]);\n      slimChartDown--;\n    }\n\n    let slimChartUp = 4;\n\n    while (slimChartUp >= 0) {\n      finalChart.unshift(finalChartFatUp[slimChartUp]);\n      slimChartUp--;\n    }\n\n    const returnedData = await callback(finalChart, filterUpDownStocks);\n    return returnedData;\n  } // ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n  // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function smaFunction(chartArr, dataPull, newestPull, num) {\n    let culSMA = 0; // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n\n    let fiveTeenSMA = 13;\n    let twentySMA = 18;\n    let thirtySMA = 28;\n    let fiftySMA = 48;\n    let hunSMA = 98;\n    let twoHunSMA = 198;\n\n    try {\n      const todayPricePull = newestPull[0].price; // ------------- 15 DAY SMA -------------------------------\n\n      if (dataPull.historical.length <= 13) {\n        chartArr[num].smaFiveTeen = \"No Data\";\n      } else {\n        while (fiveTeenSMA >= 0) {\n          culSMA += dataPull.historical[fiveTeenSMA].close;\n          fiveTeenSMA--;\n        }\n\n        let smaFiveResult = (culSMA + todayPricePull) / 15;\n        chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 20 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 19) {\n        chartArr[num].smaTwenty = \"No Data\";\n      } else {\n        while (twentySMA >= 0) {\n          culSMA += dataPull.historical[twentySMA].close;\n          twentySMA--;\n        }\n\n        let smaTwentyResult = (culSMA + todayPricePull) / 20;\n        chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 30 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 29) {\n        chartArr[num].smaThirty = \"No Data\";\n      } else {\n        while (thirtySMA >= 0) {\n          culSMA += dataPull.historical[thirtySMA].close;\n          thirtySMA--;\n        }\n\n        let smaThirtyResult = (culSMA + todayPricePull) / 30;\n        chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 50 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 49) {\n        chartArr[num].smaFifty = \"No Data\";\n      } else {\n        while (fiftySMA >= 0) {\n          culSMA += dataPull.historical[fiftySMA].close;\n          fiftySMA--;\n        }\n\n        let smaFiftyResult = (culSMA + todayPricePull) / 50;\n        chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 100 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 99) {\n        chartArr[num].smaOneHun = \"No Data\";\n      } else {\n        while (hunSMA >= 0) {\n          culSMA += dataPull.historical[hunSMA].close;\n          hunSMA--;\n        }\n\n        let smaOneHunResult = (culSMA + todayPricePull) / 100;\n        chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 200 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 199) {\n        chartArr[num].smaTwoHun = \"No Data\";\n      } else {\n        while (twoHunSMA >= 0) {\n          culSMA += dataPull.historical[twoHunSMA].close;\n          twoHunSMA--;\n        }\n\n        let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n        chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n        culSMA = 0;\n      }\n    } catch (e) {}\n  } // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function wmaFunction(chartArr, dataPull, newestPull, num) {\n    // WMA FiveTeen --------------------------------------------------------------------\n    let weight = 14;\n    let wmaInterval = 0;\n    let iWma = 15;\n\n    try {\n      let wmaCul = newestPull[0].price * 15;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].wmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFiveTeen = wmaCul / iWma;\n        chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n      } // WMA Twenty --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 20;\n      weight = 19;\n      wmaInterval = 0;\n      iWma = 20;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].wmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwenty = wmaCul / iWma;\n        chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n      } // WMA THIRTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 30;\n      weight = 29;\n      wmaInterval = 0;\n      iWma = 30;\n\n      if (dataPull.historical.length < 30) {\n        chartArr[num].wmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaThirty = wmaCul / iWma;\n        chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n      } // WMA FIFTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 50;\n      weight = 49;\n      wmaInterval = 0;\n      iWma = 50;\n\n      if (dataPull.historical.length < 50) {\n        chartArr[num].wmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFifty = wmaCul / iWma;\n        chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n      } // WMA ONE HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 100;\n      weight = 99;\n      wmaInterval = 0;\n      iWma = 100;\n\n      if (dataPull.historical.length < 100) {\n        chartArr[num].wmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaOneHun = wmaCul / iWma;\n        chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n      } // WMA TWO HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 200;\n      weight = 199;\n      wmaInterval = 0;\n      iWma = 200;\n\n      if (dataPull.historical.length < 200) {\n        chartArr[num].wmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwoHun = wmaCul / iWma;\n        chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwmaFunction(chartArr, dataPull, newestPull, num) {\n    // VWMA FIVETEEN --------------------------------------------------------------------\n    try {\n      let price = 0;\n      let volume = 0;\n      const newPrice = newestPull[0].price;\n      const newVol = newestPull[0].volume;\n      let volCul = newestPull[0].volume;\n      let totalCul = newPrice * newVol;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].vwmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFiveTeen = totalCul / volCul;\n        chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n      } // VWMA TWENTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].vwmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwenty = totalCul / volCul;\n        chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n      } // VWMA THIRTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 29) {\n        chartArr[num].vwmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaThirty = totalCul / volCul;\n        chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n      } // VWMA FIFTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 49) {\n        chartArr[num].vwmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFifty = totalCul / volCul;\n        chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n      } // VWMA ONEHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 99) {\n        chartArr[num].vwmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaOneHun = totalCul / volCul;\n        chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n      } // VWMA TWOHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 199) {\n        chartArr[num].vwmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwoHun = totalCul / volCul;\n        chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n    let emaEight = 14;\n    let emaTwelve = 22;\n    let emaTwenty = 38;\n    let emaTwentySix = 50;\n    let emaFifty = 98;\n    let emaTwoHun = 398;\n    let prevDayEmaSub = 0;\n    let arrEma = [];\n    let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n\n    let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n    try {\n      const newPrice = newestPull[0].price; // EMA EIGHT ----------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 16) {\n        chartArr[num].emaEight = \"No Data\";\n      } else {\n        while (emaEight >= 15) {\n          prevDayEmaSub += dataPull.historical[emaEight].close;\n          emaEight--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 8; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 9 * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaEight--;\n\n        while (emaEight >= 0) {\n          let derp = 2 / 9 * (dataPull.historical[emaEight].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaEight--;\n        }\n\n        const finalEma = 2 / 9 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaEight = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWELVE ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 24) {\n        chartArr[num].emaTwelve = \"No Data\";\n      } else {\n        while (emaTwelve >= 11) {\n          prevDayEmaSub += dataPull.historical[emaTwelve].close;\n          emaTwelve--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 12; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 13 * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwelve--;\n\n        while (emaTwelve >= 0) {\n          let derp = 2 / 13 * (dataPull.historical[emaTwelve].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwelve < 8 && emaTwelve >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwelve.unshift(derp);\n          }\n\n          emaTwelve--;\n        }\n\n        const finalEma = 2 / 13 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwelve.unshift(finalEma);\n        chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 40) {\n        chartArr[num].emaTwenty = \"No Data\";\n      } else {\n        while (emaTwenty >= 19) {\n          prevDayEmaSub += dataPull.historical[emaTwenty].close;\n          emaTwenty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 20; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 21 * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwenty--;\n\n        while (emaTwenty >= 0) {\n          let derp = 2 / 21 * (dataPull.historical[emaTwenty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwenty--;\n        }\n\n        const finalEma = 2 / 21 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY SIX ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 51) {\n        chartArr[num].emaTwentySix = \"No Data\";\n      } else {\n        while (emaTwentySix >= 25) {\n          prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n          emaTwentySix--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 26; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 27 * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwentySix--;\n\n        while (emaTwentySix >= 0) {\n          let derp = 2 / 27 * (dataPull.historical[emaTwentySix].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwentySix < 8 && emaTwentySix >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwentySix.unshift(derp);\n          }\n\n          emaTwentySix--;\n        }\n\n        const finalEma = 2 / 27 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwentySix.unshift(finalEma);\n        chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA FIFTY -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 100) {\n        chartArr[num].emaFifty = \"No Data\";\n      } else {\n        while (emaFifty >= 49) {\n          prevDayEmaSub += dataPull.historical[emaFifty].close;\n          emaFifty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 50; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 51 * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaFifty--;\n\n        while (emaFifty >= 0) {\n          let derp = 2 / 51 * (dataPull.historical[emaFifty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaFifty--;\n        }\n\n        const finalEma = 2 / 51 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaFifty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 400) {\n        chartArr[num].emaTwoHun = \"No Data\";\n      } else {\n        while (emaTwoHun >= 199) {\n          prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n          emaTwoHun--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 200; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 201 * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwoHun--;\n\n        while (emaTwoHun >= 0) {\n          let derp = 2 / 201 * (dataPull.historical[emaTwoHun].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwoHun--;\n        }\n\n        const finalEma = 2 / 201 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n    } catch (e) {} // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n    macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n  } // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function macdFunction(chartArr, num, arr1, arr2) {\n    const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n    chartArr[num].macd = macd.toFixed(2); // CALCULATE SIGNAL LINE ----------------\n\n    let averageMacd = [];\n    let iMacd = 8;\n\n    try {\n      while (iMacd >= 0) {\n        averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n        iMacd--;\n      }\n\n      let averageSum = averageMacd.reduce((a, b) => a + b);\n      let finalAverageMacd = averageSum / 9;\n      let macdSignalLine = 2 / 9 * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n      chartArr[num].macdSignalLine = macdSignalLine.toFixed(2); // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n\n      let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n      chartArr[num].macdHistogram = histogram.toFixed(2); // FOR NO DATA TO PULL FROM\n\n      if (chartArr[num].macdHistogram === \"NaN\") {\n        chartArr[num].macdHistogram = \"No Data\";\n      }\n\n      if (chartArr[num].macd === \"NaN\") {\n        chartArr[num].macd = \"No Data\";\n      }\n\n      if (chartArr[num].macdSignalLine === \"NaN\") {\n        chartArr[num].macdSignalLine = \"No Data\";\n      }\n    } catch (e) {}\n  } // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function rsiFunction(chartArr, dataPull, newestPull, num) {\n    let iRSI = 13;\n    let iRSIAdjusted = 14;\n    let recentUpper = 0;\n    let recentDowner = 0;\n    let upMove = 0;\n    let downMove = 0;\n    let pastDownPeriod = 0;\n    let pastUpPeriod = 0;\n\n    try {\n      const newPrice = newestPull[0].price; // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n\n      if (dataPull.historical.length <= 14) {\n        chartArr[num].rsi = \"No Data\";\n      } else {\n        // LOOP FOR AVERAGE\n        while (iRSI >= 0) {\n          if (dataPull.historical[iRSI].close > dataPull.historical[iRSIAdjusted].close) {\n            upMove += dataPull.historical[iRSI].close - dataPull.historical[iRSIAdjusted].close;\n          } else {\n            downMove += dataPull.historical[iRSIAdjusted].close - dataPull.historical[iRSI].close;\n          }\n\n          iRSI--;\n          iRSIAdjusted--;\n        }\n\n        let averageUp = upMove / 14;\n        let averageDown = downMove / 14; // MOST RECENT DIFFERENCE\n\n        if (newPrice > dataPull.historical[0].close) {\n          recentUpper = newPrice - dataPull.historical[0].close;\n        } else {\n          recentDowner = dataPull.historical[0].close - newPrice;\n        }\n\n        pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n        pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n        let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n        chartArr[num].rsi = rsi.toFixed(2);\n      }\n    } catch (e) {}\n  } // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n    let iSO = 13;\n    let soLowHolder = [];\n    let soHighHolder = [];\n    let highestHigh = 0;\n    let lowestLow = 0; // FIRST %D\n\n    let topForm = [];\n    let bottomForm = []; // SECOND %D\n\n    let topFormTwo = [];\n    let bottomFormTwo = []; // THIRD %D\n\n    let topFormThree = [];\n    let bottomFormThree = []; // HOLDING SET OF %D FOR 14 3 3\n\n    let signalLineHolder = [];\n\n    try {\n      let newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 18) {\n        chartArr[num].stochasticK = \"No Data\";\n      } else {\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n        while (iSO >= 0) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        soHighHolder.push(newPrice);\n        soLowHolder.push(newPrice);\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        if (lowestLow === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        if (highestHigh === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        topForm.push(newPrice - lowestLow);\n        bottomForm.push(highestHigh - lowestLow); //FOR %K\n\n        chartArr[num].stochasticK = ((newPrice - lowestLow) / (highestHigh - lowestLow) * 100).toFixed(2); // RESET HOLDER AND VARs --------------------------------------------------------\n\n        iSO = 14;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n        while (iSO >= 1) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[0].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[0].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow); // RESET HOLDER AND VARs ------------------------------------------------\n\n        iSO = 15;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 2) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[1].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[1].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[1].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        let sumTop = topForm.reduce((a, b) => a + b, 0);\n        let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n        let slowD = sumTop / sumBottom * 100; // FOR %D\n\n        chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------------------------------\n\n        iSO = 16;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n        while (iSO >= 3) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormTwo.push(dataPull.historical[2].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[2].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------\n\n        iSO = 17;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 4) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormThree.push(dataPull.historical[3].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormThree.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); // ----------- TALLY UP LAST SMOOTHING -------------------------------\n\n        const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n        let smaD = sumStochD / 3;\n\n        if (smaD < 0) {\n          smaD *= -1;\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        } else {\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        }\n      }\n    } catch (e) {}\n  } // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function williamsRFunction(chartArr, dataPull, newestPull, num) {\n    let highs = [];\n    let lows = [];\n    let lowestLow = 0;\n    let highestHigh = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].williams = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          highs.push(dataPull.historical[i].high);\n          lows.push(dataPull.historical[i].low);\n        }\n\n        highs.push(newPrice);\n        lows.push(newPrice);\n        lowestLow = Math.min(...lows);\n        highestHigh = Math.max(...highs);\n        const williams = (highestHigh - dataPull.historical[0].close) / (highestHigh - lowestLow) * -100;\n        chartArr[num].williamsR = williams.toFixed(2);\n      }\n    } catch (e) {}\n  } // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function cciFunction(chartArr, dataPull, newestPull, num) {\n    let tpvCul = 0;\n    let tpv = [];\n    let tpvMa = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n      let tpvCurrent = newPrice;\n      const recentTpv = newPrice;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].cciTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 19; i++) {\n          const {\n            high,\n            close,\n            low\n          } = dataPull.historical[i];\n          tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n\n          tpvCurrent = (close + high + low) / 3;\n        } // ---- TPV SMA ------------------------\n\n\n        tpvCul = tpv.reduce((a, b) => a + b);\n        tpvMa = tpvCul / 20; // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n\n        const partOne = recentTpv - tpvMa;\n        const meanD = tpv.map(x => x - tpvMa);\n        const meanDMap = meanD.map(x => Math.abs(x));\n        const meanDSum = meanDMap.reduce((a, b) => a + b);\n        const meanDiv = meanDSum / 20; // PART TWO OF FORMULA --------------\n\n        const partTwo = meanDiv * 0.015; // CCI ------------------------------\n\n        const cci = partOne / partTwo;\n        chartArr[num].cciTwenty = cci.toFixed(2);\n      }\n    } catch (e) {}\n  } // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n    let smaCul = 0;\n    let closeHolder = [];\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].bbUpper = \"No Data\";\n        chartArr[num].bbLower = \"No Data\";\n        chartArr[num].bbMiddle = \"No Data\";\n      } else {\n        let closeP = newPrice;\n\n        for (let i = 0; i <= 19; i++) {\n          closeHolder.push(closeP);\n          smaCul += closeP;\n          closeP = dataPull.historical[i].close;\n        } // STANDARD DEVIATION CALC --------------------------------\n\n\n        const smaTwenty = smaCul / 20;\n        const priceAdj = closeHolder.map(x => x - smaTwenty);\n        const priceAdjAbs = priceAdj.map(x => Math.abs(x));\n        const priceAdjSqrt = priceAdjAbs.map(x => x * x);\n        const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n        const partTwoDev = partOneDev / 20;\n        const standardDev = Math.sqrt(partTwoDev); // BB BAND CALC --------------------------------------------\n\n        const bbUpper = smaTwenty + standardDev * 2;\n        const bbLower = smaTwenty - standardDev * 2;\n        const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n        chartArr[num].bbUpper = bbUpper.toFixed(2);\n        chartArr[num].bbLower = bbLower.toFixed(2);\n        chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n        chartArr[num].bbPercent = bbPercent.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwapFunction(chartArr, dataPull, num) {\n    // ----------- VWAP CALUC -------------------------------------------\n    let dayLengthPeriod = 0;\n    let tpvCul = 0;\n    let volumeCul = 0;\n    let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n    try {\n      // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n      while (dataPull[dayLengthPeriod].date.slice(0, 10) == dateObj.newDateString) {\n        dayLengthPeriod++;\n      } // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n\n      for (let i = 0; i < dayLengthPeriod; i++) {\n        const {\n          volume,\n          high,\n          close,\n          low,\n          date\n        } = dataPull[i];\n        let tpv = (high + low + close) / 3;\n\n        if (date.slice(0, 10) == dateObj.newDateString) {\n          tpvCul += tpv * volume;\n          volumeCul += volume;\n        }\n\n        var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n\n        tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n      }\n\n      let vwap = tempVWAP[0].toFixed(2);\n      chartArr[num].vwap = vwap;\n    } catch (e) {}\n  } // SET VOLUME FOR LATER\n\n\n  function setVolume(chartArr, dataPull, newestPull, num) {\n    // SET RECENT YESTERDAY VOLUME\n    try {\n      if (dataPull.historical.length <= 0) {\n        chartArr[num].yesterdayVolume = 0;\n      } else {\n        chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n\n        if (dateObj.marketDay == 0 || dateObj.marketDay == 6) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (dateObj.marketDay >= 1 && dateObj.marketDay <= 5 && dateObj.timeNum < 930) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (dateObj.timeNum > 1830) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n      }\n\n      if (newestPull.length < 0) {\n        chartArr[num].volume = 0;\n      } else {\n        // SET RECENT VOLUME\n        chartArr[num].volume = newestPull[0].volume;\n      }\n    } catch (e) {}\n  } // TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\n\n\n  async function technicalIndicators(finalArr, callback) {\n    let j = 0;\n\n    while (j < finalArr.length) {\n      // LOOP FOR TECHNICAL SYMBOL\n      // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n      const {\n        symbol\n      } = finalArr[j]; //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n\n      const resSMA = await fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n      // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataSMA).length) {\n          console.log(\"no SMA Pull data found\");\n        }\n      } catch (e) {} //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n\n\n      const resOscPulled = await fetch(`https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataRecentPulled = await resOscPulled.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataRecentPulled).length) {\n          console.log(\"no Recent Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      const resVWAP = await fetch(`https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataVWAP = await resVWAP.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataVWAP).length) {\n          console.log(\"no VWAP Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      vwapFunction(finalArr, dataVWAP, j); // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      smaFunction(finalArr, dataSMA, dataRecentPulled, j); // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      wmaFunction(finalArr, dataSMA, dataRecentPulled, j); // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      vwmaFunction(finalArr, dataSMA, dataRecentPulled, j); // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n\n      emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction); // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      rsiFunction(finalArr, dataSMA, dataRecentPulled, j); // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n      // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      williamsRFunction(finalArr, dataSMA, dataRecentPulled, j); // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      cciFunction(finalArr, dataSMA, dataRecentPulled, j); // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j); // SET VOLUME PROPERTIES\n\n      setVolume(finalArr, dataSMA, dataRecentPulled, j);\n      j++; // UPDATE WHILE LOOP\n    } // THIS IS THE END OF LOOP\n\n\n    const returnedData = await callback(finalArr, buildIt);\n    return returnedData;\n  }\n\n  async function filterUpDownStocks(finalArr, callback) {\n    let stocksUp = [];\n    let stocksDown = [];\n    let j = 0;\n\n    while (j < finalArr.length) {\n      const {\n        changesPercentage\n      } = finalArr[j];\n\n      if (changesPercentage > 0) {\n        stocksUp.push(finalArr[j]);\n      } else {\n        stocksDown.push(finalArr[j]);\n      }\n\n      j++;\n    } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n    // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n\n\n    for (let i = 0; i < stocksUp.length; i++) {\n      // UPPER ------------------------------------------------------------------------------\n      stocksUp[i].symbolUp = stocksUp[i].symbol;\n      delete stocksUp[i].symbol;\n      stocksUp[i].changeUp = stocksUp[i].change;\n      delete stocksUp[i].change;\n      stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n      delete stocksUp[i].avgVolume;\n      stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n      delete stocksUp[i].changesPercentage;\n      stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n      delete stocksUp[i].emaEight;\n      stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n      delete stocksUp[i].emaTwelve;\n      stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n      delete stocksUp[i].emaTwenty;\n      stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n      delete stocksUp[i].emaTwentySix;\n      stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n      delete stocksUp[i].emaFifty;\n      stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n      delete stocksUp[i].emaTwoHun;\n      stocksUp[i].macdUp = stocksUp[i].macd;\n      delete stocksUp[i].macd;\n      stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n      delete stocksUp[i].macdHistogram;\n      stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n      delete stocksUp[i].macdSignalLine;\n      stocksUp[i].priceUp = stocksUp[i].price;\n      delete stocksUp[i].price;\n      stocksUp[i].rsiUp = stocksUp[i].rsi;\n      delete stocksUp[i].rsi;\n      stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n      delete stocksUp[i].smaFiveTeen;\n      stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n      delete stocksUp[i].smaTwenty;\n      stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n      delete stocksUp[i].smaThirty;\n      stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n      delete stocksUp[i].smaFifty;\n      stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n      delete stocksUp[i].smaOneHun;\n      stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n      delete stocksUp[i].smaTwoHun;\n      stocksUp[i].volumeUp = stocksUp[i].volume;\n      delete stocksUp[i].volume;\n      stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n      delete stocksUp[i].yesterdayVolume;\n      stocksUp[i].vwapUp = stocksUp[i].vwap;\n      delete stocksUp[i].vwap;\n      stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n      delete stocksUp[i].stochasticD;\n      stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n      delete stocksUp[i].stochasticK;\n      stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n      delete stocksUp[i].stochasticSignal;\n      stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n      delete stocksUp[i].wmaFiveTeen;\n      stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n      delete stocksUp[i].wmaTwenty;\n      stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n      delete stocksUp[i].wmaThirty;\n      stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n      delete stocksUp[i].wmaFifty;\n      stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n      delete stocksUp[i].wmaOneHun;\n      stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n      delete stocksUp[i].wmaTwoHun;\n      stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n      delete stocksUp[i].vwmaFiveTeen;\n      stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n      delete stocksUp[i].vwmaTwenty;\n      stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n      delete stocksUp[i].vwmaThirty;\n      stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n      delete stocksUp[i].vwmaFifty;\n      stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n      delete stocksUp[i].vwmaOneHun;\n      stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n      delete stocksUp[i].vwmaTwoHun;\n      stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n      delete stocksUp[i].williamsR;\n      stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n      delete stocksUp[i].cciTwenty;\n      stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n      delete stocksUp[i].bbUpper;\n      stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n      delete stocksUp[i].bbLower;\n      stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n      delete stocksUp[i].bbMiddle;\n      stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n      delete stocksUp[i].bbPercent; // DOWNERS ------------------------------------------------------------------------------\n\n      stocksDown[i].symbolDown = stocksDown[i].symbol;\n      delete stocksDown[i].symbol;\n      stocksDown[i].changeDown = stocksDown[i].change;\n      delete stocksDown[i].change;\n      stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n      delete stocksDown[i].avgVolume;\n      stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n      delete stocksDown[i].changesPercentage;\n      stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n      delete stocksDown[i].emaEight;\n      stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n      delete stocksDown[i].emaTwelve;\n      stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n      delete stocksDown[i].emaTwenty;\n      stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n      delete stocksDown[i].emaTwentySix;\n      stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n      delete stocksDown[i].emaFifty;\n      stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n      delete stocksDown[i].emaTwoHun;\n      stocksDown[i].macdDown = stocksDown[i].macd;\n      delete stocksDown[i].macd;\n      stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n      delete stocksDown[i].macdHistogram;\n      stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n      delete stocksDown[i].macdSignalLine;\n      stocksDown[i].priceDown = stocksDown[i].price;\n      delete stocksDown[i].price;\n      stocksDown[i].rsiDown = stocksDown[i].rsi;\n      delete stocksDown[i].rsi;\n      stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n      delete stocksDown[i].smaFiveTeen;\n      stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n      delete stocksDown[i].smaTwenty;\n      stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n      delete stocksDown[i].smaThirty;\n      stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n      delete stocksDown[i].smaFifty;\n      stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n      delete stocksDown[i].smaOneHun;\n      stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n      delete stocksDown[i].smaTwoHun;\n      stocksDown[i].volumeDown = stocksDown[i].volume;\n      delete stocksDown[i].volume;\n      stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n      delete stocksDown[i].yesterdayVolume;\n      stocksDown[i].vwapDown = stocksDown[i].vwap;\n      delete stocksDown[i].vwap;\n      stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n      delete stocksDown[i].stochasticD;\n      stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n      delete stocksDown[i].stochasticK;\n      stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n      delete stocksDown[i].stochasticSignal;\n      stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n      delete stocksDown[i].wmaFiveTeen;\n      stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n      delete stocksDown[i].wmaTwenty;\n      stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n      delete stocksDown[i].wmaThirty;\n      stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n      delete stocksDown[i].wmaFifty;\n      stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n      delete stocksDown[i].wmaOneHun;\n      stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n      delete stocksDown[i].wmaTwoHun;\n      stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n      delete stocksDown[i].vwmaFiveTeen;\n      stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n      delete stocksDown[i].vwmaTwenty;\n      stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n      delete stocksDown[i].vwmaThirty;\n      stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n      delete stocksDown[i].vwmaFifty;\n      stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n      delete stocksDown[i].vwmaOneHun;\n      stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n      delete stocksDown[i].vwmaTwoHun;\n      stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n      delete stocksDown[i].williamsR;\n      stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n      delete stocksDown[i].cciTwenty;\n      stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n      delete stocksDown[i].bbUpper;\n      stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n      delete stocksDown[i].bbLower;\n      stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n      delete stocksDown[i].bbMiddle;\n      stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n      delete stocksDown[i].bbPercent;\n    }\n\n    const returnedData = await callback(stocksUp, stocksDown);\n    return returnedData;\n  }\n\n  function buildIt(arrUp, arrDown) {\n    for (let i = 0; i < arrUp.length; i++) {\n      // DECONSTRUCTING UP AND DOWN VAR\n      var {\n        avgVolumeUp,\n        volumeYesterdayUp,\n        changeUp,\n        changesPercentageUp,\n        priceUp,\n        symbolUp,\n        volumeUp,\n        vwapUp,\n        smaFiveTeenUp,\n        smaTwentyUp,\n        smaThirtyUp,\n        smaFiftyUp,\n        smaOneHunUp,\n        smaTwoHunUp,\n        emaEightUp,\n        emaTwelveUp,\n        emaTwentyUp,\n        emaTwentySixUp,\n        emaFiftyUp,\n        emaTwoHunUp,\n        wmaFiveTeenUp,\n        wmaTwentyUp,\n        wmaThirtyUp,\n        wmaFiftyUp,\n        wmaOneHunUp,\n        wmaTwoHunUp,\n        vwmaFiveTeenUp,\n        vwmaTwentyUp,\n        vwmaThirtyUp,\n        vwmaFiftyUp,\n        vwmaOneHunUp,\n        vwmaTwoHunUp,\n        macdUp,\n        macdHistogramUp,\n        macdSignalLineUp,\n        rsiUp,\n        stochasticDUp,\n        stochasticKUp,\n        stochasticSignalUp,\n        cciUp,\n        bbMiddleUp,\n        bbLowerUp,\n        bbUpperUp,\n        bbPercentUp,\n        williamsRUp\n      } = arrUp[i];\n      var {\n        avgVolumeDown,\n        volumeYesterdayDown,\n        changeDown,\n        changesPercentageDown,\n        priceDown,\n        symbolDown,\n        volumeDown,\n        vwapDown,\n        smaFiveTeenDown,\n        smaTwentyDown,\n        smaThirtyDown,\n        smaFiftyDown,\n        smaOneHunDown,\n        smaTwoHunDown,\n        emaEightDown,\n        emaTwelveDown,\n        emaTwentyDown,\n        emaTwentySixDown,\n        emaFiftyDown,\n        emaTwoHunDown,\n        wmaFiveTeenDown,\n        wmaTwentyDown,\n        wmaThirtyDown,\n        wmaFiftyDown,\n        wmaOneHunDown,\n        wmaTwoHunDown,\n        vwmaFiveTeenDown,\n        vwmaTwentyDown,\n        vwmaThirtyDown,\n        vwmaFiftyDown,\n        vwmaOneHunDown,\n        vwmaTwoHunDown,\n        macdDown,\n        macdHistogramDown,\n        macdSignalLineDown,\n        rsiDown,\n        stochasticDDown,\n        stochasticKDown,\n        stochasticSignalDown,\n        cciDown,\n        bbMiddleDown,\n        bbLowerDown,\n        bbUpperDown,\n        bbPercentDown,\n        williamsRDown\n      } = arrDown[i]; // ADJUST TO FIXED --------------------------------------------------------\n\n      if (arrUp[i].priceUp == undefined) {\n        arrUp[i].priceUp = 0;\n      }\n\n      if (arrDown[i].priceDown == undefined) {\n        arrDown[i].priceDown = 0;\n      }\n\n      priceUp = priceUp.toFixed(2);\n      priceDown = priceDown.toFixed(2);\n\n      if (arrUp[i].changesPercentageUp == undefined) {\n        arrUp[i].changesPercentageUp = 0;\n      }\n\n      if (arrDown[i].changesPercentageDown == undefined) {\n        arrDown[i].changesPercentageDown = 0;\n      }\n\n      changesPercentageUp = changesPercentageUp.toFixed(2);\n      changesPercentageDown = changesPercentageDown.toFixed(2);\n\n      if (arrUp[i].changeUp == undefined) {\n        arrUp[i].changeUp = 0;\n      }\n\n      if (arrDown[i].changeDown == undefined) {\n        arrDown[i].changeDown = 0;\n      }\n\n      changeUp = changeUp.toFixed(2);\n      changeDown = changeDown.toFixed(2); // UP VOLUME INCREASE ----------------------------\n\n      if (arrUp[i].volumeUp == undefined) {\n        arrUp[i].volumeUp = 0;\n      }\n\n      if (arrDown[i].volumeDown == undefined) {\n        arrDown[i].volumeDown = 0;\n      }\n\n      var volumeIncreaseUp = 0;\n\n      if (volumeUp > avgVolumeUp) {\n        let increase = volumeUp - avgVolumeUp;\n        volumeIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeUp;\n        volumeIncreaseUp = decrease / avgVolumeUp * -100;\n      } // DOWN VOLUME INCREASE ----------------------------\n\n\n      var volumeIncreaseDown = 0;\n\n      if (volumeDown > avgVolumeDown) {\n        let increase = volumeDown - avgVolumeDown;\n        volumeIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeDown;\n        volumeIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n      volumeIncreaseUp = volumeIncreaseUp.toFixed(2); // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n      // YESTERDAY UP VOLUME INCREASE ----------------------------\n\n      if (arrUp[i].volumeYesterdayUp == undefined) {\n        arrUp[i].volumeYesterdayUp = 0;\n      }\n\n      if (volumeYesterdayDown == undefined) {\n        volumeYesterdayDown = 0;\n      }\n\n      if (arrUp[i].avgVolumeUp == undefined) {\n        arrUp[i].avgVolumeUp = 0;\n      }\n\n      if (arrDown[i].avgVolumeDown == undefined) {\n        arrDown[i].avgVolumeDown = 0;\n      }\n\n      var yesterdayVolIncreaseUp = 0;\n\n      if (volumeYesterdayUp > avgVolumeUp) {\n        let increase = volumeYesterdayUp - avgVolumeUp;\n        yesterdayVolIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeYesterdayUp;\n        yesterdayVolIncreaseUp = decrease / avgVolumeUp * -100;\n      }\n\n      yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2); // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n      var yesterdayVolIncreaseDown = 0;\n\n      if (volumeYesterdayDown > avgVolumeDown) {\n        let increase = volumeYesterdayDown - avgVolumeDown;\n        yesterdayVolIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeYesterdayDown;\n        yesterdayVolIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2); // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n      var changeDownAdjusted = changeDown;\n\n      if (changeDownAdjusted < 0) {\n        changeDownAdjusted = changeDownAdjusted * -1;\n        changeDownAdjusted = changeDownAdjusted.toFixed(2);\n      } // NaN CHECK ----------------------------------------\n\n\n      if (isNaN(yesterdayVolIncreaseDown)) {\n        yesterdayVolIncreaseDown = \"No Data\";\n      }\n\n      if (isNaN(yesterdayVolIncreaseUp)) {\n        yesterdayVolIncreaseUp = \"No Data\";\n      } // ADJUST TO POSITIVE\n\n\n      if (stochasticDUp < 0) {\n        stochasticDUp = stochasticDUp * -1;\n      }\n\n      if (stochasticKUp < 0) {\n        stochasticKUp = stochasticKUp * -1;\n      }\n\n      if (stochasticDDown < 0) {\n        stochasticDDown = stochasticDDown * -1;\n      }\n\n      if (stochasticKDown < 0) {\n        stochasticKDown = stochasticKDown * -1;\n      } // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n\n\n      if (arrUp[i].avgVolumeUp == undefined) {\n        arrUp[i].avgVolumeUp = \"No Data\";\n      }\n\n      if (arrDown[i].avgVolumeDown == undefined) {\n        arrDown[i].avgVolumeDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeUp == undefined) {\n        arrUp[i].volumeUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeDown == undefined) {\n        arrDown[i].volumeDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeIncreaseUp == undefined) {\n        arrUp[i].volumeIncreaseUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeIncreaseDown == undefined) {\n        arrDown[i].volumeIncreaseDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeYesterdayUp == undefined) {\n        arrUp[i].volumeYesterdayUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeYesterdayDown == undefined) {\n        arrDown[i].volumeYesterdayDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaFiveTeenUp == undefined) {\n        arrUp[i].smaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaFiveTeenDown == undefined) {\n        arrDown[i].smaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaTwentyUp == undefined) {\n        arrUp[i].smaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaTwentyDown == undefined) {\n        arrDown[i].smaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaThirtyUp == undefined) {\n        arrUp[i].smaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaThirtyDown == undefined) {\n        arrDown[i].smaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaFiftyUp == undefined) {\n        arrUp[i].smaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaFiftyDown == undefined) {\n        arrDown[i].smaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaOneHunUp == undefined) {\n        arrUp[i].smaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaOneHunDown == undefined) {\n        arrDown[i].smaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaTwoHunUp == undefined) {\n        arrUp[i].smaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaTwoHunDown == undefined) {\n        arrDown[i].smaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaEightUp == undefined) {\n        arrUp[i].emaEightUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaEightDown == undefined) {\n        arrDown[i].emaEightDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwelveUp == undefined) {\n        arrUp[i].emaTwelveUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwelveDown == undefined) {\n        arrDown[i].emaTwelveDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwentyUp == undefined) {\n        arrUp[i].emaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwentyDown == undefined) {\n        arrDown[i].emaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwentySixUp == undefined) {\n        arrUp[i].emaTwentySixUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwentySixDown == undefined) {\n        arrDown[i].emaTwentySixDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaFiftyUp == undefined) {\n        arrUp[i].emaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaFiftyDown == undefined) {\n        arrDown[i].emaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwoHunUp == undefined) {\n        arrUp[i].emaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwoHunDown == undefined) {\n        arrDown[i].emaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaFiveTeenUp == undefined) {\n        arrUp[i].wmaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaFiveTeenDown == undefined) {\n        arrDown[i].wmaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaTwentyUp == undefined) {\n        arrUp[i].wmaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaTwentyDown == undefined) {\n        arrDown[i].wmaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaThirtyUp == undefined) {\n        arrUp[i].wmaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaThirtyDown == undefined) {\n        arrDown[i].wmaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaFiftyUp == undefined) {\n        arrUp[i].wmaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaFiftyDown == undefined) {\n        arrDown[i].wmaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaOneHunUp == undefined) {\n        arrUp[i].wmaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaOneHunDown == undefined) {\n        arrDown[i].wmaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaTwoHunUp == undefined) {\n        arrUp[i].wmaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaTwoHunDown == undefined) {\n        arrDown[i].wmaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaFiveTeenUp == undefined) {\n        arrUp[i].vwmaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaFiveTeenDown == undefined) {\n        arrDown[i].vwmaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaTwentyUp == undefined) {\n        arrUp[i].vwmaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaTwentyDown == undefined) {\n        arrDown[i].vwmaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaThirtyUp == undefined) {\n        arrUp[i].vwmaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaThirtyDown == undefined) {\n        arrDown[i].vwmaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaFiftyUp == undefined) {\n        arrUp[i].vwmaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaFiftyDown == undefined) {\n        arrDown[i].vwmaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaOneHunUp == undefined) {\n        arrUp[i].vwmaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaOneHunDown == undefined) {\n        arrDown[i].vwmaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaTwoHunUp == undefined) {\n        arrUp[i].vwmaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaTwoHunDown == undefined) {\n        arrDown[i].vwmaTwoHunDown = \"No Data\";\n      }\n\n      if (arrDown[i].vwapDown == undefined) {\n        arrDown[i].vwapDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwapUp == undefined) {\n        arrUp[i].vwapUp = \"No Data\";\n      }\n\n      if (arrDown[i].macdDown == undefined) {\n        arrDown[i].macdDown = \"No Data\";\n      }\n\n      if (arrUp[i].macdUp == undefined) {\n        arrUp[i].macdUp = \"No Data\";\n      }\n\n      if (arrDown[i].rsiDown == undefined) {\n        arrDown[i].rsiDown = \"No Data\";\n      }\n\n      if (arrUp[i].rsiUp == undefined) {\n        arrUp[i].rsiUp = \"No Data\";\n      }\n\n      if (arrDown[i].cciDown == undefined) {\n        arrDown[i].cciDown = \"No Data\";\n      }\n\n      if (arrUp[i].cciUp == undefined) {\n        arrUp[i].cciUp = \"No Data\";\n      }\n\n      if (arrDown[i].williamsRDown == undefined) {\n        arrDown[i].williamsRDown = \"No Data\";\n      }\n\n      if (arrUp[i].williamsRUp == undefined) {\n        arrUp[i].williamsRUp = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticKUp == undefined) {\n        arrUp[i].stochasticKUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticKDown == undefined) {\n        arrDown[i].stochasticKDown = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticDUp == undefined) {\n        arrUp[i].stochasticDUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticDDown == undefined) {\n        arrDown[i].stochasticDDown = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticSignalUp == undefined) {\n        arrUp[i].stochasticSignalUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticSignalDown == undefined) {\n        arrDown[i].stochasticSignalDown = \"No Data\";\n      }\n\n      if (arrDown[i].bbMiddleDown == undefined) {\n        arrDown[i].bbMiddleDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbMiddleUp == undefined) {\n        arrUp[i].bbMiddleUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbLowerDown == undefined) {\n        arrDown[i].bbLowerDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbLowerUp == undefined) {\n        arrUp[i].bbLowerUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbUpperDown == undefined) {\n        arrDown[i].bbUpperDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbUpperUp == undefined) {\n        arrUp[i].bbUpperUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbPercentDown == undefined) {\n        arrDown[i].bbPercentDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbPercentUp == undefined) {\n        arrUp[i].bbPercentUp = \"No Data\";\n      }\n\n      if (arrDown[i].macdHistogramDown == undefined) {\n        arrDown[i].macdHistogramDown = \"No Data\";\n      }\n\n      if (arrDown[i].macdSignalLineDown == undefined) {\n        arrDown[i].macdSignalLineDown = \"No Data\";\n      }\n\n      if (arrUp[i].macdHistogramUp == undefined) {\n        arrUp[i].macdHistogramUp = \"No Data\";\n      }\n\n      if (arrUp[i].macdSignalLineUp == undefined) {\n        arrUp[i].macdSignalLineUp = \"No Data\";\n      }\n\n      if (arrUp[i].symbolUp == undefined) {\n        arrUp[i].symbolUp = \"No Data\";\n      }\n\n      if (arrDown[i].symbolDown == undefined) {\n        arrDown[i].symbolDown = \"No Data\";\n      }\n\n      arrUp[i].volumeIncreaseToday = volumeIncreaseUp;\n      arrUp[i].volumeIncreaseYesterday = yesterdayVolIncreaseUp;\n      arrDown[i].volumeIncreaseToday = volumeIncreaseDown;\n      arrDown[i].volumeIncreaseYesterday = yesterdayVolIncreaseDown;\n    }\n\n    for (let i = 0; i < arrUp.length; i++) {\n      // // UPPER ------------------------------------------------------------------------------\n      arrUp[i].symbol = arrUp[i].symbolUp;\n      delete arrUp[i].symbolUp;\n      arrUp[i].change = arrUp[i].changeUp;\n      delete arrUp[i].changeUp;\n      arrUp[i].avgVolume = arrUp[i].avgVolumeUp;\n      delete arrUp[i].avgVolumeUp;\n      arrUp[i].changesPercentage = arrUp[i].changesPercentageUp;\n      delete arrUp[i].changesPercentageUp;\n      arrUp[i].emaEight = arrUp[i].emaEightUp;\n      delete arrUp[i].emaEightUp;\n      arrUp[i].emaTwelve = arrUp[i].emaTwelveUp;\n      delete arrUp[i].emaTwelveUp;\n      arrUp[i].emaTwenty = arrUp[i].emaTwentyUp;\n      delete arrUp[i].emaTwentyUp;\n      arrUp[i].emaTwentySix = arrUp[i].emaTwentySixUp;\n      delete arrUp[i].emaTwentySixUp;\n      arrUp[i].emaFifty = arrUp[i].emaFiftyUp;\n      delete arrUp[i].emaFiftyUp;\n      arrUp[i].emaTwoHun = arrUp[i].emaTwoHunUp;\n      delete arrUp[i].emaTwoHunUp;\n      arrUp[i].macd = arrUp[i].macdUp;\n      delete arrUp[i].macdUp;\n      arrUp[i].macdHistogram = arrUp[i].macdHistogramUp;\n      delete arrUp[i].macdHistogramUp;\n      arrUp[i].macdSignalLine = arrUp[i].macdSignalLineUp;\n      delete arrUp[i].macdSignalLineUp;\n      arrUp[i].price = arrUp[i].priceUp;\n      delete arrUp[i].priceUp;\n      arrUp[i].rsi = arrUp[i].rsiUp;\n      delete arrUp[i].rsiUp;\n      arrUp[i].smaFiveTeen = arrUp[i].smaFiveTeenUp;\n      delete arrUp[i].smaFiveTeenUp;\n      arrUp[i].smaTwenty = arrUp[i].smaTwentyUp;\n      delete arrUp[i].smaTwentyUp;\n      arrUp[i].smaThirty = arrUp[i].smaThirtyUp;\n      delete arrUp[i].smaThirtyUp;\n      arrUp[i].smaFifty = arrUp[i].smaFiftyUp;\n      delete arrUp[i].smaFiftyUp;\n      arrUp[i].smaOneHun = arrUp[i].smaOneHunUp;\n      delete arrUp[i].smaOneHunUp;\n      arrUp[i].smaTwoHun = arrUp[i].smaTwoHunUp;\n      delete arrUp[i].smaTwoHunUp;\n      arrUp[i].volume = arrUp[i].volumeUp;\n      delete arrUp[i].volumeUp;\n      arrUp[i].volumeYesterday = arrUp[i].volumeYesterdayUp;\n      delete arrUp[i].volumeYesterdayUp;\n      arrUp[i].vwap = arrUp[i].vwapUp;\n      delete arrUp[i].vwapUp;\n      arrUp[i].stochasticD = arrUp[i].stochasticDUp;\n      delete arrUp[i].stochasticDUp;\n      arrUp[i].stochasticK = arrUp[i].stochasticKUp;\n      delete arrUp[i].stochasticKUp;\n      arrUp[i].stochasticSignal = arrUp[i].stochasticSignalUp;\n      delete arrUp[i].stochasticSignalUp;\n      arrUp[i].wmaFiveTeen = arrUp[i].wmaFiveTeenUp;\n      delete arrUp[i].wmaFiveTeenUp;\n      arrUp[i].wmaTwenty = arrUp[i].wmaTwentyUp;\n      delete arrUp[i].wmaTwentyUp;\n      arrUp[i].wmaThirty = arrUp[i].wmaThirtyUp;\n      delete arrUp[i].wmaThirtyUp;\n      arrUp[i].wmaFifty = arrUp[i].wmaFiftyUp;\n      delete arrUp[i].wmaFiftyUp;\n      arrUp[i].wmaOneHun = arrUp[i].wmaOneHunUp;\n      delete arrUp[i].wmaOneHunUp;\n      arrUp[i].wmaTwoHun = arrUp[i].wmaTwoHunUp;\n      delete arrUp[i].wmaTwoHunUp;\n      arrUp[i].vwmaFiveTeen = arrUp[i].vwmaFiveTeenUp;\n      delete arrUp[i].vwmaFiveTeenUp;\n      arrUp[i].vwmaTwenty = arrUp[i].vwmaTwentyUp;\n      delete arrUp[i].vwmaTwentyUp;\n      arrUp[i].vwmaThirty = arrUp[i].vwmaThirtyUp;\n      delete arrUp[i].vwmaThirtyUp;\n      arrUp[i].vwmaFifty = arrUp[i].vwmaFiftyUp;\n      delete arrUp[i].vwmaFiftyUp;\n      arrUp[i].vwmaOneHun = arrUp[i].vwmaOneHunUp;\n      delete arrUp[i].vwmaOneHunUp;\n      arrUp[i].vwmaTwoHun = arrUp[i].vwmaTwoHunUp;\n      delete arrUp[i].vwmaTwoHunUp;\n      arrUp[i].williamsR = arrUp[i].williamsRUp;\n      delete arrUp[i].williamsRUp;\n      arrUp[i].cciTwenty = arrUp[i].cciUp;\n      delete arrUp[i].cciUp;\n      arrUp[i].bbUpper = arrUp[i].bbUpperUp;\n      delete arrUp[i].bbUpperUp;\n      arrUp[i].bbLower = arrUp[i].bbLowerUp;\n      delete arrUp[i].bbLowerUp;\n      arrUp[i].bbMiddle = arrUp[i].bbMiddleUp;\n      delete arrUp[i].bbMiddleUp;\n      arrUp[i].bbPercent = arrUp[i].bbPercentUp;\n      delete arrUp[i].bbPercentUp;\n\n      if (arrUp[i].bbPercent == undefined) {\n        arrUp[i].bbPercent = 'No Data';\n      }\n    }\n\n    for (let i = 0; i < arrDown.length; i++) {\n      // DOWNERS ------------------------------------------------------------------------------\n      arrDown[i].symbol = arrDown[i].symbolDown;\n      delete arrDown[i].symbolDown;\n      arrDown[i].change = arrDown[i].changeDown;\n      delete arrDown[i].changeDown;\n      arrDown[i].avgVolume = arrDown[i].avgVolumeDown;\n      delete arrDown[i].avgVolumeDown;\n      arrDown[i].changesPercentage = arrDown[i].changesPercentageDown;\n      delete arrDown[i].changesPercentageDown;\n      arrDown[i].emaEight = arrDown[i].emaEightDown;\n      delete arrDown[i].emaEightDown;\n      arrDown[i].emaTwelve = arrDown[i].emaTwelveDown;\n      delete arrDown[i].emaTwelveDown;\n      arrDown[i].emaTwenty = arrDown[i].emaTwentyDown;\n      delete arrDown[i].emaTwentyDown;\n      arrDown[i].emaTwentySix = arrDown[i].emaTwentySixDown;\n      delete arrDown[i].emaTwentySixDown;\n      arrDown[i].emaFifty = arrDown[i].emaFiftyDown;\n      delete arrDown[i].emaFiftyDown;\n      arrDown[i].emaTwoHun = arrDown[i].emaTwoHunDown;\n      delete arrDown[i].emaTwoHunDown;\n      arrDown[i].macd = arrDown[i].macdDown;\n      delete arrDown[i].macdDown;\n      arrDown[i].macdHistogram = arrDown[i].macdHistogramDown;\n      delete arrDown[i].macdHistogramDown;\n      arrDown[i].macdSignalLine = arrDown[i].macdSignalLineDown;\n      delete arrDown[i].macdSignalLineDown;\n      arrDown[i].price = arrDown[i].priceDown;\n      delete arrDown[i].priceDown;\n      arrDown[i].rsi = arrDown[i].rsiDown;\n      delete arrDown[i].rsiDown;\n      arrDown[i].smaFiveTeen = arrDown[i].smaFiveTeenDown;\n      delete arrDown[i].smaFiveTeenDown;\n      arrDown[i].smaTwenty = arrDown[i].smaTwentyDown;\n      delete arrDown[i].smaTwentyDown;\n      arrDown[i].smaThirty = arrDown[i].smaThirtyDown;\n      delete arrDown[i].smaThirtyDown;\n      arrDown[i].smaFifty = arrDown[i].smaFiftyDown;\n      delete arrDown[i].smaFiftyDown;\n      arrDown[i].smaOneHun = arrDown[i].smaOneHunDown;\n      delete arrDown[i].smaOneHunDown;\n      arrDown[i].smaTwoHun = arrDown[i].smaTwoHunDown;\n      delete arrDown[i].smaTwoHunDown;\n      arrDown[i].volume = arrDown[i].volumeDown;\n      delete arrDown[i].volumeDown;\n      arrDown[i].volumeYesterday = arrDown[i].volumeYesterdayDown;\n      delete arrDown[i].volumeYesterdayDown;\n      arrDown[i].vwap = arrDown[i].vwapDown;\n      delete arrDown[i].vwapDown;\n      arrDown[i].stochasticD = arrDown[i].stochasticDDown;\n      delete arrDown[i].stochasticDDown;\n      arrDown[i].stochasticK = arrDown[i].stochasticKDown;\n      delete arrDown[i].stochasticKDown;\n      arrDown[i].stochasticSignal = arrDown[i].stochasticSignalDown;\n      delete arrDown[i].stochasticSignalDown;\n      arrDown[i].wmaFiveTeen = arrDown[i].wmaFiveTeenDown;\n      delete arrDown[i].wmaFiveTeenDown;\n      arrDown[i].wmaTwenty = arrDown[i].wmaTwentyDown;\n      delete arrDown[i].wmaTwentyDown;\n      arrDown[i].wmaThirty = arrDown[i].wmaThirtyDown;\n      delete arrDown[i].wmaThirtyDown;\n      arrDown[i].wmaFifty = arrDown[i].wmaFiftyDown;\n      delete arrDown[i].wmaFiftyDown;\n      arrDown[i].wmaOneHun = arrDown[i].wmaOneHunDown;\n      delete arrDown[i].wmaOneHunDown;\n      arrDown[i].wmaTwoHun = arrDown[i].wmaTwoHunDown;\n      delete arrDown[i].wmaTwoHunDown;\n      arrDown[i].vwmaFiveTeen = arrDown[i].vwmaFiveTeenDown;\n      delete arrDown[i].vwmaFiveTeenDown;\n      arrDown[i].vwmaTwenty = arrDown[i].vwmaTwentyDown;\n      delete arrDown[i].vwmaTwentyDown;\n      arrDown[i].vwmaThirty = arrDown[i].vwmaThirtyDown;\n      delete arrDown[i].vwmaThirtyDown;\n      arrDown[i].vwmaFifty = arrDown[i].vwmaFiftyDown;\n      delete arrDown[i].vwmaFiftyDown;\n      arrDown[i].vwmaOneHun = arrDown[i].vwmaOneHunDown;\n      delete arrDown[i].vwmaOneHunDown;\n      arrDown[i].vwmaTwoHun = arrDown[i].vwmaTwoHunDown;\n      delete arrDown[i].vwmaTwoHunDown;\n      arrDown[i].williamsR = arrDown[i].williamsRDown;\n      delete arrDown[i].williamsRDown;\n      arrDown[i].cciTwenty = arrDown[i].cciDown;\n      delete arrDown[i].cciDown;\n      arrDown[i].bbUpper = arrDown[i].bbUpperDown;\n      delete arrDown[i].bbUpperDown;\n      arrDown[i].bbLower = arrDown[i].bbLowerDown;\n      delete arrDown[i].bbLowerDown;\n      arrDown[i].bbMiddle = arrDown[i].bbMiddleDown;\n      delete arrDown[i].bbMiddleDown;\n      arrDown[i].bbPercent = arrDown[i].bbPercentDown;\n      delete arrDown[i].bbPercentDown;\n    }\n\n    let finalStocksArr = arrDown.concat(arrUp);\n    return finalStocksArr;\n  } //----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\n\n\n  const returnedData = await filterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n  return returnedData;\n};","map":{"version":3,"sources":["/Users/austinolijar/Desktop/MERN-DeadCat/dead-cat/src/JS/ApiFunction.js"],"names":["nasdaqMasterKey","nyseMasterKey","handleDate","technicalAnalysis","dateObj","today","year","date","month","minutes","hour","time","timeNum","marketDay","todayDate","filterTradableSymbols","arr1","arr2","compileCallback","nyseHolderDown","nyseHolderUp","nasdaqHolderDown","nasdaqHolderUp","res","fetch","dataNyse","json","i","length","changesPercentage","indexOf","symbol","price","push","resTwo","dataNas","e","returnedData","technicalIndicators","compileStocks","arr3","arr4","callback","finalChartFatDown","finalChartFatUp","finalChart","combinedStockDrop","concat","combinedStockUp","keys","filter","stock","match","sort","a","b","holderObjDown","avgVolume","bbLower","bbMiddle","bbPercent","bbUpper","cciTwenty","change","dayHigh","dayLow","earningsAnnouncement","emaEight","emaFifty","emaTwelve","emaTwenty","emaTwentySix","emaTwoHun","eps","exchange","macd","macdHistogram","macdSignalLine","marketCap","name","open","pe","previousClose","priceAvg50","priceAvg200","rsi","sharesOutstanding","smaFifty","smaFiveTeen","smaOneHun","smaThirty","smaTwenty","smaTwoHun","stochasticD","stochasticK","stochasticSignal","timestamp","volume","vwap","vwmaFifty","vwmaFiveTeen","vwmaOneHun","vwmaThirty","vwmaTwenty","vwmaTwoHun","williamsR","wmaFifty","wmaFiveTeen","wmaOneHun","wmaThirty","wmaTwenty","wmaTwoHun","yearHigh","yearLow","yesterdayVolume","holderObjUp","slimChartDown","unshift","slimChartUp","filterUpDownStocks","smaFunction","chartArr","dataPull","newestPull","num","culSMA","fiveTeenSMA","twentySMA","thirtySMA","fiftySMA","hunSMA","twoHunSMA","todayPricePull","historical","close","smaFiveResult","toFixed","smaTwentyResult","smaThirtyResult","smaFiftyResult","smaOneHunResult","smaTwoHunResult","wmaFunction","weight","wmaInterval","iWma","wmaCul","vwmaFunction","newPrice","newVol","volCul","totalCul","undefined","isNaN","emaFunction","macdCallBack","prevDayEmaSub","arrEma","macdTwelve","macdTwentySix","subEMA","finalSubEma","derp","pop","finalEma","macdFunction","averageMacd","iMacd","averageSum","reduce","finalAverageMacd","histogram","rsiFunction","iRSI","iRSIAdjusted","recentUpper","recentDowner","upMove","downMove","pastDownPeriod","pastUpPeriod","averageUp","averageDown","stochOsc1433Function","iSO","soLowHolder","soHighHolder","highestHigh","lowestLow","topForm","bottomForm","topFormTwo","bottomFormTwo","topFormThree","bottomFormThree","signalLineHolder","low","high","Math","max","min","sumTop","sumBottom","slowD","sumStochD","smaD","williamsRFunction","highs","lows","williams","cciFunction","tpvCul","tpv","tpvMa","tpvCurrent","recentTpv","partOne","meanD","map","x","meanDMap","abs","meanDSum","meanDiv","partTwo","cci","bollingerBandsFunction","smaCul","closeHolder","closeP","priceAdj","priceAdjAbs","priceAdjSqrt","partOneDev","partTwoDev","standardDev","sqrt","vwapFunction","dayLengthPeriod","volumeCul","tempVWAP","slice","newDateString","vwapFinal","setVolume","finalArr","j","resSMA","dataSMA","Object","console","log","resOscPulled","dataRecentPulled","resVWAP","dataVWAP","buildIt","stocksUp","stocksDown","symbolUp","changeUp","avgVolumeUp","changesPercentageUp","emaEightUp","emaTwelveUp","emaTwentyUp","emaTwentySixUp","emaFiftyUp","emaTwoHunUp","macdUp","macdHistogramUp","macdSignalLineUp","priceUp","rsiUp","smaFiveTeenUp","smaTwentyUp","smaThirtyUp","smaFiftyUp","smaOneHunUp","smaTwoHunUp","volumeUp","volumeYesterdayUp","vwapUp","stochasticDUp","stochasticKUp","stochasticSignalUp","wmaFiveTeenUp","wmaTwentyUp","wmaThirtyUp","wmaFiftyUp","wmaOneHunUp","wmaTwoHunUp","vwmaFiveTeenUp","vwmaTwentyUp","vwmaThirtyUp","vwmaFiftyUp","vwmaOneHunUp","vwmaTwoHunUp","williamsRUp","cciUp","bbUpperUp","bbLowerUp","bbMiddleUp","bbPercentUp","symbolDown","changeDown","avgVolumeDown","changesPercentageDown","emaEightDown","emaTwelveDown","emaTwentyDown","emaTwentySixDown","emaFiftyDown","emaTwoHunDown","macdDown","macdHistogramDown","macdSignalLineDown","priceDown","rsiDown","smaFiveTeenDown","smaTwentyDown","smaThirtyDown","smaFiftyDown","smaOneHunDown","smaTwoHunDown","volumeDown","volumeYesterdayDown","vwapDown","stochasticDDown","stochasticKDown","stochasticSignalDown","wmaFiveTeenDown","wmaTwentyDown","wmaThirtyDown","wmaFiftyDown","wmaOneHunDown","wmaTwoHunDown","vwmaFiveTeenDown","vwmaTwentyDown","vwmaThirtyDown","vwmaFiftyDown","vwmaOneHunDown","vwmaTwoHunDown","williamsRDown","cciDown","bbUpperDown","bbLowerDown","bbMiddleDown","bbPercentDown","arrUp","arrDown","volumeIncreaseUp","increase","decrease","volumeIncreaseDown","yesterdayVolIncreaseUp","yesterdayVolIncreaseDown","changeDownAdjusted","volumeIncreaseToday","volumeIncreaseYesterday","volumeYesterday","finalStocksArr"],"mappings":"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","sourcesContent":["import { nasdaqMasterKey, nyseMasterKey } from \"./masterKeys\";\n\nimport { handleDate } from \"./fetch-compile-functions/handleDate\";\n// import { nyseFetch } from \"./functions/nyseFetch\";\n// import { nasdaqFetch } from \"./functions/nasdaqFetch\";\n\nexport const technicalAnalysis = async () => {\n  // DATE OBJ --------------------------\n  const dateObj = {\n    today: null,\n    year: null,\n    date: null,\n    month: null,\n    minutes: null,\n    hour: null,\n    time: null,\n    timeNum: null,\n    marketDay: null,\n    todayDate: null,\n  }\n  // SET DATE --------------------------\n  await handleDate(dateObj)\n\n// ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\nasync function filterTradableSymbols(arr1, arr2, compileCallback) {\n  let nyseHolderDown = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n  let nyseHolderUp = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n  let nasdaqHolderDown = [];\n  let nasdaqHolderUp = [];\n  \n  try {\n    // ------ FETCH NYSE\n    const res = await fetch(\n      \"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n    );\n    const dataNyse = await res.json();\n    // ----- FILTER TRADABLE SYMBOLS ON NYSE THAT HAVE DROPPED\n    for (let i = 0; i < dataNyse.length; i++) {\n      if (\n        dataNyse[i].changesPercentage < -5 &&\n        arr1.indexOf(dataNyse[i].symbol) > 0 &&\n        dataNyse[i].price > .1\n      ) {\n        nyseHolderDown.push(dataNyse[i]);\n      }\n    }\n\n    for (let i = 0; i < dataNyse.length; i++) {\n      if (\n        dataNyse[i].changesPercentage > 5 &&\n        arr1.indexOf(dataNyse[i].symbol) > 0 &&\n        dataNyse[i].price > .1\n      ) {\n        nyseHolderUp.push(dataNyse[i]);\n      }\n    }\n    // ------ FETCH NASDAQ\n    const resTwo = await fetch(\n      \"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n    );\n    const dataNas = await resTwo.json();\n    // ----- FILTER TRADABLE SYMBOLS ON NASDAQ THAT HAVE DROPPED\n    for (let i = 0; i < dataNas.length; i++) {\n      if (\n        dataNas[i].changesPercentage < -5 &&\n        arr2.indexOf(dataNas[i].symbol) > 0 &&\n        dataNas[i].price > 1\n      ) {\n        nasdaqHolderDown.push(dataNas[i]);\n      }\n    }\n\n    for (let i = 0; i < dataNas.length; i++) {\n      if (\n        dataNas[i].changesPercentage > 5 &&\n        arr2.indexOf(dataNas[i].symbol) > 0 &&\n        dataNas[i].price > 1\n      ) {\n        nasdaqHolderUp.push(dataNas[i]);\n      }\n    }\n    //--------- CATCH\n  } catch (e) {}\n\n\n  const returnedData = await compileCallback(\n    nasdaqHolderDown,\n    nyseHolderDown,\n    nyseHolderUp,\n    nasdaqHolderUp,\n    technicalIndicators\n  ); // CALLBACK FOR STOCK FILTER\n  return returnedData;\n  \n}\nasync function compileStocks(arr1, arr2, arr3, arr4, callback) {\n  //---------------------- COMBINE AND SORT LARGEST DROP -------------------------\n  let finalChartFatDown = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  let finalChartFatUp = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  let finalChart = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  // ------- THIS IS A FILTER FOR WEIRD STOCK SYMBOLS THAT SLIP IN ----------\n\n  let combinedStockDrop = [];\n  combinedStockDrop = combinedStockDrop.concat(arr1, arr2);\n\n  let combinedStockUp = [];\n  combinedStockUp = combinedStockUp.concat(arr3, arr4);\n\n  const keys = /^[A-Z]{1,4}$/g;\n  finalChartFatDown = combinedStockDrop.filter((stock) => {\n    return stock.symbol.match(keys);\n  });\n\n  finalChartFatUp = combinedStockUp.filter((stock) => {\n    return stock.symbol.match(keys);\n  });\n\n  for (let i = 0; i < finalChartFatDown.length; i++) {\n    finalChartFatDown.sort((a, b) => {\n      return a.changesPercentage - b.changesPercentage;\n    });\n  }\n\n  for (let i = 0; i < finalChartFatUp.length; i++) {\n    finalChartFatUp.sort((a, b) => {\n      return b.changesPercentage - a.changesPercentage;\n    });\n  }\n  // MAKE SURE ARR HAS RIGHT LENGTH TO LOAD ------------\n  const holderObjDown = {\n    avgVolume: -1,\n    bbLower: \"-1\",\n    bbMiddle: \"-1\",\n    bbPercent: \"-1\",\n    bbUpper: \"-1\",\n    cciTwenty: \"-1\",\n    change: -1,\n    changesPercentage: -1,\n    dayHigh: -1,\n    dayLow: -1,\n    earningsAnnouncement: \"-1\",\n    emaEight: \"-1\",\n    emaFifty: \"-1\",\n    emaTwelve: \"-1\",\n    emaTwenty: \"-1\",\n    emaTwentySix: \"-1\",\n    emaTwoHun: \"-1\",\n    eps: -1,\n    exchange: \"No Data\",\n    macd: \"-1\",\n    macdHistogram: \"-1\",\n    macdSignalLine: \"-1\",\n    marketCap: -1,\n    name: \"Placeholder for lack of Symbols\",\n    open: -1,\n    pe: -1,\n    previousClose: -1,\n    price: 1,\n    priceAvg50: -1,\n    priceAvg200: -1,\n    rsi: \"-1\",\n    sharesOutstanding: -1,\n    smaFifty: \"-1\",\n    smaFiveTeen: \"-1\",\n    smaOneHun: \"-1\",\n    smaThirty: \"-1\",\n    smaTwenty: \"-1\",\n    smaTwoHun: \"-1\",\n    stochasticD: \"-1\",\n    stochasticK: \"-1\",\n    stochasticSignal: \"-1\",\n    symbol: \"No Data\",\n    timestamp: -1,\n    volume: -1,\n    vwap: \"-1\",\n    vwmaFifty: \"-1\",\n    vwmaFiveTeen: \"-1\",\n    vwmaOneHun: \"-1\",\n    vwmaThirty: \"-1\",\n    vwmaTwenty: \"-1\",\n    vwmaTwoHun: \"-1\",\n    williamsR: \"-1\",\n    wmaFifty: \"-1\",\n    wmaFiveTeen: \"-1\",\n    wmaOneHun: \"-1\",\n    wmaThirty: \"-1\",\n    wmaTwenty: \"-1\",\n    wmaTwoHun: \"-1\",\n    yearHigh: -1,\n    yearLow: -1,\n    yesterdayVolume: -1,\n  };\n  const holderObjUp = {\n    avgVolume: 1,\n    bbLower: \"1\",\n    bbMiddle: \"1\",\n    bbPercent: \"1\",\n    bbUpper: \"1\",\n    cciTwenty: \"1\",\n    change: 1,\n    changesPercentage: 1,\n    dayHigh: 1,\n    dayLow: 1,\n    earningsAnnouncement: \"1\",\n    emaEight: \"1\",\n    emaFifty: \"1\",\n    emaTwelve: \"1\",\n    emaTwenty: \"1\",\n    emaTwentySix: \"1\",\n    emaTwoHun: \"1\",\n    eps: 1,\n    exchange: \"No Data\",\n    macd: \"1\",\n    macdHistogram: \"1\",\n    macdSignalLine: \"1\",\n    marketCap: 1,\n    name: \"Placeholder for lack of Symbols\",\n    open: 1,\n    pe: 1,\n    previousClose: 1,\n    price: 1,\n    priceAvg50: 1,\n    priceAvg200: 1,\n    rsi: \"1\",\n    sharesOutstanding: 1,\n    smaFifty: \"1\",\n    smaFiveTeen: \"1\",\n    smaOneHun: \"1\",\n    smaThirty: \"1\",\n    smaTwenty: \"1\",\n    smaTwoHun: \"1\",\n    stochasticD: \"1\",\n    stochasticK: \"1\",\n    stochasticSignal: \"1\",\n    symbol: \"No Data\",\n    timestamp: 1,\n    volume: 1,\n    vwap: \"1\",\n    vwmaFifty: \"1\",\n    vwmaFiveTeen: \"1\",\n    vwmaOneHun: \"1\",\n    vwmaThirty: \"1\",\n    vwmaTwenty: \"1\",\n    vwmaTwoHun: \"1\",\n    williamsR: \"1\",\n    wmaFifty: \"1\",\n    wmaFiveTeen: \"1\",\n    wmaOneHun: \"1\",\n    wmaThirty: \"1\",\n    wmaTwenty: \"1\",\n    wmaTwoHun: \"1\",\n    yearHigh: 1,\n    yearLow: 1,\n    yesterdayVolume: 1,\n  };\n\n  if (finalChartFatUp.length < 5) {\n    while (finalChartFatUp.length < 5) {\n      finalChartFatUp.push(holderObjUp);\n    }\n  }\n  if (finalChartFatDown.length < 5) {\n    while (finalChartFatDown.length < 5) {\n      finalChartFatDown.push(holderObjDown);\n    }\n  }\n  // SLIM CHAT DOWN SO IT'S NOT BLOATED\n  let slimChartDown = 4;\n  while (slimChartDown >= 0) {\n    finalChart.unshift(finalChartFatDown[slimChartDown]);\n    slimChartDown--;\n  }\n\n  let slimChartUp = 4;\n  while (slimChartUp >= 0) {\n    finalChart.unshift(finalChartFatUp[slimChartUp]);\n    slimChartUp--;\n  }\n\n  const returnedData = await callback(finalChart, filterUpDownStocks);\n  return returnedData;\n}\n// ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n\n// SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction smaFunction(chartArr, dataPull, newestPull, num) {\n  let culSMA = 0;\n\n  // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n  let fiveTeenSMA = 13;\n  let twentySMA = 18;\n  let thirtySMA = 28;\n  let fiftySMA = 48;\n  let hunSMA = 98;\n  let twoHunSMA = 198;\n\n  try {\n    const todayPricePull = newestPull[0].price;\n    // ------------- 15 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 13) {\n      chartArr[num].smaFiveTeen = \"No Data\";\n    } else {\n      while (fiveTeenSMA >= 0) {\n        culSMA += dataPull.historical[fiveTeenSMA].close;\n        fiveTeenSMA--;\n      }\n      let smaFiveResult = (culSMA + todayPricePull) / 15;\n      chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 20 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 19) {\n      chartArr[num].smaTwenty = \"No Data\";\n    } else {\n      while (twentySMA >= 0) {\n        culSMA += dataPull.historical[twentySMA].close;\n        twentySMA--;\n      }\n      let smaTwentyResult = (culSMA + todayPricePull) / 20;\n      chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 30 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 29) {\n      chartArr[num].smaThirty = \"No Data\";\n    } else {\n      while (thirtySMA >= 0) {\n        culSMA += dataPull.historical[thirtySMA].close;\n        thirtySMA--;\n      }\n      let smaThirtyResult = (culSMA + todayPricePull) / 30;\n      chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 50 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 49) {\n      chartArr[num].smaFifty = \"No Data\";\n    } else {\n      while (fiftySMA >= 0) {\n        culSMA += dataPull.historical[fiftySMA].close;\n        fiftySMA--;\n      }\n      let smaFiftyResult = (culSMA + todayPricePull) / 50;\n      chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 100 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 99) {\n      chartArr[num].smaOneHun = \"No Data\";\n    } else {\n      while (hunSMA >= 0) {\n        culSMA += dataPull.historical[hunSMA].close;\n        hunSMA--;\n      }\n      let smaOneHunResult = (culSMA + todayPricePull) / 100;\n      chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 200 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 199) {\n      chartArr[num].smaTwoHun = \"No Data\";\n    } else {\n      while (twoHunSMA >= 0) {\n        culSMA += dataPull.historical[twoHunSMA].close;\n        twoHunSMA--;\n      }\n      let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n      chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n      culSMA = 0;\n    }\n  } catch (e) {}\n}\n// WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction wmaFunction(chartArr, dataPull, newestPull, num) {\n  // WMA FiveTeen --------------------------------------------------------------------\n  let weight = 14;\n  let wmaInterval = 0;\n  let iWma = 15;\n  try {\n    let wmaCul = newestPull[0].price * 15;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].wmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFiveTeen = wmaCul / iWma;\n      chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n    }\n\n    // WMA Twenty --------------------------------------------------------------------\n    wmaCul = newestPull[0].price * 20;\n    weight = 19;\n    wmaInterval = 0;\n    iWma = 20;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].wmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwenty = wmaCul / iWma;\n      chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n    }\n\n    // WMA THIRTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 30;\n    weight = 29;\n    wmaInterval = 0;\n    iWma = 30;\n\n    if (dataPull.historical.length < 30) {\n      chartArr[num].wmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaThirty = wmaCul / iWma;\n      chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n    }\n\n    // WMA FIFTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 50;\n    weight = 49;\n    wmaInterval = 0;\n    iWma = 50;\n\n    if (dataPull.historical.length < 50) {\n      chartArr[num].wmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFifty = wmaCul / iWma;\n      chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n    }\n\n    // WMA ONE HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 100;\n    weight = 99;\n    wmaInterval = 0;\n    iWma = 100;\n\n    if (dataPull.historical.length < 100) {\n      chartArr[num].wmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaOneHun = wmaCul / iWma;\n      chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n    }\n\n    // WMA TWO HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 200;\n    weight = 199;\n    wmaInterval = 0;\n    iWma = 200;\n\n    if (dataPull.historical.length < 200) {\n      chartArr[num].wmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwoHun = wmaCul / iWma;\n      chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwmaFunction(chartArr, dataPull, newestPull, num) {\n  // VWMA FIVETEEN --------------------------------------------------------------------\n\n  try {\n    let price = 0;\n    let volume = 0;\n    const newPrice = newestPull[0].price;\n    const newVol = newestPull[0].volume;\n\n    let volCul = newestPull[0].volume;\n    let totalCul = newPrice * newVol;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].vwmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n\n      }\n\n      const vwmaFiveTeen = totalCul / volCul;\n      \n      chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n    }\n\n  \n\n    // VWMA TWENTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].vwmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaTwenty = totalCul / volCul;\n     \n      chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n    }\n\n    // VWMA THIRTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 29) {\n      chartArr[num].vwmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaThirty = totalCul / volCul;\n      chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n    }\n\n    // VWMA FIFTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 49) {\n      chartArr[num].vwmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaFifty = totalCul / volCul;\n      chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n    }\n\n    // VWMA ONEHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 99) {\n      chartArr[num].vwmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaOneHun = totalCul / volCul;\n      chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n    }\n\n    // VWMA TWOHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 199) {\n      chartArr[num].vwmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaTwoHun = totalCul / volCul;\n      chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n  let emaEight = 14;\n  let emaTwelve = 22;\n  let emaTwenty = 38;\n  let emaTwentySix = 50;\n  let emaFifty = 98;\n  let emaTwoHun = 398;\n  let prevDayEmaSub = 0;\n  let arrEma = [];\n\n  let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n  let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n  try {\n    const newPrice = newestPull[0].price;\n\n    // EMA EIGHT ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 16) {\n      chartArr[num].emaEight = \"No Data\";\n    } else {\n      while (emaEight >= 15) {\n        prevDayEmaSub += dataPull.historical[emaEight].close;\n        emaEight--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 8;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 9) * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaEight--;\n      while (emaEight >= 0) {\n        let derp =\n          (2 / 9) * (dataPull.historical[emaEight].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaEight--;\n      }\n\n      const finalEma = (2 / 9) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaEight = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n    // EMA TWELVE ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 24) {\n      chartArr[num].emaTwelve = \"No Data\";\n    } else {\n      while (emaTwelve >= 11) {\n        prevDayEmaSub += dataPull.historical[emaTwelve].close;\n        emaTwelve--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n      const subEMA = prevDayEmaSub / 12;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 13) * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwelve--;\n\n      while (emaTwelve >= 0) {\n        let derp =\n          (2 / 13) * (dataPull.historical[emaTwelve].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwelve < 8 && emaTwelve >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwelve.unshift(derp);\n        }\n        emaTwelve--;\n      }\n\n      const finalEma = (2 / 13) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwelve.unshift(finalEma);\n\n      chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 40) {\n      chartArr[num].emaTwenty = \"No Data\";\n    } else {\n      while (emaTwenty >= 19) {\n        prevDayEmaSub += dataPull.historical[emaTwenty].close;\n        emaTwenty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 20;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 21) * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwenty--;\n      while (emaTwenty >= 0) {\n        let derp =\n          (2 / 21) * (dataPull.historical[emaTwenty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwenty--;\n      }\n\n      const finalEma = (2 / 21) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY SIX ----------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 51) {\n      chartArr[num].emaTwentySix = \"No Data\";\n    } else {\n      while (emaTwentySix >= 25) {\n        prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n        emaTwentySix--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 26;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 27) * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwentySix--;\n      while (emaTwentySix >= 0) {\n        let derp =\n          (2 / 27) * (dataPull.historical[emaTwentySix].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwentySix < 8 && emaTwentySix >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwentySix.unshift(derp);\n        }\n        emaTwentySix--;\n      }\n\n      const finalEma = (2 / 27) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwentySix.unshift(finalEma);\n\n      chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA FIFTY -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 100) {\n      chartArr[num].emaFifty = \"No Data\";\n    } else {\n      while (emaFifty >= 49) {\n        prevDayEmaSub += dataPull.historical[emaFifty].close;\n        emaFifty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 50;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 51) * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaFifty--;\n      while (emaFifty >= 0) {\n        let derp =\n          (2 / 51) * (dataPull.historical[emaFifty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaFifty--;\n      }\n\n      const finalEma = (2 / 51) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaFifty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 400) {\n      chartArr[num].emaTwoHun = \"No Data\";\n    } else {\n      while (emaTwoHun >= 199) {\n        prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n        emaTwoHun--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 200;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 201) * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwoHun--;\n      while (emaTwoHun >= 0) {\n        let derp =\n          (2 / 201) * (dataPull.historical[emaTwoHun].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwoHun--;\n      }\n\n      const finalEma = (2 / 201) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n  } catch (e) {}\n\n  // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n  macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n}\n// MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\nfunction macdFunction(chartArr, num, arr1, arr2) {\n  const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n  chartArr[num].macd = macd.toFixed(2);\n  // CALCULATE SIGNAL LINE ----------------\n  let averageMacd = [];\n  let iMacd = 8;\n\n  try {\n    while (iMacd >= 0) {\n      averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n      iMacd--;\n    }\n    let averageSum = averageMacd.reduce((a, b) => a + b);\n    let finalAverageMacd = averageSum / 9;\n    let macdSignalLine =\n      (2 / 9) * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n    chartArr[num].macdSignalLine = macdSignalLine.toFixed(2);\n    // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n    let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n    chartArr[num].macdHistogram = histogram.toFixed(2);\n    // FOR NO DATA TO PULL FROM\n    if (chartArr[num].macdHistogram === \"NaN\") {\n      chartArr[num].macdHistogram = \"No Data\";\n    }\n    if (chartArr[num].macd === \"NaN\") {\n      chartArr[num].macd = \"No Data\";\n    }\n    if (chartArr[num].macdSignalLine === \"NaN\") {\n      chartArr[num].macdSignalLine = \"No Data\";\n    }\n  } catch (e) {}\n}\n// RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction rsiFunction(chartArr, dataPull, newestPull, num) {\n  let iRSI = 13;\n  let iRSIAdjusted = 14;\n  let recentUpper = 0;\n  let recentDowner = 0;\n  let upMove = 0;\n  let downMove = 0;\n  let pastDownPeriod = 0;\n  let pastUpPeriod = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n    if (dataPull.historical.length <= 14) {\n      chartArr[num].rsi = \"No Data\";\n    } else {\n      // LOOP FOR AVERAGE\n      while (iRSI >= 0) {\n        if (\n          dataPull.historical[iRSI].close >\n          dataPull.historical[iRSIAdjusted].close\n        ) {\n          upMove +=\n            dataPull.historical[iRSI].close -\n            dataPull.historical[iRSIAdjusted].close;\n        } else {\n          downMove +=\n            dataPull.historical[iRSIAdjusted].close -\n            dataPull.historical[iRSI].close;\n        }\n        iRSI--;\n        iRSIAdjusted--;\n      }\n\n      let averageUp = upMove / 14;\n      let averageDown = downMove / 14;\n\n      // MOST RECENT DIFFERENCE\n      if (newPrice > dataPull.historical[0].close) {\n        recentUpper = newPrice - dataPull.historical[0].close;\n      } else {\n        recentDowner = dataPull.historical[0].close - newPrice;\n      }\n\n      pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n      pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n\n      let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n      chartArr[num].rsi = rsi.toFixed(2);\n    }\n  } catch (e) {}\n}\n// STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n  let iSO = 13;\n\n  let soLowHolder = [];\n  let soHighHolder = [];\n  let highestHigh = 0;\n  let lowestLow = 0;\n  // FIRST %D\n  let topForm = [];\n  let bottomForm = [];\n  // SECOND %D\n  let topFormTwo = [];\n  let bottomFormTwo = [];\n  // THIRD %D\n  let topFormThree = [];\n  let bottomFormThree = [];\n  // HOLDING SET OF %D FOR 14 3 3\n  let signalLineHolder = [];\n  try {\n    let newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 18) {\n      chartArr[num].stochasticK = \"No Data\";\n    } else {\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n\n      while (iSO >= 0) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      soHighHolder.push(newPrice);\n      soLowHolder.push(newPrice);\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      if (lowestLow === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      if (highestHigh === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      topForm.push(newPrice - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      //FOR %K\n      chartArr[num].stochasticK = (\n        ((newPrice - lowestLow) / (highestHigh - lowestLow)) *\n        100\n      ).toFixed(2);\n\n      // RESET HOLDER AND VARs --------------------------------------------------------\n\n      iSO = 14;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n      while (iSO >= 1) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[0].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[0].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      // RESET HOLDER AND VARs ------------------------------------------------\n\n      iSO = 15;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 2) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[1].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[1].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[1].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      let sumTop = topForm.reduce((a, b) => a + b, 0);\n      let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n\n      let slowD = (sumTop / sumBottom) * 100;\n\n      // FOR %D\n      chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------------------------------\n\n      iSO = 16;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n      while (iSO >= 3) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormTwo.push(dataPull.historical[2].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[2].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------\n\n      iSO = 17;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 4) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormThree.push(dataPull.historical[3].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormThree.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      // ----------- TALLY UP LAST SMOOTHING -------------------------------\n      const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n      let smaD = sumStochD / 3;\n\n      if (smaD < 0) {\n        smaD *= -1;\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      } else {\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      }\n    }\n  } catch (e) {}\n}\n// WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction williamsRFunction(chartArr, dataPull, newestPull, num) {\n  let highs = [];\n  let lows = [];\n  let lowestLow = 0;\n  let highestHigh = 0;\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].williams = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        highs.push(dataPull.historical[i].high);\n        lows.push(dataPull.historical[i].low);\n      }\n\n      highs.push(newPrice);\n      lows.push(newPrice);\n\n      lowestLow = Math.min(...lows);\n      highestHigh = Math.max(...highs);\n\n      const williams =\n        ((highestHigh - dataPull.historical[0].close) /\n          (highestHigh - lowestLow)) *\n        -100;\n\n      chartArr[num].williamsR = williams.toFixed(2);\n    }\n  } catch (e) {}\n}\n// CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction cciFunction(chartArr, dataPull, newestPull, num) {\n  let tpvCul = 0;\n  let tpv = [];\n  let tpvMa = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    let tpvCurrent = newPrice;\n    const recentTpv = newPrice;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].cciTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 19; i++) {\n        const { high, close, low } = dataPull.historical[i];\n        tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n        tpvCurrent = (close + high + low) / 3;\n      }\n      // ---- TPV SMA ------------------------\n      tpvCul = tpv.reduce((a, b) => a + b);\n      tpvMa = tpvCul / 20;\n      // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n      const partOne = recentTpv - tpvMa;\n\n      const meanD = tpv.map((x) => x - tpvMa);\n      const meanDMap = meanD.map((x) => Math.abs(x));\n      const meanDSum = meanDMap.reduce((a, b) => a + b);\n      const meanDiv = meanDSum / 20;\n      // PART TWO OF FORMULA --------------\n      const partTwo = meanDiv * 0.015;\n      // CCI ------------------------------\n      const cci = partOne / partTwo;\n\n      chartArr[num].cciTwenty = cci.toFixed(2);\n    }\n  } catch (e) {}\n}\n// BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n  let smaCul = 0;\n  let closeHolder = [];\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].bbUpper = \"No Data\";\n      chartArr[num].bbLower = \"No Data\";\n      chartArr[num].bbMiddle = \"No Data\";\n    } else {\n      let closeP = newPrice;\n      for (let i = 0; i <= 19; i++) {\n        closeHolder.push(closeP);\n        smaCul += closeP;\n        closeP = dataPull.historical[i].close;\n      }\n      // STANDARD DEVIATION CALC --------------------------------\n      const smaTwenty = smaCul / 20;\n\n      const priceAdj = closeHolder.map((x) => x - smaTwenty);\n\n      const priceAdjAbs = priceAdj.map((x) => Math.abs(x));\n\n      const priceAdjSqrt = priceAdjAbs.map((x) => x * x);\n\n      const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n\n      const partTwoDev = partOneDev / 20;\n      const standardDev = Math.sqrt(partTwoDev);\n      // BB BAND CALC --------------------------------------------\n      const bbUpper = smaTwenty + standardDev * 2;\n      const bbLower = smaTwenty - standardDev * 2;\n\n      const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n\n      chartArr[num].bbUpper = bbUpper.toFixed(2);\n      chartArr[num].bbLower = bbLower.toFixed(2);\n      chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n      chartArr[num].bbPercent = bbPercent.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwapFunction(chartArr, dataPull, num) {\n  // ----------- VWAP CALUC -------------------------------------------\n  let dayLengthPeriod = 0;\n  let tpvCul = 0;\n  let volumeCul = 0;\n  let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n  try {\n    // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n    while (dataPull[dayLengthPeriod].date.slice(0, 10) == dateObj.newDateString) {\n      dayLengthPeriod++;\n    }\n  \n    // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n    for (let i = 0; i < dayLengthPeriod; i++) {\n      const { volume, high, close, low, date } = dataPull[i];\n      let tpv = (high + low + close) / 3;\n      if (date.slice(0, 10) == dateObj.newDateString) {\n        tpvCul += tpv * volume;\n        volumeCul += volume;\n      }\n      var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n      tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n    }\n    let vwap = tempVWAP[0].toFixed(2);\n    chartArr[num].vwap = vwap;\n  } catch (e) {\n  }\n}\n// SET VOLUME FOR LATER\nfunction setVolume(chartArr, dataPull, newestPull, num) {\n  // SET RECENT YESTERDAY VOLUME\n  try {\n    if (dataPull.historical.length <= 0) {\n      chartArr[num].yesterdayVolume = 0;\n    } else {\n      chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n      if (dateObj.marketDay == 0 || dateObj.marketDay == 6) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (dateObj.marketDay >= 1 && dateObj.marketDay <= 5 && dateObj.timeNum < 930) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (dateObj.timeNum > 1830) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n    }\n    if (newestPull.length < 0) {\n      chartArr[num].volume = 0;\n    } else {\n      // SET RECENT VOLUME\n      chartArr[num].volume = newestPull[0].volume;\n    }\n  } catch (e) {}\n}\n\n// TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\nasync function technicalIndicators(finalArr, callback) {\n  let j = 0;\n\n  while (j < finalArr.length) {\n    // LOOP FOR TECHNICAL SYMBOL\n\n    // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n    const { symbol } = finalArr[j];\n\n    //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n    const resSMA = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataSMA).length) {\n        console.log(\"no SMA Pull data found\");\n      }\n    } catch (e) {}\n\n    //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n    const resOscPulled = await fetch(\n      `https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataRecentPulled = await resOscPulled.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataRecentPulled).length) {\n        console.log(\"no Recent Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    const resVWAP = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataVWAP = await resVWAP.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataVWAP).length) {\n        console.log(\"no VWAP Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    vwapFunction(finalArr, dataVWAP, j);\n\n    // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    smaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    wmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    vwmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n    emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction);\n\n    // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    rsiFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n\n    // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    williamsRFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    cciFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // SET VOLUME PROPERTIES\n    setVolume(finalArr, dataSMA, dataRecentPulled, j);\n\n    j++; // UPDATE WHILE LOOP\n  } // THIS IS THE END OF LOOP\n  const returnedData = await callback(finalArr, buildIt);\n  return returnedData;\n  \n}\nasync function filterUpDownStocks(finalArr, callback) {\n  let stocksUp = [];\n  let stocksDown = [];\n\n  let j = 0;\n\n  while (j < finalArr.length) {\n    const { changesPercentage } = finalArr[j];\n\n    if (changesPercentage > 0) {\n      stocksUp.push(finalArr[j]);\n    } else {\n      stocksDown.push(finalArr[j]);\n    }\n\n    j++;\n  } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n\n  // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n  for (let i = 0; i < stocksUp.length; i++) {\n    // UPPER ------------------------------------------------------------------------------\n    stocksUp[i].symbolUp = stocksUp[i].symbol;\n    delete stocksUp[i].symbol;\n    stocksUp[i].changeUp = stocksUp[i].change;\n    delete stocksUp[i].change;\n    stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n    delete stocksUp[i].avgVolume;\n    stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n    delete stocksUp[i].changesPercentage;\n    stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n    delete stocksUp[i].emaEight;\n    stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n    delete stocksUp[i].emaTwelve;\n    stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n    delete stocksUp[i].emaTwenty;\n    stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n    delete stocksUp[i].emaTwentySix;\n    stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n    delete stocksUp[i].emaFifty;\n    stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n    delete stocksUp[i].emaTwoHun;\n    stocksUp[i].macdUp = stocksUp[i].macd;\n    delete stocksUp[i].macd;\n    stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n    delete stocksUp[i].macdHistogram;\n    stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n    delete stocksUp[i].macdSignalLine;\n    stocksUp[i].priceUp = stocksUp[i].price;\n    delete stocksUp[i].price;\n    stocksUp[i].rsiUp = stocksUp[i].rsi;\n    delete stocksUp[i].rsi;\n    stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n    delete stocksUp[i].smaFiveTeen;\n    stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n    delete stocksUp[i].smaTwenty;\n    stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n    delete stocksUp[i].smaThirty;\n    stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n    delete stocksUp[i].smaFifty;\n    stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n    delete stocksUp[i].smaOneHun;\n    stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n    delete stocksUp[i].smaTwoHun;\n    stocksUp[i].volumeUp = stocksUp[i].volume;\n    delete stocksUp[i].volume;\n    stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n    delete stocksUp[i].yesterdayVolume;\n    stocksUp[i].vwapUp = stocksUp[i].vwap;\n    delete stocksUp[i].vwap;\n    stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n    delete stocksUp[i].stochasticD;\n    stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n    delete stocksUp[i].stochasticK;\n    stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n    delete stocksUp[i].stochasticSignal;\n    stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n    delete stocksUp[i].wmaFiveTeen;\n    stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n    delete stocksUp[i].wmaTwenty;\n    stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n    delete stocksUp[i].wmaThirty;\n    stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n    delete stocksUp[i].wmaFifty;\n    stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n    delete stocksUp[i].wmaOneHun;\n    stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n    delete stocksUp[i].wmaTwoHun;\n    stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n    delete stocksUp[i].vwmaFiveTeen;\n    stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n    delete stocksUp[i].vwmaTwenty;\n    stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n    delete stocksUp[i].vwmaThirty;\n    stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n    delete stocksUp[i].vwmaFifty;\n    stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n    delete stocksUp[i].vwmaOneHun;\n    stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n    delete stocksUp[i].vwmaTwoHun;\n    stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n    delete stocksUp[i].williamsR;\n    stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n    delete stocksUp[i].cciTwenty;\n    stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n    delete stocksUp[i].bbUpper;\n    stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n    delete stocksUp[i].bbLower;\n    stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n    delete stocksUp[i].bbMiddle;\n    stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n    delete stocksUp[i].bbPercent;\n    // DOWNERS ------------------------------------------------------------------------------\n    stocksDown[i].symbolDown = stocksDown[i].symbol;\n    delete stocksDown[i].symbol;\n    stocksDown[i].changeDown = stocksDown[i].change;\n    delete stocksDown[i].change;\n    stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n    delete stocksDown[i].avgVolume;\n    stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n    delete stocksDown[i].changesPercentage;\n    stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n    delete stocksDown[i].emaEight;\n    stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n    delete stocksDown[i].emaTwelve;\n    stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n    delete stocksDown[i].emaTwenty;\n    stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n    delete stocksDown[i].emaTwentySix;\n    stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n    delete stocksDown[i].emaFifty;\n    stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n    delete stocksDown[i].emaTwoHun;\n    stocksDown[i].macdDown = stocksDown[i].macd;\n    delete stocksDown[i].macd;\n    stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n    delete stocksDown[i].macdHistogram;\n    stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n    delete stocksDown[i].macdSignalLine;\n    stocksDown[i].priceDown = stocksDown[i].price;\n    delete stocksDown[i].price;\n    stocksDown[i].rsiDown = stocksDown[i].rsi;\n    delete stocksDown[i].rsi;\n    stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n    delete stocksDown[i].smaFiveTeen;\n    stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n    delete stocksDown[i].smaTwenty;\n    stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n    delete stocksDown[i].smaThirty;\n    stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n    delete stocksDown[i].smaFifty;\n    stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n    delete stocksDown[i].smaOneHun;\n    stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n    delete stocksDown[i].smaTwoHun;\n    stocksDown[i].volumeDown = stocksDown[i].volume;\n    delete stocksDown[i].volume;\n    stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n    delete stocksDown[i].yesterdayVolume;\n    stocksDown[i].vwapDown = stocksDown[i].vwap;\n    delete stocksDown[i].vwap;\n    stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n    delete stocksDown[i].stochasticD;\n    stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n    delete stocksDown[i].stochasticK;\n    stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n    delete stocksDown[i].stochasticSignal;\n    stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n    delete stocksDown[i].wmaFiveTeen;\n    stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n    delete stocksDown[i].wmaTwenty;\n    stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n    delete stocksDown[i].wmaThirty;\n    stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n    delete stocksDown[i].wmaFifty;\n    stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n    delete stocksDown[i].wmaOneHun;\n    stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n    delete stocksDown[i].wmaTwoHun;\n    stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n    delete stocksDown[i].vwmaFiveTeen;\n    stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n    delete stocksDown[i].vwmaTwenty;\n    stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n    delete stocksDown[i].vwmaThirty;\n    stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n    delete stocksDown[i].vwmaFifty;\n    stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n    delete stocksDown[i].vwmaOneHun;\n    stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n    delete stocksDown[i].vwmaTwoHun;\n    stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n    delete stocksDown[i].williamsR;\n    stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n    delete stocksDown[i].cciTwenty;\n    stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n    delete stocksDown[i].bbUpper;\n    stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n    delete stocksDown[i].bbLower;\n    stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n    delete stocksDown[i].bbMiddle;\n    stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n    delete stocksDown[i].bbPercent;\n  }\n  const returnedData = await callback(stocksUp, stocksDown);\n  return returnedData;\n}\nfunction buildIt(arrUp, arrDown) {\n  for (let i = 0; i < arrUp.length; i++) {\n    // DECONSTRUCTING UP AND DOWN VAR\n   var {\n      avgVolumeUp,\n      volumeYesterdayUp,\n      changeUp,\n      changesPercentageUp,\n      priceUp,\n      symbolUp,\n      volumeUp,\n      vwapUp,\n      smaFiveTeenUp,\n      smaTwentyUp,\n      smaThirtyUp,\n      smaFiftyUp,\n      smaOneHunUp,\n      smaTwoHunUp,\n      emaEightUp,\n      emaTwelveUp,\n      emaTwentyUp,\n      emaTwentySixUp,\n      emaFiftyUp,\n      emaTwoHunUp,\n      wmaFiveTeenUp,\n      wmaTwentyUp,\n      wmaThirtyUp,\n      wmaFiftyUp,\n      wmaOneHunUp,\n      wmaTwoHunUp,\n      vwmaFiveTeenUp,\n      vwmaTwentyUp,\n      vwmaThirtyUp,\n      vwmaFiftyUp,\n      vwmaOneHunUp,\n      vwmaTwoHunUp,\n      macdUp,\n      macdHistogramUp,\n      macdSignalLineUp,\n      rsiUp,\n      stochasticDUp,\n      stochasticKUp,\n      stochasticSignalUp,\n      cciUp,\n      bbMiddleUp,\n      bbLowerUp,\n      bbUpperUp,\n      bbPercentUp,\n      williamsRUp,\n    } = arrUp[i];\n    var {\n      avgVolumeDown,\n      volumeYesterdayDown,\n      changeDown,\n      changesPercentageDown,\n      priceDown,\n      symbolDown,\n      volumeDown,\n      vwapDown,\n      smaFiveTeenDown,\n      smaTwentyDown,\n      smaThirtyDown,\n      smaFiftyDown,\n      smaOneHunDown,\n      smaTwoHunDown,\n      emaEightDown,\n      emaTwelveDown,\n      emaTwentyDown,\n      emaTwentySixDown,\n      emaFiftyDown,\n      emaTwoHunDown,\n      wmaFiveTeenDown,\n      wmaTwentyDown,\n      wmaThirtyDown,\n      wmaFiftyDown,\n      wmaOneHunDown,\n      wmaTwoHunDown,\n      vwmaFiveTeenDown,\n      vwmaTwentyDown,\n      vwmaThirtyDown,\n      vwmaFiftyDown,\n      vwmaOneHunDown,\n      vwmaTwoHunDown,\n      macdDown,\n      macdHistogramDown,\n      macdSignalLineDown,\n      rsiDown,\n      stochasticDDown,\n      stochasticKDown,\n      stochasticSignalDown,\n      cciDown,\n      bbMiddleDown,\n      bbLowerDown,\n      bbUpperDown,\n      bbPercentDown,\n      williamsRDown,\n    } = arrDown[i];\n\n    // ADJUST TO FIXED --------------------------------------------------------\n    if (arrUp[i].priceUp == undefined) {\n      arrUp[i].priceUp = 0;\n    }\n    if (arrDown[i].priceDown == undefined) {\n      arrDown[i].priceDown = 0;\n    }\n\n    priceUp = priceUp.toFixed(2);\n    priceDown = priceDown.toFixed(2);\n    if (arrUp[i].changesPercentageUp == undefined) {\n      arrUp[i].changesPercentageUp = 0;\n    }\n    if (arrDown[i].changesPercentageDown == undefined) {\n      arrDown[i].changesPercentageDown = 0;\n    }\n    changesPercentageUp = changesPercentageUp.toFixed(2);\n    changesPercentageDown = changesPercentageDown.toFixed(2);\n\n    if (arrUp[i].changeUp == undefined) {\n      arrUp[i].changeUp = 0;\n    }\n    if (arrDown[i].changeDown == undefined) {\n      arrDown[i].changeDown = 0;\n    }\n    changeUp = changeUp.toFixed(2);\n    changeDown = changeDown.toFixed(2);\n    // UP VOLUME INCREASE ----------------------------\n    if (arrUp[i].volumeUp == undefined) {\n      arrUp[i].volumeUp = 0;\n    }\n    if (arrDown[i].volumeDown == undefined) {\n      arrDown[i].volumeDown = 0;\n    }\n\n    var volumeIncreaseUp = 0;\n\n    if (volumeUp > avgVolumeUp) {\n      let increase = volumeUp - avgVolumeUp;\n      volumeIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeUp;\n      volumeIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n    // DOWN VOLUME INCREASE ----------------------------\n    var volumeIncreaseDown = 0;\n\n    if (volumeDown > avgVolumeDown) {\n      let increase = volumeDown - avgVolumeDown;\n      volumeIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeDown;\n      volumeIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n    volumeIncreaseUp = volumeIncreaseUp.toFixed(2);\n\n    // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n\n    // YESTERDAY UP VOLUME INCREASE ----------------------------\n    if (arrUp[i].volumeYesterdayUp == undefined) {\n      arrUp[i].volumeYesterdayUp = 0;\n    }\n    if (volumeYesterdayDown == undefined) {\n      volumeYesterdayDown = 0;\n    }\n    if (arrUp[i].avgVolumeUp == undefined) {\n      arrUp[i].avgVolumeUp = 0;\n    }\n    if (arrDown[i].avgVolumeDown == undefined) {\n      arrDown[i].avgVolumeDown = 0;\n    }\n    var yesterdayVolIncreaseUp = 0;\n\n    if (volumeYesterdayUp > avgVolumeUp) {\n      let increase = volumeYesterdayUp - avgVolumeUp;\n      yesterdayVolIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeYesterdayUp;\n      yesterdayVolIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n\n    yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2);\n\n    // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n    var yesterdayVolIncreaseDown = 0;\n\n    if (volumeYesterdayDown > avgVolumeDown) {\n      let increase = volumeYesterdayDown - avgVolumeDown;\n      yesterdayVolIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeYesterdayDown;\n      yesterdayVolIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2);\n\n    // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n    var changeDownAdjusted = changeDown;\n\n    if (changeDownAdjusted < 0) {\n      changeDownAdjusted = changeDownAdjusted * -1;\n      changeDownAdjusted = changeDownAdjusted.toFixed(2);\n    }\n    // NaN CHECK ----------------------------------------\n    if (isNaN(yesterdayVolIncreaseDown)) {\n      yesterdayVolIncreaseDown = \"No Data\";\n    }\n    if (isNaN(yesterdayVolIncreaseUp)) {\n      yesterdayVolIncreaseUp = \"No Data\";\n    }\n    // ADJUST TO POSITIVE\n    if (stochasticDUp < 0) {\n      stochasticDUp = stochasticDUp * -1;\n    }\n    if (stochasticKUp < 0) {\n      stochasticKUp = stochasticKUp * -1;\n    }\n    if (stochasticDDown < 0) {\n      stochasticDDown = stochasticDDown * -1;\n    }\n    if (stochasticKDown < 0) {\n      stochasticKDown = stochasticKDown * -1;\n    }\n    // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n    if (arrUp[i].avgVolumeUp == undefined) {\n      arrUp[i].avgVolumeUp = \"No Data\";\n    }\n    if (arrDown[i].avgVolumeDown == undefined) {\n      arrDown[i].avgVolumeDown = \"No Data\";\n    }\n    if (arrUp[i].volumeUp == undefined) {\n      arrUp[i].volumeUp = \"No Data\";\n    }\n    if (arrDown[i].volumeDown == undefined) {\n      arrDown[i].volumeDown = \"No Data\";\n    }\n    if (arrUp[i].volumeIncreaseUp == undefined) {\n      arrUp[i].volumeIncreaseUp = \"No Data\";\n    }\n    if (arrDown[i].volumeIncreaseDown == undefined) {\n      arrDown[i].volumeIncreaseDown = \"No Data\";\n    }\n    if (arrUp[i].volumeYesterdayUp == undefined) {\n      arrUp[i].volumeYesterdayUp = \"No Data\";\n    }\n    if (arrDown[i].volumeYesterdayDown == undefined) {\n      arrDown[i].volumeYesterdayDown = \"No Data\";\n    }\n\n    if (arrUp[i].smaFiveTeenUp == undefined) {\n      arrUp[i].smaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].smaFiveTeenDown == undefined) {\n      arrDown[i].smaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].smaTwentyUp == undefined) {\n      arrUp[i].smaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].smaTwentyDown == undefined) {\n      arrDown[i].smaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].smaThirtyUp == undefined) {\n      arrUp[i].smaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].smaThirtyDown == undefined) {\n      arrDown[i].smaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].smaFiftyUp == undefined) {\n      arrUp[i].smaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].smaFiftyDown == undefined) {\n      arrDown[i].smaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].smaOneHunUp == undefined) {\n      arrUp[i].smaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].smaOneHunDown == undefined) {\n      arrDown[i].smaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].smaTwoHunUp == undefined) {\n      arrUp[i].smaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].smaTwoHunDown == undefined) {\n      arrDown[i].smaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].emaEightUp == undefined) {\n      arrUp[i].emaEightUp = \"No Data\";\n    }\n    if (arrDown[i].emaEightDown == undefined) {\n      arrDown[i].emaEightDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwelveUp == undefined) {\n      arrUp[i].emaTwelveUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwelveDown == undefined) {\n      arrDown[i].emaTwelveDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwentyUp == undefined) {\n      arrUp[i].emaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwentyDown == undefined) {\n      arrDown[i].emaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwentySixUp == undefined) {\n      arrUp[i].emaTwentySixUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwentySixDown == undefined) {\n      arrDown[i].emaTwentySixDown = \"No Data\";\n    }\n    if (arrUp[i].emaFiftyUp == undefined) {\n      arrUp[i].emaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].emaFiftyDown == undefined) {\n      arrDown[i].emaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwoHunUp == undefined) {\n      arrUp[i].emaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwoHunDown == undefined) {\n      arrDown[i].emaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].wmaFiveTeenUp == undefined) {\n      arrUp[i].wmaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].wmaFiveTeenDown == undefined) {\n      arrDown[i].wmaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].wmaTwentyUp == undefined) {\n      arrUp[i].wmaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaTwentyDown == undefined) {\n      arrDown[i].wmaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaThirtyUp == undefined) {\n      arrUp[i].wmaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaThirtyDown == undefined) {\n      arrDown[i].wmaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaFiftyUp == undefined) {\n      arrUp[i].wmaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaFiftyDown == undefined) {\n      arrDown[i].wmaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaOneHunUp == undefined) {\n      arrUp[i].wmaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].wmaOneHunDown == undefined) {\n      arrDown[i].wmaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].wmaTwoHunUp == undefined) {\n      arrUp[i].wmaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].wmaTwoHunDown == undefined) {\n      arrDown[i].wmaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].vwmaFiveTeenUp == undefined) {\n      arrUp[i].vwmaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaFiveTeenDown == undefined) {\n      arrDown[i].vwmaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaTwentyUp == undefined) {\n      arrUp[i].vwmaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaTwentyDown == undefined) {\n      arrDown[i].vwmaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaThirtyUp == undefined) {\n      arrUp[i].vwmaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaThirtyDown == undefined) {\n      arrDown[i].vwmaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaFiftyUp == undefined) {\n      arrUp[i].vwmaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaFiftyDown == undefined) {\n      arrDown[i].vwmaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaOneHunUp == undefined) {\n      arrUp[i].vwmaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaOneHunDown == undefined) {\n      arrDown[i].vwmaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaTwoHunUp == undefined) {\n      arrUp[i].vwmaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaTwoHunDown == undefined) {\n      arrDown[i].vwmaTwoHunDown = \"No Data\";\n    }\n\n    if (arrDown[i].vwapDown == undefined) {\n      arrDown[i].vwapDown = \"No Data\";\n    }\n    if (arrUp[i].vwapUp == undefined) {\n      arrUp[i].vwapUp = \"No Data\";\n    }\n\n    if (arrDown[i].macdDown == undefined) {\n      arrDown[i].macdDown = \"No Data\";\n    }\n    if (arrUp[i].macdUp == undefined) {\n      arrUp[i].macdUp = \"No Data\";\n    }\n\n    if (arrDown[i].rsiDown == undefined) {\n      arrDown[i].rsiDown = \"No Data\";\n    }\n    if (arrUp[i].rsiUp == undefined) {\n      arrUp[i].rsiUp = \"No Data\";\n    }\n    if (arrDown[i].cciDown == undefined) {\n      arrDown[i].cciDown = \"No Data\";\n    }\n    if (arrUp[i].cciUp == undefined) {\n      arrUp[i].cciUp = \"No Data\";\n    }\n    if (arrDown[i].williamsRDown == undefined) {\n      arrDown[i].williamsRDown = \"No Data\";\n    }\n    if (arrUp[i].williamsRUp == undefined) {\n      arrUp[i].williamsRUp = \"No Data\";\n    }\n    if (arrUp[i].stochasticKUp == undefined) {\n      arrUp[i].stochasticKUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticKDown == undefined) {\n      arrDown[i].stochasticKDown = \"No Data\";\n    }\n    if (arrUp[i].stochasticDUp == undefined) {\n      arrUp[i].stochasticDUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticDDown == undefined) {\n      arrDown[i].stochasticDDown = \"No Data\";\n    }\n    if (arrUp[i].stochasticSignalUp == undefined) {\n      arrUp[i].stochasticSignalUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticSignalDown == undefined) {\n      arrDown[i].stochasticSignalDown = \"No Data\";\n    }\n\n    if (arrDown[i].bbMiddleDown == undefined) {\n      arrDown[i].bbMiddleDown = \"No Data\";\n    }\n    if (arrUp[i].bbMiddleUp == undefined) {\n      arrUp[i].bbMiddleUp = \"No Data\";\n    }\n    if (arrDown[i].bbLowerDown == undefined) {\n      arrDown[i].bbLowerDown = \"No Data\";\n    }\n    if (arrUp[i].bbLowerUp == undefined) {\n      arrUp[i].bbLowerUp = \"No Data\";\n    }\n    if (arrDown[i].bbUpperDown == undefined) {\n      arrDown[i].bbUpperDown = \"No Data\";\n    }\n    if (arrUp[i].bbUpperUp == undefined) {\n      arrUp[i].bbUpperUp = \"No Data\";\n    }\n    if (arrDown[i].bbPercentDown == undefined) {\n      arrDown[i].bbPercentDown = \"No Data\";\n    }\n\n    if (arrUp[i].bbPercentUp == undefined) {\n      arrUp[i].bbPercentUp = \"No Data\";\n    }\n    if (arrDown[i].macdHistogramDown == undefined) {\n      arrDown[i].macdHistogramDown = \"No Data\";\n    }\n    if (arrDown[i].macdSignalLineDown == undefined) {\n      arrDown[i].macdSignalLineDown = \"No Data\";\n    }\n    if (arrUp[i].macdHistogramUp == undefined) {\n      arrUp[i].macdHistogramUp = \"No Data\";\n    }\n    if (arrUp[i].macdSignalLineUp == undefined) {\n      arrUp[i].macdSignalLineUp = \"No Data\";\n    }\n    if (arrUp[i].symbolUp == undefined) {\n      arrUp[i].symbolUp = \"No Data\";\n    }\n    if (arrDown[i].symbolDown == undefined) {\n      arrDown[i].symbolDown = \"No Data\";\n    }\n\n    arrUp[i].volumeIncreaseToday = volumeIncreaseUp\n    arrUp[i].volumeIncreaseYesterday = yesterdayVolIncreaseUp\n    arrDown[i].volumeIncreaseToday = volumeIncreaseDown\n    arrDown[i].volumeIncreaseYesterday = yesterdayVolIncreaseDown\n  }\n \n \n  for (let i = 0; i < arrUp.length; i++) {\n    // // UPPER ------------------------------------------------------------------------------\n\n    arrUp[i].symbol = arrUp[i].symbolUp;\n    delete arrUp[i].symbolUp;\n    arrUp[i].change = arrUp[i].changeUp;\n    delete arrUp[i].changeUp;\n    arrUp[i].avgVolume = arrUp[i].avgVolumeUp;\n    delete arrUp[i].avgVolumeUp;\n    arrUp[i].changesPercentage = arrUp[i].changesPercentageUp;\n    delete arrUp[i].changesPercentageUp;\n    arrUp[i].emaEight = arrUp[i].emaEightUp;\n    delete arrUp[i].emaEightUp;\n    arrUp[i].emaTwelve = arrUp[i].emaTwelveUp;\n    delete arrUp[i].emaTwelveUp;\n    arrUp[i].emaTwenty = arrUp[i].emaTwentyUp;\n    delete arrUp[i].emaTwentyUp;\n    arrUp[i].emaTwentySix = arrUp[i].emaTwentySixUp;\n    delete arrUp[i].emaTwentySixUp;\n    arrUp[i].emaFifty = arrUp[i].emaFiftyUp;\n    delete arrUp[i].emaFiftyUp;\n    arrUp[i].emaTwoHun = arrUp[i].emaTwoHunUp;\n    delete arrUp[i].emaTwoHunUp;\n    arrUp[i].macd = arrUp[i].macdUp;\n    delete arrUp[i].macdUp;\n    arrUp[i].macdHistogram = arrUp[i].macdHistogramUp;\n    delete arrUp[i].macdHistogramUp;\n    arrUp[i].macdSignalLine = arrUp[i].macdSignalLineUp;\n    delete arrUp[i].macdSignalLineUp;\n    arrUp[i].price = arrUp[i].priceUp;\n    delete arrUp[i].priceUp;\n    arrUp[i].rsi = arrUp[i].rsiUp;\n    delete arrUp[i].rsiUp;\n    arrUp[i].smaFiveTeen = arrUp[i].smaFiveTeenUp;\n    delete arrUp[i].smaFiveTeenUp;\n    arrUp[i].smaTwenty = arrUp[i].smaTwentyUp;\n    delete arrUp[i].smaTwentyUp;\n    arrUp[i].smaThirty = arrUp[i].smaThirtyUp;\n    delete arrUp[i].smaThirtyUp;\n    arrUp[i].smaFifty = arrUp[i].smaFiftyUp;\n    delete arrUp[i].smaFiftyUp;\n    arrUp[i].smaOneHun = arrUp[i].smaOneHunUp;\n    delete arrUp[i].smaOneHunUp;\n    arrUp[i].smaTwoHun = arrUp[i].smaTwoHunUp;\n    delete arrUp[i].smaTwoHunUp;\n    arrUp[i].volume = arrUp[i].volumeUp;\n    delete arrUp[i].volumeUp;\n    arrUp[i].volumeYesterday = arrUp[i].volumeYesterdayUp;\n    delete arrUp[i].volumeYesterdayUp;\n    arrUp[i].vwap = arrUp[i].vwapUp;\n    delete arrUp[i].vwapUp;\n    arrUp[i].stochasticD = arrUp[i].stochasticDUp;\n    delete arrUp[i].stochasticDUp;\n    arrUp[i].stochasticK = arrUp[i].stochasticKUp;\n    delete arrUp[i].stochasticKUp;\n    arrUp[i].stochasticSignal = arrUp[i].stochasticSignalUp;\n    delete arrUp[i].stochasticSignalUp;\n    arrUp[i].wmaFiveTeen = arrUp[i].wmaFiveTeenUp;\n    delete arrUp[i].wmaFiveTeenUp;\n    arrUp[i].wmaTwenty = arrUp[i].wmaTwentyUp;\n    delete arrUp[i].wmaTwentyUp;\n    arrUp[i].wmaThirty = arrUp[i].wmaThirtyUp;\n    delete arrUp[i].wmaThirtyUp;\n    arrUp[i].wmaFifty = arrUp[i].wmaFiftyUp;\n    delete arrUp[i].wmaFiftyUp;\n    arrUp[i].wmaOneHun = arrUp[i].wmaOneHunUp;\n    delete arrUp[i].wmaOneHunUp;\n    arrUp[i].wmaTwoHun = arrUp[i].wmaTwoHunUp;\n    delete arrUp[i].wmaTwoHunUp;\n    arrUp[i].vwmaFiveTeen = arrUp[i].vwmaFiveTeenUp;\n    delete arrUp[i].vwmaFiveTeenUp;\n    arrUp[i].vwmaTwenty = arrUp[i].vwmaTwentyUp;\n    delete arrUp[i].vwmaTwentyUp;\n    arrUp[i].vwmaThirty = arrUp[i].vwmaThirtyUp;\n    delete arrUp[i].vwmaThirtyUp;\n    arrUp[i].vwmaFifty = arrUp[i].vwmaFiftyUp;\n    delete arrUp[i].vwmaFiftyUp;\n    arrUp[i].vwmaOneHun = arrUp[i].vwmaOneHunUp;\n    delete arrUp[i].vwmaOneHunUp;\n    arrUp[i].vwmaTwoHun = arrUp[i].vwmaTwoHunUp;\n    delete arrUp[i].vwmaTwoHunUp;\n    arrUp[i].williamsR = arrUp[i].williamsRUp;\n    delete arrUp[i].williamsRUp;\n    arrUp[i].cciTwenty = arrUp[i].cciUp;\n    delete arrUp[i].cciUp;\n    arrUp[i].bbUpper = arrUp[i].bbUpperUp;\n    delete arrUp[i].bbUpperUp;\n    arrUp[i].bbLower = arrUp[i].bbLowerUp;\n    delete arrUp[i].bbLowerUp;\n    arrUp[i].bbMiddle = arrUp[i].bbMiddleUp;\n    delete arrUp[i].bbMiddleUp;\n    arrUp[i].bbPercent = arrUp[i].bbPercentUp;\n    delete arrUp[i].bbPercentUp;\n\n    if (arrUp[i].bbPercent == undefined) {\n      arrUp[i].bbPercent = 'No Data'\n    }\n  }\n  for (let i = 0; i < arrDown.length; i++) {\n    // DOWNERS ------------------------------------------------------------------------------\n\n    arrDown[i].symbol = arrDown[i].symbolDown;\n    delete arrDown[i].symbolDown;\n    arrDown[i].change = arrDown[i].changeDown;\n    delete arrDown[i].changeDown;\n    arrDown[i].avgVolume = arrDown[i].avgVolumeDown;\n    delete arrDown[i].avgVolumeDown;\n    arrDown[i].changesPercentage = arrDown[i].changesPercentageDown;\n    delete arrDown[i].changesPercentageDown;\n    arrDown[i].emaEight = arrDown[i].emaEightDown;\n    delete arrDown[i].emaEightDown;\n    arrDown[i].emaTwelve = arrDown[i].emaTwelveDown;\n    delete arrDown[i].emaTwelveDown;\n    arrDown[i].emaTwenty = arrDown[i].emaTwentyDown;\n    delete arrDown[i].emaTwentyDown;\n    arrDown[i].emaTwentySix = arrDown[i].emaTwentySixDown;\n    delete arrDown[i].emaTwentySixDown;\n    arrDown[i].emaFifty = arrDown[i].emaFiftyDown;\n    delete arrDown[i].emaFiftyDown;\n    arrDown[i].emaTwoHun = arrDown[i].emaTwoHunDown;\n    delete arrDown[i].emaTwoHunDown;\n    arrDown[i].macd = arrDown[i].macdDown;\n    delete arrDown[i].macdDown;\n    arrDown[i].macdHistogram = arrDown[i].macdHistogramDown;\n    delete arrDown[i].macdHistogramDown;\n    arrDown[i].macdSignalLine = arrDown[i].macdSignalLineDown;\n    delete arrDown[i].macdSignalLineDown;\n    arrDown[i].price = arrDown[i].priceDown;\n    delete arrDown[i].priceDown;\n    arrDown[i].rsi = arrDown[i].rsiDown;\n    delete arrDown[i].rsiDown;\n    arrDown[i].smaFiveTeen = arrDown[i].smaFiveTeenDown;\n    delete arrDown[i].smaFiveTeenDown;\n    arrDown[i].smaTwenty = arrDown[i].smaTwentyDown;\n    delete arrDown[i].smaTwentyDown;\n    arrDown[i].smaThirty = arrDown[i].smaThirtyDown;\n    delete arrDown[i].smaThirtyDown;\n    arrDown[i].smaFifty = arrDown[i].smaFiftyDown;\n    delete arrDown[i].smaFiftyDown;\n    arrDown[i].smaOneHun = arrDown[i].smaOneHunDown;\n    delete arrDown[i].smaOneHunDown;\n    arrDown[i].smaTwoHun = arrDown[i].smaTwoHunDown;\n    delete arrDown[i].smaTwoHunDown;\n    arrDown[i].volume = arrDown[i].volumeDown;\n    delete arrDown[i].volumeDown;\n    arrDown[i].volumeYesterday = arrDown[i].volumeYesterdayDown;\n    delete arrDown[i].volumeYesterdayDown;\n    arrDown[i].vwap = arrDown[i].vwapDown;\n    delete arrDown[i].vwapDown;\n    arrDown[i].stochasticD = arrDown[i].stochasticDDown;\n    delete arrDown[i].stochasticDDown;\n    arrDown[i].stochasticK = arrDown[i].stochasticKDown;\n    delete arrDown[i].stochasticKDown;\n    arrDown[i].stochasticSignal = arrDown[i].stochasticSignalDown;\n    delete arrDown[i].stochasticSignalDown;\n    arrDown[i].wmaFiveTeen = arrDown[i].wmaFiveTeenDown;\n    delete arrDown[i].wmaFiveTeenDown;\n    arrDown[i].wmaTwenty = arrDown[i].wmaTwentyDown;\n    delete arrDown[i].wmaTwentyDown;\n    arrDown[i].wmaThirty = arrDown[i].wmaThirtyDown;\n    delete arrDown[i].wmaThirtyDown;\n    arrDown[i].wmaFifty = arrDown[i].wmaFiftyDown;\n    delete arrDown[i].wmaFiftyDown;\n    arrDown[i].wmaOneHun = arrDown[i].wmaOneHunDown;\n    delete arrDown[i].wmaOneHunDown;\n    arrDown[i].wmaTwoHun = arrDown[i].wmaTwoHunDown;\n    delete arrDown[i].wmaTwoHunDown;\n    arrDown[i].vwmaFiveTeen = arrDown[i].vwmaFiveTeenDown;\n    delete arrDown[i].vwmaFiveTeenDown;\n    arrDown[i].vwmaTwenty = arrDown[i].vwmaTwentyDown;\n    delete arrDown[i].vwmaTwentyDown;\n    arrDown[i].vwmaThirty = arrDown[i].vwmaThirtyDown;\n    delete arrDown[i].vwmaThirtyDown;\n    arrDown[i].vwmaFifty = arrDown[i].vwmaFiftyDown;\n    delete arrDown[i].vwmaFiftyDown;\n    arrDown[i].vwmaOneHun = arrDown[i].vwmaOneHunDown;\n    delete arrDown[i].vwmaOneHunDown;\n    arrDown[i].vwmaTwoHun = arrDown[i].vwmaTwoHunDown;\n    delete arrDown[i].vwmaTwoHunDown;\n    arrDown[i].williamsR = arrDown[i].williamsRDown;\n    delete arrDown[i].williamsRDown;\n    arrDown[i].cciTwenty = arrDown[i].cciDown;\n    delete arrDown[i].cciDown;\n    arrDown[i].bbUpper = arrDown[i].bbUpperDown;\n    delete arrDown[i].bbUpperDown;\n    arrDown[i].bbLower = arrDown[i].bbLowerDown;\n    delete arrDown[i].bbLowerDown;\n    arrDown[i].bbMiddle = arrDown[i].bbMiddleDown;\n    delete arrDown[i].bbMiddleDown;\n    arrDown[i].bbPercent = arrDown[i].bbPercentDown;\n    delete arrDown[i].bbPercentDown;\n  }\n\n \n  let finalStocksArr = arrDown.concat(arrUp)\n  return finalStocksArr;\n\n}\n//----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\nconst returnedData = await filterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n\nreturn returnedData;\n\n}"]},"metadata":{},"sourceType":"module"}