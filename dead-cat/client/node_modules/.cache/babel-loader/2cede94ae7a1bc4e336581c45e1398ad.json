{"ast":null,"code":"import { buildIt } from \"../fetch-compile-functions/buildIt\";\nimport { vwapFunction } from \"./vwap\";\nimport { smaFunction } from \"./sma\";\nimport { wmaFunction } from \"./wma\";\nimport { vwmaFunction } from \"./vwma\";\nimport { macdFunction } from \"./macd\";\nimport { emaFunction } from \"./ema\";\nimport { rsiFunction } from \"./rsi\";\nimport { stochOsc1433Function } from \"./stochOsc1433\";\nimport { williamsRFunction } from \"./williams\";\nimport { cciFunction } from \"./cci\";\nimport { bollingerBandsFunction } from \"./bbands\";\nimport { setVolume } from \"./volume\"; // TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\n\nexport async function technicalIndicators(finalArr, callback, dateObj) {\n  let j = 0;\n\n  while (j < finalArr.length) {\n    // LOOP FOR TECHNICAL SYMBOL\n    // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n    const {\n      symbol\n    } = finalArr[j]; //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n\n    const resSMA = await fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n    const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n    // ERROR CHECK FOR EMPTY PULL\n\n    try {\n      if (!Object.keys(dataSMA).length) {\n        console.log(\"no SMA Pull data found\");\n      }\n    } catch (e) {} //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n\n\n    const resOscPulled = await fetch(`https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n    const dataRecentPulled = await resOscPulled.json(); // ERROR CHECK FOR EMPTY PULL\n\n    try {\n      if (!Object.keys(dataRecentPulled).length) {\n        console.log(\"no Recent Pull data found\");\n      }\n    } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    const resVWAP = await fetch(`https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n    const dataVWAP = await resVWAP.json(); // ERROR CHECK FOR EMPTY PULL\n\n    try {\n      if (!Object.keys(dataVWAP).length) {\n        console.log(\"no VWAP Pull data found\");\n      }\n    } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    vwapFunction(finalArr, dataVWAP, j, dateObj); // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n    smaFunction(finalArr, dataSMA, dataRecentPulled, j); // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n    wmaFunction(finalArr, dataSMA, dataRecentPulled, j); // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n    vwmaFunction(finalArr, dataSMA, dataRecentPulled, j); // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n\n    emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction); // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n    rsiFunction(finalArr, dataSMA, dataRecentPulled, j); // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n    stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n    // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n    williamsRFunction(finalArr, dataSMA, dataRecentPulled, j); // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n    cciFunction(finalArr, dataSMA, dataRecentPulled, j); // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n    bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j); // SET VOLUME PROPERTIES\n\n    setVolume(finalArr, dataSMA, dataRecentPulled, j, dateObj);\n    j++; // UPDATE WHILE LOOP\n  } // THIS IS THE END OF LOOP\n\n\n  const returnedData = await callback(finalArr, buildIt);\n  return returnedData;\n}","map":{"version":3,"sources":["/Users/austinolijar/Desktop/MERN-DeadCat/dead-cat/src/JS/technical-Indicators.js/technicalIndicatorsMain.js"],"names":["buildIt","vwapFunction","smaFunction","wmaFunction","vwmaFunction","macdFunction","emaFunction","rsiFunction","stochOsc1433Function","williamsRFunction","cciFunction","bollingerBandsFunction","setVolume","technicalIndicators","finalArr","callback","dateObj","j","length","symbol","resSMA","fetch","dataSMA","json","Object","keys","console","log","e","resOscPulled","dataRecentPulled","resVWAP","dataVWAP","returnedData"],"mappings":"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","sourcesContent":["import { buildIt } from \"../fetch-compile-functions/buildIt\";\n\nimport {vwapFunction} from \"./vwap\"\nimport {smaFunction} from \"./sma\"\nimport {wmaFunction} from \"./wma\"\nimport {vwmaFunction} from \"./vwma\"\nimport {macdFunction} from \"./macd\"\nimport {emaFunction} from \"./ema\"\nimport {rsiFunction} from \"./rsi\"\nimport {stochOsc1433Function} from \"./stochOsc1433\";\nimport {williamsRFunction} from \"./williams\";\nimport {cciFunction} from \"./cci\";\nimport {bollingerBandsFunction} from \"./bbands\"\nimport {setVolume} from \"./volume\"\n\n\n\n\n\n\n\n\n\n  // TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\n  export async function technicalIndicators(finalArr, callback, dateObj) {\n    let j = 0;\n  \n    while (j < finalArr.length) {\n      // LOOP FOR TECHNICAL SYMBOL\n  \n      // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n      const { symbol } = finalArr[j];\n  \n      //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n      const resSMA = await fetch(\n        `https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n      );\n      const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n      // ERROR CHECK FOR EMPTY PULL\n      try {\n        if (!Object.keys(dataSMA).length) {\n          console.log(\"no SMA Pull data found\");\n        }\n      } catch (e) {}\n  \n      //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n      const resOscPulled = await fetch(\n        `https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n      );\n      const dataRecentPulled = await resOscPulled.json();\n      // ERROR CHECK FOR EMPTY PULL\n      try {\n        if (!Object.keys(dataRecentPulled).length) {\n          console.log(\"no Recent Pull data found\");\n        }\n      } catch (e) {}\n  \n      // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n      const resVWAP = await fetch(\n        `https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n      );\n      const dataVWAP = await resVWAP.json();\n      // ERROR CHECK FOR EMPTY PULL\n      try {\n        if (!Object.keys(dataVWAP).length) {\n          console.log(\"no VWAP Pull data found\");\n        }\n      } catch (e) {}\n  \n      // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n      vwapFunction(finalArr, dataVWAP, j, dateObj);\n  \n      // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      smaFunction(finalArr, dataSMA, dataRecentPulled, j);\n  \n      // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      wmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n  \n      // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      vwmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n  \n      // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n      emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction);\n  \n      // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      rsiFunction(finalArr, dataSMA, dataRecentPulled, j);\n  \n      // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n  \n      // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      williamsRFunction(finalArr, dataSMA, dataRecentPulled, j);\n  \n      // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      cciFunction(finalArr, dataSMA, dataRecentPulled, j);\n  \n      // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j);\n  \n      // SET VOLUME PROPERTIES\n      setVolume(finalArr, dataSMA, dataRecentPulled, j, dateObj);\n  \n      j++; // UPDATE WHILE LOOP\n    } // THIS IS THE END OF LOOP\n    const returnedData = await callback(finalArr, buildIt);\n    return returnedData;\n    \n  }\n  \n\n"]},"metadata":{},"sourceType":"module"}