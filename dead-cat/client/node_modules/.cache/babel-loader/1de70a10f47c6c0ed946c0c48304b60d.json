{"ast":null,"code":"var _jsxFileName = \"/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/PortfolioSettings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PortfolioSettings = props => {\n  _s();\n\n  const [checked, setChecked] = useState(true);\n  const [inputVal, setInputVal] = useState(\"default\"); // localStorage.clear()\n\n  const handleSubmit = e => {\n    e.preventDefault(); // CAN'T SAVE EMPTY PORTFOLIO\n\n    if (inputVal === \"portfolio\") {\n      const storageCheck = JSON.parse(localStorage.getItem(\"deadCatPortfolio\"));\n\n      if (storageCheck === null) {\n        alert(\"Please save something in your portfolio before changing this setting.\");\n        return;\n      } else if (storageCheck.length <= 0) {\n        alert(\"Please save something in your portfolio before changing this setting.\");\n        return;\n      }\n    }\n\n    props.handleSaveSettings();\n    props.changeDefaultOrPortfolio(inputVal);\n  };\n\n  const handleChangeSettings = e => {\n    setInputVal(e.target.value);\n  };\n\n  useEffect(() => {\n    setChecked(true);\n    setInputVal(\"default\");\n    props.changeDefaultOrPortfolio(\"default\");\n    return;\n  }, [props.clearCheck]);\n  useEffect(() => {\n    if (inputVal === \"default\") {\n      setChecked(true);\n      return;\n    } else if (inputVal === \"portfolio\") {\n      setChecked(false);\n      return;\n    } else if (inputVal === null) {\n      setChecked(true);\n      return;\n    }\n\n    return () => {};\n  }, [inputVal]);\n  useEffect(() => {\n    console.log('fuck');\n\n    if (inputVal === \"default\") {\n      setChecked(true);\n      return;\n    } else if (inputVal === \"portfolio\") {\n      setChecked(false);\n      return;\n    } else if (inputVal === null) {\n      setChecked(true);\n      return;\n    }\n\n    return () => {};\n  }, [props.showSettings]);\n  useEffect(() => {\n    const checkedStorage = JSON.parse(localStorage.getItem(\"deadCatSettings\"));\n\n    if (checkedStorage === \"default\") {\n      setChecked(true);\n      setInputVal(\"default\");\n      return;\n    } else if (checkedStorage === \"portfolio\") {\n      setChecked(false);\n      setInputVal(\"portfolio\");\n      return;\n    } else if (checkedStorage === null) {\n      setInputVal(\"default\");\n      setChecked(true);\n      return;\n    }\n\n    return () => {};\n  }, []); // NEED TO CHANGE LATER ---------- HAVE THE CHECKED BTN BE WHATEVER IS IN LOCAL STORAGE\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.showSettings ? \"active-settings portfolio-settings-cont\" : \"portfolio-settings-cont\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"What To Show On Load\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"default-setting\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), checked ? /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultChecked: true,\n          tabIndex: props.activePortfolio ? -1 : 0,\n          onClick: e => handleChangeSettings(e),\n          name: \"settings\",\n          id: \"default-setting\",\n          type: \"radio\",\n          value: \"default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          tabIndex: props.activePortfolio ? -1 : 0,\n          onClick: e => handleChangeSettings(e),\n          name: \"settings\",\n          id: \"default-setting\",\n          type: \"radio\",\n          value: \"default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"portfolio-setting\",\n          children: \"Show Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), checked ? /*#__PURE__*/_jsxDEV(\"input\", {\n          tabIndex: props.activePortfolio ? -1 : 0,\n          onClick: e => handleChangeSettings(e),\n          name: \"settings\",\n          id: \"portfolio-setting\",\n          type: \"radio\",\n          value: \"portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultChecked: true,\n          tabIndex: props.activePortfolio ? -1 : 0,\n          onClick: e => handleChangeSettings(e),\n          name: \"settings\",\n          id: \"portfolio-setting\",\n          type: \"radio\",\n          value: \"portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Save Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PortfolioSettings, \"jskKvEK5i9FHJfjioC+2TGnepMg=\");\n\n_c = PortfolioSettings;\nexport default PortfolioSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioSettings\");","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/PortfolioSettings.js"],"names":["useState","useEffect","PortfolioSettings","props","checked","setChecked","inputVal","setInputVal","handleSubmit","e","preventDefault","storageCheck","JSON","parse","localStorage","getItem","alert","length","handleSaveSettings","changeDefaultOrPortfolio","handleChangeSettings","target","value","clearCheck","console","log","showSettings","checkedStorage","activePortfolio"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nconst PortfolioSettings = (props) => {\n  const [checked, setChecked] = useState(true);\n  const [inputVal, setInputVal] = useState(\"default\");\n  // localStorage.clear()\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // CAN'T SAVE EMPTY PORTFOLIO\n    if (inputVal === \"portfolio\") {\n      const storageCheck = JSON.parse(localStorage.getItem(\"deadCatPortfolio\"));\n      if (storageCheck === null) {\n        alert(\n          \"Please save something in your portfolio before changing this setting.\"\n        );\n        return;\n      } else if (storageCheck.length <= 0) {\n        alert(\n          \"Please save something in your portfolio before changing this setting.\"\n        );\n        return;\n      }\n    }\n    props.handleSaveSettings();\n    props.changeDefaultOrPortfolio(inputVal);\n  };\n\n  const handleChangeSettings = (e) => {\n    setInputVal(e.target.value);\n  };\n\n  useEffect(() => {\n    setChecked(true);\n    setInputVal(\"default\");\n    props.changeDefaultOrPortfolio(\"default\")\n    return;\n}, [props.clearCheck]);\n\n  useEffect(() => {\n    if (inputVal === \"default\") {\n      setChecked(true);\n      return;\n    } else if (inputVal === \"portfolio\") {\n      setChecked(false);\n      return;\n    } else if (inputVal === null) {\n      setChecked(true);\n      return;\n    }\n    return () => {};\n  }, [inputVal]);\n\nuseEffect(() => {\n  console.log('fuck')\n  if (inputVal === \"default\") {\n    setChecked(true);\n    return;\n  } else if (inputVal === \"portfolio\") {\n    setChecked(false);\n    return;\n  } else if (inputVal === null) {\n    setChecked(true);\n    return;\n  }\n  return () => {};\n}, [props.showSettings])\n\n  useEffect(() => {\n    const checkedStorage = JSON.parse(localStorage.getItem(\"deadCatSettings\"));\n    if (checkedStorage === \"default\") {\n      setChecked(true);\n      setInputVal(\"default\");\n      return;\n    } else if (checkedStorage === \"portfolio\") {\n      setChecked(false);\n      setInputVal(\"portfolio\");\n      return;\n    } else if (checkedStorage === null) {\n      setInputVal(\"default\");\n      setChecked(true);\n      return;\n    }\n\n    return () => {};\n  }, []);\n\n  // NEED TO CHANGE LATER ---------- HAVE THE CHECKED BTN BE WHATEVER IS IN LOCAL STORAGE\n  return (\n    <div\n      className={\n        props.showSettings\n          ? \"active-settings portfolio-settings-cont\"\n          : \"portfolio-settings-cont\"\n      }\n    >\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <fieldset>\n          <legend>What To Show On Load</legend>\n          <label htmlFor=\"default-setting\">Default</label>\n\n          {checked ? (\n            <input\n              defaultChecked\n              tabIndex={props.activePortfolio ? -1 : 0}\n              onClick={(e) => handleChangeSettings(e)}\n              name=\"settings\"\n              id=\"default-setting\"\n              type=\"radio\"\n              value=\"default\"\n            />\n          ) : (\n            <input\n              tabIndex={props.activePortfolio ? -1 : 0}\n              onClick={(e) => handleChangeSettings(e)}\n              name=\"settings\"\n              id=\"default-setting\"\n              type=\"radio\"\n              value=\"default\"\n            />\n          )}\n          <label htmlFor=\"portfolio-setting\">Show Portfolio</label>\n          {checked ? (\n            <input\n              tabIndex={props.activePortfolio ? -1 : 0}\n              onClick={(e) => handleChangeSettings(e)}\n              name=\"settings\"\n              id=\"portfolio-setting\"\n              type=\"radio\"\n              value=\"portfolio\"\n            />\n          ) : (\n            <input\n              defaultChecked\n              tabIndex={props.activePortfolio ? -1 : 0}\n              onClick={(e) => handleChangeSettings(e)}\n              name=\"settings\"\n              id=\"portfolio-setting\"\n              type=\"radio\"\n              value=\"portfolio\"\n            />\n          )}\n          <input type=\"submit\" value=\"Save Settings\" />\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n\nexport default PortfolioSettings;\n"]},"metadata":{},"sourceType":"module"}