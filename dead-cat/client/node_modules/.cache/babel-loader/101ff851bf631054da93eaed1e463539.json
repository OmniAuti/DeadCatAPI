{"ast":null,"code":"var _jsxFileName = \"/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/MainContainer.js\",\n    _s = $RefreshSig$();\n\nimport BearRow from \"./BearRow\";\nimport BullRow from \"./BullRow\";\nimport { nasdaqMasterKey, nyseMasterKey } from './public/JS/masterKeys.js';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainContainer = () => {\n  _s();\n\n  //STATES ----------------------------------------------\n  const [downersStocks, setDowner] = useState([]);\n  const [upperStocks, setUpper] = useState([]);\n  const [finalArr, setFinalArr] = useState([]);\n\n  function theAllPower(nasdaqMasterKey, nyseMasterKey) {\n    /// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------\n    const today = new Date();\n    const year = today.getFullYear();\n    let date = today.getUTCDate();\n    let month = today.getUTCMonth() + 1;\n    let minutes = today.getUTCMinutes();\n    let hour = today.getUTCHours(); // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n    //CALC FOR UTC TO EST\n\n    hour = hour - 5; // CALC FOR EARLY MORNING HOURS UTC\n\n    if (hour < 0) {\n      hour = hour + 24;\n    }\n\n    console.log(hour); // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    const time = `${hour}${minutes}`;\n    const timeNum = parseInt(time); // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n\n    const marketDay = today.getDay(); // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n\n    if (marketDay == 0) {\n      date = date - 2; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n      if (date <= 0) {\n        if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 30;\n          } else if (month == 5 || month == 7 || month == 10 || month == 12) // MONTHS AFTER 30 DAYS\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 29;\n          } else if (month == 3 && year % 4 == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 28;\n          } else // MONTH AFTER 28\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 27;\n          }\n      }\n    } else if (marketDay == 6) {\n      date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n      if (date <= 0) {\n        if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 31;\n          } else if (month == 5 || month == 7 || month == 10 || month == 12) // MONTHS AFTER 30 DAYS\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 30;\n          } else if (month == 3 && year % 4 == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 29;\n          } else // MONTH AFTER 28\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 28;\n          }\n      }\n    } // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n\n\n    if (marketDay == 1 && timeNum < 930) {\n      date = date - 3; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n      if (date <= 0) {\n        if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 29;\n          } else if (month == 5 || month == 7 || month == 10 || month == 12) // MONTHS AFTER 30 DAYS\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 28;\n          } else if (month == 3 && year % 4 == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 27;\n          } else // MONTH AFTER 28\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 26;\n          }\n      }\n    } else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {\n      // ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n      date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n      if (date <= 0) {\n        if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n          {\n            month = month - 1;\n\n            if (month == 0) {\n              month = 1;\n            }\n\n            date = 31;\n          } else if (month == 5 || month == 7 || month == 10 || month == 12) // MONTHS AFTER 30 DAYS\n          {\n            month = month - 1;\n            date = 30;\n          } else if (month == 3 && year % 4 == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n          {\n            month = month - 1;\n            date = 29;\n          } else // MONTH AFTER 28\n          {\n            month = month - 1;\n            date = 28;\n          }\n      }\n    } // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n\n\n    if (date < 10) {\n      date = `0${date}`;\n    }\n\n    if (month < 10) {\n      month = `0${month}`;\n    } // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n\n\n    let todayDate = `${year}-${month}-${date}`; //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n\n    if (todayDate === '2021-11-25') {\n      todayDate = '2021-11-24';\n    } else if (todayDate === '2021-12-24') {\n      todayDate = '2021-12-23';\n    } else if (todayDate === '2022-01-17') {\n      todayDate = '2022-01-14';\n    } else if (todayDate === '2022-02-21') {\n      todayDate = '2022-02-18';\n    } else if (todayDate === '2022-04-15') {\n      todayDate = '2022-04-14';\n    } else if (todayDate === '2022-05-30') {\n      todayDate = '2022-05-27';\n    } else if (todayDate === '2022-06-20') {\n      todayDate = '2022-06-17';\n    } else if (todayDate === '2022-07-04') {\n      todayDate = '2022-07-01';\n    } else if (todayDate === '2022-09-05') {\n      todayDate = '2022-09-02';\n    } else if (todayDate === '2022-11-24') {\n      todayDate = '2022-11-23';\n    } else if (todayDate === '2022-12-26') {\n      todayDate = '2022-12-23';\n    } // THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n\n\n    let newDateString = todayDate;\n\n    if (hour + 4 >= 24) {\n      const dateNumSlice = parseInt(date);\n      const dateSliceStart = todayDate.slice(0, 8);\n      let newDateNum = dateNumSlice - 1;\n\n      if (newDateNum < 10) {\n        newDateNum = `0${newDateNum}`;\n      }\n\n      newDateString = `${dateSliceStart}${newDateNum}`;\n      newDateString = newDateString.toString(); // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n      if (date == 1 && hour + 4 >= 24) {\n        if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 31;\n            newDateString = `${year}-${month}-${date}`;\n          } else if (month == 5 || month == 7 || month == 10 || month == 12) // MONTHS AFTER 30 DAYS\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 30;\n            newDateString = `${year}-${month}-${date}`;\n          } else if (month == 3 && year % 4 == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 29;\n            newDateString = `${year}-${month}-${date}`;\n          } else // MONTH AFTER 28\n          {\n            month = month - 1;\n\n            if (month < 10) {\n              month = `0${month}`;\n            }\n\n            date = 28;\n            newDateString = `${year}-${month}-${date}`;\n          }\n      }\n    } //---------------------------------------------------------------------------------------------------------------------\n    //------------ ADD SECOND SCRIPT FOR RUN ---------------------- //\n\n\n    function addSecondScript() {\n      const scripty = document.createElement(\"script\");\n      scripty.setAttribute(\"src\", \"js/function.js\");\n      document.body.appendChild(scripty);\n    } // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n\n\n    async function filterTradableSymbols(arr1, arr2, compileCallback) {\n      let nyseHolderDown = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n\n      let nyseHolderUp = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n\n      let nasdaqHolderDown = [];\n      let nasdaqHolderUp = [];\n\n      try {\n        // ------ FETCH NYSE\n        const res = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n        const dataNyse = await res.json(); // ----- FILTER TRADABLE SYMBOLS ON NYSE THAT HAVE DROPPED\n\n        for (let i = 0; i < dataNyse.length; i++) {\n          if (dataNyse[i].changesPercentage < -5 && arr1.indexOf(dataNyse[i].symbol) > 0 && dataNyse[i].price > 1) {\n            nyseHolderDown.push(dataNyse[i]);\n          }\n        }\n\n        for (let i = 0; i < dataNyse.length; i++) {\n          if (dataNyse[i].changesPercentage > 5 && arr1.indexOf(dataNyse[i].symbol) > 0 && dataNyse[i].price > 1) {\n            nyseHolderUp.push(dataNyse[i]);\n          }\n        } // ------ FETCH NASDAQ\n\n\n        const resTwo = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n        const dataNas = await resTwo.json(); // ----- FILTER TRADABLE SYMBOLS ON NASDAQ THAT HAVE DROPPED\n\n        for (let i = 0; i < dataNas.length; i++) {\n          if (dataNas[i].changesPercentage < -5 && arr2.indexOf(dataNas[i].symbol) > 0 && dataNas[i].price > 1) {\n            nasdaqHolderDown.push(dataNas[i]);\n          }\n        }\n\n        for (let i = 0; i < dataNas.length; i++) {\n          if (dataNas[i].changesPercentage > 5 && arr2.indexOf(dataNas[i].symbol) > 0 && dataNas[i].price > 1) {\n            nasdaqHolderUp.push(dataNas[i]);\n          }\n        } //--------- CATCH\n\n      } catch (e) {}\n\n      compileCallback(nasdaqHolderDown, nyseHolderDown, nyseHolderUp, nasdaqHolderUp, technicalIndicators); // CALLBACK FOR STOCK FILTER\n    }\n\n    function compileStocks(arr1, arr2, arr3, arr4, callback) {\n      //---------------------- COMBINE AND SORT LARGEST DROP -------------------------\n      let finalChartFatDown = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n\n      let finalChartFatUp = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n\n      let finalChart = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n      // ------- THIS IS A FILTER FOR WEIRD STOCK SYMBOLS THAT SLIP IN ----------\n\n      let combinedStockDrop = [];\n      combinedStockDrop = combinedStockDrop.concat(arr1, arr2);\n      let combinedStockUp = [];\n      combinedStockUp = combinedStockUp.concat(arr3, arr4);\n      const keys = /^[A-Z]{1,4}$/g;\n      finalChartFatDown = combinedStockDrop.filter(stock => {\n        return stock.symbol.match(keys);\n      });\n      finalChartFatUp = combinedStockUp.filter(stock => {\n        return stock.symbol.match(keys);\n      });\n\n      for (let i = 0; i < finalChartFatDown.length; i++) {\n        finalChartFatDown.sort((a, b) => {\n          return a.changesPercentage - b.changesPercentage;\n        });\n      }\n\n      for (let i = 0; i < finalChartFatUp.length; i++) {\n        finalChartFatUp.sort((a, b) => {\n          return b.changesPercentage - a.changesPercentage;\n        });\n      } // MAKE SURE ARR HAS RIGHT LENGTH TO LOAD ------------\n\n\n      const holderObjDown = {\n        avgVolume: -1,\n        bbLower: \"-1\",\n        bbMiddle: \"-1\",\n        bbPercent: \"-1\",\n        bbUpper: \"-1\",\n        cciTwenty: \"-1\",\n        change: -1,\n        changesPercentage: -1,\n        dayHigh: -1,\n        dayLow: -1,\n        earningsAnnouncement: \"-1\",\n        emaEight: \"-1\",\n        emaFifty: \"-1\",\n        emaTwelve: \"-1\",\n        emaTwenty: \"-1\",\n        emaTwentySix: \"-1\",\n        emaTwoHun: \"-1\",\n        eps: -1,\n        exchange: \"No Data\",\n        macd: \"-1\",\n        macdHistogram: \"-1\",\n        macdSignalLine: \"-1\",\n        marketCap: -1,\n        name: \"Placeholder for lack of Symbols\",\n        open: -1,\n        pe: -1,\n        previousClose: -1,\n        price: 1,\n        priceAvg50: -1,\n        priceAvg200: -1,\n        rsi: \"-1\",\n        sharesOutstanding: -1,\n        smaFifty: \"-1\",\n        smaFiveTeen: \"-1\",\n        smaOneHun: \"-1\",\n        smaThirty: \"-1\",\n        smaTwenty: \"-1\",\n        smaTwoHun: \"-1\",\n        stochasticD: \"-1\",\n        stochasticK: \"-1\",\n        stochasticSignal: \"-1\",\n        symbol: \"No Data\",\n        timestamp: -1,\n        volume: -1,\n        vwap: \"-1\",\n        vwmaFifty: \"-1\",\n        vwmaFiveTeen: \"-1\",\n        vwmaOneHun: \"-1\",\n        vwmaThirty: \"-1\",\n        vwmaTwenty: \"-1\",\n        vwmaTwoHun: \"-1\",\n        williamsR: \"-1\",\n        wmaFifty: \"-1\",\n        wmaFiveTeen: \"-1\",\n        wmaOneHun: \"-1\",\n        wmaThirty: \"-1\",\n        wmaTwenty: \"-1\",\n        wmaTwoHun: \"-1\",\n        yearHigh: -1,\n        yearLow: -1,\n        yesterdayVolume: -1\n      };\n      const holderObjUp = {\n        avgVolume: 1,\n        bbLower: \"1\",\n        bbMiddle: \"1\",\n        bbPercent: \"1\",\n        bbUpper: \"1\",\n        cciTwenty: \"1\",\n        change: 1,\n        changesPercentage: 1,\n        dayHigh: 1,\n        dayLow: 1,\n        earningsAnnouncement: \"1\",\n        emaEight: \"1\",\n        emaFifty: \"1\",\n        emaTwelve: \"1\",\n        emaTwenty: \"1\",\n        emaTwentySix: \"1\",\n        emaTwoHun: \"1\",\n        eps: 1,\n        exchange: \"No Data\",\n        macd: \"1\",\n        macdHistogram: \"1\",\n        macdSignalLine: \"1\",\n        marketCap: 1,\n        name: \"Placeholder for lack of Symbols\",\n        open: 1,\n        pe: 1,\n        previousClose: 1,\n        price: 1,\n        priceAvg50: 1,\n        priceAvg200: 1,\n        rsi: \"1\",\n        sharesOutstanding: 1,\n        smaFifty: \"1\",\n        smaFiveTeen: \"1\",\n        smaOneHun: \"1\",\n        smaThirty: \"1\",\n        smaTwenty: \"1\",\n        smaTwoHun: \"1\",\n        stochasticD: \"1\",\n        stochasticK: \"1\",\n        stochasticSignal: \"1\",\n        symbol: \"No Data\",\n        timestamp: 1,\n        volume: 1,\n        vwap: \"1\",\n        vwmaFifty: \"1\",\n        vwmaFiveTeen: \"1\",\n        vwmaOneHun: \"1\",\n        vwmaThirty: \"1\",\n        vwmaTwenty: \"1\",\n        vwmaTwoHun: \"1\",\n        williamsR: \"1\",\n        wmaFifty: \"1\",\n        wmaFiveTeen: \"1\",\n        wmaOneHun: \"1\",\n        wmaThirty: \"1\",\n        wmaTwenty: \"1\",\n        wmaTwoHun: \"1\",\n        yearHigh: 1,\n        yearLow: 1,\n        yesterdayVolume: 1\n      };\n\n      if (finalChartFatUp.length < 5) {\n        while (finalChartFatUp.length < 5) {\n          finalChartFatUp.push(holderObjUp);\n        }\n      }\n\n      if (finalChartFatDown.length < 5) {\n        while (finalChartFatDown.length < 5) {\n          finalChartFatDown.push(holderObjDown);\n        }\n      } // SLIM CHAT DOWN SO IT'S NOT BLOATED\n\n\n      let slimChartDown = 4;\n\n      while (slimChartDown >= 0) {\n        finalChart.unshift(finalChartFatDown[slimChartDown]);\n        slimChartDown--;\n      }\n\n      let slimChartUp = 4;\n\n      while (slimChartUp >= 0) {\n        finalChart.unshift(finalChartFatUp[slimChartUp]);\n        slimChartUp--;\n      }\n\n      callback(finalChart, filterUpDownStocks);\n    } // ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n    // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    function smaFunction(chartArr, dataPull, newestPull, num) {\n      let culSMA = 0; // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n\n      let fiveTeenSMA = 13;\n      let twentySMA = 18;\n      let thirtySMA = 28;\n      let fiftySMA = 48;\n      let hunSMA = 98;\n      let twoHunSMA = 198;\n\n      try {\n        const todayPricePull = newestPull[0].price; // ------------- 15 DAY SMA -------------------------------\n\n        if (dataPull.historical.length <= 13) {\n          chartArr[num].smaFiveTeen = \"No Data\";\n        } else {\n          while (fiveTeenSMA >= 0) {\n            culSMA += dataPull.historical[fiveTeenSMA].close;\n            fiveTeenSMA--;\n          }\n\n          let smaFiveResult = (culSMA + todayPricePull) / 15;\n          chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n          culSMA = 0;\n        } // ------------- 20 DAY SMA -------------------------------\n\n\n        if (dataPull.historical.length <= 19) {\n          chartArr[num].smaTwenty = \"No Data\";\n        } else {\n          while (twentySMA >= 0) {\n            culSMA += dataPull.historical[twentySMA].close;\n            twentySMA--;\n          }\n\n          let smaTwentyResult = (culSMA + todayPricePull) / 20;\n          chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n          culSMA = 0;\n        } // ------------- 30 DAY SMA -------------------------------\n\n\n        if (dataPull.historical.length <= 29) {\n          chartArr[num].smaThirty = \"No Data\";\n        } else {\n          while (thirtySMA >= 0) {\n            culSMA += dataPull.historical[thirtySMA].close;\n            thirtySMA--;\n          }\n\n          let smaThirtyResult = (culSMA + todayPricePull) / 30;\n          chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n          culSMA = 0;\n        } // ------------- 50 DAY SMA -------------------------------\n\n\n        if (dataPull.historical.length <= 49) {\n          chartArr[num].smaFifty = \"No Data\";\n        } else {\n          while (fiftySMA >= 0) {\n            culSMA += dataPull.historical[fiftySMA].close;\n            fiftySMA--;\n          }\n\n          let smaFiftyResult = (culSMA + todayPricePull) / 50;\n          chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n          culSMA = 0;\n        } // ------------- 100 DAY SMA -------------------------------\n\n\n        if (dataPull.historical.length <= 99) {\n          chartArr[num].smaOneHun = \"No Data\";\n        } else {\n          while (hunSMA >= 0) {\n            culSMA += dataPull.historical[hunSMA].close;\n            hunSMA--;\n          }\n\n          let smaOneHunResult = (culSMA + todayPricePull) / 100;\n          chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n          culSMA = 0;\n        } // ------------- 200 DAY SMA -------------------------------\n\n\n        if (dataPull.historical.length <= 199) {\n          chartArr[num].smaTwoHun = \"No Data\";\n        } else {\n          while (twoHunSMA >= 0) {\n            culSMA += dataPull.historical[twoHunSMA].close;\n            twoHunSMA--;\n          }\n\n          let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n          chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n          culSMA = 0;\n        }\n      } catch (e) {}\n    } // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    function wmaFunction(chartArr, dataPull, newestPull, num) {\n      // WMA FiveTeen --------------------------------------------------------------------\n      let weight = 14;\n      let wmaInterval = 0;\n      let iWma = 15;\n\n      try {\n        let wmaCul = newestPull[0].price * 15;\n\n        if (dataPull.historical.length < 14) {\n          chartArr[num].wmaFiveTeen = \"No Data\";\n        } else {\n          for (let i = 0; i <= 13; i++) {\n            wmaInterval = dataPull.historical[i].close * weight;\n            wmaCul += wmaInterval;\n            iWma += weight;\n            weight--;\n          }\n\n          const wmaFiveTeen = wmaCul / iWma;\n          chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n        } // WMA Twenty --------------------------------------------------------------------\n\n\n        wmaCul = newestPull[0].price * 20;\n        weight = 19;\n        wmaInterval = 0;\n        iWma = 20;\n\n        if (dataPull.historical.length < 19) {\n          chartArr[num].wmaTwenty = \"No Data\";\n        } else {\n          for (let i = 0; i <= 18; i++) {\n            wmaInterval = dataPull.historical[i].close * weight;\n            wmaCul += wmaInterval;\n            iWma += weight;\n            weight--;\n          }\n\n          const wmaTwenty = wmaCul / iWma;\n          chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n        } // WMA THIRTY --------------------------------------------------------------------\n\n\n        wmaCul = newestPull[0].price * 30;\n        weight = 29;\n        wmaInterval = 0;\n        iWma = 30;\n\n        if (dataPull.historical.length < 30) {\n          chartArr[num].wmaThirty = \"No Data\";\n        } else {\n          for (let i = 0; i <= 28; i++) {\n            wmaInterval = dataPull.historical[i].close * weight;\n            wmaCul += wmaInterval;\n            iWma += weight;\n            weight--;\n          }\n\n          const wmaThirty = wmaCul / iWma;\n          chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n        } // WMA FIFTY --------------------------------------------------------------------\n\n\n        wmaCul = newestPull[0].price * 50;\n        weight = 49;\n        wmaInterval = 0;\n        iWma = 50;\n\n        if (dataPull.historical.length < 50) {\n          chartArr[num].wmaFifty = \"No Data\";\n        } else {\n          for (let i = 0; i <= 48; i++) {\n            wmaInterval = dataPull.historical[i].close * weight;\n            wmaCul += wmaInterval;\n            iWma += weight;\n            weight--;\n          }\n\n          const wmaFifty = wmaCul / iWma;\n          chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n        } // WMA ONE HUNDRED --------------------------------------------------------------------\n\n\n        wmaCul = newestPull[0].price * 100;\n        weight = 99;\n        wmaInterval = 0;\n        iWma = 100;\n\n        if (dataPull.historical.length < 100) {\n          chartArr[num].wmaOneHun = \"No Data\";\n        } else {\n          for (let i = 0; i <= 98; i++) {\n            wmaInterval = dataPull.historical[i].close * weight;\n            wmaCul += wmaInterval;\n            iWma += weight;\n            weight--;\n          }\n\n          const wmaOneHun = wmaCul / iWma;\n          chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n        } // WMA TWO HUNDRED --------------------------------------------------------------------\n\n\n        wmaCul = newestPull[0].price * 200;\n        weight = 199;\n        wmaInterval = 0;\n        iWma = 200;\n\n        if (dataPull.historical.length < 200) {\n          chartArr[num].wmaTwoHun = \"No Data\";\n        } else {\n          for (let i = 0; i <= 198; i++) {\n            wmaInterval = dataPull.historical[i].close * weight;\n            wmaCul += wmaInterval;\n            iWma += weight;\n            weight--;\n          }\n\n          const wmaTwoHun = wmaCul / iWma;\n          chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n        }\n      } catch (e) {}\n    } // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    function vwmaFunction(chartArr, dataPull, newestPull, num) {\n      // VWMA FIVETEEN --------------------------------------------------------------------\n      try {\n        let price = 0;\n        let volume = 0;\n        const newPrice = newestPull[0].price;\n        const newVol = newestPull[0].volume;\n        let volCul = newestPull[0].volume;\n        let totalCul = newPrice * newVol;\n\n        if (dataPull.historical.length < 14) {\n          chartArr[num].vwmaFiveTeen = \"No Data\";\n        } else {\n          for (let i = 0; i <= 13; i++) {\n            price = dataPull.historical[i].close;\n            volume = dataPull.historical[i].volume;\n            totalCul += price * volume;\n            volCul += dataPull.historical[i].volume;\n          }\n\n          const vwmaFiveTeen = totalCul / volCul;\n          chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n        } // VWMA TWENTY --------------------------------------------------------------------\n\n\n        volCul = newestPull[0].volume;\n        totalCul = newPrice * newVol;\n        price = 0;\n        volume = 0;\n\n        if (dataPull.historical.length < 19) {\n          chartArr[num].vwmaTwenty = \"No Data\";\n        } else {\n          for (let i = 0; i <= 18; i++) {\n            price = dataPull.historical[i].close;\n            volume = dataPull.historical[i].volume;\n            totalCul += price * volume;\n            volCul += dataPull.historical[i].volume;\n          }\n\n          const vwmaTwenty = totalCul / volCul;\n          chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n        } // VWMA THIRTY --------------------------------------------------------------------\n\n\n        volCul = newestPull[0].volume;\n        totalCul = newPrice * newVol;\n        price = 0;\n        volume = 0;\n\n        if (dataPull.historical.length < 29) {\n          chartArr[num].vwmaThirty = \"No Data\";\n        } else {\n          for (let i = 0; i <= 28; i++) {\n            price = dataPull.historical[i].close;\n            volume = dataPull.historical[i].volume;\n            totalCul += price * volume;\n            volCul += dataPull.historical[i].volume;\n          }\n\n          const vwmaThirty = totalCul / volCul;\n          chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n        } // VWMA FIFTY --------------------------------------------------------------------\n\n\n        volCul = newestPull[0].volume;\n        totalCul = newPrice * newVol;\n        price = 0;\n        volume = 0;\n\n        if (dataPull.historical.length < 49) {\n          chartArr[num].vwmaFifty = \"No Data\";\n        } else {\n          for (let i = 0; i <= 48; i++) {\n            price = dataPull.historical[i].close;\n            volume = dataPull.historical[i].volume;\n            totalCul += price * volume;\n            volCul += dataPull.historical[i].volume;\n          }\n\n          const vwmaFifty = totalCul / volCul;\n          chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n        } // VWMA ONEHUN --------------------------------------------------------------------\n\n\n        volCul = newestPull[0].volume;\n        totalCul = newPrice * newVol;\n        price = 0;\n        volume = 0;\n\n        if (dataPull.historical.length < 99) {\n          chartArr[num].vwmaOneHun = \"No Data\";\n        } else {\n          for (let i = 0; i <= 98; i++) {\n            price = dataPull.historical[i].close;\n            volume = dataPull.historical[i].volume;\n            totalCul += price * volume;\n            volCul += dataPull.historical[i].volume;\n          }\n\n          const vwmaOneHun = totalCul / volCul;\n          chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n        } // VWMA TWOHUN --------------------------------------------------------------------\n\n\n        volCul = newestPull[0].volume;\n        totalCul = newPrice * newVol;\n        price = 0;\n        volume = 0;\n\n        if (dataPull.historical.length < 199) {\n          chartArr[num].vwmaTwoHun = \"No Data\";\n        } else {\n          for (let i = 0; i <= 198; i++) {\n            price = dataPull.historical[i].close;\n            volume = dataPull.historical[i].volume;\n            totalCul += price * volume;\n            volCul += dataPull.historical[i].volume;\n          }\n\n          const vwmaTwoHun = totalCul / volCul;\n          chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n        }\n      } catch (e) {}\n    } // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    function emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n      let emaEight = 14;\n      let emaTwelve = 22;\n      let emaTwenty = 38;\n      let emaTwentySix = 50;\n      let emaFifty = 98;\n      let emaTwoHun = 398;\n      let prevDayEmaSub = 0;\n      let arrEma = [];\n      let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n\n      let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n      try {\n        const newPrice = newestPull[0].price; // EMA EIGHT ----------------------------------------------------------------------\n\n        if (dataPull.historical.length <= 16) {\n          chartArr[num].emaEight = \"No Data\";\n        } else {\n          while (emaEight >= 15) {\n            prevDayEmaSub += dataPull.historical[emaEight].close;\n            emaEight--;\n          } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n          const subEMA = prevDayEmaSub / 8; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n          const finalSubEma = 2 / 9 * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n          arrEma.unshift(finalSubEma);\n          emaEight--;\n\n          while (emaEight >= 0) {\n            let derp = 2 / 9 * (dataPull.historical[emaEight].close - arrEma[0]) + arrEma[0];\n            arrEma.unshift(derp);\n            arrEma.pop();\n            emaEight--;\n          }\n\n          const finalEma = 2 / 9 * (newPrice - arrEma[0]) + arrEma[0];\n          arrEma.unshift(finalEma);\n          arrEma.pop();\n          chartArr[num].emaEight = arrEma[0].toFixed(2);\n          arrEma.pop();\n          prevDayEmaSub = 0;\n        } // EMA TWELVE ----------------------------------------------------------------------\n\n\n        if (dataPull.historical.length <= 24) {\n          chartArr[num].emaTwelve = \"No Data\";\n        } else {\n          while (emaTwelve >= 11) {\n            prevDayEmaSub += dataPull.historical[emaTwelve].close;\n            emaTwelve--;\n          } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n          const subEMA = prevDayEmaSub / 12; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n          const finalSubEma = 2 / 13 * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n          arrEma.unshift(finalSubEma);\n          emaTwelve--;\n\n          while (emaTwelve >= 0) {\n            let derp = 2 / 13 * (dataPull.historical[emaTwelve].close - arrEma[0]) + arrEma[0];\n            arrEma.unshift(derp);\n            arrEma.pop();\n\n            if (emaTwelve < 8 && emaTwelve >= 0) {\n              //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n              macdTwelve.unshift(derp);\n            }\n\n            emaTwelve--;\n          }\n\n          const finalEma = 2 / 13 * (newPrice - arrEma[0]) + arrEma[0];\n          arrEma.unshift(finalEma);\n          arrEma.pop();\n          macdTwelve.unshift(finalEma);\n          chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n          arrEma.pop();\n          prevDayEmaSub = 0;\n        } // EMA TWENTY ----------------------------------------------------------------------\n\n\n        if (dataPull.historical.length <= 40) {\n          chartArr[num].emaTwenty = \"No Data\";\n        } else {\n          while (emaTwenty >= 19) {\n            prevDayEmaSub += dataPull.historical[emaTwenty].close;\n            emaTwenty--;\n          } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n          const subEMA = prevDayEmaSub / 20; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n          const finalSubEma = 2 / 21 * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n          arrEma.unshift(finalSubEma);\n          emaTwenty--;\n\n          while (emaTwenty >= 0) {\n            let derp = 2 / 21 * (dataPull.historical[emaTwenty].close - arrEma[0]) + arrEma[0];\n            arrEma.unshift(derp);\n            arrEma.pop();\n            emaTwenty--;\n          }\n\n          const finalEma = 2 / 21 * (newPrice - arrEma[0]) + arrEma[0];\n          arrEma.unshift(finalEma);\n          arrEma.pop();\n          chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n          arrEma.pop();\n          prevDayEmaSub = 0;\n        } // EMA TWENTY SIX ----------------------------------------------------------------------\n\n\n        if (dataPull.historical.length <= 51) {\n          chartArr[num].emaTwentySix = \"No Data\";\n        } else {\n          while (emaTwentySix >= 25) {\n            prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n            emaTwentySix--;\n          } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n          const subEMA = prevDayEmaSub / 26; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n          const finalSubEma = 2 / 27 * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n          arrEma.unshift(finalSubEma);\n          emaTwentySix--;\n\n          while (emaTwentySix >= 0) {\n            let derp = 2 / 27 * (dataPull.historical[emaTwentySix].close - arrEma[0]) + arrEma[0];\n            arrEma.unshift(derp);\n            arrEma.pop();\n\n            if (emaTwentySix < 8 && emaTwentySix >= 0) {\n              //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n              macdTwentySix.unshift(derp);\n            }\n\n            emaTwentySix--;\n          }\n\n          const finalEma = 2 / 27 * (newPrice - arrEma[0]) + arrEma[0];\n          arrEma.unshift(finalEma);\n          arrEma.pop();\n          macdTwentySix.unshift(finalEma);\n          chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n          arrEma.pop();\n          prevDayEmaSub = 0;\n        } // EMA FIFTY -----------------------------------------------------------------------------\n\n\n        if (dataPull.historical.length <= 100) {\n          chartArr[num].emaFifty = \"No Data\";\n        } else {\n          while (emaFifty >= 49) {\n            prevDayEmaSub += dataPull.historical[emaFifty].close;\n            emaFifty--;\n          } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n          const subEMA = prevDayEmaSub / 50; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n          const finalSubEma = 2 / 51 * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n          arrEma.unshift(finalSubEma);\n          emaFifty--;\n\n          while (emaFifty >= 0) {\n            let derp = 2 / 51 * (dataPull.historical[emaFifty].close - arrEma[0]) + arrEma[0];\n            arrEma.unshift(derp);\n            arrEma.pop();\n            emaFifty--;\n          }\n\n          const finalEma = 2 / 51 * (newPrice - arrEma[0]) + arrEma[0];\n          arrEma.unshift(finalEma);\n          arrEma.pop();\n          chartArr[num].emaFifty = arrEma[0].toFixed(2);\n          arrEma.pop();\n          prevDayEmaSub = 0;\n        } // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n\n        if (dataPull.historical.length <= 400) {\n          chartArr[num].emaTwoHun = \"No Data\";\n        } else {\n          while (emaTwoHun >= 199) {\n            prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n            emaTwoHun--;\n          } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n          const subEMA = prevDayEmaSub / 200; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n          const finalSubEma = 2 / 201 * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n          arrEma.unshift(finalSubEma);\n          emaTwoHun--;\n\n          while (emaTwoHun >= 0) {\n            let derp = 2 / 201 * (dataPull.historical[emaTwoHun].close - arrEma[0]) + arrEma[0];\n            arrEma.unshift(derp);\n            arrEma.pop();\n            emaTwoHun--;\n          }\n\n          const finalEma = 2 / 201 * (newPrice - arrEma[0]) + arrEma[0];\n          arrEma.unshift(finalEma);\n          arrEma.pop();\n          chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n          arrEma.pop();\n          prevDayEmaSub = 0;\n        }\n      } catch (e) {} // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n      macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n    } // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n    function macdFunction(chartArr, num, arr1, arr2) {\n      const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n      chartArr[num].macd = macd.toFixed(2); // CALCULATE SIGNAL LINE ----------------\n\n      let averageMacd = [];\n      let iMacd = 8;\n\n      try {\n        while (iMacd >= 0) {\n          averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n          iMacd--;\n        }\n\n        let averageSum = averageMacd.reduce((a, b) => a + b);\n        let finalAverageMacd = averageSum / 9;\n        let macdSignalLine = 2 / 9 * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n        chartArr[num].macdSignalLine = macdSignalLine.toFixed(2); // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n\n        let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n        chartArr[num].macdHistogram = histogram.toFixed(2); // FOR NO DATA TO PULL FROM\n\n        if (chartArr[num].macdHistogram === \"NaN\") {\n          chartArr[num].macdHistogram = \"No Data\";\n        }\n\n        if (chartArr[num].macd === \"NaN\") {\n          chartArr[num].macd = \"No Data\";\n        }\n\n        if (chartArr[num].macdSignalLine === \"NaN\") {\n          chartArr[num].macdSignalLine = \"No Data\";\n        }\n      } catch (e) {}\n    } // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    function rsiFunction(chartArr, dataPull, newestPull, num) {\n      let iRSI = 13;\n      let iRSIAdjusted = 14;\n      let recentUpper = 0;\n      let recentDowner = 0;\n      let upMove = 0;\n      let downMove = 0;\n      let pastDownPeriod = 0;\n      let pastUpPeriod = 0;\n\n      try {\n        const newPrice = newestPull[0].price; // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n\n        if (dataPull.historical.length <= 14) {\n          chartArr[num].rsi = \"No Data\";\n        } else {\n          // LOOP FOR AVERAGE\n          while (iRSI >= 0) {\n            if (dataPull.historical[iRSI].close > dataPull.historical[iRSIAdjusted].close) {\n              upMove += dataPull.historical[iRSI].close - dataPull.historical[iRSIAdjusted].close;\n            } else {\n              downMove += dataPull.historical[iRSIAdjusted].close - dataPull.historical[iRSI].close;\n            }\n\n            iRSI--;\n            iRSIAdjusted--;\n          }\n\n          let averageUp = upMove / 14;\n          let averageDown = downMove / 14; // MOST RECENT DIFFERENCE\n\n          if (newPrice > dataPull.historical[0].close) {\n            recentUpper = newPrice - dataPull.historical[0].close;\n          } else {\n            recentDowner = dataPull.historical[0].close - newPrice;\n          }\n\n          pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n          pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n          let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n          chartArr[num].rsi = rsi.toFixed(2);\n        }\n      } catch (e) {}\n    } // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n      let iSO = 13;\n      let soLowHolder = [];\n      let soHighHolder = [];\n      let highestHigh = 0;\n      let lowestLow = 0; // FIRST %D\n\n      let topForm = [];\n      let bottomForm = []; // SECOND %D\n\n      let topFormTwo = [];\n      let bottomFormTwo = []; // THIRD %D\n\n      let topFormThree = [];\n      let bottomFormThree = []; // HOLDING SET OF %D FOR 14 3 3\n\n      let signalLineHolder = [];\n\n      try {\n        let newPrice = newestPull[0].price;\n\n        if (dataPull.historical.length < 18) {\n          chartArr[num].stochasticK = \"No Data\";\n        } else {\n          // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n          while (iSO >= 0) {\n            soLowHolder.push(dataPull.historical[iSO].low);\n            soHighHolder.push(dataPull.historical[iSO].high);\n            iSO--;\n          }\n\n          soHighHolder.push(newPrice);\n          soLowHolder.push(newPrice);\n          highestHigh = Math.max(...soHighHolder);\n          lowestLow = Math.min(...soLowHolder);\n\n          if (lowestLow === newPrice) {\n            newPrice = dataPull.historical[0].close;\n          }\n\n          if (highestHigh === newPrice) {\n            newPrice = dataPull.historical[0].close;\n          }\n\n          topForm.push(newPrice - lowestLow);\n          bottomForm.push(highestHigh - lowestLow); //FOR %K\n\n          chartArr[num].stochasticK = ((newPrice - lowestLow) / (highestHigh - lowestLow) * 100).toFixed(2); // RESET HOLDER AND VARs --------------------------------------------------------\n\n          iSO = 14;\n          soLowHolder = [];\n          soHighHolder = [];\n          highestHigh = 0;\n          lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n          while (iSO >= 1) {\n            soLowHolder.push(dataPull.historical[iSO].low);\n            soHighHolder.push(dataPull.historical[iSO].high);\n            iSO--;\n          }\n\n          highestHigh = Math.max(...soHighHolder);\n          lowestLow = Math.min(...soLowHolder);\n          topForm.push(dataPull.historical[0].close - lowestLow);\n          bottomForm.push(highestHigh - lowestLow);\n          topFormTwo.push(dataPull.historical[0].close - lowestLow);\n          bottomFormTwo.push(highestHigh - lowestLow); // RESET HOLDER AND VARs ------------------------------------------------\n\n          iSO = 15;\n          soLowHolder = [];\n          soHighHolder = [];\n          highestHigh = 0;\n          lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n          while (iSO >= 2) {\n            soLowHolder.push(dataPull.historical[iSO].low);\n            soHighHolder.push(dataPull.historical[iSO].high);\n            iSO--;\n          }\n\n          highestHigh = Math.max(...soHighHolder);\n          lowestLow = Math.min(...soLowHolder);\n          topForm.push(dataPull.historical[1].close - lowestLow);\n          bottomForm.push(highestHigh - lowestLow);\n          topFormTwo.push(dataPull.historical[1].close - lowestLow);\n          bottomFormTwo.push(highestHigh - lowestLow);\n          topFormThree.push(dataPull.historical[1].close - lowestLow);\n          bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n          let sumTop = topForm.reduce((a, b) => a + b, 0);\n          let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n          let slowD = sumTop / sumBottom * 100; // FOR %D\n\n          chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n          signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------------------------------\n\n          iSO = 16;\n          soLowHolder = [];\n          soHighHolder = [];\n          highestHigh = 0;\n          lowestLow = 0;\n          sumTop = 0;\n          sumBottom = 0;\n          slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n          while (iSO >= 3) {\n            soLowHolder.push(dataPull.historical[iSO].low);\n            soHighHolder.push(dataPull.historical[iSO].high);\n            iSO--;\n          }\n\n          highestHigh = Math.max(...soHighHolder);\n          lowestLow = Math.min(...soLowHolder);\n          topFormTwo.push(dataPull.historical[2].close - lowestLow);\n          bottomFormTwo.push(highestHigh - lowestLow);\n          topFormThree.push(dataPull.historical[2].close - lowestLow);\n          bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n          sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n          sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n          slowD = sumTop / sumBottom * 100;\n          signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------\n\n          iSO = 17;\n          soLowHolder = [];\n          soHighHolder = [];\n          highestHigh = 0;\n          lowestLow = 0;\n          sumTop = 0;\n          sumBottom = 0;\n          slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n          while (iSO >= 4) {\n            soLowHolder.push(dataPull.historical[iSO].low);\n            soHighHolder.push(dataPull.historical[iSO].high);\n            iSO--;\n          }\n\n          highestHigh = Math.max(...soHighHolder);\n          lowestLow = Math.min(...soLowHolder);\n          topFormThree.push(dataPull.historical[3].close - lowestLow);\n          bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n          sumTop = topFormThree.reduce((a, b) => a + b, 0);\n          sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n          slowD = sumTop / sumBottom * 100;\n          signalLineHolder.push(slowD); // ----------- TALLY UP LAST SMOOTHING -------------------------------\n\n          const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n          let smaD = sumStochD / 3;\n\n          if (smaD < 0) {\n            smaD *= -1;\n            chartArr[num].stochasticSignal = smaD.toFixed(2);\n          } else {\n            chartArr[num].stochasticSignal = smaD.toFixed(2);\n          }\n        }\n      } catch (e) {}\n    } // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    function williamsRFunction(chartArr, dataPull, newestPull, num) {\n      let highs = [];\n      let lows = [];\n      let lowestLow = 0;\n      let highestHigh = 0;\n\n      try {\n        const newPrice = newestPull[0].price;\n\n        if (dataPull.historical.length < 14) {\n          chartArr[num].williams = \"No Data\";\n        } else {\n          for (let i = 0; i <= 13; i++) {\n            highs.push(dataPull.historical[i].high);\n            lows.push(dataPull.historical[i].low);\n          }\n\n          highs.push(newPrice);\n          lows.push(newPrice);\n          lowestLow = Math.min(...lows);\n          highestHigh = Math.max(...highs);\n          const williams = (highestHigh - dataPull.historical[0].close) / (highestHigh - lowestLow) * -100;\n          chartArr[num].williamsR = williams.toFixed(2);\n        }\n      } catch (e) {}\n    } // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    function cciFunction(chartArr, dataPull, newestPull, num) {\n      let tpvCul = 0;\n      let tpv = [];\n      let tpvMa = 0;\n\n      try {\n        const newPrice = newestPull[0].price;\n        let tpvCurrent = newPrice;\n        const recentTpv = newPrice;\n\n        if (dataPull.historical.length < 19) {\n          chartArr[num].cciTwenty = \"No Data\";\n        } else {\n          for (let i = 0; i <= 19; i++) {\n            const {\n              high,\n              close,\n              low\n            } = dataPull.historical[i];\n            tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n\n            tpvCurrent = (close + high + low) / 3;\n          } // ---- TPV SMA ------------------------\n\n\n          tpvCul = tpv.reduce((a, b) => a + b);\n          tpvMa = tpvCul / 20; // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n\n          const partOne = recentTpv - tpvMa;\n          const meanD = tpv.map(x => x - tpvMa);\n          const meanDMap = meanD.map(x => Math.abs(x));\n          const meanDSum = meanDMap.reduce((a, b) => a + b);\n          const meanDiv = meanDSum / 20; // PART TWO OF FORMULA --------------\n\n          const partTwo = meanDiv * 0.015; // CCI ------------------------------\n\n          const cci = partOne / partTwo;\n          chartArr[num].cciTwenty = cci.toFixed(2);\n        }\n      } catch (e) {}\n    } // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    function bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n      let smaCul = 0;\n      let closeHolder = [];\n\n      try {\n        const newPrice = newestPull[0].price;\n\n        if (dataPull.historical.length < 19) {\n          chartArr[num].bbUpper = \"No Data\";\n          chartArr[num].bbLower = \"No Data\";\n          chartArr[num].bbMiddle = \"No Data\";\n        } else {\n          let closeP = newPrice;\n\n          for (let i = 0; i <= 19; i++) {\n            closeHolder.push(closeP);\n            smaCul += closeP;\n            closeP = dataPull.historical[i].close;\n          } // STANDARD DEVIATION CALC --------------------------------\n\n\n          const smaTwenty = smaCul / 20;\n          const priceAdj = closeHolder.map(x => x - smaTwenty);\n          const priceAdjAbs = priceAdj.map(x => Math.abs(x));\n          const priceAdjSqrt = priceAdjAbs.map(x => x * x);\n          const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n          const partTwoDev = partOneDev / 20;\n          const standardDev = Math.sqrt(partTwoDev); // BB BAND CALC --------------------------------------------\n\n          const bbUpper = smaTwenty + standardDev * 2;\n          const bbLower = smaTwenty - standardDev * 2;\n          const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n          chartArr[num].bbUpper = bbUpper.toFixed(2);\n          chartArr[num].bbLower = bbLower.toFixed(2);\n          chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n          chartArr[num].bbPercent = bbPercent.toFixed(2);\n        }\n      } catch (e) {}\n    } // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    function vwapFunction(chartArr, dataPull, num) {\n      // ----------- VWAP CALUC -------------------------------------------\n      let dayLengthPeriod = 0;\n      let tpvCul = 0;\n      let volumeCul = 0;\n      let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n      try {\n        // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n        while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n          dayLengthPeriod++;\n        } // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n\n        for (let i = 0; i < dayLengthPeriod; i++) {\n          const {\n            volume,\n            high,\n            close,\n            low,\n            date\n          } = dataPull[i];\n          let tpv = (high + low + close) / 3;\n\n          if (date.slice(0, 10) == newDateString) {\n            tpvCul += tpv * volume;\n            volumeCul += volume;\n          }\n\n          let vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n\n          tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n        }\n\n        let vwap = tempVWAP[0].toFixed(2);\n        chartArr[num].vwap = vwap;\n      } catch (e) {}\n    } // SET VOLUME FOR LATER\n\n\n    function setVolume(chartArr, dataPull, newestPull, num) {\n      // SET RECENT YESTERDAY VOLUME\n      try {\n        if (dataPull.historical.length <= 0) {\n          chartArr[num].yesterdayVolume = 0;\n        } else {\n          chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n\n          if (marketDay == 0 || marketDay == 6) {\n            chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n          }\n\n          if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n            chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n          }\n\n          if (timeNum > 1830) {\n            chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n          }\n        }\n\n        if (newestPull.length < 0) {\n          chartArr[num].volume = 0;\n        } else {\n          // SET RECENT VOLUME\n          chartArr[num].volume = newestPull[0].volume;\n        }\n      } catch (e) {}\n    } // TA FUNCTION ---------------------------------------------------------------------\n\n\n    async function technicalIndicators(finalArr, callback) {\n      let j = 0;\n\n      while (j < finalArr.length) {\n        // LOOP FOR TECHNICAL SYMBOL\n        // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n        const {\n          symbol\n        } = finalArr[j]; //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n\n        const resSMA = await fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n        const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n        // ERROR CHECK FOR EMPTY PULL\n\n        try {\n          if (!Object.keys(dataSMA).length) {\n            console.log(\"no SMA Pull data found\");\n          }\n        } catch (e) {} //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n\n\n        const resOscPulled = await fetch(`https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n        const dataRecentPulled = await resOscPulled.json(); // ERROR CHECK FOR EMPTY PULL\n\n        try {\n          if (!Object.keys(dataRecentPulled).length) {\n            console.log(\"no Recent Pull data found\");\n          }\n        } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n        const resVWAP = await fetch(`https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n        const dataVWAP = await resVWAP.json(); // ERROR CHECK FOR EMPTY PULL\n\n        try {\n          if (!Object.keys(dataVWAP).length) {\n            console.log(\"no VWAP Pull data found\");\n          }\n        } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n        vwapFunction(finalArr, dataVWAP, j); // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        smaFunction(finalArr, dataSMA, dataRecentPulled, j); // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        wmaFunction(finalArr, dataSMA, dataRecentPulled, j); // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        vwmaFunction(finalArr, dataSMA, dataRecentPulled, j); // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n\n        emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction); // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        rsiFunction(finalArr, dataSMA, dataRecentPulled, j); // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n        // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        williamsRFunction(finalArr, dataSMA, dataRecentPulled, j); // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        cciFunction(finalArr, dataSMA, dataRecentPulled, j); // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n        bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j); // SET VOLUME PROPERTIES\n\n        setVolume(finalArr, dataSMA, dataRecentPulled, j);\n        j++; // UPDATE WHILE LOOP\n      } // THIS IS THE END OF LOOP\n\n\n      setFinalArr([finalArr]);\n      return;\n      callback(finalArr, buildIt);\n    } // ------------------BUILD OUT HTML\n\n\n    function filterUpDownStocks(finalArr, callback) {\n      let stocksUp = [];\n      let stocksDown = [];\n      let j = 0;\n\n      while (j < finalArr.length) {\n        const {\n          changesPercentage\n        } = finalArr[j];\n\n        if (changesPercentage > 0) {\n          stocksUp.push(finalArr[j]);\n        } else {\n          stocksDown.push(finalArr[j]);\n        }\n\n        j++;\n      } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n      // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n\n\n      for (let i = 0; i < stocksUp.length; i++) {\n        // UPPER ------------------------------------------------------------------------------\n        stocksUp[i].symbolUp = stocksUp[i].symbol;\n        delete stocksUp[i].symbol;\n        stocksUp[i].changeUp = stocksUp[i].change;\n        delete stocksUp[i].change;\n        stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n        delete stocksUp[i].avgVolume;\n        stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n        delete stocksUp[i].changesPercentage;\n        stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n        delete stocksUp[i].emaEight;\n        stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n        delete stocksUp[i].emaTwelve;\n        stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n        delete stocksUp[i].emaTwenty;\n        stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n        delete stocksUp[i].emaTwentySix;\n        stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n        delete stocksUp[i].emaFifty;\n        stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n        delete stocksUp[i].emaTwoHun;\n        stocksUp[i].macdUp = stocksUp[i].macd;\n        delete stocksUp[i].macd;\n        stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n        delete stocksUp[i].macdHistogram;\n        stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n        delete stocksUp[i].macdSignalLine;\n        stocksUp[i].priceUp = stocksUp[i].price;\n        delete stocksUp[i].price;\n        stocksUp[i].rsiUp = stocksUp[i].rsi;\n        delete stocksUp[i].rsi;\n        stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n        delete stocksUp[i].smaFiveTeen;\n        stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n        delete stocksUp[i].smaTwenty;\n        stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n        delete stocksUp[i].smaThirty;\n        stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n        delete stocksUp[i].smaFifty;\n        stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n        delete stocksUp[i].smaOneHun;\n        stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n        delete stocksUp[i].smaTwoHun;\n        stocksUp[i].volumeUp = stocksUp[i].volume;\n        delete stocksUp[i].volume;\n        stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n        delete stocksUp[i].yesterdayVolume;\n        stocksUp[i].vwapUp = stocksUp[i].vwap;\n        delete stocksUp[i].vwap;\n        stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n        delete stocksUp[i].stochasticD;\n        stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n        delete stocksUp[i].stochasticK;\n        stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n        delete stocksUp[i].stochasticSignal;\n        stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n        delete stocksUp[i].wmaFiveTeen;\n        stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n        delete stocksUp[i].wmaTwenty;\n        stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n        delete stocksUp[i].wmaThirty;\n        stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n        delete stocksUp[i].wmaFifty;\n        stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n        delete stocksUp[i].wmaOneHun;\n        stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n        delete stocksUp[i].wmaTwoHun;\n        stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n        delete stocksUp[i].vwmaFiveTeen;\n        stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n        delete stocksUp[i].vwmaTwenty;\n        stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n        delete stocksUp[i].vwmaThirty;\n        stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n        delete stocksUp[i].vwmaFifty;\n        stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n        delete stocksUp[i].vwmaOneHun;\n        stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n        delete stocksUp[i].vwmaTwoHun;\n        stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n        delete stocksUp[i].williamsR;\n        stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n        delete stocksUp[i].cciTwenty;\n        stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n        delete stocksUp[i].bbUpper;\n        stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n        delete stocksUp[i].bbLower;\n        stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n        delete stocksUp[i].bbMiddle;\n        stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n        delete stocksUp[i].bbPercent; // DOWNERS ------------------------------------------------------------------------------\n\n        stocksDown[i].symbolDown = stocksDown[i].symbol;\n        delete stocksDown[i].symbol;\n        stocksDown[i].changeDown = stocksDown[i].change;\n        delete stocksDown[i].change;\n        stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n        delete stocksDown[i].avgVolume;\n        stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n        delete stocksDown[i].changesPercentage;\n        stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n        delete stocksDown[i].emaEight;\n        stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n        delete stocksDown[i].emaTwelve;\n        stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n        delete stocksDown[i].emaTwenty;\n        stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n        delete stocksDown[i].emaTwentySix;\n        stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n        delete stocksDown[i].emaFifty;\n        stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n        delete stocksDown[i].emaTwoHun;\n        stocksDown[i].macdDown = stocksDown[i].macd;\n        delete stocksDown[i].macd;\n        stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n        delete stocksDown[i].macdHistogram;\n        stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n        delete stocksDown[i].macdSignalLine;\n        stocksDown[i].priceDown = stocksDown[i].price;\n        delete stocksDown[i].price;\n        stocksDown[i].rsiDown = stocksDown[i].rsi;\n        delete stocksDown[i].rsi;\n        stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n        delete stocksDown[i].smaFiveTeen;\n        stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n        delete stocksDown[i].smaTwenty;\n        stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n        delete stocksDown[i].smaThirty;\n        stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n        delete stocksDown[i].smaFifty;\n        stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n        delete stocksDown[i].smaOneHun;\n        stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n        delete stocksDown[i].smaTwoHun;\n        stocksDown[i].volumeDown = stocksDown[i].volume;\n        delete stocksDown[i].volume;\n        stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n        delete stocksDown[i].yesterdayVolume;\n        stocksDown[i].vwapDown = stocksDown[i].vwap;\n        delete stocksDown[i].vwap;\n        stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n        delete stocksDown[i].stochasticD;\n        stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n        delete stocksDown[i].stochasticK;\n        stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n        delete stocksDown[i].stochasticSignal;\n        stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n        delete stocksDown[i].wmaFiveTeen;\n        stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n        delete stocksDown[i].wmaTwenty;\n        stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n        delete stocksDown[i].wmaThirty;\n        stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n        delete stocksDown[i].wmaFifty;\n        stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n        delete stocksDown[i].wmaOneHun;\n        stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n        delete stocksDown[i].wmaTwoHun;\n        stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n        delete stocksDown[i].vwmaFiveTeen;\n        stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n        delete stocksDown[i].vwmaTwenty;\n        stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n        delete stocksDown[i].vwmaThirty;\n        stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n        delete stocksDown[i].vwmaFifty;\n        stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n        delete stocksDown[i].vwmaOneHun;\n        stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n        delete stocksDown[i].vwmaTwoHun;\n        stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n        delete stocksDown[i].williamsR;\n        stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n        delete stocksDown[i].cciTwenty;\n        stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n        delete stocksDown[i].bbUpper;\n        stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n        delete stocksDown[i].bbLower;\n        stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n        delete stocksDown[i].bbMiddle;\n        stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n        delete stocksDown[i].bbPercent;\n      }\n\n      callback(stocksUp, stocksDown);\n    } // PARENT TO APPEND ---------------------------------------------------\n\n\n    const litterBox = document.getElementById(\"litter-box\");\n\n    function buildIt(arrUp, arrDown) {\n      // litterBox.innerHTML = \"\"; // THIS CLEARS PRIOR HTML BEFORE BUILD\n      for (let i = 0; i < arrUp.length; i++) {\n        // DECONSTRUCTING UP AND DOWN VAR\n        let {\n          avgVolumeUp,\n          volumeYesterdayUp,\n          changeUp,\n          changesPercentageUp,\n          priceUp,\n          symbolUp,\n          volumeUp,\n          vwapUp,\n          smaFiveTeenUp,\n          smaTwentyUp,\n          smaThirtyUp,\n          smaFiftyUp,\n          smaOneHunUp,\n          smaTwoHunUp,\n          emaEightUp,\n          emaTwelveUp,\n          emaTwentyUp,\n          emaTwentySixUp,\n          emaFiftyUp,\n          emaTwoHunUp,\n          wmaFiveTeenUp,\n          wmaTwentyUp,\n          wmaThirtyUp,\n          wmaFiftyUp,\n          wmaOneHunUp,\n          wmaTwoHunUp,\n          vwmaFiveTeenUp,\n          vwmaTwentyUp,\n          vwmaThirtyUp,\n          vwmaFiftyUp,\n          vwmaOneHunUp,\n          vwmaTwoHunUp,\n          macdUp,\n          macdHistogramUp,\n          macdSignalLineUp,\n          rsiUp,\n          stochasticDUp,\n          stochasticKUp,\n          stochasticSignalUp,\n          cciUp,\n          bbMiddleUp,\n          bbLowerUp,\n          bbUpperUp,\n          bbPercentUp,\n          williamsRUp\n        } = arrUp[i];\n        let {\n          avgVolumeDown,\n          volumeYesterdayDown,\n          changeDown,\n          changesPercentageDown,\n          priceDown,\n          symbolDown,\n          volumeDown,\n          vwapDown,\n          smaFiveTeenDown,\n          smaTwentyDown,\n          smaThirtyDown,\n          smaFiftyDown,\n          smaOneHunDown,\n          smaTwoHunDown,\n          emaEightDown,\n          emaTwelveDown,\n          emaTwentyDown,\n          emaTwentySixDown,\n          emaFiftyDown,\n          emaTwoHunDown,\n          wmaFiveTeenDown,\n          wmaTwentyDown,\n          wmaThirtyDown,\n          wmaFiftyDown,\n          wmaOneHunDown,\n          wmaTwoHunDown,\n          vwmaFiveTeenDown,\n          vwmaTwentyDown,\n          vwmaThirtyDown,\n          vwmaFiftyDown,\n          vwmaOneHunDown,\n          vwmaTwoHunDown,\n          macdDown,\n          macdHistogramDown,\n          macdSignalLineDown,\n          rsiDown,\n          stochasticDDown,\n          stochasticKDown,\n          stochasticSignalDown,\n          cciDown,\n          bbMiddleDown,\n          bbLowerDown,\n          bbUpperDown,\n          bbPercentDown,\n          williamsRDown\n        } = arrDown[i]; // ADJUST TO FIXED --------------------------------------------------------\n\n        if (priceUp == undefined) {\n          priceUp = 0;\n        }\n\n        if (priceDown == undefined) {\n          priceDown = 0;\n        }\n\n        priceUp = priceUp.toFixed(2);\n        priceDown = priceDown.toFixed(2);\n\n        if (changesPercentageUp == undefined) {\n          changesPercentageUp = 0;\n        }\n\n        if (changesPercentageDown == undefined) {\n          changesPercentageDown = 0;\n        }\n\n        changesPercentageUp = changesPercentageUp.toFixed(2);\n        changesPercentageDown = changesPercentageDown.toFixed(2);\n\n        if (changeUp == undefined) {\n          changeUp = 0;\n        }\n\n        if (changeDown == undefined) {\n          changeDown = 0;\n        }\n\n        changeUp = changeUp.toFixed(2);\n        changeDown = changeDown.toFixed(2); // UP VOLUME INCREASE ----------------------------\n\n        if (volumeUp == undefined) {\n          volumeUp = 0;\n        }\n\n        if (volumeDown == undefined) {\n          volumeDown = 0;\n        }\n\n        let volumeIncreaseUp = 0;\n\n        if (volumeUp > avgVolumeUp) {\n          let increase = volumeUp - avgVolumeUp;\n          volumeIncreaseUp = increase / avgVolumeUp * 100;\n        } else {\n          let decrease = avgVolumeUp - volumeUp;\n          volumeIncreaseUp = decrease / avgVolumeUp * -100;\n        } // DOWN VOLUME INCREASE ----------------------------\n\n\n        let volumeIncreaseDown = 0;\n\n        if (volumeDown > avgVolumeDown) {\n          let increase = volumeDown - avgVolumeDown;\n          volumeIncreaseDown = increase / avgVolumeDown * 100;\n        } else {\n          let decrease = avgVolumeDown - volumeDown;\n          volumeIncreaseDown = decrease / avgVolumeDown * -100;\n        }\n\n        volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n        volumeIncreaseUp = volumeIncreaseUp.toFixed(2); // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n        // YESTERDAY UP VOLUME INCREASE ----------------------------\n\n        if (volumeYesterdayUp == undefined) {\n          volumeYesterdayUp = 0;\n        }\n\n        if (volumeYesterdayDown == undefined) {\n          volumeYesterdayDown = 0;\n        }\n\n        if (avgVolumeUp == undefined) {\n          avgVolumeUp = 0;\n        }\n\n        if (avgVolumeDown == undefined) {\n          avgVolumeDown = 0;\n        }\n\n        let yesterdayVolIncreaseUp = 0;\n\n        if (volumeYesterdayUp > avgVolumeUp) {\n          let increase = volumeYesterdayUp - avgVolumeUp;\n          yesterdayVolIncreaseUp = increase / avgVolumeUp * 100;\n        } else {\n          let decrease = avgVolumeUp - volumeYesterdayUp;\n          yesterdayVolIncreaseUp = decrease / avgVolumeUp * -100;\n        }\n\n        yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2); // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n        let yesterdayVolIncreaseDown = 0;\n\n        if (volumeYesterdayDown > avgVolumeDown) {\n          let increase = volumeYesterdayDown - avgVolumeDown;\n          yesterdayVolIncreaseDown = increase / avgVolumeDown * 100;\n        } else {\n          let decrease = avgVolumeDown - volumeYesterdayDown;\n          yesterdayVolIncreaseDown = decrease / avgVolumeDown * -100;\n        }\n\n        yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2); // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n        let changeDownAdjusted = changeDown;\n\n        if (changeDownAdjusted < 0) {\n          changeDownAdjusted = changeDownAdjusted * -1;\n          changeDownAdjusted = changeDownAdjusted.toFixed(2);\n        } // NaN CHECK ----------------------------------------\n\n\n        if (isNaN(yesterdayVolIncreaseDown)) {\n          yesterdayVolIncreaseDown = \"No Data\";\n        }\n\n        if (isNaN(yesterdayVolIncreaseUp)) {\n          yesterdayVolIncreaseUp = \"No Data\";\n        } // ADJUST TO POSITIVE\n\n\n        if (stochasticDUp < 0) {\n          stochasticDUp = stochasticDUp * -1;\n        }\n\n        if (stochasticKUp < 0) {\n          stochasticKUp = stochasticKUp * -1;\n        }\n\n        if (stochasticDDown < 0) {\n          stochasticDDown = stochasticDDown * -1;\n        }\n\n        if (stochasticKDown < 0) {\n          stochasticKDown = stochasticKDown * -1;\n        } // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n\n\n        if (avgVolumeUp == undefined) {\n          avgVolumeUp = \"No Data\";\n        }\n\n        if (avgVolumeDown == undefined) {\n          avgVolumeDown = \"No Data\";\n        }\n\n        if (volumeUp == undefined) {\n          volumeUp = \"No Data\";\n        }\n\n        if (volumeDown == undefined) {\n          volumeDown = \"No Data\";\n        }\n\n        if (volumeIncreaseUp == undefined) {\n          volumeIncreaseUp = \"No Data\";\n        }\n\n        if (volumeIncreaseDown == undefined) {\n          volumeIncreaseDown = \"No Data\";\n        }\n\n        if (volumeYesterdayUp == undefined) {\n          volumeYesterdayUp = \"No Data\";\n        }\n\n        if (volumeYesterdayDown == undefined) {\n          volumeYesterdayDown = \"No Data\";\n        }\n\n        if (smaFiveTeenUp == undefined) {\n          smaFiveTeenUp = \"No Data\";\n        }\n\n        if (smaFiveTeenDown == undefined) {\n          smaFiveTeenDown = \"No Data\";\n        }\n\n        if (smaTwentyUp == undefined) {\n          smaTwentyUp = \"No Data\";\n        }\n\n        if (smaTwentyDown == undefined) {\n          smaTwentyDown = \"No Data\";\n        }\n\n        if (smaThirtyUp == undefined) {\n          smaThirtyUp = \"No Data\";\n        }\n\n        if (smaThirtyDown == undefined) {\n          smaThirtyDown = \"No Data\";\n        }\n\n        if (smaFiftyUp == undefined) {\n          smaFiftyUp = \"No Data\";\n        }\n\n        if (smaFiftyDown == undefined) {\n          smaFiftyDown = \"No Data\";\n        }\n\n        if (smaOneHunUp == undefined) {\n          smaOneHunUp = \"No Data\";\n        }\n\n        if (smaOneHunDown == undefined) {\n          smaOneHunDown = \"No Data\";\n        }\n\n        if (smaTwoHunUp == undefined) {\n          smaTwoHunUp = \"No Data\";\n        }\n\n        if (smaTwoHunDown == undefined) {\n          smaTwoHunDown = \"No Data\";\n        }\n\n        if (emaEightUp == undefined) {\n          emaEightUp = \"No Data\";\n        }\n\n        if (emaEightDown == undefined) {\n          emaEightDown = \"No Data\";\n        }\n\n        if (emaTwelveUp == undefined) {\n          emaTwelveUp = \"No Data\";\n        }\n\n        if (emaTwelveDown == undefined) {\n          emaTwelveDown = \"No Data\";\n        }\n\n        if (emaTwentyUp == undefined) {\n          emaTwentyUp = \"No Data\";\n        }\n\n        if (emaTwentyDown == undefined) {\n          emaTwentyDown = \"No Data\";\n        }\n\n        if (emaTwentySixUp == undefined) {\n          emaTwentySixUp = \"No Data\";\n        }\n\n        if (emaTwentySixDown == undefined) {\n          emaTwentySixDown = \"No Data\";\n        }\n\n        if (emaFiftyUp == undefined) {\n          emaFiftyUp = \"No Data\";\n        }\n\n        if (emaFiftyDown == undefined) {\n          emaFiftyDown = \"No Data\";\n        }\n\n        if (emaTwoHunUp == undefined) {\n          emaTwoHunUp = \"No Data\";\n        }\n\n        if (emaTwoHunDown == undefined) {\n          emaTwoHunDown = \"No Data\";\n        }\n\n        if (wmaFiveTeenUp == undefined) {\n          wmaFiveTeenUp = \"No Data\";\n        }\n\n        if (wmaFiveTeenDown == undefined) {\n          wmaFiveTeenDown = \"No Data\";\n        }\n\n        if (wmaTwentyUp == undefined) {\n          wmaTwentyUp = \"No Data\";\n        }\n\n        if (wmaTwentyDown == undefined) {\n          wmaTwentyDown = \"No Data\";\n        }\n\n        if (wmaThirtyUp == undefined) {\n          wmaThirtyUp = \"No Data\";\n        }\n\n        if (wmaThirtyDown == undefined) {\n          wmaThirtyDown = \"No Data\";\n        }\n\n        if (wmaFiftyUp == undefined) {\n          wmaFiftyUp = \"No Data\";\n        }\n\n        if (wmaFiftyDown == undefined) {\n          wmaFiftyDown = \"No Data\";\n        }\n\n        if (wmaOneHunUp == undefined) {\n          wmaOneHunUp = \"No Data\";\n        }\n\n        if (wmaOneHunDown == undefined) {\n          wmaOneHunDown = \"No Data\";\n        }\n\n        if (wmaTwoHunUp == undefined) {\n          wmaTwoHunUp = \"No Data\";\n        }\n\n        if (wmaTwoHunDown == undefined) {\n          wmaTwoHunDown = \"No Data\";\n        }\n\n        if (vwmaFiveTeenUp == undefined) {\n          vwmaFiveTeenUp = \"No Data\";\n        }\n\n        if (vwmaFiveTeenDown == undefined) {\n          vwmaFiveTeenDown = \"No Data\";\n        }\n\n        if (vwmaTwentyUp == undefined) {\n          vwmaTwentyUp = \"No Data\";\n        }\n\n        if (vwmaTwentyDown == undefined) {\n          vwmaTwentyDown = \"No Data\";\n        }\n\n        if (vwmaThirtyUp == undefined) {\n          vwmaThirtyUp = \"No Data\";\n        }\n\n        if (vwmaThirtyDown == undefined) {\n          vwmaThirtyDown = \"No Data\";\n        }\n\n        if (vwmaFiftyUp == undefined) {\n          vwmaFiftyUp = \"No Data\";\n        }\n\n        if (vwmaFiftyDown == undefined) {\n          vwmaFiftyDown = \"No Data\";\n        }\n\n        if (vwmaOneHunUp == undefined) {\n          vwmaOneHunUp = \"No Data\";\n        }\n\n        if (vwmaOneHunDown == undefined) {\n          vwmaOneHunDown = \"No Data\";\n        }\n\n        if (vwmaTwoHunUp == undefined) {\n          vwmaTwoHunUp = \"No Data\";\n        }\n\n        if (vwmaTwoHunDown == undefined) {\n          vwmaTwoHunDown = \"No Data\";\n        }\n\n        if (vwapDown == undefined) {\n          vwapDown = \"No Data\";\n        }\n\n        if (vwapUp == undefined) {\n          vwapUp = \"No Data\";\n        }\n\n        if (macdDown == undefined) {\n          macdDown = \"No Data\";\n        }\n\n        if (macdUp == undefined) {\n          macdUp = \"No Data\";\n        }\n\n        if (rsiDown == undefined) {\n          rsiDown = \"No Data\";\n        }\n\n        if (rsiUp == undefined) {\n          rsiUp = \"No Data\";\n        }\n\n        if (cciDown == undefined) {\n          cciDown = \"No Data\";\n        }\n\n        if (cciUp == undefined) {\n          cciUp = \"No Data\";\n        }\n\n        if (williamsRDown == undefined) {\n          williamsRDown = \"No Data\";\n        }\n\n        if (williamsRUp == undefined) {\n          williamsRUp = \"No Data\";\n        }\n\n        if (stochasticKUp == undefined) {\n          stochasticKUp = \"No Data\";\n        }\n\n        if (stochasticKDown == undefined) {\n          stochasticKDown = \"No Data\";\n        }\n\n        if (stochasticDUp == undefined) {\n          stochasticDUp = \"No Data\";\n        }\n\n        if (stochasticDDown == undefined) {\n          stochasticDDown = \"No Data\";\n        }\n\n        if (stochasticSignalUp == undefined) {\n          stochasticSignalUp = \"No Data\";\n        }\n\n        if (stochasticSignalDown == undefined) {\n          stochasticSignalDown = \"No Data\";\n        }\n\n        if (bbMiddleDown == undefined) {\n          bbMiddleDown = \"No Data\";\n        }\n\n        if (bbMiddleUp == undefined) {\n          bbMiddleUp = \"No Data\";\n        }\n\n        if (bbLowerDown == undefined) {\n          bbLowerDown = \"No Data\";\n        }\n\n        if (bbLowerUp == undefined) {\n          bbLowerUp = \"No Data\";\n        }\n\n        if (bbUpperDown == undefined) {\n          bbUpperDown = \"No Data\";\n        }\n\n        if (bbUpperUp == undefined) {\n          bbUpperUp = \"No Data\";\n        }\n\n        if (bbPercentDown == undefined) {\n          bbPercentDown = \"No Data\";\n        }\n\n        if (bbPercentUp == undefined) {\n          bbPercentUp = \"No Data\";\n        } //   const litter = document.createElement(\"div\");\n        //   litter.classList.add(\"row\");\n        //   litter.innerHTML = `\n        //    <!----------------------------------- DOWNER --------------------------------------->\n        //    <div tabindex=\"0\" class=\"downer symbol-box\" data-index=\"${i}\">\n        //        <h2 id=\"symbol\">${symbolDown}</h2>\n        //        <p class=\"price price-down-${i}\">Price: $${priceDown}</p>\n        //        <div class=\"changes-row\">\n        //        <p class=\"changePercentageDown-${i}\">${changesPercentageDown}%</p>\n        //        <svg id=\"downArrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 100 400\" shape-rendering=\"geometricPrecision\" text-rendering=\"geometricPrecision\"><g id=\"eJjdz69mVex2\" transform=\"matrix(0.99132899255994 0.00125353493548 0.00179456906301 -1.41919326774185 0 5360)\"><g id=\"eJjdz69mVex3\" transform=\"matrix(0.10000000000000 0 0 0.10000000000000 0.00000000000023 0.00000000000023)\"><path id=\"eJjdz69mVex4\" d=\"M29164.905156,10134.800000L28991.385074,10784.799602L28821.634757,10614.426482L27244.542329,12197.305156L27102.400000,12054.641316L28679.492428,10471.762642L28517.281642,10308.956716L29164.905156,10134.800000\" transform=\"matrix(0.70853823648212 -0.70567242219234 0.70567242219234 0.70853823648212 -27361.22396364336601 48339.92537327134050)\" fill=\"rgb(230,102,102)\" stroke=\"none\" stroke-width=\"1\"/><path id=\"eJjdz69mVex5\" d=\"M36131.700000,8167.800000C36128.200000,8167.800000,36124.700000,8168.900000,36121.700000,8170.900000C34563.300000,9219.200000,32199.200000,8231.400000,32175.500000,8221.300000C32169.500000,8218.300000,32162.200000,8218.800000,32156.700000,8222.800000C32151.200000,8226.700000,32148.300000,8233.400000,32149.300000,8240.100000C32150.300000,8246.800000,32154.900000,8252.400000,32161.300000,8254.600000C32185.300000,8264.700000,34566.400000,9259.600000,36142.200000,8200.900000C36148.700000,8196.400000,36151.500000,8188.300000,36149.200000,8180.800000C36146.900000,8173.300000,36140,8168.100000,36132.200000,8167.900000L36131.700000,8167.800000\" transform=\"matrix(1 0 0 1 -23974.95002737504910 24467.33418583546154)\" fill=\"rgb(255,255,255)\" stroke=\"none\" stroke-width=\"1\"/><path id=\"eJjdz69mVex6\" d=\"M24267.800000,8167.800000C24260,8167.900000,24253.100000,8173.100000,24250.800000,8180.600000C24248.500000,8188.200000,24251.300000,8196.300000,24257.800000,8200.800000C25833.100000,9259.500000,28214.600000,8264.500000,28238.700000,8254.500000C28243.100000,8252.600000,28246.600000,8249.100000,28248.400000,8244.600000C28250.200000,8240.100000,28250.200000,8235.100000,28248.300000,8230.700000C28244.200000,8221.700000,28233.700000,8217.500000,28224.500000,8221.100000C28200.700000,8231.100000,25837.100000,9218.400000,24278.300000,8170.800000C24275.200000,8168.700000,24271.500000,8167.700000,24267.800000,8167.800000\" transform=\"matrix(1 0 0 1 -23974.95002737508185 24467.33418583546154)\" fill=\"rgb(255,255,255)\" stroke=\"none\" stroke-width=\"1\"/></g></g></svg>\n        //        <p>$${changeDownAdjusted}</p>\n        //        </div>\n        //    </div>\n        //    <!----------------------------------- THIS WILL HOLD TECH ANALYSIS FOR HOVER POPULATE IN MIDDLE ---------------------------------------->\n        //   <div class=\"tech-down-${i}\">\n        //    <h2 class=\"tech-title\">Daily Indicators</h2>\n        //    <p class=\"tech-title-warn\">For Educational Purposes Only</p>\n        //        <div class=\"tech-vol-row\">\n        //        <a class=\"info-link\" href=\"https://www.investopedia.com/articles/technical/02/010702.asp\" target=\"_blank\"><h3 class='tech-header'>Volume</h3></a>\n        //        <p>Average: <span class=\"tech-to-left avgVolume-down-actual-${i}\">${avgVolumeDown}</span></p>\n        //            <p>Today: <span class=\"tech-to-left volumeToday-down-actual-${i}\">${volumeDown}</span></p>\n        //            <p>Change: <span class=\"tech-to-left\"> ${volumeIncreaseDown}%</span></p>\n        //            <p>Day Before: <span class=\"tech-to-left\"> ${volumeYesterdayDown}</span></p>\n        //            <p>Change: <span class=\"tech-to-left\"> ${yesterdayVolIncreaseDown}%</span></p>\n        //        </div>\n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link sma-down-header-${i}\" href=\"https://www.investopedia.com/terms/s/sma.asp\" target=\"_blank\"><h3 class='tech-header'>SMA</h3></a>\n        //            <div class=\"averages-row\">\n        //                <p class=\"smafifteen-down-actual-${i}\">15: ${smaFiveTeenDown}</p>\n        //                <p class=\"smatwenty-down-actual-${i}\">20: ${smaTwentyDown}</p>\n        //            </div>\n        //            <div class=\"averages-row\">\n        //                <p class=\"smathirty-down-actual-${i}\">30: ${smaThirtyDown}</p>\n        //                <p class=\"smafifty-down-actual-${i}\">50: ${smaFiftyDown}</p>\n        //            </div>\n        //            <p class=\"goldenSma-cross-down-${i} golden-cross\">Golden Cross</p>\n        //            <p class=\"deathSma-cross-down-${i} death-cross\">Death Cross</p>\n        //            <div class=\"averages-row\">\n        //                <p class=\"smaonehundred-down-actual-${i}\">100: ${smaOneHunDown}</p>\n        //                <p class=\"smatwohundred-down-actual-${i}\">200: ${smaTwoHunDown}</p>\n        //            </div>\n        //    </div>\n        //    <div class=\"tech-row\">\n        //    <a class=\"info-link ema-down-header-${i}\" href=\"https://www.investopedia.com/terms/e/ema.asp\" target=\"_blank\"><h3 class='tech-header'>EMA</h3></a>\n        //           <div class=\"averages-row\">\n        //           <p class=\"emaeight-down-actual-${i}\">8: ${emaEightDown}</p>\n        //           <p class=\"ematwelve-down-actual-${i}\">12: ${emaTwelveDown}</p>\n        //           </div>\n        //           <div class=\"averages-row\">\n        //           <p class=\"ematwenty-down-actual-${i}\">20: ${emaTwentyDown}</p>\n        //           <p class=\"ematwentysix-down-actual-${i}\">26: ${emaTwentySixDown}</p>\n        //           </div>\n        //           <p class=\"goldenEma-cross-down-${i} golden-cross ema-cross\">Golden Cross</p>\n        //           <p class=\"deathEma-cross-down-${i} death-cross ema-cross\">Death Cross</p>\n        //           <div class=\"averages-row\">\n        //           <p class=\"emafifty-down-actual-${i}\">50: ${emaFiftyDown}</p>\n        //           <p class=\"ematwohundred-down-actual-${i}\">200: ${emaTwoHunDown}</p>\n        //           </div>            \n        //    </div>\n        //    <div class=\"tech-row\">\n        //    <a class=\"info-link wma-down-header-${i}\" href=\"https://www.investopedia.com/ask/answers/071414/whats-difference-between-moving-average-and-weighted-moving-average.asp\" target=\"_blank\"><h3 class='tech-header'>WMA</h3></a>\n        //            <div class=\"averages-row\">\n        //                <p class=\"wmafifteen-down-actual-${i}\">15: ${wmaFiveTeenDown}</p>\n        //                <p class=\"wmatwenty-down-actual-${i}\">20: ${wmaTwentyDown}</p>\n        //            </div>\n        //            <div class=\"averages-row\">\n        //                <p class=\"wmathirty-down-actual-${i}\">30: ${wmaThirtyDown}</p>\n        //                <p class=\"wmafifty-down-actual-${i}\">50: ${wmaFiftyDown}</p>\n        //            </div>\n        //            <p class=\"goldenWma-cross-down-${i} golden-cross wma-cross\">Golden Cross</p>\n        //            <p class=\"deathWma-cross-down-${i} death-cross wma-cross\">Death Cross</p>\n        //            <div class=\"averages-row\">\n        //                <p class=\"wmaonehundred-down-actual-${i}\">100: ${wmaOneHunDown}</p>\n        //                <p class=\"wmatwohundred-down-actual-${i}\">200: ${wmaTwoHunDown}</p>\n        //            </div>\n        //    </div>\n        //    <div class=\"tech-row\">\n        //    <a class=\"info-link vwma-down-header-${i}\" href=\"https://www.tradingsetupsreview.com/volume-weighted-moving-average-vwma/\" target=\"_blank\"><h3 class='tech-header'>VWMA</h3></a>\n        //            <div class=\"averages-row\">\n        //                <p class=\"vwmafifteen-down-actual-${i}\">15: ${vwmaFiveTeenDown}</p>\n        //                <p class=\"vwmatwenty-down-actual-${i}\">20: ${vwmaTwentyDown}</p>\n        //            </div>\n        //            <div class=\"averages-row\">\n        //                <p class=\"vwmathirty-down-actual-${i}\">30: ${vwmaThirtyDown}</p>\n        //                <p class=\"vwmafifty-down-actual-${i}\">50: ${vwmaFiftyDown}</p>\n        //            </div>\n        //            <p class=\"goldenVwma-cross-down-${i} golden-cross vwma-cross\">Golden Cross</p>\n        //            <p class=\"deathVwma-cross-down-${i} death-cross vwma-cross\">Death Cross</p>\n        //            <div class=\"averages-row\">\n        //                <p class=\"vwmaonehundred-down-actual-${i}\">100: ${vwmaOneHunDown}</p>\n        //                <p class=\"vwmatwohundred-down-actual-${i}\">200: ${vwmaTwoHunDown}</p>\n        //            </div>\n        //    </div>\n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link vwap-down-header-${i}\" href=\"https://www.investopedia.com/terms/v/vwap.asp\" target=\"_blank\"><h3 class='tech-header'>VWAP (5 Minute)</h3></a>\n        //            <p class=\"osc-text vwap-down-actual-${i}\">${vwapDown}</p>\n        //        </div>\n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link macd-down-header-${i}\" href=\"https://www.investopedia.com/terms/m/macd.asp\" target=\"_blank\"><h3 class='tech-header'>MACD (12 , 26)</h3></a>\n        //            <p class=\"osc-text macd-down-actual-${i}\">${macdDown}</p>\n        //                <div class=\"macd-row\">\n        //                    <p class=\"macd-signal-down-actual-${i} sl\">Signal Line:<br>${macdSignalLineDown}</p>\n        //                    <p class=\"macd-histo-down-actual-${i} sl\">Histogram:<br>${macdHistogramDown}</p>\n        //                </div>\n        //        </div>\n        //        <div class=\"flex-rsi-cci\">\n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link rsi-down-header-${i}\" href=\"https://www.investopedia.com/terms/s/stochrsi.asp\" target=\"_blank\"><h3 class='tech-header'>RSI</h3></a>\n        //                <p class=\"osc-text rsi-down-actual-${i}\">${rsiDown}</p>\n        //            </div>\n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link cci-down-header-${i}\" href=\"https://www.investopedia.com/terms/c/commoditychannelindex.asp\" target=\"_blank\"><h3 class='tech-header'>CCI</h3></a>\n        //                <p class=\"osc-text cci-down-actual-${i}\">${cciDown}</p>\n        //            </div>\n        //        </div>\n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link williams-down-header-${i}\" href=\"https://www.investopedia.com/terms/w/williamsr.asp\" target=\"_blank\"><h3 class='tech-header'>Williams %R</h3></a>\n        //            <p class=\"osc-text williams-down-actual-${i}\">${williamsRDown}</p>\n        //        </div>\n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link stochastic-down-header-${i}\" href=\"https://www.investopedia.com/terms/s/stochasticoscillator.asp\" target=\"_blank\"><h3 class='tech-header'>Stochastic Oscillator</h3></a>\n        //           <div class=\"averages-row\">\n        //               <p class=\"osc-text stochasticK-down-actual-${i} stochK\">%K: ${stochasticKDown}</p>\n        //               <p class=\"osc-text stochasticD-down-actual-${i} stochD\">%D: ${stochasticDDown}</p>\n        //           </div>\n        //               <p class=\"osc-text\">Signal Line: ${stochasticSignalDown}</p>\n        //        </div>\n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link bb-down-header-${i}\" href=\"https://www.investopedia.com/terms/b/bollingerbands.asp\" target=\"_blank\"><h3 class='tech-header'>Bollinger Bands</h3></a>\n        //           <p class=\"osc-text bbPercent-down-actual-${i}\">%B: ${bbPercentDown}</p>\n        //           <div class=\"averages-row\">\n        //               <p class=\"osc-text bbUpper-down-actual-${i}\">Upper:<br>${bbUpperDown}</p>\n        //               <p class=\"osc-text bbLower-down-actual-${i}\">Lower:<br>${bbLowerDown}</p>\n        //           </div>\n        //           <p class=\"osc-text bbMiddle-down-actual-${i}\">Middle: ${bbMiddleDown}</p>\n        //        </div>\n        //        <div class=\"news-row\">\n        //        <a class=\"tech-header-news\" href=\"http://www.google.com/search?q=${symbolDown}+stock+news&source=lnms&tbm=nws&sa=X&ved=2ahUKEwj7_6eMpbPyAhXaVs0KHfuADvoQ_AUoAXoECAEQAw&biw=1280&bih=614\" target=\"_blank\">News About This Stock</a>\n        //        </div>\n        //        <div class=\"news-row\">\n        //        <a class=\"buy-coffee-link\" target=\"_blank\" href=\"https://buymeacoffee.com/omniauti\">Buy Me A Coffee <img src=\"images/bmc-logo.svg\"></a>\n        //        </div>\n        //    </div>\n        //        <!----------------------------------- UPPER --------------------------------------------------------->\n        //    <div tabindex=\"0\" class=\"upper symbol-box\" data-index=\"${i}\">\n        //        <h2 id=\"symbol\">${symbolUp}</h2>\n        //        <p class=\"price price-up-${i}\">Price: $${priceUp}</p>\n        //        <div class=\"changes-row\">\n        //        <p class=\"changePercentageUp-${i}\">${changesPercentageUp}%</p>\n        //        <svg id=\"upArrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 100 400\" shape-rendering=\"geometricPrecision\" text-rendering=\"geometricPrecision\"><g id=\"ewG75ifXDmx2\" transform=\"matrix(0.99132899255994 0.00125353493548 0.00179456906301 -1.41919326774185 0 5360)\"><g id=\"ewG75ifXDmx3\" transform=\"matrix(0.10000000000000 0 0 0.10000000000000 0.00000000000023 0.00000000000023)\"><path id=\"ewG75ifXDmx4\" d=\"M29164.905156,10134.800000L28991.385074,10784.799602L28821.634757,10614.426482L27244.542329,12197.305156L27102.400000,12054.641316L28679.492428,10471.762642L28517.281642,10308.956716L29164.905156,10134.800000\" transform=\"matrix(-0.70853823648212 0.70567242219234 -0.70567242219234 -0.70853823648212 28243.81608984843479 24398.89755446932395)\" fill=\"rgb(89,228,139)\" stroke=\"none\" stroke-width=\"1\"/><path id=\"ewG75ifXDmx5\" d=\"M36131.700000,8167.800000C36128.200000,8167.800000,36124.700000,8168.900000,36121.700000,8170.900000C34563.300000,9219.200000,32199.200000,8231.400000,32175.500000,8221.300000C32169.500000,8218.300000,32162.200000,8218.800000,32156.700000,8222.800000C32151.200000,8226.700000,32148.300000,8233.400000,32149.300000,8240.100000C32150.300000,8246.800000,32154.900000,8252.400000,32161.300000,8254.600000C32185.300000,8264.700000,34566.400000,9259.600000,36142.200000,8200.900000C36148.700000,8196.400000,36151.500000,8188.300000,36149.200000,8180.800000C36146.900000,8173.300000,36140,8168.100000,36132.200000,8167.900000L36131.700000,8167.800000\" transform=\"matrix(1 0 0 1 -23974.95002737504910 24467.33418583546154)\" fill=\"rgb(255,255,255)\" stroke=\"none\" stroke-width=\"1\"/><path id=\"ewG75ifXDmx6\" d=\"M24267.800000,8167.800000C24260,8167.900000,24253.100000,8173.100000,24250.800000,8180.600000C24248.500000,8188.200000,24251.300000,8196.300000,24257.800000,8200.800000C25833.100000,9259.500000,28214.600000,8264.500000,28238.700000,8254.500000C28243.100000,8252.600000,28246.600000,8249.100000,28248.400000,8244.600000C28250.200000,8240.100000,28250.200000,8235.100000,28248.300000,8230.700000C28244.200000,8221.700000,28233.700000,8217.500000,28224.500000,8221.100000C28200.700000,8231.100000,25837.100000,9218.400000,24278.300000,8170.800000C24275.200000,8168.700000,24271.500000,8167.700000,24267.800000,8167.800000\" transform=\"matrix(1 0 0 1 -23974.95002737508185 24467.33418583546154)\" fill=\"rgb(255,255,255)\" stroke=\"none\" stroke-width=\"1\"/></g></g></svg>\n        //        <p>$${changeUp}</p>\n        //        </div>\n        //    </div>\n        //    <!----------------------------------- THIS WILL HOLD TECH ANALYSIS FOR HOVER POPULATE IN MIDDLE ---------------------------------------->\n        //    <div class=\"tech-up-${i}\">\n        //    <h2 class=\"tech-title\">Daily Indicators</h2>\n        //    <p class=\"tech-title-warn\">For Educational Purposes Only</p>\n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link\" href=\"https://www.investopedia.com/articles/technical/02/010702.asp\" target=\"_blank\"><h3 class='tech-header'>Volume</h3></a>\n        //                <p>Average: <span class=\"tech-to-left avgVolume-up-actual-${i}\"> ${avgVolumeUp}</span></p>\n        //                <p>Today:  <span class=\"tech-to-left volumeToday-up-actual-${i}\"> ${volumeUp}</span></p>\n        //                <p>Change: <span class=\"tech-to-left\"> ${volumeIncreaseUp}%</span></p>\n        //                <p>Day Before: <span class=\"tech-to-left\"> ${volumeYesterdayUp}</span></p>\n        //                <p>Change: <span class=\"tech-to-left\"> ${yesterdayVolIncreaseUp}%</span></p>\n        //            </div>\n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link sma-up-header-${i}\" href=\"https://www.investopedia.com/terms/s/sma.asp\" target=\"_blank\"><h3 class='tech-header'>SMA</h3></a>\n        //                   <div class=\"averages-row\">\n        //                        <p class=\"smafifteen-up-actual-${i}\">15: ${smaFiveTeenUp}</p>\n        //                        <p class=\"smatwenty-up-actual-${i}\">20: ${smaTwentyUp}</p>\n        //                    </div>\n        //                    <div class=\"averages-row\">\n        //                        <p class=\"smathirty-up-actual-${i}\">30: ${smaThirtyUp}</p>\n        //                        <p class=\"smafifty-up-actual-${i}\">50: ${smaFiftyUp}</p>\n        //                    </div>\n        //                    <p class=\"goldenSma-cross-up-${i} golden-cross\">Golden Cross</p>\n        //                    <p class=\"deathSma-cross-up-${i} death-cross\">Death Cross</p>    \n        //                    <div class=\"averages-row\">\n        //                        <p class=\"smaonehundred-up-actual-${i}\">100: ${smaOneHunUp}</p>\n        //                        <p class=\"smatwohundred-up-actual-${i}\">200: ${smaTwoHunUp}</p>\n        //                    </div>\n        //            </div>\n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link ema-up-header-${i}\" href=\"https://www.investopedia.com/terms/e/ema.asp\" target=\"_blank\"><h3 class='tech-header'>EMA</h3></a>\n        //                   <div class=\"averages-row\">\n        //                   <p class=\"emaeight-up-actual-${i}\">8: ${emaEightUp}</p>\n        //                   <p class=\"ematwelve-up-actual-${i}\">12: ${emaTwelveUp}</p>\n        //                   </div>\n        //                   <p class=\"goldenEma-cross-up-${i} golden-cross ema-cross\">Golden Cross</p>\n        //                   <p class=\"deathEma-cross-up-${i} death-cross ema-cross\">Death Cross</p>   \n        //                   <div class=\"averages-row\">\n        //                   <p class=\"ematwenty-up-actual-${i}\">20: ${emaTwentyUp}</p>\n        //                   <p class=\"ematwentysix-up-actual-${i}\">26: ${emaTwentySixUp}</p>\n        //                   </div>\n        //                   <div class=\"averages-row\">\n        //                   <p class=\"emafifty-up-actual-${i}\">50: ${emaFiftyUp}</p>\n        //                   <p class=\"ematwohundred-up-actual-${i}\">200: ${emaTwoHunUp}</p>\n        //                   </div>\n        //            </div>\n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link wma-up-header-${i}\" href=\"https://www.investopedia.com/ask/answers/071414/whats-difference-between-moving-average-and-weighted-moving-average.asp\" target=\"_blank\"><h3 class='tech-header'>WMA</h3></a>\n        //                    <div class=\"averages-row\">\n        //                        <p class=\"wmafifteen-up-actual-${i}\">15: ${wmaFiveTeenUp}</p>\n        //                        <p class=\"wmatwenty-up-actual-${i}\">20: ${wmaTwentyUp}</p>\n        //                    </div>\n        //                    <div class=\"averages-row\">\n        //                        <p class=\"wmathirty-up-actual-${i}\">30: ${wmaThirtyUp}</p>\n        //                        <p class=\"wmafifty-up-actual-${i}\">50: ${wmaFiftyUp}</p>\n        //                    </div>\n        //                    <p class=\"goldenWma-cross-up-${i} golden-cross wma-cross\">Golden Cross</p>\n        //                    <p class=\"deathWma-cross-up-${i} death-cross wma-cross\">Death Cross</p>    \n        //                    <div class=\"averages-row\">\n        //                        <p class=\"wmaonehundred-up-actual-${i}\">100: ${wmaOneHunUp}</p>\n        //                        <p class=\"wmatwohundred-up-actual-${i}\">200: ${wmaTwoHunUp}</p>\n        //                    </div>\n        //            </div>\n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link vwma-up-header-${i}\" href=\"https://www.tradingsetupsreview.com/volume-weighted-moving-average-vwma/\" target=\"_blank\"><h3 class='tech-header'>VWMA</h3></a>\n        //                    <div class=\"averages-row\">\n        //                        <p class=\"vwmafifteen-up-actual-${i}\">15: ${vwmaFiveTeenUp}</p>\n        //                        <p class=\"vwmatwenty-up-actual-${i}\">20: ${vwmaTwentyUp}</p>\n        //                    </div>\n        //                    <div class=\"averages-row\">\n        //                        <p class=\"vwmathirty-up-actual-${i}\">30: ${vwmaThirtyUp}</p>\n        //                        <p class=\"vwmafifty-up-actual-${i}\">50: ${vwmaFiftyUp}</p>\n        //                    </div>\n        //                    <p class=\"goldenVwma-cross-up-${i} golden-cross vwma-cross\">Golden Cross</p>\n        //                    <p class=\"deathVwma-cross-up-${i} death-cross vwma-cross\">Death Cross</p>    \n        //                    <div class=\"averages-row\">\n        //                        <p class=\"vwmaonehundred-up-actual-${i}\">100: ${vwmaOneHunUp}</p>\n        //                        <p class=\"vwmatwohundred-up-actual-${i}\">200: ${vwmaTwoHunUp}</p>\n        //                    </div>\n        //            </div>\n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link vwap-up-header-${i}\" href=\"https://www.investopedia.com/terms/v/vwap.asp\" target=\"_blank\"><h3 class='tech-header'>VWAP (5 Minute)</h3></a>\n        //            <p class=\"osc-text vwap-up-actual-${i}\">${vwapUp}</p>\n        //        </div>\n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link macd-up-header-${i}\" href=\"https://www.investopedia.com/terms/m/macd.asp\" target=\"_blank\"><h3 class='tech-header'>MACD (12 , 26)</h3></a>\n        //            <p class=\"osc-text macd-up-actual-${i}\">${macdUp}</p>\n        //                <div class=\"macd-row\">\n        //                    <p class=\"macd-signal-up-actual-${i} sl\">Signal Line:<br>${macdSignalLineUp}</p>\n        //                    <p class=\"macd-histo-up-actual-${i} sl\">Histogram:<br>${macdHistogramUp}</p>\n        //                </div>\n        //        </div>\n        //        <div class=\"flex-rsi-cci\">\n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link rsi-up-header-${i}\" href=\"https://www.investopedia.com/terms/s/stochrsi.asp\" target=\"_blank\"><h3 class='tech-header'>RSI</h3></a>\n        //            <p class=\"osc-text rsi-up-actual-${i}\">${rsiUp}</p>\n        //            </div>\n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link cci-up-header-${i}\" href=\"https://www.investopedia.com/terms/c/commoditychannelindex.asp\" target=\"_blank\"><h3 class='tech-header'>CCI</h3></a>\n        //                <p class=\"osc-text cci-up-actual-${i}\">${cciUp}</p>\n        //            </div>\n        //        </div>\n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link williams-up-header-${i}\" href=\"https://www.investopedia.com/terms/w/williamsr.asp\" target=\"_blank\"><h3 class='tech-header'>Williams %R</h3></a>\n        //            <p class=\"osc-text williams-up-actual-${i}\">${williamsRUp}</p>\n        //        </div>\n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link stochastic-up-header-${i}\" href=\"https://www.investopedia.com/terms/s/stochasticoscillator.asp\" target=\"_blank\"><h3 class='tech-header'>Stochastic Oscillator</h3></a>\n        //           <div class=\"averages-row\">\n        //           <p class=\"osc-text stochasticK-up-actual-${i} stochK\">%K: ${stochasticKUp}</p>\n        //           <p class=\"osc-text stochasticD-up-actual-${i} stochD\">%D: ${stochasticDUp}</p>\n        //           </div>\n        //           <p class=\"osc-text\">Signal Line: ${stochasticSignalUp}</p>\n        //        </div>\n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link bb-up-header-${i}\" href=\"https://www.investopedia.com/terms/b/bollingerbands.asp\" target=\"_blank\"><h3 class='tech-header'>Bollinger Bands</h3></a>\n        //           <p class=\"osc-text bbPercent-up-actual-${i}\">%B: ${bbPercentUp}</p>\n        //           <div class=\"averages-row\">\n        //               <p class=\"osc-text bbUpper-up-actual-${i}\">Upper:<br>${bbUpperUp}</p>\n        //               <p class=\"osc-text bbLower-up-actual-${i}\">Lower:<br>${bbLowerUp}</p>\n        //           </div>\n        //               <p class=\"osc-text bbMiddle-up-actual-${i}\">Middle: ${bbMiddleUp}</p>\n        //        </div>\n        //        <div class=\"news-row\">\n        //        <a class=\"tech-header-news\" href=\"http://www.google.com/search?q=${symbolUp}+stock+news&source=lnms&tbm=nws&sa=X&ved=2ahUKEwj7_6eMpbPyAhXaVs0KHfuADvoQ_AUoAXoECAEQAw&biw=1280&bih=614\" target=\"_blank\">News About This Stock</a>\n        //        </div>\n        //        <div class=\"news-row\">\n        //        <a class=\"buy-coffee-link\" target=\"_blank\" href=\"https://buymeacoffee.com/omniauti\">Buy Me A Coffee <img src=\"images/bmc-logo.svg\"></a>\n        //        </div>\n        //    </div> `;\n        //   litterBox.appendChild(litter);\n\n      } //------------ ADD SECOND SCRIPT FOR JAVASCRIPT FUNCTIONALITY TO NEW ELEMENTS ---------------------- //\n\n\n      addSecondScript();\n    } //----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\n\n\n    filterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n  }\n\n  useEffect(() => {\n    console.log(finalArr, 'this is use effect');\n  }, [finalArr]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(BearRow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2724,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BullRow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2725,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2723,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainContainer, \"dle2aSDqBBs4c+WEqWvB2gejxUY=\");\n\n_c = MainContainer;\nexport default MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/MainContainer.js"],"names":["BearRow","BullRow","nasdaqMasterKey","nyseMasterKey","useState","useEffect","MainContainer","downersStocks","setDowner","upperStocks","setUpper","finalArr","setFinalArr","theAllPower","today","Date","year","getFullYear","date","getUTCDate","month","getUTCMonth","minutes","getUTCMinutes","hour","getUTCHours","console","log","time","timeNum","parseInt","marketDay","getDay","todayDate","newDateString","dateNumSlice","dateSliceStart","slice","newDateNum","toString","addSecondScript","scripty","document","createElement","setAttribute","body","appendChild","filterTradableSymbols","arr1","arr2","compileCallback","nyseHolderDown","nyseHolderUp","nasdaqHolderDown","nasdaqHolderUp","res","fetch","dataNyse","json","i","length","changesPercentage","indexOf","symbol","price","push","resTwo","dataNas","e","technicalIndicators","compileStocks","arr3","arr4","callback","finalChartFatDown","finalChartFatUp","finalChart","combinedStockDrop","concat","combinedStockUp","keys","filter","stock","match","sort","a","b","holderObjDown","avgVolume","bbLower","bbMiddle","bbPercent","bbUpper","cciTwenty","change","dayHigh","dayLow","earningsAnnouncement","emaEight","emaFifty","emaTwelve","emaTwenty","emaTwentySix","emaTwoHun","eps","exchange","macd","macdHistogram","macdSignalLine","marketCap","name","open","pe","previousClose","priceAvg50","priceAvg200","rsi","sharesOutstanding","smaFifty","smaFiveTeen","smaOneHun","smaThirty","smaTwenty","smaTwoHun","stochasticD","stochasticK","stochasticSignal","timestamp","volume","vwap","vwmaFifty","vwmaFiveTeen","vwmaOneHun","vwmaThirty","vwmaTwenty","vwmaTwoHun","williamsR","wmaFifty","wmaFiveTeen","wmaOneHun","wmaThirty","wmaTwenty","wmaTwoHun","yearHigh","yearLow","yesterdayVolume","holderObjUp","slimChartDown","unshift","slimChartUp","filterUpDownStocks","smaFunction","chartArr","dataPull","newestPull","num","culSMA","fiveTeenSMA","twentySMA","thirtySMA","fiftySMA","hunSMA","twoHunSMA","todayPricePull","historical","close","smaFiveResult","toFixed","smaTwentyResult","smaThirtyResult","smaFiftyResult","smaOneHunResult","smaTwoHunResult","wmaFunction","weight","wmaInterval","iWma","wmaCul","vwmaFunction","newPrice","newVol","volCul","totalCul","emaFunction","macdCallBack","prevDayEmaSub","arrEma","macdTwelve","macdTwentySix","subEMA","finalSubEma","derp","pop","finalEma","macdFunction","averageMacd","iMacd","averageSum","reduce","finalAverageMacd","histogram","rsiFunction","iRSI","iRSIAdjusted","recentUpper","recentDowner","upMove","downMove","pastDownPeriod","pastUpPeriod","averageUp","averageDown","stochOsc1433Function","iSO","soLowHolder","soHighHolder","highestHigh","lowestLow","topForm","bottomForm","topFormTwo","bottomFormTwo","topFormThree","bottomFormThree","signalLineHolder","low","high","Math","max","min","sumTop","sumBottom","slowD","sumStochD","smaD","williamsRFunction","highs","lows","williams","cciFunction","tpvCul","tpv","tpvMa","tpvCurrent","recentTpv","partOne","meanD","map","x","meanDMap","abs","meanDSum","meanDiv","partTwo","cci","bollingerBandsFunction","smaCul","closeHolder","closeP","priceAdj","priceAdjAbs","priceAdjSqrt","partOneDev","partTwoDev","standardDev","sqrt","vwapFunction","dayLengthPeriod","volumeCul","tempVWAP","vwapFinal","setVolume","j","resSMA","dataSMA","Object","resOscPulled","dataRecentPulled","resVWAP","dataVWAP","buildIt","stocksUp","stocksDown","symbolUp","changeUp","avgVolumeUp","changesPercentageUp","emaEightUp","emaTwelveUp","emaTwentyUp","emaTwentySixUp","emaFiftyUp","emaTwoHunUp","macdUp","macdHistogramUp","macdSignalLineUp","priceUp","rsiUp","smaFiveTeenUp","smaTwentyUp","smaThirtyUp","smaFiftyUp","smaOneHunUp","smaTwoHunUp","volumeUp","volumeYesterdayUp","vwapUp","stochasticDUp","stochasticKUp","stochasticSignalUp","wmaFiveTeenUp","wmaTwentyUp","wmaThirtyUp","wmaFiftyUp","wmaOneHunUp","wmaTwoHunUp","vwmaFiveTeenUp","vwmaTwentyUp","vwmaThirtyUp","vwmaFiftyUp","vwmaOneHunUp","vwmaTwoHunUp","williamsRUp","cciUp","bbUpperUp","bbLowerUp","bbMiddleUp","bbPercentUp","symbolDown","changeDown","avgVolumeDown","changesPercentageDown","emaEightDown","emaTwelveDown","emaTwentyDown","emaTwentySixDown","emaFiftyDown","emaTwoHunDown","macdDown","macdHistogramDown","macdSignalLineDown","priceDown","rsiDown","smaFiveTeenDown","smaTwentyDown","smaThirtyDown","smaFiftyDown","smaOneHunDown","smaTwoHunDown","volumeDown","volumeYesterdayDown","vwapDown","stochasticDDown","stochasticKDown","stochasticSignalDown","wmaFiveTeenDown","wmaTwentyDown","wmaThirtyDown","wmaFiftyDown","wmaOneHunDown","wmaTwoHunDown","vwmaFiveTeenDown","vwmaTwentyDown","vwmaThirtyDown","vwmaFiftyDown","vwmaOneHunDown","vwmaTwoHunDown","williamsRDown","cciDown","bbUpperDown","bbLowerDown","bbMiddleDown","bbPercentDown","litterBox","getElementById","arrUp","arrDown","undefined","volumeIncreaseUp","increase","decrease","volumeIncreaseDown","yesterdayVolIncreaseUp","yesterdayVolIncreaseDown","changeDownAdjusted","isNaN"],"mappings":"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","sourcesContent":["import BearRow from \"./BearRow\";\nimport BullRow from \"./BullRow\";\nimport {nasdaqMasterKey, nyseMasterKey} from './public/JS/masterKeys.js'\n\nimport {useState, useEffect} from 'react'\n\n\n\n\nconst MainContainer = () => {\n\n//STATES ----------------------------------------------\nconst [downersStocks, setDowner] = useState([])\nconst [upperStocks, setUpper] = useState([])\nconst [finalArr, setFinalArr] = useState([])\n\nfunction theAllPower(nasdaqMasterKey, nyseMasterKey) {\n\n\n    /// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------\n    const today = new Date\n    const year = today.getFullYear()\n    let date = today.getUTCDate()\n    let month = today.getUTCMonth() + 1\n    let minutes = today.getUTCMinutes()\n    let hour = today.getUTCHours()\n     // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n        \n        //CALC FOR UTC TO EST\n        hour = hour - 5;\n        // CALC FOR EARLY MORNING HOURS UTC\n        if (hour < 0)\n        {\n            hour = hour + 24;\n        }\n        console.log(hour)\n        // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n        if (minutes < 10) {\n            minutes = `0${minutes}`\n        }\n        const time = `${hour}${minutes}`\n        const timeNum = parseInt(time)\n        // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n        const marketDay = today.getDay()\n        // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n        if (marketDay == 0) {\n            date = date - 2\n                    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n                    if (date <= 0) {\n    \n                        if (month == 1 || month == 2 || month ==  4 || month == 6 || month ==  8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n                        {\n                            month = month - 1\n                            if (month < 10) {\n                                month = `0${month}`\n                            }\n                            date = 30\n                            \n                        }\n                        else if (month == 5 || month == 7 || month ==  10 || month == 12) // MONTHS AFTER 30 DAYS\n                        {\n                            month = month - 1\n                            if (month < 10) {\n                                month = `0${month}`\n                            }\n                            date = 29\n                           \n                        }\n                        else if (month == 3 && (year % 4) == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n                        {\n                            month = month - 1\n                            if (month < 10) {\n                                month = `0${month}`\n                            }\n                            date = 28\n                            \n                        }\n                        else  // MONTH AFTER 28\n                        {\n                            month = month - 1\n                            if (month < 10) {\n                                month = `0${month}`\n                            }\n                            date = 27\n                            \n                        }\n                    }    \n        } else if (marketDay == 6) {\n            date = date - 1\n                    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n                    if (date <= 0) {\n    \n                        if (month == 1 || month == 2 || month ==  4 || month == 6 || month ==  8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n                        {\n                            month = month - 1\n                            if (month < 10) {\n                                month = `0${month}`\n                            }\n                            date = 31\n                            \n                        }\n                        else if (month == 5 || month == 7 || month ==  10 || month == 12) // MONTHS AFTER 30 DAYS\n                        {\n                            month = month - 1\n                            if (month < 10) {\n                                month = `0${month}`\n                            }\n                            date = 30\n                           \n                        }\n                        else if (month == 3 && (year % 4) == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n                        {\n                            month = month - 1\n                            if (month < 10) {\n                                month = `0${month}`\n                            }\n                            date = 29\n                            \n                        }\n                        else  // MONTH AFTER 28\n                        {\n                            month = month - 1\n                            if (month < 10) {\n                                month = `0${month}`\n                            }\n                            date = 28\n                            \n                        }\n                    }    \n        }\n        // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n        if (marketDay == 1 && timeNum < 930) {\n            date = date - 3\n            // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n            if (date <= 0) {\n    \n                if (month == 1 || month == 2 || month ==  4 || month == 6 || month ==  8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n                {\n                    month = month - 1\n                    if (month < 10) {\n                        month = `0${month}`\n                    }\n                    date = 29\n                    \n                }\n                else if (month == 5 || month == 7 || month ==  10 || month == 12) // MONTHS AFTER 30 DAYS\n                {\n                    month = month - 1\n                    if (month < 10) {\n                        month = `0${month}`\n                    }\n                    date = 28\n                   \n                }\n                else if (month == 3 && (year % 4) == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n                {\n                    month = month - 1\n                    if (month < 10) {\n                        month = `0${month}`\n                    }\n                    date = 27\n                    \n                }\n                else  // MONTH AFTER 28\n                {\n                    month = month - 1\n                    if (month < 10) {\n                        month = `0${month}`\n                    }\n                    date = 26\n                    \n                }\n            }    \n        } \n        else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {// ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n            date = date - 1\n            // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n            if (date <= 0) {\n    \n                if (month == 1 || month == 2 || month ==  4 || month == 6 || month ==  8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n                {\n                    month = month - 1\n                    if (month == 0) {\n                        month = 1\n                    }\n                    date = 31\n                    \n                }\n                else if (month == 5 || month == 7 || month ==  10 || month == 12) // MONTHS AFTER 30 DAYS\n                {\n                    month = month - 1\n                    date = 30\n                    \n                }\n                else if (month == 3 && (year % 4) == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n                {\n                    month = month - 1\n                    date = 29\n                   \n                }\n                else  // MONTH AFTER 28\n                {\n                    month = month - 1\n                    date = 28\n                   \n                }\n        }    \n        }\n        // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n        if (date < 10) {\n            date = `0${date}`\n        }\n        if (month < 10) {\n            month = `0${month}`\n        }\n        // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n        let todayDate = `${year}-${month}-${date}`\n        //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n        if (todayDate === '2021-11-25') {\n            todayDate = '2021-11-24'\n        } \n        else if (todayDate === '2021-12-24') {\n            todayDate = '2021-12-23'\n        } \n        else if (todayDate === '2022-01-17') {\n            todayDate = '2022-01-14'\n        } \n        else if (todayDate === '2022-02-21') {\n            todayDate = '2022-02-18'\n        } \n        else if (todayDate === '2022-04-15') {\n            todayDate = '2022-04-14'\n        } \n        else if (todayDate === '2022-05-30') {\n            todayDate = '2022-05-27'\n        } \n        else if (todayDate === '2022-06-20') {\n            todayDate = '2022-06-17'\n        } \n        else if (todayDate === '2022-07-04') {\n            todayDate = '2022-07-01'\n        } \n        else if (todayDate === '2022-09-05') {\n            todayDate = '2022-09-02'\n        } \n        else if (todayDate === '2022-11-24') {\n            todayDate = '2022-11-23'\n        } \n        else if (todayDate === '2022-12-26') {\n            todayDate = '2022-12-23'\n        } \n    // THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n        let newDateString = todayDate;\n    \n        if ((hour + 4) >= 24) \n        {\n            const dateNumSlice = parseInt(date);\n            const dateSliceStart = todayDate.slice(0,8);\n            let newDateNum = dateNumSlice - 1\n            if (newDateNum < 10)\n            {\n                newDateNum = `0${newDateNum}`\n            }\n            newDateString = `${dateSliceStart}${newDateNum}`\n            newDateString = newDateString.toString()\n            // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n            if (date == 1 && (hour + 4) >= 24) {\n    \n                    if (month == 1 || month == 2 || month ==  4 || month == 6 || month ==  8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 31\n                        newDateString = `${year}-${month}-${date}`\n                    }\n                    else if (month == 5 || month == 7 || month ==  10 || month == 12) // MONTHS AFTER 30 DAYS\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 30\n                        newDateString = `${year}-${month}-${date}`\n                    }\n                    else if (month == 3 && (year % 4) == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 29\n                        newDateString = `${year}-${month}-${date}`\n                    }\n                    else  // MONTH AFTER 28\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 28\n                        newDateString = `${year}-${month}-${date}`\n                    }\n            }    \n        }\n    //---------------------------------------------------------------------------------------------------------------------\n    \n      //------------ ADD SECOND SCRIPT FOR RUN ---------------------- //\n      function addSecondScript() {\n        const scripty = document.createElement(\"script\");\n        scripty.setAttribute(\"src\", \"js/function.js\");\n        document.body.appendChild(scripty);\n      }\n      // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n      async function filterTradableSymbols(arr1, arr2, compileCallback) {\n        let nyseHolderDown = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n        let nyseHolderUp = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n        let nasdaqHolderDown = [];\n        let nasdaqHolderUp = [];\n        try {\n          // ------ FETCH NYSE\n          const res = await fetch(\n            \"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n          );\n          const dataNyse = await res.json();\n          // ----- FILTER TRADABLE SYMBOLS ON NYSE THAT HAVE DROPPED\n          for (let i = 0; i < dataNyse.length; i++) {\n            if (\n              dataNyse[i].changesPercentage < -5 &&\n              arr1.indexOf(dataNyse[i].symbol) > 0 &&\n              dataNyse[i].price > 1\n            ) {\n              nyseHolderDown.push(dataNyse[i]);\n            }\n          }\n    \n          for (let i = 0; i < dataNyse.length; i++) {\n            if (\n              dataNyse[i].changesPercentage > 5 &&\n              arr1.indexOf(dataNyse[i].symbol) > 0 &&\n              dataNyse[i].price > 1\n            ) {\n              nyseHolderUp.push(dataNyse[i]);\n            }\n          }\n          // ------ FETCH NASDAQ\n          const resTwo = await fetch(\n            \"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n          );\n          const dataNas = await resTwo.json();\n          // ----- FILTER TRADABLE SYMBOLS ON NASDAQ THAT HAVE DROPPED\n          for (let i = 0; i < dataNas.length; i++) {\n            if (\n              dataNas[i].changesPercentage < -5 &&\n              arr2.indexOf(dataNas[i].symbol) > 0 &&\n              dataNas[i].price > 1\n            ) {\n              nasdaqHolderDown.push(dataNas[i]);\n            }\n          }\n    \n          for (let i = 0; i < dataNas.length; i++) {\n            if (\n              dataNas[i].changesPercentage > 5 &&\n              arr2.indexOf(dataNas[i].symbol) > 0 &&\n              dataNas[i].price > 1\n            ) {\n              nasdaqHolderUp.push(dataNas[i]);\n            }\n          }\n          //--------- CATCH\n        } catch (e) {}\n        compileCallback(\n          nasdaqHolderDown,\n          nyseHolderDown,\n          nyseHolderUp,\n          nasdaqHolderUp,\n          technicalIndicators\n        ); // CALLBACK FOR STOCK FILTER\n      }\n      function compileStocks(arr1, arr2, arr3, arr4, callback) {\n        //---------------------- COMBINE AND SORT LARGEST DROP -------------------------\n        let finalChartFatDown = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n        let finalChartFatUp = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n        let finalChart = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n        // ------- THIS IS A FILTER FOR WEIRD STOCK SYMBOLS THAT SLIP IN ----------\n    \n        let combinedStockDrop = [];\n        combinedStockDrop = combinedStockDrop.concat(arr1, arr2);\n    \n        let combinedStockUp = [];\n        combinedStockUp = combinedStockUp.concat(arr3, arr4);\n    \n        const keys = /^[A-Z]{1,4}$/g;\n        finalChartFatDown = combinedStockDrop.filter((stock) => {\n          return stock.symbol.match(keys);\n        });\n    \n        finalChartFatUp = combinedStockUp.filter((stock) => {\n          return stock.symbol.match(keys);\n        });\n    \n        for (let i = 0; i < finalChartFatDown.length; i++) {\n          finalChartFatDown.sort((a, b) => {\n            return a.changesPercentage - b.changesPercentage;\n          });\n        }\n    \n        for (let i = 0; i < finalChartFatUp.length; i++) {\n          finalChartFatUp.sort((a, b) => {\n            return b.changesPercentage - a.changesPercentage;\n          });\n        }\n        // MAKE SURE ARR HAS RIGHT LENGTH TO LOAD ------------\n        const holderObjDown = {\n          avgVolume: -1,\n          bbLower: \"-1\",\n          bbMiddle: \"-1\",\n          bbPercent: \"-1\",\n          bbUpper: \"-1\",\n          cciTwenty: \"-1\",\n          change: -1,\n          changesPercentage: -1,\n          dayHigh: -1,\n          dayLow: -1,\n          earningsAnnouncement: \"-1\",\n          emaEight: \"-1\",\n          emaFifty: \"-1\",\n          emaTwelve: \"-1\",\n          emaTwenty: \"-1\",\n          emaTwentySix: \"-1\",\n          emaTwoHun: \"-1\",\n          eps: -1,\n          exchange: \"No Data\",\n          macd: \"-1\",\n          macdHistogram: \"-1\",\n          macdSignalLine: \"-1\",\n          marketCap: -1,\n          name: \"Placeholder for lack of Symbols\",\n          open: -1,\n          pe: -1,\n          previousClose: -1,\n          price: 1,\n          priceAvg50: -1,\n          priceAvg200: -1,\n          rsi: \"-1\",\n          sharesOutstanding: -1,\n          smaFifty: \"-1\",\n          smaFiveTeen: \"-1\",\n          smaOneHun: \"-1\",\n          smaThirty: \"-1\",\n          smaTwenty: \"-1\",\n          smaTwoHun: \"-1\",\n          stochasticD: \"-1\",\n          stochasticK: \"-1\",\n          stochasticSignal: \"-1\",\n          symbol: \"No Data\",\n          timestamp: -1,\n          volume: -1,\n          vwap: \"-1\",\n          vwmaFifty: \"-1\",\n          vwmaFiveTeen: \"-1\",\n          vwmaOneHun: \"-1\",\n          vwmaThirty: \"-1\",\n          vwmaTwenty: \"-1\",\n          vwmaTwoHun: \"-1\",\n          williamsR: \"-1\",\n          wmaFifty: \"-1\",\n          wmaFiveTeen: \"-1\",\n          wmaOneHun: \"-1\",\n          wmaThirty: \"-1\",\n          wmaTwenty: \"-1\",\n          wmaTwoHun: \"-1\",\n          yearHigh: -1,\n          yearLow: -1,\n          yesterdayVolume: -1,\n        };\n        const holderObjUp = {\n          avgVolume: 1,\n          bbLower: \"1\",\n          bbMiddle: \"1\",\n          bbPercent: \"1\",\n          bbUpper: \"1\",\n          cciTwenty: \"1\",\n          change: 1,\n          changesPercentage: 1,\n          dayHigh: 1,\n          dayLow: 1,\n          earningsAnnouncement: \"1\",\n          emaEight: \"1\",\n          emaFifty: \"1\",\n          emaTwelve: \"1\",\n          emaTwenty: \"1\",\n          emaTwentySix: \"1\",\n          emaTwoHun: \"1\",\n          eps: 1,\n          exchange: \"No Data\",\n          macd: \"1\",\n          macdHistogram: \"1\",\n          macdSignalLine: \"1\",\n          marketCap: 1,\n          name: \"Placeholder for lack of Symbols\",\n          open: 1,\n          pe: 1,\n          previousClose: 1,\n          price: 1,\n          priceAvg50: 1,\n          priceAvg200: 1,\n          rsi: \"1\",\n          sharesOutstanding: 1,\n          smaFifty: \"1\",\n          smaFiveTeen: \"1\",\n          smaOneHun: \"1\",\n          smaThirty: \"1\",\n          smaTwenty: \"1\",\n          smaTwoHun: \"1\",\n          stochasticD: \"1\",\n          stochasticK: \"1\",\n          stochasticSignal: \"1\",\n          symbol: \"No Data\",\n          timestamp: 1,\n          volume: 1,\n          vwap: \"1\",\n          vwmaFifty: \"1\",\n          vwmaFiveTeen: \"1\",\n          vwmaOneHun: \"1\",\n          vwmaThirty: \"1\",\n          vwmaTwenty: \"1\",\n          vwmaTwoHun: \"1\",\n          williamsR: \"1\",\n          wmaFifty: \"1\",\n          wmaFiveTeen: \"1\",\n          wmaOneHun: \"1\",\n          wmaThirty: \"1\",\n          wmaTwenty: \"1\",\n          wmaTwoHun: \"1\",\n          yearHigh: 1,\n          yearLow: 1,\n          yesterdayVolume: 1,\n        };\n    \n        if (finalChartFatUp.length < 5) {\n          while (finalChartFatUp.length < 5) {\n            finalChartFatUp.push(holderObjUp);\n          }\n        }\n        if (finalChartFatDown.length < 5) {\n          while (finalChartFatDown.length < 5) {\n            finalChartFatDown.push(holderObjDown);\n          }\n        }\n        // SLIM CHAT DOWN SO IT'S NOT BLOATED\n        let slimChartDown = 4;\n        while (slimChartDown >= 0) {\n          finalChart.unshift(finalChartFatDown[slimChartDown]);\n          slimChartDown--;\n        }\n    \n        let slimChartUp = 4;\n        while (slimChartUp >= 0) {\n          finalChart.unshift(finalChartFatUp[slimChartUp]);\n          slimChartUp--;\n        }\n    \n        callback(finalChart, filterUpDownStocks);\n      }\n      // ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n    \n      // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n      function smaFunction(chartArr, dataPull, newestPull, num) {\n        let culSMA = 0;\n    \n        // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n        let fiveTeenSMA = 13;\n        let twentySMA = 18;\n        let thirtySMA = 28;\n        let fiftySMA = 48;\n        let hunSMA = 98;\n        let twoHunSMA = 198;\n    \n        try {\n          const todayPricePull = newestPull[0].price;\n          // ------------- 15 DAY SMA -------------------------------\n          if (dataPull.historical.length <= 13) {\n            chartArr[num].smaFiveTeen = \"No Data\";\n          } else {\n            while (fiveTeenSMA >= 0) {\n              culSMA += dataPull.historical[fiveTeenSMA].close;\n              fiveTeenSMA--;\n            }\n            let smaFiveResult = (culSMA + todayPricePull) / 15;\n            chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n            culSMA = 0;\n          }\n          // ------------- 20 DAY SMA -------------------------------\n          if (dataPull.historical.length <= 19) {\n            chartArr[num].smaTwenty = \"No Data\";\n          } else {\n            while (twentySMA >= 0) {\n              culSMA += dataPull.historical[twentySMA].close;\n              twentySMA--;\n            }\n            let smaTwentyResult = (culSMA + todayPricePull) / 20;\n            chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n            culSMA = 0;\n          }\n          // ------------- 30 DAY SMA -------------------------------\n          if (dataPull.historical.length <= 29) {\n            chartArr[num].smaThirty = \"No Data\";\n          } else {\n            while (thirtySMA >= 0) {\n              culSMA += dataPull.historical[thirtySMA].close;\n              thirtySMA--;\n            }\n            let smaThirtyResult = (culSMA + todayPricePull) / 30;\n            chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n            culSMA = 0;\n          }\n          // ------------- 50 DAY SMA -------------------------------\n          if (dataPull.historical.length <= 49) {\n            chartArr[num].smaFifty = \"No Data\";\n          } else {\n            while (fiftySMA >= 0) {\n              culSMA += dataPull.historical[fiftySMA].close;\n              fiftySMA--;\n            }\n            let smaFiftyResult = (culSMA + todayPricePull) / 50;\n            chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n            culSMA = 0;\n          }\n          // ------------- 100 DAY SMA -------------------------------\n          if (dataPull.historical.length <= 99) {\n            chartArr[num].smaOneHun = \"No Data\";\n          } else {\n            while (hunSMA >= 0) {\n              culSMA += dataPull.historical[hunSMA].close;\n              hunSMA--;\n            }\n            let smaOneHunResult = (culSMA + todayPricePull) / 100;\n            chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n            culSMA = 0;\n          }\n          // ------------- 200 DAY SMA -------------------------------\n          if (dataPull.historical.length <= 199) {\n            chartArr[num].smaTwoHun = \"No Data\";\n          } else {\n            while (twoHunSMA >= 0) {\n              culSMA += dataPull.historical[twoHunSMA].close;\n              twoHunSMA--;\n            }\n            let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n            chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n            culSMA = 0;\n          }\n        } catch (e) {}\n      }\n      // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n      function wmaFunction(chartArr, dataPull, newestPull, num) {\n        // WMA FiveTeen --------------------------------------------------------------------\n        let weight = 14;\n        let wmaInterval = 0;\n        let iWma = 15;\n        try {\n          let wmaCul = newestPull[0].price * 15;\n    \n          if (dataPull.historical.length < 14) {\n            chartArr[num].wmaFiveTeen = \"No Data\";\n          } else {\n            for (let i = 0; i <= 13; i++) {\n              wmaInterval = dataPull.historical[i].close * weight;\n              wmaCul += wmaInterval;\n              iWma += weight;\n              weight--;\n            }\n            const wmaFiveTeen = wmaCul / iWma;\n            chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n          }\n    \n          // WMA Twenty --------------------------------------------------------------------\n          wmaCul = newestPull[0].price * 20;\n          weight = 19;\n          wmaInterval = 0;\n          iWma = 20;\n    \n          if (dataPull.historical.length < 19) {\n            chartArr[num].wmaTwenty = \"No Data\";\n          } else {\n            for (let i = 0; i <= 18; i++) {\n              wmaInterval = dataPull.historical[i].close * weight;\n              wmaCul += wmaInterval;\n              iWma += weight;\n              weight--;\n            }\n            const wmaTwenty = wmaCul / iWma;\n            chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n          }\n    \n          // WMA THIRTY --------------------------------------------------------------------\n    \n          wmaCul = newestPull[0].price * 30;\n          weight = 29;\n          wmaInterval = 0;\n          iWma = 30;\n    \n          if (dataPull.historical.length < 30) {\n            chartArr[num].wmaThirty = \"No Data\";\n          } else {\n            for (let i = 0; i <= 28; i++) {\n              wmaInterval = dataPull.historical[i].close * weight;\n              wmaCul += wmaInterval;\n              iWma += weight;\n              weight--;\n            }\n            const wmaThirty = wmaCul / iWma;\n            chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n          }\n    \n          // WMA FIFTY --------------------------------------------------------------------\n    \n          wmaCul = newestPull[0].price * 50;\n          weight = 49;\n          wmaInterval = 0;\n          iWma = 50;\n    \n          if (dataPull.historical.length < 50) {\n            chartArr[num].wmaFifty = \"No Data\";\n          } else {\n            for (let i = 0; i <= 48; i++) {\n              wmaInterval = dataPull.historical[i].close * weight;\n              wmaCul += wmaInterval;\n              iWma += weight;\n              weight--;\n            }\n            const wmaFifty = wmaCul / iWma;\n            chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n          }\n    \n          // WMA ONE HUNDRED --------------------------------------------------------------------\n    \n          wmaCul = newestPull[0].price * 100;\n          weight = 99;\n          wmaInterval = 0;\n          iWma = 100;\n    \n          if (dataPull.historical.length < 100) {\n            chartArr[num].wmaOneHun = \"No Data\";\n          } else {\n            for (let i = 0; i <= 98; i++) {\n              wmaInterval = dataPull.historical[i].close * weight;\n              wmaCul += wmaInterval;\n              iWma += weight;\n              weight--;\n            }\n            const wmaOneHun = wmaCul / iWma;\n            chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n          }\n    \n          // WMA TWO HUNDRED --------------------------------------------------------------------\n    \n          wmaCul = newestPull[0].price * 200;\n          weight = 199;\n          wmaInterval = 0;\n          iWma = 200;\n    \n          if (dataPull.historical.length < 200) {\n            chartArr[num].wmaTwoHun = \"No Data\";\n          } else {\n            for (let i = 0; i <= 198; i++) {\n              wmaInterval = dataPull.historical[i].close * weight;\n              wmaCul += wmaInterval;\n              iWma += weight;\n              weight--;\n            }\n            const wmaTwoHun = wmaCul / iWma;\n            chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n          }\n        } catch (e) {}\n      }\n      // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n      function vwmaFunction(chartArr, dataPull, newestPull, num) {\n        // VWMA FIVETEEN --------------------------------------------------------------------\n    \n        try {\n          let price = 0;\n          let volume = 0;\n          const newPrice = newestPull[0].price;\n          const newVol = newestPull[0].volume;\n    \n          let volCul = newestPull[0].volume;\n          let totalCul = newPrice * newVol;\n    \n          if (dataPull.historical.length < 14) {\n            chartArr[num].vwmaFiveTeen = \"No Data\";\n          } else {\n            for (let i = 0; i <= 13; i++) {\n              price = dataPull.historical[i].close;\n              volume = dataPull.historical[i].volume;\n              totalCul += price * volume;\n              volCul += dataPull.historical[i].volume;\n            }\n            const vwmaFiveTeen = totalCul / volCul;\n            chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n          }\n    \n          // VWMA TWENTY --------------------------------------------------------------------\n    \n          volCul = newestPull[0].volume;\n          totalCul = newPrice * newVol;\n          price = 0;\n          volume = 0;\n    \n          if (dataPull.historical.length < 19) {\n            chartArr[num].vwmaTwenty = \"No Data\";\n          } else {\n            for (let i = 0; i <= 18; i++) {\n              price = dataPull.historical[i].close;\n              volume = dataPull.historical[i].volume;\n              totalCul += price * volume;\n              volCul += dataPull.historical[i].volume;\n            }\n            const vwmaTwenty = totalCul / volCul;\n            chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n          }\n    \n          // VWMA THIRTY --------------------------------------------------------------------\n    \n          volCul = newestPull[0].volume;\n          totalCul = newPrice * newVol;\n          price = 0;\n          volume = 0;\n    \n          if (dataPull.historical.length < 29) {\n            chartArr[num].vwmaThirty = \"No Data\";\n          } else {\n            for (let i = 0; i <= 28; i++) {\n              price = dataPull.historical[i].close;\n              volume = dataPull.historical[i].volume;\n              totalCul += price * volume;\n              volCul += dataPull.historical[i].volume;\n            }\n            const vwmaThirty = totalCul / volCul;\n            chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n          }\n    \n          // VWMA FIFTY --------------------------------------------------------------------\n    \n          volCul = newestPull[0].volume;\n          totalCul = newPrice * newVol;\n          price = 0;\n          volume = 0;\n    \n          if (dataPull.historical.length < 49) {\n            chartArr[num].vwmaFifty = \"No Data\";\n          } else {\n            for (let i = 0; i <= 48; i++) {\n              price = dataPull.historical[i].close;\n              volume = dataPull.historical[i].volume;\n              totalCul += price * volume;\n              volCul += dataPull.historical[i].volume;\n            }\n            const vwmaFifty = totalCul / volCul;\n            chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n          }\n    \n          // VWMA ONEHUN --------------------------------------------------------------------\n    \n          volCul = newestPull[0].volume;\n          totalCul = newPrice * newVol;\n          price = 0;\n          volume = 0;\n    \n          if (dataPull.historical.length < 99) {\n            chartArr[num].vwmaOneHun = \"No Data\";\n          } else {\n            for (let i = 0; i <= 98; i++) {\n              price = dataPull.historical[i].close;\n              volume = dataPull.historical[i].volume;\n              totalCul += price * volume;\n              volCul += dataPull.historical[i].volume;\n            }\n            const vwmaOneHun = totalCul / volCul;\n            chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n          }\n    \n          // VWMA TWOHUN --------------------------------------------------------------------\n    \n          volCul = newestPull[0].volume;\n          totalCul = newPrice * newVol;\n          price = 0;\n          volume = 0;\n    \n          if (dataPull.historical.length < 199) {\n            chartArr[num].vwmaTwoHun = \"No Data\";\n          } else {\n            for (let i = 0; i <= 198; i++) {\n              price = dataPull.historical[i].close;\n              volume = dataPull.historical[i].volume;\n              totalCul += price * volume;\n              volCul += dataPull.historical[i].volume;\n            }\n            const vwmaTwoHun = totalCul / volCul;\n            chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n          }\n        } catch (e) {}\n      }\n      // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n      function emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n        let emaEight = 14;\n        let emaTwelve = 22;\n        let emaTwenty = 38;\n        let emaTwentySix = 50;\n        let emaFifty = 98;\n        let emaTwoHun = 398;\n        let prevDayEmaSub = 0;\n        let arrEma = [];\n    \n        let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n        let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n    \n        try {\n          const newPrice = newestPull[0].price;\n    \n          // EMA EIGHT ----------------------------------------------------------------------\n          if (dataPull.historical.length <= 16) {\n            chartArr[num].emaEight = \"No Data\";\n          } else {\n            while (emaEight >= 15) {\n              prevDayEmaSub += dataPull.historical[emaEight].close;\n              emaEight--;\n            } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n            const subEMA = prevDayEmaSub / 8;\n            //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n            const finalSubEma =\n              (2 / 9) * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n            arrEma.unshift(finalSubEma);\n            emaEight--;\n            while (emaEight >= 0) {\n              let derp =\n                (2 / 9) * (dataPull.historical[emaEight].close - arrEma[0]) +\n                arrEma[0];\n              arrEma.unshift(derp);\n              arrEma.pop();\n              emaEight--;\n            }\n    \n            const finalEma = (2 / 9) * (newPrice - arrEma[0]) + arrEma[0];\n            arrEma.unshift(finalEma);\n            arrEma.pop();\n    \n            chartArr[num].emaEight = arrEma[0].toFixed(2);\n            arrEma.pop();\n            prevDayEmaSub = 0;\n          }\n          // EMA TWELVE ----------------------------------------------------------------------\n          if (dataPull.historical.length <= 24) {\n            chartArr[num].emaTwelve = \"No Data\";\n          } else {\n            while (emaTwelve >= 11) {\n              prevDayEmaSub += dataPull.historical[emaTwelve].close;\n              emaTwelve--;\n            } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n    \n            const subEMA = prevDayEmaSub / 12;\n            //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n            const finalSubEma =\n              (2 / 13) * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n            arrEma.unshift(finalSubEma);\n            emaTwelve--;\n    \n            while (emaTwelve >= 0) {\n              let derp =\n                (2 / 13) * (dataPull.historical[emaTwelve].close - arrEma[0]) +\n                arrEma[0];\n              arrEma.unshift(derp);\n              arrEma.pop();\n              if (emaTwelve < 8 && emaTwelve >= 0) {\n                //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n                macdTwelve.unshift(derp);\n              }\n              emaTwelve--;\n            }\n    \n            const finalEma = (2 / 13) * (newPrice - arrEma[0]) + arrEma[0];\n            arrEma.unshift(finalEma);\n            arrEma.pop();\n            macdTwelve.unshift(finalEma);\n    \n            chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n            arrEma.pop();\n            prevDayEmaSub = 0;\n          }\n    \n          // EMA TWENTY ----------------------------------------------------------------------\n          if (dataPull.historical.length <= 40) {\n            chartArr[num].emaTwenty = \"No Data\";\n          } else {\n            while (emaTwenty >= 19) {\n              prevDayEmaSub += dataPull.historical[emaTwenty].close;\n              emaTwenty--;\n            } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n            const subEMA = prevDayEmaSub / 20;\n            //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n            const finalSubEma =\n              (2 / 21) * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n            arrEma.unshift(finalSubEma);\n            emaTwenty--;\n            while (emaTwenty >= 0) {\n              let derp =\n                (2 / 21) * (dataPull.historical[emaTwenty].close - arrEma[0]) +\n                arrEma[0];\n              arrEma.unshift(derp);\n              arrEma.pop();\n              emaTwenty--;\n            }\n    \n            const finalEma = (2 / 21) * (newPrice - arrEma[0]) + arrEma[0];\n            arrEma.unshift(finalEma);\n            arrEma.pop();\n    \n            chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n            arrEma.pop();\n            prevDayEmaSub = 0;\n          }\n    \n          // EMA TWENTY SIX ----------------------------------------------------------------------\n    \n          if (dataPull.historical.length <= 51) {\n            chartArr[num].emaTwentySix = \"No Data\";\n          } else {\n            while (emaTwentySix >= 25) {\n              prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n              emaTwentySix--;\n            } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n            const subEMA = prevDayEmaSub / 26;\n            //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n            const finalSubEma =\n              (2 / 27) * (dataPull.historical[emaTwentySix].close - subEMA) +\n              subEMA;\n            arrEma.unshift(finalSubEma);\n            emaTwentySix--;\n            while (emaTwentySix >= 0) {\n              let derp =\n                (2 / 27) * (dataPull.historical[emaTwentySix].close - arrEma[0]) +\n                arrEma[0];\n              arrEma.unshift(derp);\n              arrEma.pop();\n              if (emaTwentySix < 8 && emaTwentySix >= 0) {\n                //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n                macdTwentySix.unshift(derp);\n              }\n              emaTwentySix--;\n            }\n    \n            const finalEma = (2 / 27) * (newPrice - arrEma[0]) + arrEma[0];\n            arrEma.unshift(finalEma);\n            arrEma.pop();\n            macdTwentySix.unshift(finalEma);\n    \n            chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n            arrEma.pop();\n            prevDayEmaSub = 0;\n          }\n    \n          // EMA FIFTY -----------------------------------------------------------------------------\n    \n          if (dataPull.historical.length <= 100) {\n            chartArr[num].emaFifty = \"No Data\";\n          } else {\n            while (emaFifty >= 49) {\n              prevDayEmaSub += dataPull.historical[emaFifty].close;\n              emaFifty--;\n            } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n            const subEMA = prevDayEmaSub / 50;\n            //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n            const finalSubEma =\n              (2 / 51) * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n            arrEma.unshift(finalSubEma);\n            emaFifty--;\n            while (emaFifty >= 0) {\n              let derp =\n                (2 / 51) * (dataPull.historical[emaFifty].close - arrEma[0]) +\n                arrEma[0];\n              arrEma.unshift(derp);\n              arrEma.pop();\n              emaFifty--;\n            }\n    \n            const finalEma = (2 / 51) * (newPrice - arrEma[0]) + arrEma[0];\n            arrEma.unshift(finalEma);\n            arrEma.pop();\n    \n            chartArr[num].emaFifty = arrEma[0].toFixed(2);\n            arrEma.pop();\n            prevDayEmaSub = 0;\n          }\n    \n          // EMA TWO HUNDRED -----------------------------------------------------------------------------\n    \n          if (dataPull.historical.length <= 400) {\n            chartArr[num].emaTwoHun = \"No Data\";\n          } else {\n            while (emaTwoHun >= 199) {\n              prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n              emaTwoHun--;\n            } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n            const subEMA = prevDayEmaSub / 200;\n            //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n            const finalSubEma =\n              (2 / 201) * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n            arrEma.unshift(finalSubEma);\n            emaTwoHun--;\n            while (emaTwoHun >= 0) {\n              let derp =\n                (2 / 201) * (dataPull.historical[emaTwoHun].close - arrEma[0]) +\n                arrEma[0];\n              arrEma.unshift(derp);\n              arrEma.pop();\n              emaTwoHun--;\n            }\n    \n            const finalEma = (2 / 201) * (newPrice - arrEma[0]) + arrEma[0];\n            arrEma.unshift(finalEma);\n            arrEma.pop();\n    \n            chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n            arrEma.pop();\n            prevDayEmaSub = 0;\n          }\n        } catch (e) {}\n    \n        // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n        macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n      }\n      // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n      function macdFunction(chartArr, num, arr1, arr2) {\n        const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n        chartArr[num].macd = macd.toFixed(2);\n        // CALCULATE SIGNAL LINE ----------------\n        let averageMacd = [];\n        let iMacd = 8;\n    \n        try {\n          while (iMacd >= 0) {\n            averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n            iMacd--;\n          }\n          let averageSum = averageMacd.reduce((a, b) => a + b);\n          let finalAverageMacd = averageSum / 9;\n          let macdSignalLine =\n            (2 / 9) * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n          chartArr[num].macdSignalLine = macdSignalLine.toFixed(2);\n          // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n          let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n          chartArr[num].macdHistogram = histogram.toFixed(2);\n          // FOR NO DATA TO PULL FROM\n          if (chartArr[num].macdHistogram === \"NaN\") {\n            chartArr[num].macdHistogram = \"No Data\";\n          }\n          if (chartArr[num].macd === \"NaN\") {\n            chartArr[num].macd = \"No Data\";\n          }\n          if (chartArr[num].macdSignalLine === \"NaN\") {\n            chartArr[num].macdSignalLine = \"No Data\";\n          }\n        } catch (e) {}\n      }\n      // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n      function rsiFunction(chartArr, dataPull, newestPull, num) {\n        let iRSI = 13;\n        let iRSIAdjusted = 14;\n        let recentUpper = 0;\n        let recentDowner = 0;\n        let upMove = 0;\n        let downMove = 0;\n        let pastDownPeriod = 0;\n        let pastUpPeriod = 0;\n    \n        try {\n          const newPrice = newestPull[0].price;\n          // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n          if (dataPull.historical.length <= 14) {\n            chartArr[num].rsi = \"No Data\";\n          } else {\n            // LOOP FOR AVERAGE\n            while (iRSI >= 0) {\n              if (\n                dataPull.historical[iRSI].close >\n                dataPull.historical[iRSIAdjusted].close\n              ) {\n                upMove +=\n                  dataPull.historical[iRSI].close -\n                  dataPull.historical[iRSIAdjusted].close;\n              } else {\n                downMove +=\n                  dataPull.historical[iRSIAdjusted].close -\n                  dataPull.historical[iRSI].close;\n              }\n              iRSI--;\n              iRSIAdjusted--;\n            }\n    \n            let averageUp = upMove / 14;\n            let averageDown = downMove / 14;\n    \n            // MOST RECENT DIFFERENCE\n            if (newPrice > dataPull.historical[0].close) {\n              recentUpper = newPrice - dataPull.historical[0].close;\n            } else {\n              recentDowner = dataPull.historical[0].close - newPrice;\n            }\n    \n            pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n            pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n    \n            let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n            chartArr[num].rsi = rsi.toFixed(2);\n          }\n        } catch (e) {}\n      }\n      // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n        let iSO = 13;\n    \n        let soLowHolder = [];\n        let soHighHolder = [];\n        let highestHigh = 0;\n        let lowestLow = 0;\n        // FIRST %D\n        let topForm = [];\n        let bottomForm = [];\n        // SECOND %D\n        let topFormTwo = [];\n        let bottomFormTwo = [];\n        // THIRD %D\n        let topFormThree = [];\n        let bottomFormThree = [];\n        // HOLDING SET OF %D FOR 14 3 3\n        let signalLineHolder = [];\n        try {\n          let newPrice = newestPull[0].price;\n    \n          if (dataPull.historical.length < 18) {\n            chartArr[num].stochasticK = \"No Data\";\n          } else {\n            // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n    \n            while (iSO >= 0) {\n              soLowHolder.push(dataPull.historical[iSO].low);\n              soHighHolder.push(dataPull.historical[iSO].high);\n              iSO--;\n            }\n    \n            soHighHolder.push(newPrice);\n            soLowHolder.push(newPrice);\n    \n            highestHigh = Math.max(...soHighHolder);\n            lowestLow = Math.min(...soLowHolder);\n    \n            if (lowestLow === newPrice) {\n              newPrice = dataPull.historical[0].close;\n            }\n    \n            if (highestHigh === newPrice) {\n              newPrice = dataPull.historical[0].close;\n            }\n    \n            topForm.push(newPrice - lowestLow);\n            bottomForm.push(highestHigh - lowestLow);\n    \n            //FOR %K\n            chartArr[num].stochasticK = (\n              ((newPrice - lowestLow) / (highestHigh - lowestLow)) *\n              100\n            ).toFixed(2);\n    \n            // RESET HOLDER AND VARs --------------------------------------------------------\n    \n            iSO = 14;\n            soLowHolder = [];\n            soHighHolder = [];\n            highestHigh = 0;\n            lowestLow = 0;\n    \n            // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n    \n            while (iSO >= 1) {\n              soLowHolder.push(dataPull.historical[iSO].low);\n              soHighHolder.push(dataPull.historical[iSO].high);\n              iSO--;\n            }\n    \n            highestHigh = Math.max(...soHighHolder);\n            lowestLow = Math.min(...soLowHolder);\n    \n            topForm.push(dataPull.historical[0].close - lowestLow);\n            bottomForm.push(highestHigh - lowestLow);\n    \n            topFormTwo.push(dataPull.historical[0].close - lowestLow);\n            bottomFormTwo.push(highestHigh - lowestLow);\n    \n            // RESET HOLDER AND VARs ------------------------------------------------\n    \n            iSO = 15;\n            soLowHolder = [];\n            soHighHolder = [];\n            highestHigh = 0;\n            lowestLow = 0;\n    \n            // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n    \n            while (iSO >= 2) {\n              soLowHolder.push(dataPull.historical[iSO].low);\n              soHighHolder.push(dataPull.historical[iSO].high);\n              iSO--;\n            }\n            highestHigh = Math.max(...soHighHolder);\n            lowestLow = Math.min(...soLowHolder);\n    \n            topForm.push(dataPull.historical[1].close - lowestLow);\n            bottomForm.push(highestHigh - lowestLow);\n    \n            topFormTwo.push(dataPull.historical[1].close - lowestLow);\n            bottomFormTwo.push(highestHigh - lowestLow);\n    \n            topFormThree.push(dataPull.historical[1].close - lowestLow);\n            bottomFormThree.push(highestHigh - lowestLow);\n    \n            // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n    \n            let sumTop = topForm.reduce((a, b) => a + b, 0);\n            let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n    \n            let slowD = (sumTop / sumBottom) * 100;\n    \n            // FOR %D\n            chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n    \n            signalLineHolder.push(slowD);\n    \n            //RESET VARS ---------------------------------------------------------------------\n    \n            iSO = 16;\n            soLowHolder = [];\n            soHighHolder = [];\n            highestHigh = 0;\n            lowestLow = 0;\n            sumTop = 0;\n            sumBottom = 0;\n            slowD = 0;\n    \n            // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n    \n            while (iSO >= 3) {\n              soLowHolder.push(dataPull.historical[iSO].low);\n              soHighHolder.push(dataPull.historical[iSO].high);\n              iSO--;\n            }\n            highestHigh = Math.max(...soHighHolder);\n            lowestLow = Math.min(...soLowHolder);\n    \n            topFormTwo.push(dataPull.historical[2].close - lowestLow);\n            bottomFormTwo.push(highestHigh - lowestLow);\n    \n            topFormThree.push(dataPull.historical[2].close - lowestLow);\n            bottomFormThree.push(highestHigh - lowestLow);\n    \n            // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n    \n            sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n            sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n    \n            slowD = (sumTop / sumBottom) * 100;\n    \n            signalLineHolder.push(slowD);\n    \n            //RESET VARS ---------------------------------------------\n    \n            iSO = 17;\n            soLowHolder = [];\n            soHighHolder = [];\n            highestHigh = 0;\n            lowestLow = 0;\n            sumTop = 0;\n            sumBottom = 0;\n            slowD = 0;\n    \n            // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n    \n            while (iSO >= 4) {\n              soLowHolder.push(dataPull.historical[iSO].low);\n              soHighHolder.push(dataPull.historical[iSO].high);\n              iSO--;\n            }\n            highestHigh = Math.max(...soHighHolder);\n            lowestLow = Math.min(...soLowHolder);\n    \n            topFormThree.push(dataPull.historical[3].close - lowestLow);\n            bottomFormThree.push(highestHigh - lowestLow);\n    \n            // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n    \n            sumTop = topFormThree.reduce((a, b) => a + b, 0);\n            sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n    \n            slowD = (sumTop / sumBottom) * 100;\n    \n            signalLineHolder.push(slowD);\n    \n            // ----------- TALLY UP LAST SMOOTHING -------------------------------\n            const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n            let smaD = sumStochD / 3;\n    \n            if (smaD < 0) {\n              smaD *= -1;\n              chartArr[num].stochasticSignal = smaD.toFixed(2);\n            } else {\n              chartArr[num].stochasticSignal = smaD.toFixed(2);\n            }\n          }\n        } catch (e) {}\n      }\n      // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      function williamsRFunction(chartArr, dataPull, newestPull, num) {\n        let highs = [];\n        let lows = [];\n        let lowestLow = 0;\n        let highestHigh = 0;\n        try {\n          const newPrice = newestPull[0].price;\n    \n          if (dataPull.historical.length < 14) {\n            chartArr[num].williams = \"No Data\";\n          } else {\n            for (let i = 0; i <= 13; i++) {\n              highs.push(dataPull.historical[i].high);\n              lows.push(dataPull.historical[i].low);\n            }\n    \n            highs.push(newPrice);\n            lows.push(newPrice);\n    \n            lowestLow = Math.min(...lows);\n            highestHigh = Math.max(...highs);\n    \n            const williams =\n              ((highestHigh - dataPull.historical[0].close) /\n                (highestHigh - lowestLow)) *\n              -100;\n    \n            chartArr[num].williamsR = williams.toFixed(2);\n          }\n        } catch (e) {}\n      }\n      // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      function cciFunction(chartArr, dataPull, newestPull, num) {\n        let tpvCul = 0;\n        let tpv = [];\n        let tpvMa = 0;\n    \n        try {\n          const newPrice = newestPull[0].price;\n          let tpvCurrent = newPrice;\n          const recentTpv = newPrice;\n    \n          if (dataPull.historical.length < 19) {\n            chartArr[num].cciTwenty = \"No Data\";\n          } else {\n            for (let i = 0; i <= 19; i++) {\n              const { high, close, low } = dataPull.historical[i];\n              tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n              tpvCurrent = (close + high + low) / 3;\n            }\n            // ---- TPV SMA ------------------------\n            tpvCul = tpv.reduce((a, b) => a + b);\n            tpvMa = tpvCul / 20;\n            // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n            const partOne = recentTpv - tpvMa;\n    \n            const meanD = tpv.map((x) => x - tpvMa);\n            const meanDMap = meanD.map((x) => Math.abs(x));\n            const meanDSum = meanDMap.reduce((a, b) => a + b);\n            const meanDiv = meanDSum / 20;\n            // PART TWO OF FORMULA --------------\n            const partTwo = meanDiv * 0.015;\n            // CCI ------------------------------\n            const cci = partOne / partTwo;\n    \n            chartArr[num].cciTwenty = cci.toFixed(2);\n          }\n        } catch (e) {}\n      }\n      // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      function bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n        let smaCul = 0;\n        let closeHolder = [];\n        try {\n          const newPrice = newestPull[0].price;\n    \n          if (dataPull.historical.length < 19) {\n            chartArr[num].bbUpper = \"No Data\";\n            chartArr[num].bbLower = \"No Data\";\n            chartArr[num].bbMiddle = \"No Data\";\n          } else {\n            let closeP = newPrice;\n            for (let i = 0; i <= 19; i++) {\n              closeHolder.push(closeP);\n              smaCul += closeP;\n              closeP = dataPull.historical[i].close;\n            }\n            // STANDARD DEVIATION CALC --------------------------------\n            const smaTwenty = smaCul / 20;\n    \n            const priceAdj = closeHolder.map((x) => x - smaTwenty);\n    \n            const priceAdjAbs = priceAdj.map((x) => Math.abs(x));\n    \n            const priceAdjSqrt = priceAdjAbs.map((x) => x * x);\n    \n            const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n    \n            const partTwoDev = partOneDev / 20;\n            const standardDev = Math.sqrt(partTwoDev);\n            // BB BAND CALC --------------------------------------------\n            const bbUpper = smaTwenty + standardDev * 2;\n            const bbLower = smaTwenty - standardDev * 2;\n    \n            const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n    \n            chartArr[num].bbUpper = bbUpper.toFixed(2);\n            chartArr[num].bbLower = bbLower.toFixed(2);\n            chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n            chartArr[num].bbPercent = bbPercent.toFixed(2);\n          }\n        } catch (e) {}\n      }\n      // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n      function vwapFunction(chartArr, dataPull, num) {\n        // ----------- VWAP CALUC -------------------------------------------\n        let dayLengthPeriod = 0;\n        let tpvCul = 0;\n        let volumeCul = 0;\n        let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n    \n        try {\n          // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n          while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n            dayLengthPeriod++;\n          }\n          // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n          for (let i = 0; i < dayLengthPeriod; i++) {\n            const { volume, high, close, low, date } = dataPull[i];\n            let tpv = (high + low + close) / 3;\n            if (date.slice(0, 10) == newDateString) {\n              tpvCul += tpv * volume;\n              volumeCul += volume;\n            }\n            let vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n            tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n          }\n          let vwap = tempVWAP[0].toFixed(2);\n          chartArr[num].vwap = vwap;\n        } catch (e) {}\n      }\n      // SET VOLUME FOR LATER\n      function setVolume(chartArr, dataPull, newestPull, num) {\n        // SET RECENT YESTERDAY VOLUME\n        try {\n          if (dataPull.historical.length <= 0) {\n            chartArr[num].yesterdayVolume = 0;\n          } else {\n            chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n            if (marketDay == 0 || marketDay == 6) {\n              chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n            }\n    \n            if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n              chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n            }\n    \n            if (timeNum > 1830) {\n              chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n            }\n          }\n          if (newestPull.length < 0) {\n            chartArr[num].volume = 0;\n          } else {\n            // SET RECENT VOLUME\n            chartArr[num].volume = newestPull[0].volume;\n          }\n        } catch (e) {}\n      }\n      // TA FUNCTION ---------------------------------------------------------------------\n      async function technicalIndicators(finalArr, callback) {\n        let j = 0;\n    \n        while (j < finalArr.length) {\n          // LOOP FOR TECHNICAL SYMBOL\n    \n          // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n          const { symbol } = finalArr[j];\n    \n          //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n          const resSMA = await fetch(\n            `https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n          );\n          const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n          // ERROR CHECK FOR EMPTY PULL\n          try {\n            if (!Object.keys(dataSMA).length) {\n              console.log(\"no SMA Pull data found\");\n            }\n          } catch (e) {}\n    \n          //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n          const resOscPulled = await fetch(\n            `https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n          );\n          const dataRecentPulled = await resOscPulled.json();\n          // ERROR CHECK FOR EMPTY PULL\n          try {\n            if (!Object.keys(dataRecentPulled).length) {\n              console.log(\"no Recent Pull data found\");\n            }\n          } catch (e) {}\n    \n          // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n          const resVWAP = await fetch(\n            `https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n          );\n          const dataVWAP = await resVWAP.json();\n          // ERROR CHECK FOR EMPTY PULL\n          try {\n            if (!Object.keys(dataVWAP).length) {\n              console.log(\"no VWAP Pull data found\");\n            }\n          } catch (e) {}\n    \n          // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n          vwapFunction(finalArr, dataVWAP, j);\n    \n          // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n          smaFunction(finalArr, dataSMA, dataRecentPulled, j);\n    \n          // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n          wmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n    \n          // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n          vwmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n    \n          // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n          emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction);\n    \n          // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n          rsiFunction(finalArr, dataSMA, dataRecentPulled, j);\n    \n          // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n          stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n    \n          // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n          williamsRFunction(finalArr, dataSMA, dataRecentPulled, j);\n    \n          // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n          cciFunction(finalArr, dataSMA, dataRecentPulled, j);\n    \n          // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n          bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j);\n    \n          // SET VOLUME PROPERTIES\n          setVolume(finalArr, dataSMA, dataRecentPulled, j);\n    \n          j++; // UPDATE WHILE LOOP\n        } // THIS IS THE END OF LOOP\n        setFinalArr([finalArr])\n        return;\n\n\n        callback(finalArr, buildIt);\n      }\n      // ------------------BUILD OUT HTML\n      function filterUpDownStocks(finalArr, callback) {\n        let stocksUp = [];\n        let stocksDown = [];\n        \n        let j = 0;\n    \n        while (j < finalArr.length) {\n          const { changesPercentage } = finalArr[j];\n    \n          if (changesPercentage > 0) {\n            stocksUp.push(finalArr[j]);\n          } else {\n            stocksDown.push(finalArr[j]);\n          }\n          j++;\n        } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n    \n        // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n        for (let i = 0; i < stocksUp.length; i++) {\n          // UPPER ------------------------------------------------------------------------------\n          stocksUp[i].symbolUp = stocksUp[i].symbol;\n          delete stocksUp[i].symbol;\n          stocksUp[i].changeUp = stocksUp[i].change;\n          delete stocksUp[i].change;\n          stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n          delete stocksUp[i].avgVolume;\n          stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n          delete stocksUp[i].changesPercentage;\n          stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n          delete stocksUp[i].emaEight;\n          stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n          delete stocksUp[i].emaTwelve;\n          stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n          delete stocksUp[i].emaTwenty;\n          stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n          delete stocksUp[i].emaTwentySix;\n          stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n          delete stocksUp[i].emaFifty;\n          stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n          delete stocksUp[i].emaTwoHun;\n          stocksUp[i].macdUp = stocksUp[i].macd;\n          delete stocksUp[i].macd;\n          stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n          delete stocksUp[i].macdHistogram;\n          stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n          delete stocksUp[i].macdSignalLine;\n          stocksUp[i].priceUp = stocksUp[i].price;\n          delete stocksUp[i].price;\n          stocksUp[i].rsiUp = stocksUp[i].rsi;\n          delete stocksUp[i].rsi;\n          stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n          delete stocksUp[i].smaFiveTeen;\n          stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n          delete stocksUp[i].smaTwenty;\n          stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n          delete stocksUp[i].smaThirty;\n          stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n          delete stocksUp[i].smaFifty;\n          stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n          delete stocksUp[i].smaOneHun;\n          stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n          delete stocksUp[i].smaTwoHun;\n          stocksUp[i].volumeUp = stocksUp[i].volume;\n          delete stocksUp[i].volume;\n          stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n          delete stocksUp[i].yesterdayVolume;\n          stocksUp[i].vwapUp = stocksUp[i].vwap;\n          delete stocksUp[i].vwap;\n          stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n          delete stocksUp[i].stochasticD;\n          stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n          delete stocksUp[i].stochasticK;\n          stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n          delete stocksUp[i].stochasticSignal;\n          stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n          delete stocksUp[i].wmaFiveTeen;\n          stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n          delete stocksUp[i].wmaTwenty;\n          stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n          delete stocksUp[i].wmaThirty;\n          stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n          delete stocksUp[i].wmaFifty;\n          stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n          delete stocksUp[i].wmaOneHun;\n          stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n          delete stocksUp[i].wmaTwoHun;\n          stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n          delete stocksUp[i].vwmaFiveTeen;\n          stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n          delete stocksUp[i].vwmaTwenty;\n          stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n          delete stocksUp[i].vwmaThirty;\n          stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n          delete stocksUp[i].vwmaFifty;\n          stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n          delete stocksUp[i].vwmaOneHun;\n          stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n          delete stocksUp[i].vwmaTwoHun;\n          stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n          delete stocksUp[i].williamsR;\n          stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n          delete stocksUp[i].cciTwenty;\n          stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n          delete stocksUp[i].bbUpper;\n          stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n          delete stocksUp[i].bbLower;\n          stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n          delete stocksUp[i].bbMiddle;\n          stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n          delete stocksUp[i].bbPercent;\n          // DOWNERS ------------------------------------------------------------------------------\n          stocksDown[i].symbolDown = stocksDown[i].symbol;\n          delete stocksDown[i].symbol;\n          stocksDown[i].changeDown = stocksDown[i].change;\n          delete stocksDown[i].change;\n          stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n          delete stocksDown[i].avgVolume;\n          stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n          delete stocksDown[i].changesPercentage;\n          stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n          delete stocksDown[i].emaEight;\n          stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n          delete stocksDown[i].emaTwelve;\n          stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n          delete stocksDown[i].emaTwenty;\n          stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n          delete stocksDown[i].emaTwentySix;\n          stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n          delete stocksDown[i].emaFifty;\n          stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n          delete stocksDown[i].emaTwoHun;\n          stocksDown[i].macdDown = stocksDown[i].macd;\n          delete stocksDown[i].macd;\n          stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n          delete stocksDown[i].macdHistogram;\n          stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n          delete stocksDown[i].macdSignalLine;\n          stocksDown[i].priceDown = stocksDown[i].price;\n          delete stocksDown[i].price;\n          stocksDown[i].rsiDown = stocksDown[i].rsi;\n          delete stocksDown[i].rsi;\n          stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n          delete stocksDown[i].smaFiveTeen;\n          stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n          delete stocksDown[i].smaTwenty;\n          stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n          delete stocksDown[i].smaThirty;\n          stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n          delete stocksDown[i].smaFifty;\n          stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n          delete stocksDown[i].smaOneHun;\n          stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n          delete stocksDown[i].smaTwoHun;\n          stocksDown[i].volumeDown = stocksDown[i].volume;\n          delete stocksDown[i].volume;\n          stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n          delete stocksDown[i].yesterdayVolume;\n          stocksDown[i].vwapDown = stocksDown[i].vwap;\n          delete stocksDown[i].vwap;\n          stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n          delete stocksDown[i].stochasticD;\n          stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n          delete stocksDown[i].stochasticK;\n          stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n          delete stocksDown[i].stochasticSignal;\n          stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n          delete stocksDown[i].wmaFiveTeen;\n          stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n          delete stocksDown[i].wmaTwenty;\n          stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n          delete stocksDown[i].wmaThirty;\n          stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n          delete stocksDown[i].wmaFifty;\n          stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n          delete stocksDown[i].wmaOneHun;\n          stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n          delete stocksDown[i].wmaTwoHun;\n          stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n          delete stocksDown[i].vwmaFiveTeen;\n          stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n          delete stocksDown[i].vwmaTwenty;\n          stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n          delete stocksDown[i].vwmaThirty;\n          stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n          delete stocksDown[i].vwmaFifty;\n          stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n          delete stocksDown[i].vwmaOneHun;\n          stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n          delete stocksDown[i].vwmaTwoHun;\n          stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n          delete stocksDown[i].williamsR;\n          stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n          delete stocksDown[i].cciTwenty;\n          stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n          delete stocksDown[i].bbUpper;\n          stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n          delete stocksDown[i].bbLower;\n          stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n          delete stocksDown[i].bbMiddle;\n          stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n          delete stocksDown[i].bbPercent;\n        }\n        callback(stocksUp, stocksDown);\n      }\n      // PARENT TO APPEND ---------------------------------------------------\n      const litterBox = document.getElementById(\"litter-box\");\n    \n      function buildIt(arrUp, arrDown) {\n        // litterBox.innerHTML = \"\"; // THIS CLEARS PRIOR HTML BEFORE BUILD\n    \n        for (let i = 0; i < arrUp.length; i++) {\n          // DECONSTRUCTING UP AND DOWN VAR\n          let {\n            avgVolumeUp,\n            volumeYesterdayUp,\n            changeUp,\n            changesPercentageUp,\n            priceUp,\n            symbolUp,\n            volumeUp,\n            vwapUp,\n            smaFiveTeenUp,\n            smaTwentyUp,\n            smaThirtyUp,\n            smaFiftyUp,\n            smaOneHunUp,\n            smaTwoHunUp,\n            emaEightUp,\n            emaTwelveUp,\n            emaTwentyUp,\n            emaTwentySixUp,\n            emaFiftyUp,\n            emaTwoHunUp,\n            wmaFiveTeenUp,\n            wmaTwentyUp,\n            wmaThirtyUp,\n            wmaFiftyUp,\n            wmaOneHunUp,\n            wmaTwoHunUp,\n            vwmaFiveTeenUp,\n            vwmaTwentyUp,\n            vwmaThirtyUp,\n            vwmaFiftyUp,\n            vwmaOneHunUp,\n            vwmaTwoHunUp,\n            macdUp,\n            macdHistogramUp,\n            macdSignalLineUp,\n            rsiUp,\n            stochasticDUp,\n            stochasticKUp,\n            stochasticSignalUp,\n            cciUp,\n            bbMiddleUp,\n            bbLowerUp,\n            bbUpperUp,\n            bbPercentUp,\n            williamsRUp,\n          } = arrUp[i];\n    \n          let {\n            avgVolumeDown,\n            volumeYesterdayDown,\n            changeDown,\n            changesPercentageDown,\n            priceDown,\n            symbolDown,\n            volumeDown,\n            vwapDown,\n            smaFiveTeenDown,\n            smaTwentyDown,\n            smaThirtyDown,\n            smaFiftyDown,\n            smaOneHunDown,\n            smaTwoHunDown,\n            emaEightDown,\n            emaTwelveDown,\n            emaTwentyDown,\n            emaTwentySixDown,\n            emaFiftyDown,\n            emaTwoHunDown,\n            wmaFiveTeenDown,\n            wmaTwentyDown,\n            wmaThirtyDown,\n            wmaFiftyDown,\n            wmaOneHunDown,\n            wmaTwoHunDown,\n            vwmaFiveTeenDown,\n            vwmaTwentyDown,\n            vwmaThirtyDown,\n            vwmaFiftyDown,\n            vwmaOneHunDown,\n            vwmaTwoHunDown,\n            macdDown,\n            macdHistogramDown,\n            macdSignalLineDown,\n            rsiDown,\n            stochasticDDown,\n            stochasticKDown,\n            stochasticSignalDown,\n            cciDown,\n            bbMiddleDown,\n            bbLowerDown,\n            bbUpperDown,\n            bbPercentDown,\n            williamsRDown,\n          } = arrDown[i];\n    \n          // ADJUST TO FIXED --------------------------------------------------------\n          if (priceUp == undefined) {\n            priceUp = 0;\n          }\n          if (priceDown == undefined) {\n            priceDown = 0;\n          }\n          priceUp = priceUp.toFixed(2);\n          priceDown = priceDown.toFixed(2);\n          if (changesPercentageUp == undefined) {\n            changesPercentageUp = 0;\n          }\n          if (changesPercentageDown == undefined) {\n            changesPercentageDown = 0;\n          }\n          changesPercentageUp = changesPercentageUp.toFixed(2);\n          changesPercentageDown = changesPercentageDown.toFixed(2);\n    \n          if (changeUp == undefined) {\n            changeUp = 0;\n          }\n          if (changeDown == undefined) {\n            changeDown = 0;\n          }\n          changeUp = changeUp.toFixed(2);\n          changeDown = changeDown.toFixed(2);\n          // UP VOLUME INCREASE ----------------------------\n          if (volumeUp == undefined) {\n            volumeUp = 0;\n          }\n          if (volumeDown == undefined) {\n            volumeDown = 0;\n          }\n          let volumeIncreaseUp = 0;\n          if (volumeUp > avgVolumeUp) {\n            let increase = volumeUp - avgVolumeUp;\n            volumeIncreaseUp = (increase / avgVolumeUp) * 100;\n          } else {\n            let decrease = avgVolumeUp - volumeUp;\n            volumeIncreaseUp = (decrease / avgVolumeUp) * -100;\n          }\n          // DOWN VOLUME INCREASE ----------------------------\n          let volumeIncreaseDown = 0;\n          if (volumeDown > avgVolumeDown) {\n            let increase = volumeDown - avgVolumeDown;\n            volumeIncreaseDown = (increase / avgVolumeDown) * 100;\n          } else {\n            let decrease = avgVolumeDown - volumeDown;\n            volumeIncreaseDown = (decrease / avgVolumeDown) * -100;\n          }\n          volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n          volumeIncreaseUp = volumeIncreaseUp.toFixed(2);\n          // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n    \n          // YESTERDAY UP VOLUME INCREASE ----------------------------\n          if (volumeYesterdayUp == undefined) {\n            volumeYesterdayUp = 0;\n          }\n          if (volumeYesterdayDown == undefined) {\n            volumeYesterdayDown = 0;\n          }\n          if (avgVolumeUp == undefined) {\n            avgVolumeUp = 0;\n          }\n          if (avgVolumeDown == undefined) {\n            avgVolumeDown = 0;\n          }\n          let yesterdayVolIncreaseUp = 0;\n    \n          if (volumeYesterdayUp > avgVolumeUp) {\n            let increase = volumeYesterdayUp - avgVolumeUp;\n            yesterdayVolIncreaseUp = (increase / avgVolumeUp) * 100;\n          } else {\n            let decrease = avgVolumeUp - volumeYesterdayUp;\n            yesterdayVolIncreaseUp = (decrease / avgVolumeUp) * -100;\n          }\n    \n          yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2);\n    \n          // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n    \n          let yesterdayVolIncreaseDown = 0;\n    \n          if (volumeYesterdayDown > avgVolumeDown) {\n            let increase = volumeYesterdayDown - avgVolumeDown;\n            yesterdayVolIncreaseDown = (increase / avgVolumeDown) * 100;\n          } else {\n            let decrease = avgVolumeDown - volumeYesterdayDown;\n            yesterdayVolIncreaseDown = (decrease / avgVolumeDown) * -100;\n          }\n    \n          yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2);\n    \n          // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n    \n          let changeDownAdjusted = changeDown;\n    \n          if (changeDownAdjusted < 0) {\n            changeDownAdjusted = changeDownAdjusted * -1;\n            changeDownAdjusted = changeDownAdjusted.toFixed(2);\n          }\n          // NaN CHECK ----------------------------------------\n          if (isNaN(yesterdayVolIncreaseDown)) {\n            yesterdayVolIncreaseDown = \"No Data\";\n          }\n          if (isNaN(yesterdayVolIncreaseUp)) {\n            yesterdayVolIncreaseUp = \"No Data\";\n          }\n    \n          // ADJUST TO POSITIVE\n          if (stochasticDUp < 0) {\n            stochasticDUp = stochasticDUp * -1;\n          }\n          if (stochasticKUp < 0) {\n            stochasticKUp = stochasticKUp * -1;\n          }\n          if (stochasticDDown < 0) {\n            stochasticDDown = stochasticDDown * -1;\n          }\n          if (stochasticKDown < 0) {\n            stochasticKDown = stochasticKDown * -1;\n          }\n    \n          // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n          if (avgVolumeUp == undefined) {\n            avgVolumeUp = \"No Data\";\n          }\n          if (avgVolumeDown == undefined) {\n            avgVolumeDown = \"No Data\";\n          }\n          if (volumeUp == undefined) {\n            volumeUp = \"No Data\";\n          }\n          if (volumeDown == undefined) {\n            volumeDown = \"No Data\";\n          }\n          if (volumeIncreaseUp == undefined) {\n            volumeIncreaseUp = \"No Data\";\n          }\n          if (volumeIncreaseDown == undefined) {\n            volumeIncreaseDown = \"No Data\";\n          }\n          if (volumeYesterdayUp == undefined) {\n            volumeYesterdayUp = \"No Data\";\n          }\n          if (volumeYesterdayDown == undefined) {\n            volumeYesterdayDown = \"No Data\";\n          }\n    \n          if (smaFiveTeenUp == undefined) {\n            smaFiveTeenUp = \"No Data\";\n          }\n          if (smaFiveTeenDown == undefined) {\n            smaFiveTeenDown = \"No Data\";\n          }\n          if (smaTwentyUp == undefined) {\n            smaTwentyUp = \"No Data\";\n          }\n          if (smaTwentyDown == undefined) {\n            smaTwentyDown = \"No Data\";\n          }\n          if (smaThirtyUp == undefined) {\n            smaThirtyUp = \"No Data\";\n          }\n          if (smaThirtyDown == undefined) {\n            smaThirtyDown = \"No Data\";\n          }\n          if (smaFiftyUp == undefined) {\n            smaFiftyUp = \"No Data\";\n          }\n          if (smaFiftyDown == undefined) {\n            smaFiftyDown = \"No Data\";\n          }\n          if (smaOneHunUp == undefined) {\n            smaOneHunUp = \"No Data\";\n          }\n          if (smaOneHunDown == undefined) {\n            smaOneHunDown = \"No Data\";\n          }\n          if (smaTwoHunUp == undefined) {\n            smaTwoHunUp = \"No Data\";\n          }\n          if (smaTwoHunDown == undefined) {\n            smaTwoHunDown = \"No Data\";\n          }\n          if (emaEightUp == undefined) {\n            emaEightUp = \"No Data\";\n          }\n          if (emaEightDown == undefined) {\n            emaEightDown = \"No Data\";\n          }\n          if (emaTwelveUp == undefined) {\n            emaTwelveUp = \"No Data\";\n          }\n          if (emaTwelveDown == undefined) {\n            emaTwelveDown = \"No Data\";\n          }\n          if (emaTwentyUp == undefined) {\n            emaTwentyUp = \"No Data\";\n          }\n          if (emaTwentyDown == undefined) {\n            emaTwentyDown = \"No Data\";\n          }\n          if (emaTwentySixUp == undefined) {\n            emaTwentySixUp = \"No Data\";\n          }\n          if (emaTwentySixDown == undefined) {\n            emaTwentySixDown = \"No Data\";\n          }\n          if (emaFiftyUp == undefined) {\n            emaFiftyUp = \"No Data\";\n          }\n          if (emaFiftyDown == undefined) {\n            emaFiftyDown = \"No Data\";\n          }\n          if (emaTwoHunUp == undefined) {\n            emaTwoHunUp = \"No Data\";\n          }\n          if (emaTwoHunDown == undefined) {\n            emaTwoHunDown = \"No Data\";\n          }\n          if (wmaFiveTeenUp == undefined) {\n            wmaFiveTeenUp = \"No Data\";\n          }\n          if (wmaFiveTeenDown == undefined) {\n            wmaFiveTeenDown = \"No Data\";\n          }\n          if (wmaTwentyUp == undefined) {\n            wmaTwentyUp = \"No Data\";\n          }\n          if (wmaTwentyDown == undefined) {\n            wmaTwentyDown = \"No Data\";\n          }\n          if (wmaThirtyUp == undefined) {\n            wmaThirtyUp = \"No Data\";\n          }\n          if (wmaThirtyDown == undefined) {\n            wmaThirtyDown = \"No Data\";\n          }\n          if (wmaFiftyUp == undefined) {\n            wmaFiftyUp = \"No Data\";\n          }\n          if (wmaFiftyDown == undefined) {\n            wmaFiftyDown = \"No Data\";\n          }\n          if (wmaOneHunUp == undefined) {\n            wmaOneHunUp = \"No Data\";\n          }\n          if (wmaOneHunDown == undefined) {\n            wmaOneHunDown = \"No Data\";\n          }\n          if (wmaTwoHunUp == undefined) {\n            wmaTwoHunUp = \"No Data\";\n          }\n          if (wmaTwoHunDown == undefined) {\n            wmaTwoHunDown = \"No Data\";\n          }\n          if (vwmaFiveTeenUp == undefined) {\n            vwmaFiveTeenUp = \"No Data\";\n          }\n          if (vwmaFiveTeenDown == undefined) {\n            vwmaFiveTeenDown = \"No Data\";\n          }\n          if (vwmaTwentyUp == undefined) {\n            vwmaTwentyUp = \"No Data\";\n          }\n          if (vwmaTwentyDown == undefined) {\n            vwmaTwentyDown = \"No Data\";\n          }\n          if (vwmaThirtyUp == undefined) {\n            vwmaThirtyUp = \"No Data\";\n          }\n          if (vwmaThirtyDown == undefined) {\n            vwmaThirtyDown = \"No Data\";\n          }\n          if (vwmaFiftyUp == undefined) {\n            vwmaFiftyUp = \"No Data\";\n          }\n          if (vwmaFiftyDown == undefined) {\n            vwmaFiftyDown = \"No Data\";\n          }\n          if (vwmaOneHunUp == undefined) {\n            vwmaOneHunUp = \"No Data\";\n          }\n          if (vwmaOneHunDown == undefined) {\n            vwmaOneHunDown = \"No Data\";\n          }\n          if (vwmaTwoHunUp == undefined) {\n            vwmaTwoHunUp = \"No Data\";\n          }\n          if (vwmaTwoHunDown == undefined) {\n            vwmaTwoHunDown = \"No Data\";\n          }\n          if (vwapDown == undefined) {\n            vwapDown = \"No Data\";\n          }\n          if (vwapUp == undefined) {\n            vwapUp = \"No Data\";\n          }\n          if (macdDown == undefined) {\n            macdDown = \"No Data\";\n          }\n          if (macdUp == undefined) {\n            macdUp = \"No Data\";\n          }\n          if (rsiDown == undefined) {\n            rsiDown = \"No Data\";\n          }\n          if (rsiUp == undefined) {\n            rsiUp = \"No Data\";\n          }\n          if (cciDown == undefined) {\n            cciDown = \"No Data\";\n          }\n          if (cciUp == undefined) {\n            cciUp = \"No Data\";\n          }\n          if (williamsRDown == undefined) {\n            williamsRDown = \"No Data\";\n          }\n          if (williamsRUp == undefined) {\n            williamsRUp = \"No Data\";\n          }\n          if (stochasticKUp == undefined) {\n            stochasticKUp = \"No Data\";\n          }\n          if (stochasticKDown == undefined) {\n            stochasticKDown = \"No Data\";\n          }\n          if (stochasticDUp == undefined) {\n            stochasticDUp = \"No Data\";\n          }\n          if (stochasticDDown == undefined) {\n            stochasticDDown = \"No Data\";\n          }\n          if (stochasticSignalUp == undefined) {\n            stochasticSignalUp = \"No Data\";\n          }\n          if (stochasticSignalDown == undefined) {\n            stochasticSignalDown = \"No Data\";\n          }\n          if (bbMiddleDown == undefined) {\n            bbMiddleDown = \"No Data\";\n          }\n          if (bbMiddleUp == undefined) {\n            bbMiddleUp = \"No Data\";\n          }\n          if (bbLowerDown == undefined) {\n            bbLowerDown = \"No Data\";\n          }\n          if (bbLowerUp == undefined) {\n            bbLowerUp = \"No Data\";\n          }\n          if (bbUpperDown == undefined) {\n            bbUpperDown = \"No Data\";\n          }\n          if (bbUpperUp == undefined) {\n            bbUpperUp = \"No Data\";\n          }\n          if (bbPercentDown == undefined) {\n            bbPercentDown = \"No Data\";\n          }\n          if (bbPercentUp == undefined) {\n            bbPercentUp = \"No Data\";\n          }\n    \n        //   const litter = document.createElement(\"div\");\n        //   litter.classList.add(\"row\");\n        //   litter.innerHTML = `\n       \n       \n    \n        //    <!----------------------------------- DOWNER --------------------------------------->\n        //    <div tabindex=\"0\" class=\"downer symbol-box\" data-index=\"${i}\">\n        //        <h2 id=\"symbol\">${symbolDown}</h2>\n        //        <p class=\"price price-down-${i}\">Price: $${priceDown}</p>\n        //        <div class=\"changes-row\">\n        //        <p class=\"changePercentageDown-${i}\">${changesPercentageDown}%</p>\n        //        <svg id=\"downArrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 100 400\" shape-rendering=\"geometricPrecision\" text-rendering=\"geometricPrecision\"><g id=\"eJjdz69mVex2\" transform=\"matrix(0.99132899255994 0.00125353493548 0.00179456906301 -1.41919326774185 0 5360)\"><g id=\"eJjdz69mVex3\" transform=\"matrix(0.10000000000000 0 0 0.10000000000000 0.00000000000023 0.00000000000023)\"><path id=\"eJjdz69mVex4\" d=\"M29164.905156,10134.800000L28991.385074,10784.799602L28821.634757,10614.426482L27244.542329,12197.305156L27102.400000,12054.641316L28679.492428,10471.762642L28517.281642,10308.956716L29164.905156,10134.800000\" transform=\"matrix(0.70853823648212 -0.70567242219234 0.70567242219234 0.70853823648212 -27361.22396364336601 48339.92537327134050)\" fill=\"rgb(230,102,102)\" stroke=\"none\" stroke-width=\"1\"/><path id=\"eJjdz69mVex5\" d=\"M36131.700000,8167.800000C36128.200000,8167.800000,36124.700000,8168.900000,36121.700000,8170.900000C34563.300000,9219.200000,32199.200000,8231.400000,32175.500000,8221.300000C32169.500000,8218.300000,32162.200000,8218.800000,32156.700000,8222.800000C32151.200000,8226.700000,32148.300000,8233.400000,32149.300000,8240.100000C32150.300000,8246.800000,32154.900000,8252.400000,32161.300000,8254.600000C32185.300000,8264.700000,34566.400000,9259.600000,36142.200000,8200.900000C36148.700000,8196.400000,36151.500000,8188.300000,36149.200000,8180.800000C36146.900000,8173.300000,36140,8168.100000,36132.200000,8167.900000L36131.700000,8167.800000\" transform=\"matrix(1 0 0 1 -23974.95002737504910 24467.33418583546154)\" fill=\"rgb(255,255,255)\" stroke=\"none\" stroke-width=\"1\"/><path id=\"eJjdz69mVex6\" d=\"M24267.800000,8167.800000C24260,8167.900000,24253.100000,8173.100000,24250.800000,8180.600000C24248.500000,8188.200000,24251.300000,8196.300000,24257.800000,8200.800000C25833.100000,9259.500000,28214.600000,8264.500000,28238.700000,8254.500000C28243.100000,8252.600000,28246.600000,8249.100000,28248.400000,8244.600000C28250.200000,8240.100000,28250.200000,8235.100000,28248.300000,8230.700000C28244.200000,8221.700000,28233.700000,8217.500000,28224.500000,8221.100000C28200.700000,8231.100000,25837.100000,9218.400000,24278.300000,8170.800000C24275.200000,8168.700000,24271.500000,8167.700000,24267.800000,8167.800000\" transform=\"matrix(1 0 0 1 -23974.95002737508185 24467.33418583546154)\" fill=\"rgb(255,255,255)\" stroke=\"none\" stroke-width=\"1\"/></g></g></svg>\n        //        <p>$${changeDownAdjusted}</p>\n        //        </div>\n        //    </div>\n        //    <!----------------------------------- THIS WILL HOLD TECH ANALYSIS FOR HOVER POPULATE IN MIDDLE ---------------------------------------->\n        \n        //   <div class=\"tech-down-${i}\">\n       \n        //    <h2 class=\"tech-title\">Daily Indicators</h2>\n        //    <p class=\"tech-title-warn\">For Educational Purposes Only</p>\n       \n        //        <div class=\"tech-vol-row\">\n        //        <a class=\"info-link\" href=\"https://www.investopedia.com/articles/technical/02/010702.asp\" target=\"_blank\"><h3 class='tech-header'>Volume</h3></a>\n        //        <p>Average: <span class=\"tech-to-left avgVolume-down-actual-${i}\">${avgVolumeDown}</span></p>\n        //            <p>Today: <span class=\"tech-to-left volumeToday-down-actual-${i}\">${volumeDown}</span></p>\n        //            <p>Change: <span class=\"tech-to-left\"> ${volumeIncreaseDown}%</span></p>\n      \n        //            <p>Day Before: <span class=\"tech-to-left\"> ${volumeYesterdayDown}</span></p>\n        //            <p>Change: <span class=\"tech-to-left\"> ${yesterdayVolIncreaseDown}%</span></p>\n        //        </div>\n       \n        //        <div class=\"tech-row\">\n      \n        //        <a class=\"info-link sma-down-header-${i}\" href=\"https://www.investopedia.com/terms/s/sma.asp\" target=\"_blank\"><h3 class='tech-header'>SMA</h3></a>\n        //            <div class=\"averages-row\">\n        //                <p class=\"smafifteen-down-actual-${i}\">15: ${smaFiveTeenDown}</p>\n        //                <p class=\"smatwenty-down-actual-${i}\">20: ${smaTwentyDown}</p>\n        //            </div>\n        //            <div class=\"averages-row\">\n        //                <p class=\"smathirty-down-actual-${i}\">30: ${smaThirtyDown}</p>\n        //                <p class=\"smafifty-down-actual-${i}\">50: ${smaFiftyDown}</p>\n        //            </div>\n      \n        //            <p class=\"goldenSma-cross-down-${i} golden-cross\">Golden Cross</p>\n        //            <p class=\"deathSma-cross-down-${i} death-cross\">Death Cross</p>\n      \n        //            <div class=\"averages-row\">\n        //                <p class=\"smaonehundred-down-actual-${i}\">100: ${smaOneHunDown}</p>\n        //                <p class=\"smatwohundred-down-actual-${i}\">200: ${smaTwoHunDown}</p>\n        //            </div>\n      \n        //    </div>\n      \n        //    <div class=\"tech-row\">\n        //    <a class=\"info-link ema-down-header-${i}\" href=\"https://www.investopedia.com/terms/e/ema.asp\" target=\"_blank\"><h3 class='tech-header'>EMA</h3></a>\n        //           <div class=\"averages-row\">\n        //           <p class=\"emaeight-down-actual-${i}\">8: ${emaEightDown}</p>\n        //           <p class=\"ematwelve-down-actual-${i}\">12: ${emaTwelveDown}</p>\n        //           </div>\n        //           <div class=\"averages-row\">\n        //           <p class=\"ematwenty-down-actual-${i}\">20: ${emaTwentyDown}</p>\n        //           <p class=\"ematwentysix-down-actual-${i}\">26: ${emaTwentySixDown}</p>\n        //           </div>\n      \n        //           <p class=\"goldenEma-cross-down-${i} golden-cross ema-cross\">Golden Cross</p>\n        //           <p class=\"deathEma-cross-down-${i} death-cross ema-cross\">Death Cross</p>\n      \n        //           <div class=\"averages-row\">\n        //           <p class=\"emafifty-down-actual-${i}\">50: ${emaFiftyDown}</p>\n        //           <p class=\"ematwohundred-down-actual-${i}\">200: ${emaTwoHunDown}</p>\n        //           </div>            \n        //    </div>\n      \n        //    <div class=\"tech-row\">\n        //    <a class=\"info-link wma-down-header-${i}\" href=\"https://www.investopedia.com/ask/answers/071414/whats-difference-between-moving-average-and-weighted-moving-average.asp\" target=\"_blank\"><h3 class='tech-header'>WMA</h3></a>\n        //            <div class=\"averages-row\">\n        //                <p class=\"wmafifteen-down-actual-${i}\">15: ${wmaFiveTeenDown}</p>\n        //                <p class=\"wmatwenty-down-actual-${i}\">20: ${wmaTwentyDown}</p>\n        //            </div>\n        //            <div class=\"averages-row\">\n        //                <p class=\"wmathirty-down-actual-${i}\">30: ${wmaThirtyDown}</p>\n        //                <p class=\"wmafifty-down-actual-${i}\">50: ${wmaFiftyDown}</p>\n        //            </div>\n      \n        //            <p class=\"goldenWma-cross-down-${i} golden-cross wma-cross\">Golden Cross</p>\n        //            <p class=\"deathWma-cross-down-${i} death-cross wma-cross\">Death Cross</p>\n      \n        //            <div class=\"averages-row\">\n        //                <p class=\"wmaonehundred-down-actual-${i}\">100: ${wmaOneHunDown}</p>\n        //                <p class=\"wmatwohundred-down-actual-${i}\">200: ${wmaTwoHunDown}</p>\n        //            </div>\n        //    </div>\n      \n        //    <div class=\"tech-row\">\n        //    <a class=\"info-link vwma-down-header-${i}\" href=\"https://www.tradingsetupsreview.com/volume-weighted-moving-average-vwma/\" target=\"_blank\"><h3 class='tech-header'>VWMA</h3></a>\n        //            <div class=\"averages-row\">\n        //                <p class=\"vwmafifteen-down-actual-${i}\">15: ${vwmaFiveTeenDown}</p>\n        //                <p class=\"vwmatwenty-down-actual-${i}\">20: ${vwmaTwentyDown}</p>\n        //            </div>\n        //            <div class=\"averages-row\">\n        //                <p class=\"vwmathirty-down-actual-${i}\">30: ${vwmaThirtyDown}</p>\n        //                <p class=\"vwmafifty-down-actual-${i}\">50: ${vwmaFiftyDown}</p>\n        //            </div>\n      \n        //            <p class=\"goldenVwma-cross-down-${i} golden-cross vwma-cross\">Golden Cross</p>\n        //            <p class=\"deathVwma-cross-down-${i} death-cross vwma-cross\">Death Cross</p>\n                   \n        //            <div class=\"averages-row\">\n        //                <p class=\"vwmaonehundred-down-actual-${i}\">100: ${vwmaOneHunDown}</p>\n        //                <p class=\"vwmatwohundred-down-actual-${i}\">200: ${vwmaTwoHunDown}</p>\n        //            </div>\n        //    </div>\n      \n      \n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link vwap-down-header-${i}\" href=\"https://www.investopedia.com/terms/v/vwap.asp\" target=\"_blank\"><h3 class='tech-header'>VWAP (5 Minute)</h3></a>\n        //            <p class=\"osc-text vwap-down-actual-${i}\">${vwapDown}</p>\n        //        </div>\n      \n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link macd-down-header-${i}\" href=\"https://www.investopedia.com/terms/m/macd.asp\" target=\"_blank\"><h3 class='tech-header'>MACD (12 , 26)</h3></a>\n        //            <p class=\"osc-text macd-down-actual-${i}\">${macdDown}</p>\n        //                <div class=\"macd-row\">\n        //                    <p class=\"macd-signal-down-actual-${i} sl\">Signal Line:<br>${macdSignalLineDown}</p>\n        //                    <p class=\"macd-histo-down-actual-${i} sl\">Histogram:<br>${macdHistogramDown}</p>\n        //                </div>\n        //        </div>\n       \n        //        <div class=\"flex-rsi-cci\">\n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link rsi-down-header-${i}\" href=\"https://www.investopedia.com/terms/s/stochrsi.asp\" target=\"_blank\"><h3 class='tech-header'>RSI</h3></a>\n        //                <p class=\"osc-text rsi-down-actual-${i}\">${rsiDown}</p>\n        //            </div>\n       \n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link cci-down-header-${i}\" href=\"https://www.investopedia.com/terms/c/commoditychannelindex.asp\" target=\"_blank\"><h3 class='tech-header'>CCI</h3></a>\n        //                <p class=\"osc-text cci-down-actual-${i}\">${cciDown}</p>\n        //            </div>\n      \n        //        </div>\n      \n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link williams-down-header-${i}\" href=\"https://www.investopedia.com/terms/w/williamsr.asp\" target=\"_blank\"><h3 class='tech-header'>Williams %R</h3></a>\n        //            <p class=\"osc-text williams-down-actual-${i}\">${williamsRDown}</p>\n        //        </div>\n      \n       \n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link stochastic-down-header-${i}\" href=\"https://www.investopedia.com/terms/s/stochasticoscillator.asp\" target=\"_blank\"><h3 class='tech-header'>Stochastic Oscillator</h3></a>\n        //           <div class=\"averages-row\">\n        //               <p class=\"osc-text stochasticK-down-actual-${i} stochK\">%K: ${stochasticKDown}</p>\n        //               <p class=\"osc-text stochasticD-down-actual-${i} stochD\">%D: ${stochasticDDown}</p>\n        //           </div>\n        //               <p class=\"osc-text\">Signal Line: ${stochasticSignalDown}</p>\n        //        </div>\n       \n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link bb-down-header-${i}\" href=\"https://www.investopedia.com/terms/b/bollingerbands.asp\" target=\"_blank\"><h3 class='tech-header'>Bollinger Bands</h3></a>\n        //           <p class=\"osc-text bbPercent-down-actual-${i}\">%B: ${bbPercentDown}</p>\n        //           <div class=\"averages-row\">\n        //               <p class=\"osc-text bbUpper-down-actual-${i}\">Upper:<br>${bbUpperDown}</p>\n        //               <p class=\"osc-text bbLower-down-actual-${i}\">Lower:<br>${bbLowerDown}</p>\n        //           </div>\n               \n        //           <p class=\"osc-text bbMiddle-down-actual-${i}\">Middle: ${bbMiddleDown}</p>\n          \n        //        </div>\n      \n        //        <div class=\"news-row\">\n        //        <a class=\"tech-header-news\" href=\"http://www.google.com/search?q=${symbolDown}+stock+news&source=lnms&tbm=nws&sa=X&ved=2ahUKEwj7_6eMpbPyAhXaVs0KHfuADvoQ_AUoAXoECAEQAw&biw=1280&bih=614\" target=\"_blank\">News About This Stock</a>\n        //        </div>\n      \n        //        <div class=\"news-row\">\n        //        <a class=\"buy-coffee-link\" target=\"_blank\" href=\"https://buymeacoffee.com/omniauti\">Buy Me A Coffee <img src=\"images/bmc-logo.svg\"></a>\n        //        </div>\n        //    </div>\n       \n        //        <!----------------------------------- UPPER --------------------------------------------------------->\n      \n        //    <div tabindex=\"0\" class=\"upper symbol-box\" data-index=\"${i}\">\n        //        <h2 id=\"symbol\">${symbolUp}</h2>\n        //        <p class=\"price price-up-${i}\">Price: $${priceUp}</p>\n        //        <div class=\"changes-row\">\n        //        <p class=\"changePercentageUp-${i}\">${changesPercentageUp}%</p>\n        //        <svg id=\"upArrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 100 400\" shape-rendering=\"geometricPrecision\" text-rendering=\"geometricPrecision\"><g id=\"ewG75ifXDmx2\" transform=\"matrix(0.99132899255994 0.00125353493548 0.00179456906301 -1.41919326774185 0 5360)\"><g id=\"ewG75ifXDmx3\" transform=\"matrix(0.10000000000000 0 0 0.10000000000000 0.00000000000023 0.00000000000023)\"><path id=\"ewG75ifXDmx4\" d=\"M29164.905156,10134.800000L28991.385074,10784.799602L28821.634757,10614.426482L27244.542329,12197.305156L27102.400000,12054.641316L28679.492428,10471.762642L28517.281642,10308.956716L29164.905156,10134.800000\" transform=\"matrix(-0.70853823648212 0.70567242219234 -0.70567242219234 -0.70853823648212 28243.81608984843479 24398.89755446932395)\" fill=\"rgb(89,228,139)\" stroke=\"none\" stroke-width=\"1\"/><path id=\"ewG75ifXDmx5\" d=\"M36131.700000,8167.800000C36128.200000,8167.800000,36124.700000,8168.900000,36121.700000,8170.900000C34563.300000,9219.200000,32199.200000,8231.400000,32175.500000,8221.300000C32169.500000,8218.300000,32162.200000,8218.800000,32156.700000,8222.800000C32151.200000,8226.700000,32148.300000,8233.400000,32149.300000,8240.100000C32150.300000,8246.800000,32154.900000,8252.400000,32161.300000,8254.600000C32185.300000,8264.700000,34566.400000,9259.600000,36142.200000,8200.900000C36148.700000,8196.400000,36151.500000,8188.300000,36149.200000,8180.800000C36146.900000,8173.300000,36140,8168.100000,36132.200000,8167.900000L36131.700000,8167.800000\" transform=\"matrix(1 0 0 1 -23974.95002737504910 24467.33418583546154)\" fill=\"rgb(255,255,255)\" stroke=\"none\" stroke-width=\"1\"/><path id=\"ewG75ifXDmx6\" d=\"M24267.800000,8167.800000C24260,8167.900000,24253.100000,8173.100000,24250.800000,8180.600000C24248.500000,8188.200000,24251.300000,8196.300000,24257.800000,8200.800000C25833.100000,9259.500000,28214.600000,8264.500000,28238.700000,8254.500000C28243.100000,8252.600000,28246.600000,8249.100000,28248.400000,8244.600000C28250.200000,8240.100000,28250.200000,8235.100000,28248.300000,8230.700000C28244.200000,8221.700000,28233.700000,8217.500000,28224.500000,8221.100000C28200.700000,8231.100000,25837.100000,9218.400000,24278.300000,8170.800000C24275.200000,8168.700000,24271.500000,8167.700000,24267.800000,8167.800000\" transform=\"matrix(1 0 0 1 -23974.95002737508185 24467.33418583546154)\" fill=\"rgb(255,255,255)\" stroke=\"none\" stroke-width=\"1\"/></g></g></svg>\n        //        <p>$${changeUp}</p>\n        //        </div>\n        //    </div>\n       \n        //    <!----------------------------------- THIS WILL HOLD TECH ANALYSIS FOR HOVER POPULATE IN MIDDLE ---------------------------------------->\n       \n        //    <div class=\"tech-up-${i}\">\n       \n        //    <h2 class=\"tech-title\">Daily Indicators</h2>\n        //    <p class=\"tech-title-warn\">For Educational Purposes Only</p>\n       \n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link\" href=\"https://www.investopedia.com/articles/technical/02/010702.asp\" target=\"_blank\"><h3 class='tech-header'>Volume</h3></a>\n        //                <p>Average: <span class=\"tech-to-left avgVolume-up-actual-${i}\"> ${avgVolumeUp}</span></p>\n        //                <p>Today:  <span class=\"tech-to-left volumeToday-up-actual-${i}\"> ${volumeUp}</span></p>\n        //                <p>Change: <span class=\"tech-to-left\"> ${volumeIncreaseUp}%</span></p>\n      \n        //                <p>Day Before: <span class=\"tech-to-left\"> ${volumeYesterdayUp}</span></p>\n        //                <p>Change: <span class=\"tech-to-left\"> ${yesterdayVolIncreaseUp}%</span></p>\n        //            </div>\n       \n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link sma-up-header-${i}\" href=\"https://www.investopedia.com/terms/s/sma.asp\" target=\"_blank\"><h3 class='tech-header'>SMA</h3></a>\n        //                   <div class=\"averages-row\">\n        //                        <p class=\"smafifteen-up-actual-${i}\">15: ${smaFiveTeenUp}</p>\n        //                        <p class=\"smatwenty-up-actual-${i}\">20: ${smaTwentyUp}</p>\n        //                    </div>\n        //                    <div class=\"averages-row\">\n        //                        <p class=\"smathirty-up-actual-${i}\">30: ${smaThirtyUp}</p>\n        //                        <p class=\"smafifty-up-actual-${i}\">50: ${smaFiftyUp}</p>\n        //                    </div>\n      \n        //                    <p class=\"goldenSma-cross-up-${i} golden-cross\">Golden Cross</p>\n        //                    <p class=\"deathSma-cross-up-${i} death-cross\">Death Cross</p>    \n          \n        //                    <div class=\"averages-row\">\n        //                        <p class=\"smaonehundred-up-actual-${i}\">100: ${smaOneHunUp}</p>\n        //                        <p class=\"smatwohundred-up-actual-${i}\">200: ${smaTwoHunUp}</p>\n        //                    </div>\n        //            </div>\n           \n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link ema-up-header-${i}\" href=\"https://www.investopedia.com/terms/e/ema.asp\" target=\"_blank\"><h3 class='tech-header'>EMA</h3></a>\n        //                   <div class=\"averages-row\">\n        //                   <p class=\"emaeight-up-actual-${i}\">8: ${emaEightUp}</p>\n        //                   <p class=\"ematwelve-up-actual-${i}\">12: ${emaTwelveUp}</p>\n        //                   </div>\n      \n        //                   <p class=\"goldenEma-cross-up-${i} golden-cross ema-cross\">Golden Cross</p>\n        //                   <p class=\"deathEma-cross-up-${i} death-cross ema-cross\">Death Cross</p>   \n      \n        //                   <div class=\"averages-row\">\n        //                   <p class=\"ematwenty-up-actual-${i}\">20: ${emaTwentyUp}</p>\n        //                   <p class=\"ematwentysix-up-actual-${i}\">26: ${emaTwentySixUp}</p>\n        //                   </div>\n        //                   <div class=\"averages-row\">\n        //                   <p class=\"emafifty-up-actual-${i}\">50: ${emaFiftyUp}</p>\n        //                   <p class=\"ematwohundred-up-actual-${i}\">200: ${emaTwoHunUp}</p>\n        //                   </div>\n        //            </div>\n           \n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link wma-up-header-${i}\" href=\"https://www.investopedia.com/ask/answers/071414/whats-difference-between-moving-average-and-weighted-moving-average.asp\" target=\"_blank\"><h3 class='tech-header'>WMA</h3></a>\n        //                    <div class=\"averages-row\">\n        //                        <p class=\"wmafifteen-up-actual-${i}\">15: ${wmaFiveTeenUp}</p>\n        //                        <p class=\"wmatwenty-up-actual-${i}\">20: ${wmaTwentyUp}</p>\n        //                    </div>\n        //                    <div class=\"averages-row\">\n        //                        <p class=\"wmathirty-up-actual-${i}\">30: ${wmaThirtyUp}</p>\n        //                        <p class=\"wmafifty-up-actual-${i}\">50: ${wmaFiftyUp}</p>\n        //                    </div>\n      \n        //                    <p class=\"goldenWma-cross-up-${i} golden-cross wma-cross\">Golden Cross</p>\n        //                    <p class=\"deathWma-cross-up-${i} death-cross wma-cross\">Death Cross</p>    \n      \n        //                    <div class=\"averages-row\">\n        //                        <p class=\"wmaonehundred-up-actual-${i}\">100: ${wmaOneHunUp}</p>\n        //                        <p class=\"wmatwohundred-up-actual-${i}\">200: ${wmaTwoHunUp}</p>\n        //                    </div>\n        //            </div>\n           \n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link vwma-up-header-${i}\" href=\"https://www.tradingsetupsreview.com/volume-weighted-moving-average-vwma/\" target=\"_blank\"><h3 class='tech-header'>VWMA</h3></a>\n        //                    <div class=\"averages-row\">\n        //                        <p class=\"vwmafifteen-up-actual-${i}\">15: ${vwmaFiveTeenUp}</p>\n        //                        <p class=\"vwmatwenty-up-actual-${i}\">20: ${vwmaTwentyUp}</p>\n        //                    </div>\n        //                    <div class=\"averages-row\">\n        //                        <p class=\"vwmathirty-up-actual-${i}\">30: ${vwmaThirtyUp}</p>\n        //                        <p class=\"vwmafifty-up-actual-${i}\">50: ${vwmaFiftyUp}</p>\n        //                    </div>\n      \n        //                    <p class=\"goldenVwma-cross-up-${i} golden-cross vwma-cross\">Golden Cross</p>\n        //                    <p class=\"deathVwma-cross-up-${i} death-cross vwma-cross\">Death Cross</p>    \n                           \n        //                    <div class=\"averages-row\">\n        //                        <p class=\"vwmaonehundred-up-actual-${i}\">100: ${vwmaOneHunUp}</p>\n        //                        <p class=\"vwmatwohundred-up-actual-${i}\">200: ${vwmaTwoHunUp}</p>\n        //                    </div>\n        //            </div>\n      \n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link vwap-up-header-${i}\" href=\"https://www.investopedia.com/terms/v/vwap.asp\" target=\"_blank\"><h3 class='tech-header'>VWAP (5 Minute)</h3></a>\n        //            <p class=\"osc-text vwap-up-actual-${i}\">${vwapUp}</p>\n        //        </div>\n      \n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link macd-up-header-${i}\" href=\"https://www.investopedia.com/terms/m/macd.asp\" target=\"_blank\"><h3 class='tech-header'>MACD (12 , 26)</h3></a>\n        //            <p class=\"osc-text macd-up-actual-${i}\">${macdUp}</p>\n        //                <div class=\"macd-row\">\n        //                    <p class=\"macd-signal-up-actual-${i} sl\">Signal Line:<br>${macdSignalLineUp}</p>\n        //                    <p class=\"macd-histo-up-actual-${i} sl\">Histogram:<br>${macdHistogramUp}</p>\n        //                </div>\n        //        </div>\n       \n        //        <div class=\"flex-rsi-cci\">\n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link rsi-up-header-${i}\" href=\"https://www.investopedia.com/terms/s/stochrsi.asp\" target=\"_blank\"><h3 class='tech-header'>RSI</h3></a>\n        //            <p class=\"osc-text rsi-up-actual-${i}\">${rsiUp}</p>\n        //            </div>\n       \n        //            <div class=\"tech-row\">\n        //            <a class=\"info-link cci-up-header-${i}\" href=\"https://www.investopedia.com/terms/c/commoditychannelindex.asp\" target=\"_blank\"><h3 class='tech-header'>CCI</h3></a>\n        //                <p class=\"osc-text cci-up-actual-${i}\">${cciUp}</p>\n        //            </div>\n      \n        //        </div>\n      \n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link williams-up-header-${i}\" href=\"https://www.investopedia.com/terms/w/williamsr.asp\" target=\"_blank\"><h3 class='tech-header'>Williams %R</h3></a>\n        //            <p class=\"osc-text williams-up-actual-${i}\">${williamsRUp}</p>\n        //        </div>\n       \n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link stochastic-up-header-${i}\" href=\"https://www.investopedia.com/terms/s/stochasticoscillator.asp\" target=\"_blank\"><h3 class='tech-header'>Stochastic Oscillator</h3></a>\n        //           <div class=\"averages-row\">\n        //           <p class=\"osc-text stochasticK-up-actual-${i} stochK\">%K: ${stochasticKUp}</p>\n        //           <p class=\"osc-text stochasticD-up-actual-${i} stochD\">%D: ${stochasticDUp}</p>\n        //           </div>\n        //           <p class=\"osc-text\">Signal Line: ${stochasticSignalUp}</p>\n        //        </div>\n       \n        //        <div class=\"tech-row\">\n        //        <a class=\"info-link bb-up-header-${i}\" href=\"https://www.investopedia.com/terms/b/bollingerbands.asp\" target=\"_blank\"><h3 class='tech-header'>Bollinger Bands</h3></a>\n        //           <p class=\"osc-text bbPercent-up-actual-${i}\">%B: ${bbPercentUp}</p>\n        //           <div class=\"averages-row\">\n        //               <p class=\"osc-text bbUpper-up-actual-${i}\">Upper:<br>${bbUpperUp}</p>\n        //               <p class=\"osc-text bbLower-up-actual-${i}\">Lower:<br>${bbLowerUp}</p>\n        //           </div>\n               \n        //               <p class=\"osc-text bbMiddle-up-actual-${i}\">Middle: ${bbMiddleUp}</p>\n         \n        //        </div>\n      \n        //        <div class=\"news-row\">\n        //        <a class=\"tech-header-news\" href=\"http://www.google.com/search?q=${symbolUp}+stock+news&source=lnms&tbm=nws&sa=X&ved=2ahUKEwj7_6eMpbPyAhXaVs0KHfuADvoQ_AUoAXoECAEQAw&biw=1280&bih=614\" target=\"_blank\">News About This Stock</a>\n        //        </div>\n      \n        //        <div class=\"news-row\">\n        //        <a class=\"buy-coffee-link\" target=\"_blank\" href=\"https://buymeacoffee.com/omniauti\">Buy Me A Coffee <img src=\"images/bmc-logo.svg\"></a>\n        //        </div>\n        //    </div> `;\n    \n        //   litterBox.appendChild(litter);\n        }\n    \n\n        //------------ ADD SECOND SCRIPT FOR JAVASCRIPT FUNCTIONALITY TO NEW ELEMENTS ---------------------- //\n    \n        addSecondScript();\n      }\n      //----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\n      filterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n    \n    }\n\nuseEffect(() => {\n    console.log(finalArr, 'this is use effect')\n}, [finalArr])\n\n  return (\n    <main>\n      <BearRow />\n      <BullRow />\n    </main>\n  );\n};\n\nexport default MainContainer;\n"]},"metadata":{},"sourceType":"module"}