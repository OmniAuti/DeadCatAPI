{"ast":null,"code":"export const technicalAnalysis = async () => {\n  /// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------\n  const today = new Date();\n  const year = today.getFullYear();\n  let date = today.getUTCDate();\n  let month = today.getUTCMonth() + 1;\n  let minutes = today.getUTCMinutes();\n  let hour = today.getUTCHours(); // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n  //CALC FOR UTC TO EST\n\n  hour = hour - 5; // CALC FOR EARLY MORNING HOURS UTC\n\n  if (hour < 0) {\n    hour = hour + 24;\n  } // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  const time = `${hour}${minutes}`;\n  const timeNum = parseInt(time); // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n\n  const marketDay = today.getDay(); // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n\n  if (marketDay == 0) {\n    date = date - 2; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 30;\n        } else if (month == 5 || month == 7 || month == 10 || month == 12) // MONTHS AFTER 30 DAYS\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 29;\n        } else if (month == 3 && year % 4 == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 28;\n        } else // MONTH AFTER 28\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 27;\n        }\n    }\n  } else if (marketDay == 6) {\n    date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 31;\n        } else if (month == 5 || month == 7 || month == 10 || month == 12) // MONTHS AFTER 30 DAYS\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 30;\n        } else if (month == 3 && year % 4 == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 29;\n        } else // MONTH AFTER 28\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 28;\n        }\n    }\n  } // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n\n\n  if (marketDay == 1 && timeNum < 930) {\n    date = date - 3; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 29;\n        } else if (month == 5 || month == 7 || month == 10 || month == 12) // MONTHS AFTER 30 DAYS\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 28;\n        } else if (month == 3 && year % 4 == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 27;\n        } else // MONTH AFTER 28\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 26;\n        }\n    }\n  } else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {\n    // ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n    date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n        {\n          month = month - 1;\n\n          if (month == 0) {\n            month = 1;\n          }\n\n          date = 31;\n        } else if (month == 5 || month == 7 || month == 10 || month == 12) // MONTHS AFTER 30 DAYS\n        {\n          month = month - 1;\n          date = 30;\n        } else if (month == 3 && year % 4 == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n        {\n          month = month - 1;\n          date = 29;\n        } else // MONTH AFTER 28\n        {\n          month = month - 1;\n          date = 28;\n        }\n    }\n  } // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n\n\n  if (date < 10) {\n    date = `0${date}`;\n  }\n\n  if (month < 10) {\n    month = `0${month}`;\n  } // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n\n\n  let todayDate = `${year}-${month}-${date}`; //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n\n  if (todayDate === '2021-11-25') {\n    todayDate = '2021-11-24';\n  } else if (todayDate === '2021-12-24') {\n    todayDate = '2021-12-23';\n  } else if (todayDate === '2022-01-17') {\n    todayDate = '2022-01-14';\n  } else if (todayDate === '2022-02-21') {\n    todayDate = '2022-02-18';\n  } else if (todayDate === '2022-04-15') {\n    todayDate = '2022-04-14';\n  } else if (todayDate === '2022-05-30') {\n    todayDate = '2022-05-27';\n  } else if (todayDate === '2022-06-20') {\n    todayDate = '2022-06-17';\n  } else if (todayDate === '2022-07-04') {\n    todayDate = '2022-07-01';\n  } else if (todayDate === '2022-09-05') {\n    todayDate = '2022-09-02';\n  } else if (todayDate === '2022-11-24') {\n    todayDate = '2022-11-23';\n  } else if (todayDate === '2022-12-26') {\n    todayDate = '2022-12-23';\n  } // THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n\n\n  let newDateString = todayDate;\n\n  if (hour + 4 >= 24) {\n    const dateNumSlice = parseInt(date);\n    const dateSliceStart = todayDate.slice(0, 8);\n    let newDateNum = dateNumSlice - 1;\n\n    if (newDateNum < 10) {\n      newDateNum = `0${newDateNum}`;\n    }\n\n    newDateString = `${dateSliceStart}${newDateNum}`;\n    newDateString = newDateString.toString(); // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date == 1 && hour + 4 >= 24) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 31;\n          newDateString = `${year}-${month}-${date}`;\n        } else if (month == 5 || month == 7 || month == 10 || month == 12) // MONTHS AFTER 30 DAYS\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 30;\n          newDateString = `${year}-${month}-${date}`;\n        } else if (month == 3 && year % 4 == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 29;\n          newDateString = `${year}-${month}-${date}`;\n        } else // MONTH AFTER 28\n        {\n          month = month - 1;\n\n          if (month < 10) {\n            month = `0${month}`;\n          }\n\n          date = 28;\n          newDateString = `${year}-${month}-${date}`;\n        }\n    }\n  } // ---------------------- END OF DATE -------------------------------------\n  // ---------------------- KEYS -------------------------------------\n  // NASDAQ KEYS\n\n\n  const nasdaqMasterKey = [\"ADMS\", \"TROO\", \"CISO\", \"PEAR\", \"ISPO\", \"SKIN\", \"BLZE\", \"CPTN\", \"NN\", \"FRSH\", \"HLG\", \"FATH\", \"MF\", \"DCFC\", \"TH\", \"FOLD\", \"TKLF\", \"VORB\", \"MIGI\", \"AURA\", \"TSVT\", \"RICK\", \"RXST\", \"CDEV\", \"ADSE\", \"BIOX\", \"RGC\", \"NAKD\", \"AEHR\", \"NEGG\", \"LILM\", \"AUR\", \"CGNT\", \"QFIN\", \"INVE\", \"HLTH\", \"SPT\", \"AUID\", \"PRPL\", \"BRZE\", \"IREN\", \"ARCT\", \"QSI\", \"LIAN\", \"NEXT\", \"THRX\", \"FCUV\", \"SLDP\", \"ESSC\", \"AFMD\", \"PNT\", \"VBIV\", \"ARHS\", \"INDI\", \"ADAG\", \"LWLG\", \"RAPT\", \"BZFD\", \"AERI\", \"CVT\", \"TGLS\", \"GRAB\", \"NTLA\", \"MARA\", \"VAXX\", \"TRUP\", \"ADTH\", \"KRYS\", \"IMGO\", \"TACO\", \"MMAT\", \"ELYM\", \"SNCE\", \"ENJY\", \"FFIE\", \"BIRD\", \"MEIP\", \"WEJO\", \"ARQQ\", \"PRDS\", \"AVDX\", \"TNGX\", \"AUPH\", \"MNTS\", \"HMTV\", \"STRC\", \"SEV\", \"JWEL\", \"URGN\", \"TCMD\", \"LTRY\", \"COCO\", \"SOPA\", \"XAIR\", \"GGPI\", \"AVPT\", \"EYPT\", \"RANI\", \"RMBL\", \"NVTS\", \"KRUS\", \"AMLX\", \"INKT\", \"TGTX\", \"RPID\", \"GLBE\", \"MYPS\", \"ARRY\", \"AERC\", \"PETZ\", \"ABSI\", \"FIVN\", \"AMEH\", \"HEPS\", \"DZSI\", \"XLO\", \"UONE\", \"SMLR\", \"SAVA\", \"VERA\", \"TRDA\", \"MTTR\", \"CDNA\", \"VUZI\", \"FLNC\", \"OSTK\", \"AIP\", \"NOTV\", \"LIDR\", \"ENPH\", \"MARK\", \"XELA\", \"DLBE\", \"GDYN\", \"ALTM\", \"DWAC\", \"ROIV\", \"AGEN\", \"RETA\", \"SGOC\", \"CMBM\", \"PTLO\", \"ZGNX\", \"ALPP\", \"SDIG\", \"RSVR\", \"GPP\", \"AKTS\", \"CELU\", \"RDUS\", \"VIEW\", \"HPK\", \"ATER\", \"ZY\", \"EVER\", \"RELY\", \"MNKD\", \"PROG\", \"DAVE\", \"FCEL\", \"JSPR\", \"LUCD\", \"ATAI\", \"PAVM\", \"BTAI\", \"RLAY\", \"GTLB\", \"AXSM\", \"NRXP\", \"ORGO\", \"RVNC\", \"ACMR\", \"RMNI\", \"JANX\", \"ANY\", \"KNBE\", \"OCUL\", \"EFTR\", \"KPLT\", \"FLXN\", \"PTGX\", \"CIFR\", \"TRHC\", \"PVAC\", \"CLNN\", \"ARQQ\", \"SBTX\", \"TYRA\", \"OMER\", \"AMTX\", \"CMCSA\", \"RCKT\", \"INTC\", \"XENE\", \"MU\", \"AAPL\", \"PRTC\", \"MSFT\", \"SIRI\", \"CZR\", \"FB\", \"VIGL\", \"HYPR\", \"GSM\", \"JD\", \"AVGO\", \"AMAT\", \"ZNGA\", \"QCOM\", \"CSCO\", \"GRPN\", \"GERN\", \"GILD\", \"ATVI\", \"VEON\", \"FLEX\", \"FOXA\", \"CVLT\", \"MAT\", \"CORZ\", \"PYPL\", \"MDLZ\", \"NVDA\", \"WDC\", \"FSRD\", \"ON\", \"FITB\", \"PTEN\", \"JBLU\", \"EBAY\", \"HBAN\", \"MRVL\", \"WBA\", \"TXN\", \"OAS\", \"ETSY\", \"AMZN\", \"NFLX\", \"ENTG\", \"CSX\", \"WYNN\", \"FOX\", \"ZION\", \"SYNH\", \"PAYX\", \"BIIB\", \"SBUX\", \"ADSK\", \"BIDU\", \"MLCO\", \"NTRS\", \"UAL\", \"KHC\", \"AAL\", \"NWL\", \"XRAY\", \"TMUS\", \"MOMO\", \"STX\", \"ADBE\", \"TSLA\", \"BUFF\", \"LNT\", \"LKQ\", \"CENX\", \"IMGN\", \"LULU\", \"STLD\", \"PEP\", \"CMPX\", \"COST\", \"IMMP\", \"ALTR\", \"ALXN\", \"ZLAB\", \"ADP\", \"MNST\", \"RIGL\", \"LRCX\", \"NXPI\", \"ENDP\", \"YNDX\", \"GOOGL\", \"CGNX\", \"AMGN\", \"FSLR\", \"SLM\", \"ODP\", \"TLGT\", \"PDCO\", \"Z\", \"CME\", \"PPBI\", \"EXC\", \"CNDT\", \"WEN\", \"CTSH\", \"HOLX\", \"CTXS\", \"SABR\", \"DISH\", \"SKYT\", \"XEL\", \"NTNX\", \"HQY\", \"IGIC\", \"ARCC\", \"SFIX\", \"NWS\", \"NVAX\", \"DXCM\", \"NTCT\", \"NYMT\", \"NAVI\", \"TTWO\", \"KLAC\", \"GOOG\", \"HSIC\", \"CFVI\", \"MEOH\", \"GIII\", \"SFM\", \"QRVO\", \"DOX\", \"HMHC\", \"NMRK\", \"OPK\", \"NUAN\", \"GT\", \"RAIN\", \"EA\", \"GPRO\", \"VRTX\", \"YY\", \"FWONK\", \"HOMB\", \"NKTR\", \"CERN\", \"AKAM\", \"CDNS\", \"MDRX\", \"ISBC\", \"ORMP\", \"NTAP\", \"BBBY\", \"MAR\", \"VIAV\", \"SHOO\", \"CONE\", \"RUN\", \"HA\", \"PBCT\", \"UCBI\", \"LBTYA\", \"CBSH\", \"TSCO\", \"TER\", \"TRUE\", \"URBN\", \"ROKU\", \"CTRE\", \"MCHP\", \"MYNZ\", \"KLIC\", \"TEAM\", \"HIMX\", \"FANG\", \"TROW\", \"ARLP\", \"BLMN\", \"PPC\", \"GNTX\", \"EMBK\", \"INTU\", \"PCAR\", \"XLNX\", \"JBHT\", \"EXPD\", \"EXPE\", \"WERN\", \"HCSG\", \"DLTR\", \"MTSI\", \"BGCP\", \"SWKS\", \"IIVI\", \"CROX\", \"ACHC\", \"MLHR\", \"QRTEA\", \"TRIP\", \"FAST\", \"EWBC\", \"SGH\", \"ALNY\", \"BMRN\", \"CASA\", \"AGNC\", \"TXMD\", \"INSM\", \"BGFV\", \"LAMR\", \"EXEL\", \"HZNP\", \"ADI\", \"OLED\", \"EYE\", \"SSNC\", \"CHTR\", \"ACAD\", \"VLY\", \"VOD\", \"EXTR\", \"FEYE\", \"VECO\", \"ERIC\", \"MANH\", \"TILE\", \"CAKE\", \"CAR\", \"SPLK\", \"VRSN\", \"XOG\", \"BZUN\", \"NWSA\", \"ARNA\", \"ULTA\", \"JACK\", \"CPRT\", \"CLVS\", \"SBRA\", \"FISV\", \"DXLG\", \"ONB\", \"ATSG\", \"SPWH\", \"EQIX\", \"RDFN\", \"ORBC\", \"LIVN\", \"CTAS\", \"REGI\", \"VRNT\", \"HAS\", \"HALO\", \"SGMO\", \"KTOS\", \"BHF\", \"RYAAY\", \"WDAY\", \"VC\", \"ROIC\", \"MXIM\", \"CSOD\", \"SIVB\", \"FIVE\", \"LPLA\", \"SEIC\", \"FORM\", \"BRKS\", \"HTHT\", \"PENN\", \"IONS\", \"KRNY\", \"SBAC\", \"BGNE\", \"WB\", \"THRM\", \"UMPQ\", \"PNFP\", \"GLPI\", \"LITE\", \"ROST\", \"PCRX\", \"CSIQ\", \"ICHR\", \"ILMN\", \"ISRG\", \"CREE\", \"COHR\", \"FULT\", \"UNIT\", \"CASY\", \"PODD\", \"MATW\", \"REGN\", \"AGFY\", \"MELI\", \"SGMS\", \"IMMR\", \"MGPI\", \"NTES\", \"LTRPA\", \"SND\", \"PFG\", \"STFC\", \"PTC\", \"CDW\", \"SBGI\", \"PLAY\", \"WAFD\", \"PETQ\", \"IRDM\", \"INCY\", \"LBRDK\", \"TRMB\", \"ACGL\", \"SBNY\", \"GRFS\", \"GOGO\", \"SYNA\", \"MTCH\", \"XNET\", \"HAIN\", \"MRTX\", \"ECHO\", \"PDCE\", \"LPSN\", \"PLCE\", \"SCHL\", \"ADTN\", \"BECN\", \"BPOP\", \"COMM\", \"BLUE\", \"WPRT\", \"MASI\", \"OKTA\", \"BRKR\", \"NBIX\", \"CHKP\", \"VERU\", \"JAZZ\", \"CMCO\", \"ORLY\", \"FFIV\", \"PRTA\", \"SCWX\", \"PAAS\", \"HOPE\", \"MRTN\", \"CRUS\", \"TXRH\", \"EEFT\", \"CVGI\", \"WWD\", \"SNY\", \"HOLI\", \"SSRM\", \"TSEM\", \"DNLI\", \"CHRW\", \"CINC\", \"SPPI\", \"ASML\", \"IDXX\", \"SRPT\", \"SGEN\", \"TCBI\", \"DXPE\", \"NWBI\", \"PSEC\", \"QDEL\", \"WETF\", \"INVA\", \"BJRI\", \"JCOM\", \"ZS\", \"MIDD\", \"RCII\", \"CSGP\", \"TTMI\", \"ARWR\", \"IAC\", \"VIRT\", \"UCTT\", \"ANGI\", \"BCOR\", \"BLDR\", \"CHEF\", \"HUDI\", \"KURA\", \"GTHX\", \"GPRE\", \"HIBB\", \"ALGN\", \"LGIH\", \"REG\", \"NUVA\", \"SWIR\", \"ARAY\", \"HTLD\", \"VRNS\", \"CINF\", \"GLRE\", \"RRR\", \"ZG\", \"FTNT\", \"CLDX\", \"MDCA\", \"SRCL\", \"RBBN\", \"WTFC\", \"SGRY\", \"XPER\", \"VG\", \"GLNG\", \"PETS\", \"AMBA\", \"AMKR\", \"COUP\", \"ICPT\", \"PZZA\", \"POOL\", \"MGRC\", \"FANH\", \"INFN\", \"MMSI\", \"SREV\", \"COLM\", \"CCOI\", \"SEDG\", \"LLNW\", \"PBYI\", \"IRWD\", \"CSGS\", \"CNSL\", \"CRIS\", \"COLL\", \"DRNA\", \"BKCC\", \"PACB\", \"JNCE\", \"MKSI\", \"CDK\", \"PACW\", \"LOCO\", \"RUSHA\", \"CGEN\", \"AAWW\", \"WIX\", \"INO\", \"FOSL\", \"FOXF\", \"AZPN\", \"IRBT\", \"SBLK\", \"CWST\", \"UMBF\", \"SOHU\", \"FGEN\", \"OCSL\", \"HTLF\", \"BLKB\", \"HLIT\", \"IPAR\", \"CRTO\", \"ZUMZ\", \"BAND\", \"ABMD\", \"SSP\", \"NDSN\", \"ALSK\", \"AYPR\", \"FFBC\", \"DLTH\", \"AXTI\", \"DBVT\", \"BCRX\", \"TOWN\", \"JKHY\", \"EPAY\", \"VRSK\", \"ICLR\", \"VRA\", \"OSUR\", \"AVT\", \"NVCR\", \"PCH\", \"SAFM\", \"RMBS\", \"TAST\", \"OTEX\", \"FHB\", \"SANM\", \"MGI\", \"KOPN\", \"OSBC\", \"BRKL\", \"SATS\", \"SLGN\", \"IBKR\", \"ROCK\", \"RNWK\", \"ASTE\", \"ACET\", \"DMRC\", \"CUTR\", \"UEPS\", \"AMCX\", \"DIOD\", \"RARE\", \"INOV\", \"PLYA\", \"CFFN\", \"HSII\", \"LOPE\", \"AMPL\", \"SMTC\", \"SCHN\", \"HSON\", \"UBSI\", \"SMCI\", \"ODFL\", \"CFMS\", \"WLTW\", \"CDXS\", \"FCFS\", \"VREX\", \"LSXMK\", \"MSTR\", \"COHU\", \"OTIC\", \"GRMN\", \"MEDP\", \"TWOU\", \"ACTG\", \"AMWD\", \"CATY\", \"COLB\", \"GBT\", \"MPAA\", \"COWN\", \"GTLS\", \"SKYW\", \"CONN\", \"EZPW\", \"MHLD\", \"KPTI\", \"AVID\", \"SLDB\", \"TBBK\", \"MTRX\", \"SPWR\", \"SLAB\", \"PEGA\", \"NOVT\", \"MYGN\", \"AEIS\", \"LHCG\", \"NDAQ\", \"WSFS\", \"MMYT\", \"UTHR\", \"CALM\", \"ALRM\", \"MKTX\", \"LSCC\", \"ECPG\", \"BKNG\", \"CSTE\", \"QNST\", \"SHLD\", \"SIMO\", \"AMED\", \"VNET\", \"IIIN\", \"HFWA\", \"SCSC\", \"QADA\", \"TSC\", \"SFNC\", \"MRCY\", \"ICFI\", \"ACIW\", \"PTCT\", \"TFSL\", \"RRGB\", \"CECE\", \"IART\", \"YELL\", \"LXRX\", \"PRAA\", \"STMP\", \"SCVL\", \"CORE\", \"KRNT\", \"MYRG\", \"BANR\", \"CRESY\", \"VSAT\", \"SIGI\", \"ALKS\", \"GLDD\", \"FIZZ\", \"SBBP\", \"DORM\", \"TUSK\", \"MERC\", \"HEES\", \"AGFS\", \"SNCR\", \"HUBG\", \"SNBR\", \"LOGI\", \"FLWS\", \"EBIX\", \"ANAB\", \"ABUS\", \"ANSS\", \"CBRL\", \"ADXS\", \"ITRI\", \"GBCI\", \"ERII\", \"CLMT\", \"AINV\", \"BL\", \"SSYS\", \"LKFN\", \"ANGO\", \"PRIM\", \"CTMX\", \"CASH\", \"PINC\", \"SFBS\", \"FNKO\", \"ZBRA\", \"GABC\", \"NCMI\", \"MGLN\", \"EDIT\", \"PRGS\", \"TRMK\", \"ACRS\", \"SPSC\", \"EFSC\", \"BOKF\", \"PSMT\", \"UVSP\", \"OCFC\", \"GOGL\", \"CCRN\", \"IRTC\", \"TA\", \"FRTA\", \"PI\", \"MNRO\", \"FMBI\", \"ACLS\", \"ITCI\", \"VIVO\", \"MCHX\", \"CRAI\", \"DSGX\", \"HCM\", \"TREE\", \"ACOR\", \"PCTY\", \"MSBI\", \"HLNE\", \"VYGR\", \"EBSB\", \"SNPS\", \"MIME\", \"NATI\", \"PLXS\", \"MANT\", \"OMAB\", \"VNOM\", \"TCPC\", \"IBTX\", \"DSPG\", \"FWONA\", \"ZEAL\", \"UHAL\", \"BCOV\", \"ACBI\", \"CVBF\", \"LSXMA\", \"PATK\", \"BPMC\", \"SASR\", \"NBRV\", \"TVTY\", \"NXST\", \"TECH\", \"WING\", \"HAFC\", \"ATRA\", \"BOOM\", \"EXLS\", \"QLYS\", \"QURE\", \"ICUI\", \"LSTR\", \"WASH\", \"BPY\", \"KIRK\", \"SAIA\", \"AY\", \"ADUS\", \"LBAI\", \"OMCL\", \"UFPI\", \"IBOC\", \"CSQ\", \"HELE\", \"TRVG\", \"SIEN\", \"CPLP\", \"JOBS\", \"NISN\", \"NICE\", \"KALU\", \"CAMP\", \"ICON\", \"ASPS\", \"ZIXI\", \"CGBD\", \"RGEN\", \"AOSL\", \"CVGW\", \"DGICA\", \"SILC\", \"RGLD\", \"GBDC\", \"OCSI\", \"APVO\", \"PLAB\", \"AGYS\", \"CALA\", \"CG\", \"TRST\", \"SYKE\", \"TEDU\", \"FWRD\", \"LBC\", \"ADAP\", \"LECO\", \"TRVN\", \"CHUY\", \"CTRN\", \"CENT\", \"SPTN\", \"NSIT\", \"AMRS\", \"EQBK\", \"SEAC\", \"ARGX\", \"STKL\", \"LFUS\", \"CYBR\", \"APOG\", \"MPWR\", \"FELE\", \"SSB\", \"ITRN\", \"LANC\", \"CHDN\", \"ENTA\", \"EXPO\", \"FRGI\", \"DAKT\", \"AAON\", \"FLDM\", \"TCBK\", \"SNDX\", \"INGN\", \"GSBC\", \"LQDT\", \"PBPB\", \"AVAV\", \"IPGP\", \"AMPH\", \"NDLS\", \"ABCB\", \"CYTK\", \"NTGR\", \"RDWR\", \"GIFI\", \"CACC\", \"OSIS\", \"LAUR\", \"OXLC\", \"PVAC\", \"PNNT\", \"AGIO\", \"RUTH\", \"SRCE\", \"HURN\", \"SBSI\", \"SBCF\", \"NNBR\", \"SPKE\", \"FRME\", \"IDCC\", \"ROLL\", \"NSSC\", \"FBNC\", \"SLRC\", \"EGLE\", \"EQRX\", \"PEBO\", \"ODT\", \"LOB\", \"MCRI\", \"CRNT\", \"INSG\", \"CPSI\", \"SCPH\", \"BBSI\", \"FARO\", \"VWTR\", \"JRVR\", \"NBTB\", \"CMTL\", \"IVAC\", \"KFRC\", \"CNOB\", \"GLAD\", \"UFCS\", \"CCMP\", \"TRS\", \"CLNE\", \"STRA\", \"JAKK\", \"ATNX\", \"ALNA\", \"PDFS\", \"TBK\", \"FIBK\", \"OPTN\", \"FFIN\", \"RGNX\", \"KE\", \"ASYS\", \"APEI\", \"VICR\", \"MORN\", \"APLS\", \"UEIC\", \"HTBI\", \"LYTS\", \"CMPR\", \"SRDX\", \"WSBC\", \"PFBC\", \"CARG\", \"EPZM\", \"AIMC\", \"CHI\", \"ATRO\", \"ENSG\", \"ECOL\", \"SHEN\", \"QQQX\", \"FRPH\", \"MRIN\", \"PRTS\", \"BCPC\", \"OTTR\", \"HCKT\", \"WSBF\", \"CSII\", \"PFLT\", \"ALGT\", \"MFIN\", \"FSV\", \"HTBK\", \"KNSL\", \"METC\", \"NEOG\", \"HMST\", \"FFIC\", \"IMKTA\", \"RAIL\", \"INDB\", \"LCUT\", \"ERIE\", \"HSTM\", \"FDUS\", \"ANAT\", \"OFIX\", \"KVHI\", \"ARCB\", \"WABC\", \"CNBKA\", \"CCXI\", \"UBFO\", \"CNXN\", \"HAYN\", \"CAC\", \"NATH\", \"ANDE\", \"GOOD\", \"AMRK\", \"CCD\", \"DGII\", \"VLGEA\", \"WRLD\", \"SYBT\", \"HWKN\", \"CHY\", \"CEVA\", \"HCCI\", \"ILPT\", \"CHW\", \"CHCO\", \"IBCP\", \"TBPH\", \"MBWM\", \"RCKY\", \"POWI\", \"NTRA\", \"PGC\", \"ATAX\", \"NFBK\", \"MRSN\", \"JBSS\", \"TTEC\", \"FISI\", \"MOFG\", \"RNST\", \"KELYA\", \"IMOS\", \"SPOK\", \"MCBC\", \"PLUS\", \"THFF\", \"NCSM\", \"PRFT\", \"CSWI\", \"NCNA\", \"AMSC\", \"GAIN\", \"RAVN\", \"IFRX\", \"JJSF\", \"TTEK\", \"ANIP\", \"CTBI\", \"BATRA\", \"BSRR\", \"NVMI\", \"FLXS\", \"GLPG\", \"ALLT\", \"BANX\", \"DCPH\", \"HOFT\", \"KBAL\", \"LNDC\", \"NWPX\", \"SYRS\", \"WNEB\", \"ZEUS\", \"NH\", \"SPNE\", \"FORR\", \"STRL\", \"STCN\", \"MMLP\", \"HBNC\", \"MGNX\", \"DCOM\", \"GEOS\", \"INBK\", \"MCRB\", \"SVVC\", \"KALA\", \"WDFC\", \"LILA\", \"IEP\", \"LMNR\", \"WEYS\", \"RBB\", \"VOXX\", \"ESGR\", \"ASND\", \"CRMT\", \"CWCO\", \"EHTH\", \"MRLN\", \"QIWI\", \"USAK\", \"UTSI\", \"FARM\", \"ANIK\", \"SVRA\", \"BUSE\", \"NRIX\", \"HONE\", \"VCTR\", \"FCBC\", \"UTMD\", \"ATNI\", \"MRCC\", \"POWL\", \"PWOD\", \"SEED\", \"TITN\", \"CTG\", \"COKE\", \"KNDI\", \"CLAR\", \"TWIN\", \"CCLP\", \"INFI\", \"VSEC\", \"MGEE\", \"CVCO\", \"SP\", \"STBA\", \"TBNK\", \"BFIN\", \"ACGLP\", \"CBTX\", \"CIGI\", \"IOSP\", \"OVID\", \"PCTI\", \"RBCAA\", \"SUNS\", \"CCBG\", \"DHIL\", \"ESSA\", \"FFNW\", \"FCNCA\", \"XONE\", \"WTBA\", \"ULH\", \"AROW\", \"BANF\", \"BELFB\", \"CHMG\", \"CPIX\", \"CLFD\", \"CSTR\", \"ESLT\", \"GASS\", \"GBLI\", \"JOUT\", \"LIFE\", \"LORL\", \"OFS\", \"QUMU\", \"RELL\", \"SPKEP\", \"STRS\", \"TGA\", \"TIG\", \"VRTS\", \"FWP\", \"YORW\", \"BMTC\", \"PFMT\", \"CRVL\", \"PMBC\", \"FNLC\", \"AMNB\", \"CHSCM\", \"CHSCN\", \"CFFI\", \"SHBI\", \"WIRE\", \"ATRI\", \"DWSN\", \"OMP\", \"AMSF\", \"BSET\", \"CASS\", \"CHSCL\", \"EBTC\", \"FSTR\", \"FTEK\", \"GURE\", \"JRJC\", \"MGIC\", \"OIIM\", \"PBCTP\", \"PERI\", \"PKOH\", \"RVSB\", \"TANNI\", \"TESS\", \"TRIB\", \"WHF\", \"MTLS\", \"MSEX\", \"PLPC\", \"FBIZ\", \"AMSWA\", \"MIND\", \"IRCP\", \"RUSHB\", \"WTFCM\", \"NWLI\", \"NYMTP\", \"SAFT\", \"NRIM\", \"ITIC\", \"MLAB\", \"ACGLO\", \"AGNCN\", \"ALCO\", \"AMRB\", \"ARTNA\", \"ATEC\", \"ATLC\", \"AUDC\", \"AVNW\", \"CCNE\", \"CGO\", \"CHMA\", \"CSWC\", \"DMLP\", \"ERYP\", \"EXFO\", \"FUNC\", \"FUND\", \"GILT\", \"GNTY\", \"GSIT\", \"HBCP\", \"HRZN\", \"HURC\", \"HWBK\", \"IGLD\", \"ISSC\", \"JSM\", \"KMDA\", \"LAWS\", \"LBTYB\", \"LINC\", \"LSXMB\", \"LTRPB\", \"MESO\", \"MINDP\", \"MPVDF\", \"MRBK\", \"MTEX\", \"NCTY\", \"NICK\", \"NYMTN\", \"NYMTO\", \"OBSV\", \"PATI\", \"PFIS\", \"PROV\", \"PTNR\", \"QADB\", \"QRTEB\", \"SBLKZ\", \"SENEB\", \"SLMBP\", \"SPI\", \"SPRO\", \"TRMD\", \"TZOO\", \"USAP\", \"USLM\", \"XBIT\", \"YRIV\", \"ADPT\", \"AFYA\", \"AGNCM\", \"KERN\", \"AKRO\", \"ALEC\", \"ALLK\", \"ALLO\", \"AMTB\", \"AMTBB\", \"AFIN\", \"AFINP\", \"APTX\", \"APYX\", \"ARAV\", \"ARCE\", \"ARVN\", \"ASRT\", \"AUB\", \"BCEL\", \"JG\", \"AUTL\", \"AVRO\", \"AXNX\", \"OZK\", \"BSVN\", \"GLG\", \"BCML\", \"BLU\", \"BRY\", \"BYND\", \"BCYC\", \"BILI\", \"BBIO\", \"BHFAP\", \"BPYPO\", \"BPYPP\", \"DOOO\", \"BFST\", \"CBNK\", \"CARE\", \"CHNG\", \"CIH\", \"CCB\", \"CLBK\", \"SCOR\", \"ROAD\", \"CRTX\", \"CVET\", \"CRNX\", \"CFB\", \"CRWD\", \"CYCN\", \"DOCU\", \"DOYU\", \"DBX\", \"ECOR\", \"ENOB\", \"ENTX\", \"EQ\", \"EDRY\", \"EVLO\", \"EVOP\", \"XCUR\", \"DVOL\", \"DALI\", \"MYFW\", \"FOCS\", \"FTDR\", \"GNFT\", \"GMAB\", \"GAINL\", \"DRIV\", \"CLOU\", \"GSHD\", \"GOSS\", \"GSKY\", \"GRIN\", \"GRTS\", \"GO\", \"GH\", \"HWC\", \"HARP\", \"HHR\", \"HCAT\", \"HLIO\", \"FIXX\", \"HOOK\", \"IIIV\", \"IDYA\", \"IHRT\", \"INMD\", \"ICMB\", \"IQ\", \"USIG\", \"ISEE\", \"KLDO\", \"KZR\", \"KNSA\", \"KLXE\", \"LEGH\", \"LEVL\", \"YVR\", \"LYFT\", \"MGTA\", \"MDJH\", \"MGTX\", \"MREO\", \"MESA\", \"MIST\", \"TIGO\", \"MIRM\", \"MRNA\", \"MOGO\", \"MOR\", \"COOP\", \"NRC\", \"NTUS\", \"STIM\", \"NFE\", \"NXTC\", \"NXGN\", \"NGM\", \"NIU\", \"LASR\", \"OPI\", \"OCCI\", \"OCCIP\", \"ONCY\", \"OSPN\", \"OPBK\", \"OPRA\", \"OPRX\", \"ORTX\", \"OGI\", \"OBNK\", \"OSMT\", \"OXSQ\", \"HERD\", \"PLMR\", \"PAYS\", \"PCB\", \"PDSB\", \"PHAS\", \"PHIO\", \"PHIOW\", \"PHUN\", \"PDD\", \"PSTV\", \"PTE\", \"DTIL\", \"POAI\", \"PRVB\", \"QTT\", \"RTLR\", \"RRBI\", \"RDVT\", \"RPAY\", \"REPL\", \"RMBI\", \"RUBY\", \"SRRK\", \"SCPL\", \"SEEL\", \"SESN\", \"SWAV\", \"SIBN\", \"SILK\", \"SINT\", \"SONO\", \"SOHON\", \"SPFI\", \"STXB\", \"STOK\", \"STNE\", \"SNDL\", \"SBEA\", \"SLGG\", \"SURF\", \"STRO\", \"SSSS\", \"TRNX\", \"TCRR\", \"TENB\", \"BPRN\", \"REAL\", \"TLRY\", \"TW\", \"TBIO\", \"TCDA\", \"TSCAP\", \"TSCBP\", \"TPTX\", \"BROG\", \"TWST\", \"UBX\", \"TIGR\", \"UPWK\", \"UXIN\", \"VLYPO\", \"VLYPP\", \"VIOT\", \"HLAL\", \"WTRH\", \"WTREP\", \"WW\", \"XERS\", \"YMAB\", \"ZM\", \"ZVO\", \"AGNCP\", \"DUOT\", \"HUIZ\", \"RVMD\", \"MDRRP\", \"PAE\", \"AGNCO\", \"ARQT\", \"APRE\", \"PDEV\", \"AMHC\", \"BRP\", \"FITBO\", \"BSBK\", \"PHAT\", \"BBQ\", \"VIACA\", \"SDC\", \"BSBE\", \"OPCH\", \"PGNY\", \"PRDO\", \"VIAC\", \"DHC\", \"NLOK\", \"SVC\", \"IPHA\", \"TXG\", \"MCBS\", \"PPD\", \"DDOG\", \"HQI\", \"BDTX\", \"FREQ\", \"IMAB\", \"CRNC\", \"BSDE\", \"GRTX\", \"HBT\", \"BUG\", \"STSA\", \"TCOM\", \"REYN\", \"PGEN\", \"RILYP\", \"WKEY\", \"LATN\", \"RCEL\", \"PTON\", \"TELA\", \"VERO\", \"PNTG\", \"NTRSO\", \"SDGR\", \"ONEM\", \"LIZI\", \"XP\", \"CABA\", \"PWFL\", \"PFHD\", \"KRKR\", \"IGMS\", \"TARA\", \"OCGN\", \"CPZ\", \"ONEW\", \"XGN\", \"SWKH\", \"DRTT\", \"JAN\", \"BEAM\", \"OPRT\", \"FUTU\", \"BNTX\", \"SWTX\", \"DHCNL\", \"OYST\", \"VIR\", \"LDEM\", \"MDIA\", \"POTX\", \"GXTG\", \"HTIA\", \"SITM\", \"MOHO\", \"LMNL\", \"LMPX\", \"ASTSW\", \"NRBO\", \"QK\", \"GRNVR\", \"THMO\", \"GNRSU\", \"PALI\", \"BHFAL\", \"COWNL\", \"CHNGU\", \"MEDS\", \"DCOMP\", \"MFH\", \"GRIL\", \"FDUSZ\", \"OFSSZ\", \"INBKZ\", \"PTMN\", \"ZCMD\", \"SNUG\", \"IMRA\", \"IMRX\", \"BWMX\", \"ATCX\", \"RSSS\", \"CALB\", \"PASG\", \"BPYUP\", \"BPYU\", \"METX\", \"ZNTL\", \"RGP\", \"SONN\", \"AVCT\", \"KROS\", \"AVCTW\", \"DKNG\", \"ORIC\", \"NVVEW\", \"LYRA\", \"PMAY\", \"UMAY\", \"BMAY\", \"GAN\", \"NMTR\", \"AYLA\", \"OCFCP\", \"KC\", \"HUSN\", \"CRDF\", \"TEGS\", \"TAEQ\", \"OEG\", \"SJOYW\", \"SJ\", \"ESEB\", \"ESCR\", \"ESHY\", \"GNRSW\", \"MSVX\", \"WINT\", \"CCNC\", \"DMAY\", \"FMAY\", \"HSTO\", \"QLGN\", \"BHFAO\", \"NARI\", \"CFCV\", \"METXW\", \"WTFCP\", \"LRMR\", \"AYRO\", \"HYMCW\", \"SHYF\", \"HYMC\", \"SWBI\", \"NKLA\", \"WMG\", \"LEGN\", \"PNFPP\", \"DADA\", \"PLRX\", \"CALT\", \"AMTI\", \"ZI\", \"FBCG\", \"FBCV\", \"VRM\", \"FMBIP\", \"LPRO\", \"AUBAP\", \"LTRN\", \"UCBIO\", \"UCL\", \"GBIO\", \"PCVX\", \"AWH\", \"BNR\", \"RNA\", \"HWCPZ\", \"FBRX\", \"RPRX\", \"LGHLW\", \"LGHL\", \"RPTX\", \"GTH\", \"PFC\", \"FJUN\", \"DJUN\", \"BRLIU\", \"CEFA\", \"TBKCP\", \"OPINL\", \"AKUS\", \"PYPD\", \"API\", \"REE\", \"FUSN\", \"EBON\", \"FREE\", \"THY\", \"MRSK\", \"VIRS\", \"HTLFP\", \"MGNI\", \"ALTA\", \"SPQQ\", \"NJUL\", \"JULZ\", \"HOFV\", \"IMTX\", \"HOFVW\", \"ACCD\", \"IMTXW\", \"CVLG\", \"SNEX\", \"FMBIO\", \"BLCT\", \"AMYT\", \"OTRK\", \"CXDO\", \"PSTX\", \"NKTX\", \"NCNO\", \"GOCO\", \"QH\", \"ALXO\", \"BLI\", \"RNLX\", \"INZY\", \"ANNX\", \"ITOS\", \"JAMF\", \"EDTK\", \"SRGA\", \"DJUL\", \"IBBJ\", \"FCRD\", \"RMRM\", \"HSAQ\", \"AFIB\", \"MLAC\", \"FTHM\", \"ALVR\", \"BTBT\", \"KBNT\", \"RXT\", \"KDNY\", \"SVSVU\", \"VCVCU\", \"TLS\", \"MRVI\", \"SHC\", \"HAACU\", \"ARBGU\", \"AVIR\", \"LESL\", \"GLTO\", \"ALGM\", \"DSACU\", \"ROOT\", \"BDSX\", \"MCFE\", \"YGMZ\", \"PRAX\", \"EAR\", \"TARS\", \"ALGS\", \"OPT\", \"EBC\", \"MOTNU\", \"CDAK\", \"STTK\", \"SPRB\", \"KRON\", \"AZYO\", \"PAICU\", \"NGACU\", \"CCCC\", \"ONCR\", \"ASO\", \"ABCM\", \"FHTX\", \"BLSA\", \"LFTRU\", \"LXEH\", \"RCHGU\", \"AVO\", \"LUNG\", \"SRSAU\", \"SYTA\", \"AMST\", \"GLSI\", \"GDRX\", \"BSY\", \"CRSR\", \"CMPS\", \"ATHA\", \"VTRU\", \"NMMCU\", \"PTVE\", \"SUMO\", \"FROG\", \"MTCR\", \"STEP\", \"OM\", \"ITACU\", \"CD\", \"ORPH\", \"GRAY\", \"PMVP\", \"PRLD\", \"BCTG\", \"TSHA\", \"PRFX\", \"AUVI\", \"HCDI\", \"FRLN\", \"CMPI\", \"IBEX\", \"VSTA\", \"INM\", \"ADV\", \"BTAQ\", \"SWIM\", \"GCMG\", \"NGMS\", \"OLMA\", \"RIDE\", \"SVAC\", \"TRIT\", \"TTCF\", \"TWCT\", \"VACQ\", \"VIH\", \"VLDR\", \"VTRS\", \"KNTE\", \"SEER\", \"SGTX\", \"YQ\", \"FLACU\", \"ABNB\", \"NEBCU\", \"CERT\", \"GHVIU\", \"HYFM\", \"ABCL\", \"VVOS\", \"WISH\", \"UPST\", \"BCAB\", \"SCPS\", \"OCG\", \"WNW\", \"COOLU\", \"SCOAU\", \"VIRI\", \"MTACU\", \"ACKIU\", \"IKT\", \"GBS\", \"HCARU\", \"PHAR\", \"MRM\", \"OPEN\", \"OMEG\", \"GRCL\", \"CGEM\", \"QLI\", \"ENFAU\", \"MAXN\", \"MSGM\", \"GPACU\", \"AFRM\", \"ASLE\", \"POSH\", \"AEACU\", \"WOOF\", \"PLTK\", \"DRVN\", \"BEEM\", \"LI\", \"DFH\", \"PTIC\", \"FTCV\", \"ABST\", \"AEPPZ\", \"AOUT\", \"BOWX\", \"CCNEP\", \"LFMD\", \"DCBO\", \"GBNY\", \"GOVX\", \"HGBL\", \"HGEN\", \"HRMY\", \"IIVIP\", \"INBX\", \"INTZ\", \"KYMR\", \"LANDO\", \"LEVLP\", \"LIXT\", \"LNSR\", \"MDWT\", \"MNSBP\", \"NMFCL\", \"ONDS\", \"POWW\", \"RAACU\", \"RZLT\", \"SMID\", \"SHLS\", \"TOMZ\", \"VMAC\", \"VMAR\", \"EZGO\", \"GHVI\", \"SNRH\", \"ACKIT\", \"KINZ\", \"MRAC\", \"SANA\", \"LABP\", \"VLON\", \"SVOK\", \"RELI\", \"TVAC\", \"RLYB\", \"SDH\", \"BMBL\", \"XM\", \"APR\", \"RAAC\", \"TLIS\", \"DBTX\", \"TCACU\", \"NEXI\", \"LGVN\", \"CNTA\", \"APPH\", \"LAZR\", \"AEI\", \"ABGI\", \"FSII\", \"VRPX\", \"CFIV\", \"PPTA\", \"AUUD\", \"GBOX\", \"GOEV\", \"DUNE\", \"KEJI\", \"REIT\", \"KAIR\", \"AKIC\", \"ARYD\", \"TMKR\", \"PRSR\", \"KLAQ\", \"PAQC\", \"EPHY\", \"RNRG\", \"LJAQ\", \"IMCC\", \"EAC\", \"INKA\", \"PACX\", \"GSAQ\", \"INNV\", \"LEGO\", \"ENFA\", \"SWET\", \"DLCA\", \"HCCC\", \"AEAC\", \"HCIC\", \"ADER\", \"OCAX\", \"RXDX\", \"PYR\", \"LBPH\", \"MITC\", \"OSTR\", \"SCR\", \"CNXC\", \"MODV\", \"GBNH\", \"ASAX\", \"JCIC\", \"GMII\", \"GMBT\", \"VOSO\", \"SHAC\", \"DGNU\", \"PGRW\", \"GANX\", \"RACB\", \"LMAO\", \"PCT\", \"FNCH\", \"CNTB\", \"IHYF\", \"JOET\", \"WCBR\", \"LBPS\", \"QQQJ\", \"CTEC\", \"HYXF\", \"UPC\", \"BSCU\", \"EMXF\", \"BSJS\", \"EWEB\", \"BSMU\", \"CHB\", \"DEMZ\", \"ACVA\", \"OLK\", \"WMPN\", \"DSEY\", \"EEIQ\", \"MSDAU\", \"CRCT\", \"LVTX\", \"EWTX\", \"IKNA\", \"ALHC\", \"HYW\", \"DSGN\", \"TDUP\", \"KRNLW\", \"PUCK\", \"GHACW\", \"PUCKW\", \"IBRX\", \"ARVL\", \"VIACP\", \"COVA\", \"KURI\", \"ACHL\", \"ULCC\", \"GIGGW\", \"KARO\", \"EM\", \"MSAC\", \"XPDI\", \"FORE\", \"SCLE\", \"TCAC\", \"TCACW\", \"TSIB\", \"TSIBW\", \"INVZ\", \"MACA\", \"ACEV\", \"BTRS\", \"NGAC\", \"PLBY\", \"TIOAU\", \"BSKYU\", \"AQWA\", \"VENAR\", \"NVSAW\", \"NVSA\", \"PMGM\", \"KAII\", \"DAPP\", \"EBET\", \"APP\", \"KRT\", \"TSP\", \"GSEV\", \"BMEA\", \"AKYA\", \"GBRG\", \"COLI\", \"RXRX\", \"CLOV\", \"LGO\", \"BIGC\", \"EGLX\", \"AXON\", \"HERA\", \"COIN\", \"UROY\", \"PRVA\", \"FTCI\", \"VACC\", \"SCAQ\", \"MNMD\", \"FYBR\", \"HNST\", \"FSBC\", \"IPW\", \"SVFD\", \"DBGI\", \"LGBT\", \"VMEO\", \"JZXN\", \"QQQA\", \"OTLY\", \"CURI\", \"BRCN\", \"DYNS\", \"NMTC\", \"SOFI\", \"DLO\", \"ALZN\", \"WKME\", \"HUT\", \"ISPC\", \"LYEL\", \"ME\", \"GAME\", \"BITF\", \"SFT\", \"BBIG\", \"MIRO\", \"GRVI\", \"GLUE\", \"VLAT\", \"BON\", \"CFLT\", \"FA\", \"GHRS\", \"TKNO\", \"GRPH\", \"ELEV\", \"MF\", \"WGRO\", \"GMVD\", \"ASTR\", \"DALN\", \"GOBI\", \"PAYO\", \"LZ\", \"XMTR\", \"AVTE\", \"CRTD\", \"TBLA\", \"AGRI\", \"UNCY\", \"ARYE\", \"NXTP\", \"IINN\", \"PECO\", \"SGHT\", \"HCWB\", \"ALTO\", \"MKTW\", \"BASE\", \"KLTR\", \"PYCR\", \"GAMB\", \"CRBU\", \"OB\", \"SOPH\", \"CTKB\", \"MQ\", \"LCID\", \"DUOL\", \"SNPO\", \"HOOD\", \"BCTX\", \"MVST\", \"MNTV\", \"OCDX\", \"FDMT\", \"TLMD\", \"VOR\", \"BOLT\", \"ANGN\", \"VERV\", \"TERN\", \"DNUT\", \"TASK\", \"NUVL\", \"DAWN\", \"INTA\", \"LFST\", \"CYT\", \"TNYA\", \"CVRX\", \"OMGA\", \"LHDX\", \"PTRA\", \"TMC\", \"WFRD\", \"WAFDP\", \"VYNE\", \"VINP\", \"VIA\", \"VALN\", \"TRIN\", \"TCBIO\", \"TBLD\", \"TALK\", \"SVA\", \"STGW\", \"SMFR\", \"SIOX\", \"SIGIP\", \"SHCR\", \"SBNYP\", \"RNW\", \"QRTEP\", \"PWP\", \"PSM\", \"PHVS\", \"OMIC\", \"NAUT\", \"MOLN\", \"MNDY\", \"MAPS\", \"LVOX\", \"LTCH\", \"LBRDP\", \"IPSC\", \"IMCR\", \"IAS\", \"HYZN\", \"HMPT\", \"GULF\", \"GEG\", \"FULTP\", \"FLYW\", \"EVGO\", \"EVCM\", \"ERAS\", \"ENVX\", \"ELMS\", \"CMAX\", \"BZ\", \"BRAG\", \"ADGI\", \"BPYPM\", \"BHFAN\", \"ICVX\", \"PCYO\", \"TMCI\"]; //NYSE KEYS\n\n  const nyseMasterKey = [\"MXC\", \"GWH\", \"UUUU\", \"LXU\", \"KMI\", \"IONQ\", \"GE\", \"REI\", \"BAC\", \"HPQ\", \"CX\", \"F\", \"SNAP\", \"WFC\", \"AIG\", \"T\", \"C\", \"VALE\", \"MS\", \"JPM\", \"ORCL\", \"NKE\", \"PG\", \"BBD\", \"PFE\", \"NOK\", \"TWTR\", \"XOM\", \"VIPS\", \"AXP\", \"BMY\", \"V\", \"KEY\", \"RF\", \"KR\", \"HAL\", \"BABA\", \"MRO\", \"GM\", \"FCX\", \"CRM\", \"SQ\", \"NUE\", \"SWN\", \"LOW\", \"RAD\", \"SLB\", \"ABBV\", \"GIS\", \"VZ\", \"XRX\", \"X\", \"DVN\", \"IBN\", \"MPC\", \"PM\", \"MSCI\", \"RDN\", \"KO\", \"SRC\", \"COP\", \"CHK\", \"DIS\", \"LEN\", \"CVX\", \"AUY\", \"WMT\", \"CLF\", \"MRK\", \"MGM\", \"GFI\", \"KGC\", \"SCHW\", \"NBR\", \"JNJ\", \"BSX\", \"ITUB\", \"BK\", \"HMY\", \"APA\", \"HOME\", \"KOS\", \"DAL\", \"INFY\", \"CCL\", \"MFGP\", \"PBR\", \"LPI\", \"ABT\", \"USB\", \"BA\", \"GGB\", \"DB\", \"KNX\", \"KBH\", \"PGR\", \"MO\", \"MDT\", \"RIG\", \"BCS\", \"EOG\", \"HPE\", \"OKE\", \"CVS\", \"HES\", \"GDDY\", \"BX\", \"NLSN\", \"TS\", \"BOX\", \"OXY\", \"CVE\", \"SYF\", \"MTG\", \"LUV\", \"FTI\", \"AA\", \"ABEV\", \"EQR\", \"TAL\", \"UNH\", \"GES\", \"CNC\", \"CLDR\", \"RES\", \"CI\", \"WMB\", \"HBI\", \"XL\", \"D\", \"CHS\", \"CFG\", \"SU\", \"MMM\", \"JBL\", \"ACN\", \"NTR\", \"BRFS\", \"LVS\", \"EGO\", \"GSK\", \"TEVA\", \"PAA\", \"VLO\", \"IMAX\", \"FNB\", \"HD\", \"AR\", \"ARNC\", \"VOYA\", \"SM\", \"DHI\", \"HRB\", \"BTU\", \"JBGS\", \"IPG\", \"DE\", \"COG\", \"IBM\", \"NYT\", \"OLN\", \"JCI\", \"VICI\", \"VST\", \"EPD\", \"KMB\", \"AEP\", \"IT\", \"CAT\", \"AU\", \"KKR\", \"CMC\", \"NRG\", \"CPB\", \"ATHM\", \"WRB\", \"TGT\", \"TV\", \"GLW\", \"MAS\", \"DOV\", \"HRL\", \"TECK\", \"AES\", \"PPL\", \"SEE\", \"NLY\", \"FRC\", \"K\", \"M\", \"TSM\", \"STL\", \"NYCB\", \"TRQ\", \"BAH\", \"ARI\", \"MET\", \"AFL\", \"TPR\", \"WPM\", \"WLL\", \"PCG\", \"CLR\", \"HL\", \"UAA\", \"CAG\", \"SO\", \"GKOS\", \"CCI\", \"ZTO\", \"GS\", \"ADT\", \"EMR\", \"CNP\", \"COTY\", \"MA\", \"AWI\", \"BBVA\", \"AER\", \"GTN\", \"CDE\", \"NCR\", \"AMT\", \"PSTG\", \"SJM\", \"ETN\", \"DUK\", \"CL\", \"KAR\", \"NEE\", \"PXD\", \"ADM\", \"VTR\", \"VMW\", \"DKS\", \"WTI\", \"CE\", \"HUN\", \"CSTM\", \"VER\", \"GPK\", \"WELL\", \"TJX\", \"PLD\", \"KSS\", \"XEC\", \"DRI\", \"ATI\", \"IAG\", \"VFC\", \"BDN\", \"HON\", \"ICE\", \"WY\", \"BLL\", \"IVZ\", \"DG\", \"SID\", \"SLCA\", \"SGU\", \"PK\", \"TOL\", \"BCO\", \"BKD\", \"AIV\", \"TAP\", \"MON\", \"UNP\", \"BDX\", \"GME\", \"MX\", \"RLJ\", \"LB\", \"NCLH\", \"NOV\", \"LMT\", \"MTZ\", \"GPS\", \"SYY\", \"FTV\", \"BKI\", \"EIX\", \"CPE\", \"CF\", \"PNC\", \"WIT\", \"LYB\", \"MGA\", \"AEO\", \"BP\", \"VVV\", \"UPS\", \"MUR\", \"VMC\", \"NOMD\", \"ANTM\", \"GD\", \"KIM\", \"FNF\", \"BXMT\", \"CHD\", \"DLR\", \"IP\", \"CLI\", \"SE\", \"CC\", \"DAN\", \"ZBH\", \"LPX\", \"BBY\", \"GRUB\", \"BG\", \"LC\", \"PWR\", \"NEM\", \"BEN\", \"SHLX\", \"PBH\", \"SBH\", \"NI\", \"LLY\", \"STNG\", \"LADR\", \"FHN\", \"HLX\", \"RSG\", \"BIG\", \"CYH\", \"PAYC\", \"GCP\", \"YUM\", \"STZ\", \"LYG\", \"USFD\", \"THC\", \"DOC\", \"ALLY\", \"EVR\", \"CMS\", \"RIO\", \"PDM\", \"KMT\", \"HP\", \"FLR\", \"JHG\", \"FDX\", \"EMN\", \"WU\", \"BAX\", \"CARS\", \"TEL\", \"MLM\", \"GWW\", \"PBF\", \"BW\", \"CMI\", \"CNQ\", \"HCA\", \"QTS\", \"SAN\", \"CNHI\", \"CNX\", \"INFO\", \"ES\", \"ARMK\", \"OII\", \"NOW\", \"APTV\", \"QD\", \"NSC\", \"PSX\", \"GAB\", \"PNW\", \"AMH\", \"FOE\", \"A\", \"MOS\", \"LPL\", \"SKX\", \"HST\", \"UE\", \"PHM\", \"MT\", \"CAAP\", \"WRE\", \"RRC\", \"FL\", \"AGO\", \"DRE\", \"CCJ\", \"AXTA\", \"AEM\", \"BB\", \"CB\", \"PRU\", \"PVG\", \"AVYA\", \"SC\", \"ANF\", \"HIG\", \"ITW\", \"AZN\", \"YELP\", \"MTOR\", \"EVC\", \"IRM\", \"POST\", \"EL\", \"ING\", \"UBS\", \"KRG\", \"VSH\", \"TWLO\", \"RLGY\", \"HPP\", \"CNO\", \"JNPR\", \"FEDU\", \"AUD\", \"BANC\", \"INVH\", \"OMF\", \"LW\", \"NHI\", \"FE\", \"NOC\", \"ASH\", \"O\", \"FET\", \"TPH\", \"AMX\", \"FLO\", \"SHO\", \"COF\", \"FLT\", \"IGT\", \"RXN\", \"OSK\", \"DHR\", \"AMN\", \"RCL\", \"W\", \"IR\", \"PEG\", \"FBP\", \"WEC\", \"MDC\", \"TISI\", \"YUMC\", \"ALV\", \"BHP\", \"BXP\", \"BYD\", \"WGO\", \"KSU\", \"PUMP\", \"FBHS\", \"TXT\", \"AGI\", \"ED\", \"OUT\", \"DBD\", \"CBT\", \"STOR\", \"ABB\", \"CP\", \"PNR\", \"PKI\", \"ASB\", \"UHS\", \"ENB\", \"TDC\", \"AG\", \"NAT\", \"SPG\", \"TRP\", \"RH\", \"CBRE\", \"HGV\", \"AEG\", \"BTI\", \"NVS\", \"QSR\", \"CXP\", \"LDOS\", \"MPW\", \"CIM\", \"ETH\", \"AEE\", \"HCC\", \"MBT\", \"TMO\", \"OFC\", \"STT\", \"HLF\", \"WRK\", \"BR\", \"MCD\", \"PRO\", \"TWO\", \"AXL\", \"SUN\", \"ZEN\", \"ATEN\", \"CRC\", \"ATUS\", \"SIG\", \"BDC\", \"XPO\", \"APO\", \"CRI\", \"AGCO\", \"MMC\", \"GNW\", \"TMHC\", \"URI\", \"MCO\", \"SLG\", \"PAGS\", \"L\", \"MBI\", \"VNO\", \"PDS\", \"BCC\", \"PRTY\", \"OGE\", \"QGEN\", \"EAT\", \"DXC\", \"UDR\", \"KBR\", \"STM\", \"AQUA\", \"EQT\", \"SRE\", \"SAVE\", \"HTA\", \"NPTN\", \"SQM\", \"SXT\", \"OMC\", \"CVA\", \"LXP\", \"FMC\", \"KN\", \"KW\", \"SCS\", \"CXW\", \"DFS\", \"PH\", \"USA\", \"CIEN\", \"OIS\", \"SCCO\", \"YEXT\", \"REVG\", \"DVAX\", \"ALLE\", \"MHK\", \"GRA\", \"VNTR\", \"SUM\", \"ERJ\", \"UNM\", \"NJR\", \"NNN\", \"PAGP\", \"AOS\", \"DGX\", \"CUZ\", \"FIS\", \"TRN\", \"SPGI\", \"AN\", \"ABR\", \"MCK\", \"MUX\", \"IEX\", \"INN\", \"TROX\", \"OEC\", \"ATH\", \"ABC\", \"EFX\", \"DPZ\", \"ENLC\", \"TTM\", \"OHI\", \"SUI\", \"MPLX\", \"EC\", \"SIX\", \"VEEV\", \"NVO\", \"SWK\", \"SNDR\", \"EW\", \"SKT\", \"ROK\", \"ALL\", \"APRN\", \"MFC\", \"ZTS\", \"BUD\", \"UA\", \"AROC\", \"THO\", \"KT\", \"TGNA\", \"CHGG\", \"WM\", \"ASX\", \"ALB\", \"RHI\", \"HLT\", \"DNOW\", \"WPG\", \"DRH\", \"OC\", \"CUBE\", \"AGRO\", \"AL\", \"EVH\", \"UIS\", \"JELD\", \"TDG\", \"RY\", \"SYK\", \"HR\", \"TRV\", \"CSL\", \"GWRE\", \"ANET\", \"WSM\", \"EXP\", \"BWA\", \"SWCH\", \"APLE\", \"ADS\", \"DRQ\", \"AXS\", \"MTDR\", \"CAJ\", \"AVDL\", \"CNI\", \"CAL\", \"SAP\", \"ESNT\", \"NMFC\", \"OI\", \"MDU\", \"PSXP\", \"CWH\", \"DECK\", \"SMFG\", \"LAZ\", \"NEXA\", \"PLNT\", \"CAH\", \"AYI\", \"DVA\", \"WCN\", \"MYOV\", \"ABM\", \"NGL\", \"ARCO\", \"LNC\", \"NGG\", \"GTES\", \"CMA\", \"ALK\", \"HUM\", \"TEX\", \"JWN\", \"HFC\", \"PQG\", \"EDU\", \"ESRT\", \"LBRT\", \"PEB\", \"TSN\", \"HSBC\", \"OMI\", \"MMP\", \"HDB\", \"TSE\", \"WAL\", \"SBS\", \"ARE\", \"TRGP\", \"LYV\", \"MFA\", \"ECL\", \"ELY\", \"ARES\", \"DDD\", \"MKC\", \"BSBR\", \"RMD\", \"BKU\", \"H\", \"EXPR\", \"AVB\", \"CVEO\", \"TDOC\", \"TRU\", \"SOGO\", \"XYL\", \"SFUN\", \"DY\", \"MGP\", \"SONY\", \"MAA\", \"AEL\", \"WES\", \"QUAD\", \"RYN\", \"VSTO\", \"BHVN\", \"PPG\", \"ORI\", \"TPC\", \"XHR\", \"MC\", \"DDS\", \"TMST\", \"FR\", \"CIG\", \"CUK\", \"MSI\", \"FNV\", \"KMX\", \"LFC\", \"BRX\", \"LH\", \"NBHC\", \"FND\", \"MOH\", \"FUL\", \"MRC\", \"EXR\", \"CPG\", \"WHR\", \"HSY\", \"SEAS\", \"PGRE\", \"COO\", \"JT\", \"WRI\", \"CPT\", \"SHOP\", \"MWA\", \"GWB\", \"BOOT\", \"ALEX\", \"TKR\", \"RL\", \"TD\", \"BRO\", \"ALSN\", \"FAF\", \"G\", \"CFX\", \"PANW\", \"GPC\", \"ELP\", \"KMPR\", \"BGS\", \"CRS\", \"AMC\", \"BVN\", \"EXK\", \"BLK\", \"POR\", \"BBL\", \"GCI\", \"DYN\", \"HOG\", \"STWD\", \"UNVR\", \"TUP\", \"FSM\", \"XIN\", \"ADNT\", \"HAE\", \"DLX\", \"GEO\", \"AAP\", \"AON\", \"SKM\", \"MAN\", \"TNET\", \"LZB\", \"FTSI\", \"BXS\", \"TRI\", \"JQC\", \"GMS\", \"PBI\", \"RJF\", \"TTC\", \"BAM\", \"SHW\", \"AMP\", \"SNR\", \"WSO\", \"ATO\", \"STAG\", \"WAB\", \"PFGC\", \"MUSA\", \"DK\", \"CM\", \"SWX\", \"MTW\", \"IRS\", \"MIC\", \"CNK\", \"OCN\", \"ENS\", \"TFX\", \"EQC\", \"DEI\", \"UFS\", \"MTN\", \"SPR\", \"LEE\", \"NRZ\", \"HBM\", \"EVRI\", \"LCI\", \"PII\", \"CTT\", \"AHH\", \"SF\", \"DCP\", \"VEDL\", \"WBS\", \"WST\", \"SCI\", \"BERY\", \"ENIA\", \"SPNT\", \"CCK\", \"WNC\", \"ETR\", \"FLS\", \"WBT\", \"CRH\", \"GHL\", \"IPI\", \"HIW\", \"CPS\", \"APH\", \"REXR\", \"TK\", \"RS\", \"HEI\", \"CFR\", \"YPF\", \"CMG\", \"RPM\", \"BNS\", \"BWXT\", \"WOW\", \"PRMW\", \"WOR\", \"HUBS\", \"QUOT\", \"COLD\", \"NS\", \"FMX\", \"PKG\", \"CLX\", \"VGR\", \"HII\", \"PRGO\", \"MSA\", \"SQNS\", \"ACM\", \"HLI\", \"CMP\", \"SPB\", \"IFF\", \"RYI\", \"MAC\", \"IQV\", \"WNS\", \"VIV\", \"FCF\", \"SNP\", \"RPAI\", \"IVR\", \"TTI\", \"THS\", \"RRD\", \"TBI\", \"BHE\", \"BCE\", \"ENIC\", \"SPXC\", \"ARCH\", \"AM\", \"TGI\", \"AWK\", \"R\", \"EXG\", \"BKH\", \"AVD\", \"CMCM\", \"GPN\", \"HE\", \"SJI\", \"UGI\", \"CBD\", \"SMG\", \"WAT\", \"FLOW\", \"CWT\", \"MTB\", \"CRL\", \"FDS\", \"JLL\", \"HSC\", \"SAIL\", \"PNM\", \"MXL\", \"AVY\", \"WMS\", \"DHT\", \"AVA\", \"WLK\", \"PSA\", \"NTB\", \"STE\", \"DCI\", \"FTAI\", \"AIZ\", \"BURL\", \"LEG\", \"COR\", \"AAN\", \"SOI\", \"PRA\", \"GPMT\", \"INT\", \"LPG\", \"BAP\", \"BC\", \"SNN\", \"CUBI\", \"CADE\", \"AJRD\", \"APAM\", \"PEI\", \"ST\", \"AKR\", \"CHKR\", \"MLI\", \"ROG\", \"UMC\", \"KEYS\", \"HRC\", \"FRT\", \"ASC\", \"STC\", \"IRT\", \"LII\", \"OSG\", \"GOOS\", \"BMO\", \"EPAM\", \"PVH\", \"MTD\", \"EGHT\", \"ESS\", \"INGR\", \"HT\", \"WPC\", \"AWR\", \"WLKP\", \"BFAM\", \"TEN\", \"SUP\", \"LL\", \"LEA\", \"APD\", \"SXC\", \"ATTO\", \"DAR\", \"AJG\", \"RGA\", \"KB\", \"SNV\", \"MOD\", \"NSH\", \"SNA\", \"CLDT\", \"DEO\", \"UNFI\", \"SAH\", \"NVTA\", \"HZO\", \"TNK\", \"HMC\", \"GPI\", \"CPA\", \"HOV\", \"CTLT\", \"ROBO\", \"NMM\", \"SAIC\", \"TPX\", \"VVR\", \"UL\", \"HVT\", \"GOLD\", \"RLI\", \"KEX\", \"OR\", \"B\", \"DIN\", \"NM\", \"GVA\", \"EVTC\", \"DESP\", \"TGP\", \"NFJ\", \"ENZ\", \"KRA\", \"KDMN\", \"CNS\", \"LXU\", \"SON\", \"GDOT\", \"ROP\", \"NLS\", \"SITE\", \"RBA\", \"EFR\", \"TEF\", \"CSLT\", \"KEP\", \"CEIX\", \"GIL\", \"KYN\", \"NVGS\", \"MCY\", \"AZUL\", \"TCS\", \"GATX\", \"EPC\", \"SRG\", \"MSM\", \"GEF\", \"LOMA\", \"HCHC\", \"GGG\", \"TDS\", \"MTH\", \"GNL\", \"BXC\", \"NPO\", \"RCI\", \"BSMX\", \"BAK\", \"SEM\", \"CCU\", \"GEL\", \"HEP\", \"GNRC\", \"WD\", \"DNB\", \"RSKD\", \"IVC\", \"ITT\", \"CHH\", \"BDJ\", \"PGTI\", \"MDP\", \"WWE\", \"RNG\", \"EHC\", \"DTE\", \"DEA\", \"ERF\", \"ETV\", \"NFG\", \"CNNE\", \"WCC\", \"BRC\", \"AAT\", \"ENR\", \"NSA\", \"RFP\", \"USAC\", \"WSR\", \"RWT\", \"SFL\", \"AME\", \"DCT\", \"SR\", \"HRTG\", \"AYX\", \"BEDU\", \"CIB\", \"BLD\", \"NETI\", \"BHLB\", \"RE\", \"FBC\", \"CLS\", \"PHK\", \"GBX\", \"VRS\", \"HUBB\", \"PBA\", \"UAN\", \"GMED\", \"PB\", \"VVI\", \"TU\", \"LCII\", \"ADX\", \"CSU\", \"APTS\", \"JILL\", \"WWW\", \"RPT\", \"AFG\", \"CYD\", \"FPH\", \"MNR\", \"FN\", \"CPK\", \"ORC\", \"SLF\", \"KL\", \"WK\", \"FUN\", \"CACI\", \"SUPV\", \"BOH\", \"CEPU\", \"ENV\", \"AIN\", \"CAE\", \"NUV\", \"HXL\", \"SWM\", \"EME\", \"OFG\", \"GLT\", \"PHG\", \"CMO\", \"BXMX\", \"AZO\", \"JKS\", \"TM\", \"UVV\", \"LAD\", \"TWI\", \"RYAM\", \"DCO\", \"HYT\", \"FCPT\", \"ENBL\", \"MFG\", \"CBB\", \"NVRO\", \"MMS\", \"HTGC\", \"NR\", \"RVT\", \"FMS\", \"EMD\", \"RDY\", \"TLK\", \"HTH\", \"PKX\", \"PAG\", \"SSTK\", \"BMA\", \"FDP\", \"BGY\", \"AB\", \"NUS\", \"MD\", \"FTK\", \"PAM\", \"JBT\", \"PJT\", \"BKE\", \"RHP\", \"ADC\", \"ENVA\", \"CMRE\", \"ARW\", \"NEA\", \"AMG\", \"NMR\", \"LSI\", \"EPR\", \"IGD\", \"GUT\", \"AIT\", \"MODN\", \"SNX\", \"TX\", \"BSAC\", \"PTR\", \"SSL\", \"HMN\", \"BMI\", \"CHCT\", \"HHC\", \"PMT\", \"SHAK\", \"GOLF\", \"WTTR\", \"DOOR\", \"EGP\", \"PSO\", \"AOD\", \"EEX\", \"VCV\", \"BIO\", \"E\", \"KRC\", \"ACCO\", \"TRNO\", \"ASGN\", \"CVNA\", \"GER\", \"ATKR\", \"SJR\", \"SA\", \"NGVT\", \"BY\", \"VMI\", \"FCN\", \"WEX\", \"CURO\", \"KODK\", \"MTRN\", \"FI\", \"SPH\", \"NEWR\", \"VCRA\", \"BZH\", \"PRI\", \"STAR\", \"LTC\", \"ELS\", \"TGS\", \"CDR\", \"BIF\", \"ASIX\", \"TEO\", \"ZEPP\", \"SRT\", \"CBZ\", \"RQI\", \"OGS\", \"RBC\", \"CIO\", \"NWE\", \"POLY\", \"GOL\", \"ELF\", \"VAC\", \"VEC\", \"WBK\", \"IIF\", \"AIR\", \"EBR\", \"HASI\", \"CVI\", \"AWF\", \"FBK\", \"ACC\", \"RELX\", \"JE\", \"RGS\", \"ITGR\", \"KRO\", \"SB\", \"CCO\", \"EBS\", \"EURN\", \"QTWO\", \"NOA\", \"CALX\", \"AHT\", \"TGH\", \"EVA\", \"ATR\", \"ABG\", \"DS\", \"ARR\", \"ATGE\", \"WHD\", \"JPS\", \"CATO\", \"MTX\", \"BOE\", \"FENG\", \"TREX\", \"FTS\", \"CCS\", \"CLB\", \"CIT\", \"UTI\", \"BGB\", \"IBP\", \"RNGR\", \"RACE\", \"ROL\", \"KOP\", \"HI\", \"BTCM\", \"ETY\", \"GLP\", \"RYB\", \"MAIN\", \"DQ\", \"TYL\", \"AVAL\", \"FPL\", \"MOV\", \"GTS\", \"JRO\", \"ARC\", \"KFY\", \"GIB\", \"BCEI\", \"DFIN\", \"NNI\", \"EVF\", \"NTG\", \"RMAX\", \"HRI\", \"LDL\", \"PRLB\", \"BIT\", \"MMI\", \"CR\", \"CEQP\", \"LNN\", \"GDV\", \"PEN\", \"AGR\", \"TKC\", \"VMO\", \"CRK\", \"NWN\", \"TSQ\", \"CODI\", \"IGR\", \"SAM\", \"DSX\", \"IIPR\", \"CNMD\", \"HEQ\", \"BPMP\", \"CEN\", \"UNF\", \"EMO\", \"NEP\", \"CNA\", \"CRY\", \"SSD\", \"AMBC\", \"TSLX\", \"TNC\", \"UGP\", \"CO\", \"TDY\", \"SFE\", \"TRTX\", \"SRI\", \"MEI\", \"USPH\", \"JOE\", \"TARO\", \"HIX\", \"TRTN\", \"PARR\", \"ASA\", \"NNA\", \"REX\", \"EXTN\", \"AWP\", \"FPI\", \"GLOB\", \"BNED\", \"CPF\", \"DSL\", \"PBFX\", \"RCUS\", \"AMRC\", \"SD\", \"THG\", \"NOAH\", \"IDA\", \"MED\", \"ETJ\", \"NSL\", \"WMK\", \"IDT\", \"TNP\", \"NGS\", \"AGS\", \"GPRK\", \"FOR\", \"PPT\", \"VLRS\", \"CIR\", \"THR\", \"RNR\", \"CHE\", \"DHX\", \"MUC\", \"NSP\", \"BBN\", \"NZF\", \"CBU\", \"NX\", \"EARN\", \"PFSI\", \"AQN\", \"EDD\", \"FEI\", \"GPX\", \"MCA\", \"VOC\", \"SRV\", \"ETO\", \"ASR\", \"PSB\", \"MN\", \"AFI\", \"ICD\", \"CW\", \"ALE\", \"Y\", \"HZN\", \"KOF\", \"PHI\", \"CTR\", \"MFL\", \"ORA\", \"ESTE\", \"VKQ\", \"WMC\", \"LEJU\", \"NCZ\", \"UTF\", \"GHY\", \"PAC\", \"AZZ\", \"SJT\", \"DX\", \"IO\", \"BLX\", \"EFC\", \"ACP\", \"ICL\", \"MIE\", \"NHF\", \"PHD\", \"SMHI\", \"HNI\", \"NEU\", \"FSS\", \"HCI\", \"NXRT\", \"ISD\", \"NVG\", \"PHT\", \"PIM\", \"TYG\", \"FRO\", \"HY\", \"CLH\", \"USNA\", \"WPP\", \"IFN\", \"TREC\", \"MATX\", \"PKE\", \"JRS\", \"MAXR\", \"OXM\", \"JDD\", \"SMLP\", \"GTY\", \"WTS\", \"BFZ\", \"ECOM\", \"CEO\", \"BBW\", \"NRK\", \"AVK\", \"HIO\", \"NMZ\", \"PTY\", \"TR\", \"CABO\", \"AAC\", \"BCX\", \"GIM\", \"GPM\", \"AGM\", \"UMH\", \"FIX\", \"HQH\", \"CAF\", \"CAI\", \"GLOP\", \"MG\", \"OIA\", \"PCK\", \"TEI\", \"VHI\", \"PUK\", \"JAX\", \"DLB\", \"TPB\", \"CII\", \"THQ\", \"MCR\", \"BTO\", \"BIP\", \"WIW\", \"MCS\", \"CIA\", \"CLW\", \"CEM\", \"GMRE\", \"IHD\", \"ORN\", \"MKL\", \"EOI\", \"FICO\", \"GRC\", \"OLP\", \"PZN\", \"SJW\", \"GFF\", \"LEO\", \"FLY\", \"AGX\", \"SMP\", \"GNK\", \"HQL\", \"IGI\", \"PFN\", \"EIG\", \"BST\", \"STK\", \"DNP\", \"INSW\", \"NCV\", \"PCN\", \"CHT\", \"ETW\", \"KAMN\", \"USM\", \"TDW\", \"HIL\", \"NAD\", \"OOMA\", \"UVE\", \"BTZ\", \"CXE\", \"DPG\", \"FFC\", \"FPF\", \"MIXT\", \"MTL\", \"NL\", \"PCI\", \"VTA\", \"SHG\", \"MQT\", \"CORR\", \"REV\", \"EGY\", \"GHM\", \"GCO\", \"RGR\", \"MITT\", \"SMM\", \"JPC\", \"NVR\", \"ESE\", \"ACRE\", \"HFRO\", \"DCF\", \"HMLP\", \"NIM\", \"NRP\", \"PBT\", \"FGB\", \"PFS\", \"MPA\", \"YRD\", \"JRI\", \"LRN\", \"GNT\", \"ARDC\", \"ECC\", \"EFT\", \"EHI\", \"EOD\", \"ETG\", \"FSD\", \"JGH\", \"KNOP\", \"MYJ\", \"RENN\", \"VRTV\", \"TSI\", \"IHG\", \"KIO\", \"SOR\", \"KMF\", \"MYE\", \"PMF\", \"FC\", \"NC\", \"BFK\", \"CEA\", \"HBB\", \"IGA\", \"IIM\", \"NAN\", \"NDP\", \"RM\", \"UTL\", \"SCL\", \"EOS\", \"SPXX\", \"NTP\", \"DBL\", \"MUI\", \"NIE\", \"ASG\", \"STN\", \"GHC\", \"BRT\", \"CSV\", \"DSM\", \"EBF\", \"EVT\", \"FMO\", \"FOF\", \"HNP\", \"IDE\", \"MMT\", \"MMU\", \"RCS\", \"SZC\", \"VGM\", \"DSU\", \"IQI\", \"NP\", \"WTM\", \"SBOW\", \"CHMI\", \"AFB\", \"GOF\", \"JFR\", \"BSM\", \"IRL\", \"JTA\", \"KF\", \"KTF\", \"MPX\", \"NAC\", \"ORAN\", \"PDT\", \"PML\", \"RMT\", \"WHG\", \"PGZ\", \"CTBB\", \"TG\", \"UHT\", \"LITB\", \"ZTR\", \"KAI\", \"UBA\", \"MHO\", \"SCM\", \"BGH\", \"BGR\", \"BGX\", \"BUI\", \"CEE\", \"ETB\", \"FIV\", \"HYI\", \"IVH\", \"KREF\", \"MAV\", \"MCN\", \"MYN\", \"NEV\", \"NPK\", \"PFO\", \"PMX\", \"SOJC\", \"STON\", \"TLYS\", \"GSL\", \"TRC\", \"MUJ\", \"PLOW\", \"RNP\", \"DMO\", \"JTD\", \"VPG\", \"BGT\", \"MGU\", \"CAPL\", \"DKL\", \"ACH\", \"ALG\", \"BLW\", \"BSL\", \"BTT\", \"DTW\", \"DUKH\", \"GRX\", \"IAE\", \"JCE\", \"JCO\", \"MFM\", \"MQY\", \"MYI\", \"PMM\", \"SAFE\", \"VET\", \"WF\", \"JHI\", \"JP\", \"PFL\", \"BCH\", \"IX\", \"NINE\", \"GF\", \"FF\", \"PCF\", \"PDI\", \"AC\", \"PEO\", \"OPY\", \"KWR\", \"CMSA\", \"ARD\", \"AZRE\", \"BHK\", \"BPT\", \"CBH\", \"CELP\", \"COE\", \"DFP\", \"DIAX\", \"EDI\", \"EFL\", \"FAM\", \"FDEU\", \"FIF\", \"JLS\", \"KSM\", \"LDP\", \"LGI\", \"MLR\", \"MNP\", \"MXF\", \"NIQ\", \"NXQ\", \"OPP\", \"PAR\", \"PFFD\", \"PNI\", \"PYN\", \"SBI\", \"SOJB\", \"TVC\", \"VTN\", \"WIA\", \"CIF\", \"BBU\", \"MSB\", \"BH\", \"NCA\", \"GPJA\", \"ALX\", \"EDN\", \"MVO\", \"CLPR\", \"GBL\", \"AFT\", \"AP\", \"ASPN\", \"BKT\", \"BNY\", \"BYM\", \"CPAC\", \"CTS\", \"CULP\", \"DHF\", \"DTY\", \"EGF\", \"EMP\", \"ENJ\", \"FCT\", \"FLC\", \"FRA\", \"FT\", \"GDL\", \"GGM\", \"GGT\", \"GNE\", \"GSBD\", \"HESM\", \"HTD\", \"JPT\", \"KEN\", \"LAC\", \"MCB\", \"MHI\", \"MSP\", \"MTR\", \"MUA\", \"MYD\", \"NID\", \"NXJ\", \"NXN\", \"PHX\", \"RZB\", \"SPLP\", \"SRLP\", \"TBB\", \"TDA\", \"TDF\", \"THW\", \"TPL\", \"TTP\", \"UFI\", \"UZA\", \"VGI\", \"VJET\", \"VPV\", \"ZNH\", \"BGIO\", \"HGH\", \"RA\", \"SHI\", \"DTJ\", \"RZA\", \"MIN\", \"CXH\", \"TPVG\", \"EVTL\", \"BFS\", \"PYT\", \"TAC\", \"TCI\", \"ACV\", \"AEB\", \"AGD\", \"AIF\", \"AIW\", \"AJX\", \"AJXA\", \"AMOV\", \"ARL\", \"AXR\", \"BBDO\", \"BEP\", \"BKN\", \"BME\", \"BTA\", \"BWG\", \"CCM\", \"CCZ\", \"CGA\", \"CHN\", \"CINR\", \"CMU\", \"CRT\", \"CTDD\", \"DAC\", \"DDF\", \"SST\", \"DDT\", \"DEX\", \"DIVO\", \"DLNG\", \"DMB\", \"DRD\", \"DRUA\", \"DTEC\", \"DTF\", \"DVD\", \"EAI\", \"ECCB\", \"ECCY\", \"EDF\", \"EEA\", \"ELC\", \"ELVT\", \"EMF\", \"ENO\", \"EOT\", \"EQS\", \"ETX\", \"EVG\", \"EVN\", \"EXD\", \"FEO\", \"FFA\", \"FMN\", \"FMY\", \"GAM\", \"GBAB\", \"GCV\", \"GDO\", \"GGZ\", \"GIG\", \"GJH\", \"GJO\", \"GJP\", \"GJR\", \"GJS\", \"GJT\", \"GMTA\", \"HIE\", \"HPF\", \"HPI\", \"HPS\", \"HTFA\", \"HTY\", \"HYB\", \"IBA\", \"IHC\", \"IHIT\", \"IHTA\", \"INDF\", \"INSI\", \"ITCB\", \"JBK\", \"JEMD\", \"JEQ\", \"JHB\", \"JHS\", \"JHX\", \"JMM\", \"JMP\", \"JOF\", \"JPI\", \"JSD\", \"KFS\", \"KRP\", \"KTH\", \"KTN\", \"LND\", \"LUB\", \"LXFR\", \"MANU\", \"MCI\", \"MDLQ\", \"MDLX\", \"MFD\", \"MFV\", \"MGF\", \"MHD\", \"MHF\", \"MHLA\", \"MHN\", \"MHNC\", \"MIY\", \"MLP\", \"MMD\", \"MPV\", \"MSD\", \"MUE\", \"MVT\", \"MXE\", \"MYC\", \"NAZ\", \"NBB\", \"HLGN\", \"NGVC\", \"NKG\", \"NKX\", \"NMI\", \"NMS\", \"NMT\", \"NNY\", \"NOM\", \"NPV\", \"NQP\", \"NRT\", \"NSS\", \"NTZ\", \"NUO\", \"NUW\", \"NWHM\", \"NXC\", \"NXP\", \"NXR\", \"ODC\", \"PAI\", \"PCM\", \"PCQ\", \"PFD\", \"PFH\", \"PGP\", \"PKO\", \"PMO\", \"PNF\", \"PSF\", \"PYS\", \"PZC\", \"RFI\", \"RGT\", \"RIV\", \"SAR\", \"SBR\", \"SCD\", \"SCX\", \"SFB\", \"SOL\", \"SPE\", \"SWZ\", \"SXI\", \"TDI\", \"TPVY\", \"TPZ\", \"TVE\", \"TWN\", \"TY\", \"UBP\", \"TDCX\", \"USDP\", \"VBF\", \"VLT\", \"VNCE\", \"WALA\", \"WEA\", \"XFLT\", \"ZYME\", \"ALC\", \"AMCR\", \"AMRX\", \"HKIB\", \"PLAN\", \"FINS\", \"ACA\", \"ARGO\", \"ARLO\", \"AMK\", \"ACB\", \"AVLR\", \"AVNS\", \"AVTR\", \"EQH\", \"AX\", \"BRPM\", \"BCSF\", \"BBDC\", \"BHC\", \"BBAR\", \"BEST\", \"BJ\", \"BSTZ\", \"BE\", \"BORR\", \"BHR\", \"MNRL\", \"BSIG\", \"BV\", \"CANG\", \"CGC\", \"CPRI\", \"CDAY\", \"CHRA\", \"CHWY\", \"CWEN\", \"CNF\", \"CCEP\", \"CFXA\", \"CTK\", \"CPLG\", \"CNR\", \"CTVA\", \"CWK\", \"DELL\", \"DBI\", \"DCUE\", \"DOW\", \"DD\", \"DT\", \"ELAN\", \"ESTC\", \"ESI\", \"DAVA\", \"ET\", \"EQNR\", \"ETRN\", \"EPRT\", \"EB\", \"EVRG\", \"ACR\", \"FPAC\", \"FTCH\", \"FSLY\", \"FVRR\", \"FLNG\", \"FSK\", \"GL\", \"EAF\", \"GHG\", \"GSAH\", \"GOTU\", \"HNGR\", \"HEXO\", \"HGLB\", \"HUYA\", \"IAA\", \"INSP\", \"IFS\", \"JEF\", \"JMIA\", \"KDP\", \"KTB\", \"LHX\", \"LAIX\", \"LHC\", \"LEVI\", \"LIN\", \"LTHM\", \"RAMP\", \"MGY\", \"MEC\", \"MDLA\", \"AMPY\", \"MUFG\", \"MOGU\", \"CTOS\", \"NIO\", \"JHAA\", \"NVT\", \"ONE\", \"ORCC\", \"PD\", \"PSN\", \"PVL\", \"PRT\", \"PHR\", \"NRGX\", \"PINS\", \"PSTL\", \"PROS\", \"NEW\", \"RMED\", \"PACK\", \"RC\", \"REZI\", \"RVI\", \"RVLV\", \"RMM\", \"RSF\", \"RMI\", \"SCPE\", \"SRL\", \"SITC\", \"WORK\", \"SMAR\", \"SWI\", \"SPAQ\", \"SPOT\", \"MSC\", \"STG\", \"JOBY\", \"NOVA\", \"SUZ\", \"TAK\", \"TALO\", \"TME\", \"TEAF\", \"TUFN\", \"USX\", \"UBER\", \"UI\", \"VAPO\", \"VNE\", \"VCIF\", \"VIST\", \"WEI\", \"WH\", \"XYF\", \"YETI\", \"ZUO\", \"AEF\", \"VRT\", \"TFII\", \"ACEL\", \"AIO\", \"BILL\", \"RFL\", \"BKR\", \"BRBR\", \"BMEZ\", \"J\", \"EIC\", \"FINV\", \"BRMK\", \"EPAC\", \"CSPR\", \"DAO\", \"FHI\", \"SCU\", \"NTCO\", \"ONTO\", \"PEAK\", \"NREF\", \"PINE\", \"PING\", \"NET\", \"NEX\", \"OCFT\", \"PIPR\", \"NVST\", \"NMCO\", \"SI\", \"OVV\", \"SPCE\", \"CHPT\", \"TFC\", \"VVNT\", \"VEL\", \"WTRG\", \"HCXZ\", \"HCXY\", \"NTEST\", \"ENBA\", \"NRUC\", \"IFFT\", \"PRS\", \"SREA\", \"SAF\", \"AFGC\", \"AEFC\", \"AQNB\", \"AQNA\", \"CMSD\", \"CMSC\", \"UNMA\", \"UZB\", \"ARGD\", \"CUBB\", \"DUKB\", \"ECCX\", \"WTRU\", \"MGR\", \"BSA\", \"TBC\", \"AFGE\", \"AFGB\", \"RCB\", \"RCA\", \"PBC\", \"PBY\", \"SOLN\", \"QVCD\", \"AIC\", \"DTP\", \"ELAT\", \"GSLD\", \"SOJD\", \"QVCC\", \"NFH\", \"SJIJ\", \"SWT\", \"DLY\", \"ATCO\", \"SBSW\", \"RESP\", \"TT\", \"GFLU\", \"GFL\", \"ALTG\", \"SCVX\", \"RFM\", \"CBO\", \"BIPC\", \"HWM\", \"CARR\", \"RTX\", \"OTIS\", \"CCAC\", \"ZGYH\", \"IVES\", \"BKMC\", \"BKSE\", \"KOKU\", \"BKLC\", \"BBMC\", \"MSGE\", \"MSGS\", \"BKSB\", \"BKAG\", \"BKEM\", \"APG\", \"DEED\", \"NVVE\", \"GLCN\", \"GLIN\", \"DFPHW\", \"DFPH\", \"GAU\", \"ARB\", \"TAAG\", \"TADS\", \"JEPI\", \"JIG\", \"ADCT\", \"SLQT\", \"TMBR\", \"MTCN\", \"SGOV\", \"SSLY\", \"BDXB\", \"AFGD\", \"CEFD\", \"CHX\", \"MLPR\", \"FOUR\", \"MVRL\", \"SBBA\", \"EMBD\", \"HIPR\", \"DYHG\", \"NIFE\", \"AZEK\", \"VTOL\", \"DEEP\", \"PAMC\", \"WFH\", \"IBDV\", \"PALC\", \"EUSB\", \"PFFV\", \"ACI\", \"SOAC\", \"ALTL\", \"DYFN\", \"FTHY\", \"SII\", \"AZAL\", \"SAK\", \"LMND\", \"ZEV\", \"PCGU\", \"LOCL\", \"AVNT\", \"DMS\", \"IBTK\", \"SOS\", \"GBGR\", \"MEG\", \"GBLO\", \"NWG\", \"FUSE\", \"BEKE\", \"FCRW\", \"NTST\", \"OSH\", \"BEPC\", \"ASGI\", \"RKT\", \"TREB\", \"PLTR\", \"U\", \"YSG\", \"LU\", \"SQZ\", \"MAX\", \"GATO\", \"MNSO\", \"IH\", \"FUBO\", \"GHLD\", \"ASAN\", \"AMWL\", \"BNL\", \"SNOW\", \"BQ\", \"YALA\", \"VIAO\", \"XPEV\", \"ASAQ\", \"BSN\", \"CPSR\", \"CRHC\", \"DGNR\", \"ENPC\", \"EOSE\", \"EQD\", \"FGNA\", \"FSR\", \"FST\", \"GOAC\", \"HYLN\", \"HZAC\", \"LEAP\", \"MP\", \"OACB\", \"NUVB\", \"PDAC\", \"PIAI\", \"PMVC\", \"PSTH\", \"RBAC\", \"RTP\", \"STEM\", \"TWND\", \"YAC\", \"LUMN\", \"VNT\", \"QS\", \"DASH\", \"IPOF\", \"PRG\", \"ACIC\", \"AIRC\", \"AJAX\", \"AVAN\", \"BOAC\", \"FMAC\", \"HIGA\", \"HZON\", \"IMPX\", \"IPOD\", \"PACE\", \"RICE\", \"SDHY\", \"SG\", \"SEAH\", \"SKLZ\", \"SPNV\", \"BARK\", \"TPGY\", \"VYGG\", \"XPOA\", \"AGCB\", \"AGC\", \"AI\", \"CDRE\", \"MYTE\", \"APSG\", \"CIXX\", \"HPX\", \"LSPD\", \"NYC\", \"TIMB\", \"TINV\", \"TMX\", \"HIMS\", \"LDI\", \"ATC\", \"SGFY\", \"DM\", \"BFLY\", \"OSCR\", \"BUZZ\", \"RBLX\", \"FHS\", \"CPNG\", \"ARIS\", \"HAYW\", \"CSR\", \"TNL\", \"CCIV\", \"OUST\", \"VEI\", \"TUYA\", \"NAPA\", \"ESGC\", \"DOCN\", \"VZIO\", \"SEMR\", \"ZH\", \"AEVA\", \"COUR\", \"COMP\", \"PANA\", \"PSFE\", \"RMO\", \"STLA\", \"UWMC\", \"AGL\", \"CS\", \"PATH\", \"DV\", \"AGTI\", \"EDR\", \"GTX\", \"LEV\", \"SMWB\", \"MPLN\", \"SQSP\", \"PCOR\", \"PAY\", \"ZIP\", \"RSI\", \"ZME\", \"OGN\", \"CXM\", \"YMM\", \"BHG\", \"DOCS\", \"ATIP\", \"MCW\", \"DDL\", \"S\", \"IS\", \"DIDI\", \"FXLV\", \"BRDG\", \"INST\", \"VTEX\", \"ZVIA\", \"DEN\", \"WFG\", \"LAW\", \"XPOF\", \"CNM\", \"MLNK\", \"DOLE\", \"BBWI\", \"VSCO\", \"TIXT\", \"CLVT\", \"DTM\", \"DBRG\", \"BALY\", \"UTZ\", \"DNMR\", \"GIC\", \"NABL\", \"ONTF\", \"BVH\", \"RYAN\", \"FOA\", \"PWSC\", \"FIGS\", \"AOMR\", \"COOK\", \"YOU\", \"CNVY\", \"IRNT\", \"ONON\", \"BROS\", \"MOTV\", \"ZIM\", \"ZETA\", \"WEBR\", \"WDI\", \"VAL\", \"UPH\", \"UP\", \"RKLY\", \"UGIC\", \"TTE\", \"SUNL\", \"STPC\", \"SPIR\", \"SKIL\", \"RTPZ\", \"ROT\", \"RLX\", \"RERE\", \"RDW\", \"RAAS\", \"PV\", \"PRPB\", \"PNTM\", \"PDO\", \"OWLT\", \"OCA\", \"NXU\", \"NSTB\", \"BKKT\", \"NSR\", \"NMG\", \"NDMO\", \"MKFG\", \"MCG\", \"OPAD\", \"LOKB\", \"LFT\", \"KNL\", \"KAHC\", \"JWSM\", \"JBI\", \"IVAN\", \"IIAC\", \"HLLY\", \"GXO\", \"GPOR\", \"GFX\", \"GENI\", \"GB\", \"FREY\", \"FERG\", \"ETD\", \"ECVT\", \"DMYI\", \"DEH\", \"CVII\", \"CURV\", \"CSAN\", \"CPUH\", \"CND\", \"CGAU\", \"CCV\", \"CBAH\", \"CAS\", \"CAP\", \"CANO\", \"BRW\", \"BRSP\", \"BODY\", \"BLND\", \"BAMR\", \"FORG\", \"TOST\", \"AKA\", \"ESMT\", \"NRDY\", \"DNA\", \"IHS\", \"LEU\", \"WDH\", \"WE\", \"BBLN\", \"WBX\", \"ACHR\", \"WOLF\", \"CTV\", \"SMRT\", \"AVYA\", \"BHIL\", \"AMAM\", \"HGTY\", \"KIND\", \"BRDS\", \"DOMA\", \"BKSY\", \"CIAN\", \"MDV\"]; // ---------------------- END OF KEYS -------------------------------------\n  // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n\n  async function filterTradableSymbols(arr1, arr2, compileCallback) {\n    let nyseHolderDown = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n\n    let nyseHolderUp = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n\n    let nasdaqHolderDown = [];\n    let nasdaqHolderUp = [];\n\n    try {\n      // ------ FETCH NYSE\n      const res = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNyse = await res.json(); // ----- FILTER TRADABLE SYMBOLS ON NYSE THAT HAVE DROPPED\n\n      for (let i = 0; i < dataNyse.length; i++) {\n        if (dataNyse[i].changesPercentage < -5 && arr1.indexOf(dataNyse[i].symbol) > 0 && dataNyse[i].price > 1) {\n          nyseHolderDown.push(dataNyse[i]);\n        }\n      }\n\n      for (let i = 0; i < dataNyse.length; i++) {\n        if (dataNyse[i].changesPercentage > 5 && arr1.indexOf(dataNyse[i].symbol) > 0 && dataNyse[i].price > 1) {\n          nyseHolderUp.push(dataNyse[i]);\n        }\n      } // ------ FETCH NASDAQ\n\n\n      const resTwo = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNas = await resTwo.json(); // ----- FILTER TRADABLE SYMBOLS ON NASDAQ THAT HAVE DROPPED\n\n      for (let i = 0; i < dataNas.length; i++) {\n        if (dataNas[i].changesPercentage < -5 && arr2.indexOf(dataNas[i].symbol) > 0 && dataNas[i].price > 1) {\n          nasdaqHolderDown.push(dataNas[i]);\n        }\n      }\n\n      for (let i = 0; i < dataNas.length; i++) {\n        if (dataNas[i].changesPercentage > 5 && arr2.indexOf(dataNas[i].symbol) > 0 && dataNas[i].price > 1) {\n          nasdaqHolderUp.push(dataNas[i]);\n        }\n      } //--------- CATCH\n\n    } catch (e) {}\n\n    compileCallback(nasdaqHolderDown, nyseHolderDown, nyseHolderUp, nasdaqHolderUp, technicalIndicators); // CALLBACK FOR STOCK FILTER\n  }\n\n  function compileStocks(arr1, arr2, arr3, arr4, callback) {\n    //---------------------- COMBINE AND SORT LARGEST DROP -------------------------\n    let finalChartFatDown = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n\n    let finalChartFatUp = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n\n    let finalChart = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n    // ------- THIS IS A FILTER FOR WEIRD STOCK SYMBOLS THAT SLIP IN ----------\n\n    let combinedStockDrop = [];\n    combinedStockDrop = combinedStockDrop.concat(arr1, arr2);\n    let combinedStockUp = [];\n    combinedStockUp = combinedStockUp.concat(arr3, arr4);\n    const keys = /^[A-Z]{1,4}$/g;\n    finalChartFatDown = combinedStockDrop.filter(stock => {\n      return stock.symbol.match(keys);\n    });\n    finalChartFatUp = combinedStockUp.filter(stock => {\n      return stock.symbol.match(keys);\n    });\n\n    for (let i = 0; i < finalChartFatDown.length; i++) {\n      finalChartFatDown.sort((a, b) => {\n        return a.changesPercentage - b.changesPercentage;\n      });\n    }\n\n    for (let i = 0; i < finalChartFatUp.length; i++) {\n      finalChartFatUp.sort((a, b) => {\n        return b.changesPercentage - a.changesPercentage;\n      });\n    } // MAKE SURE ARR HAS RIGHT LENGTH TO LOAD ------------\n\n\n    const holderObjDown = {\n      avgVolume: -1,\n      bbLower: \"-1\",\n      bbMiddle: \"-1\",\n      bbPercent: \"-1\",\n      bbUpper: \"-1\",\n      cciTwenty: \"-1\",\n      change: -1,\n      changesPercentage: -1,\n      dayHigh: -1,\n      dayLow: -1,\n      earningsAnnouncement: \"-1\",\n      emaEight: \"-1\",\n      emaFifty: \"-1\",\n      emaTwelve: \"-1\",\n      emaTwenty: \"-1\",\n      emaTwentySix: \"-1\",\n      emaTwoHun: \"-1\",\n      eps: -1,\n      exchange: \"No Data\",\n      macd: \"-1\",\n      macdHistogram: \"-1\",\n      macdSignalLine: \"-1\",\n      marketCap: -1,\n      name: \"Placeholder for lack of Symbols\",\n      open: -1,\n      pe: -1,\n      previousClose: -1,\n      price: 1,\n      priceAvg50: -1,\n      priceAvg200: -1,\n      rsi: \"-1\",\n      sharesOutstanding: -1,\n      smaFifty: \"-1\",\n      smaFiveTeen: \"-1\",\n      smaOneHun: \"-1\",\n      smaThirty: \"-1\",\n      smaTwenty: \"-1\",\n      smaTwoHun: \"-1\",\n      stochasticD: \"-1\",\n      stochasticK: \"-1\",\n      stochasticSignal: \"-1\",\n      symbol: \"No Data\",\n      timestamp: -1,\n      volume: -1,\n      vwap: \"-1\",\n      vwmaFifty: \"-1\",\n      vwmaFiveTeen: \"-1\",\n      vwmaOneHun: \"-1\",\n      vwmaThirty: \"-1\",\n      vwmaTwenty: \"-1\",\n      vwmaTwoHun: \"-1\",\n      williamsR: \"-1\",\n      wmaFifty: \"-1\",\n      wmaFiveTeen: \"-1\",\n      wmaOneHun: \"-1\",\n      wmaThirty: \"-1\",\n      wmaTwenty: \"-1\",\n      wmaTwoHun: \"-1\",\n      yearHigh: -1,\n      yearLow: -1,\n      yesterdayVolume: -1\n    };\n    const holderObjUp = {\n      avgVolume: 1,\n      bbLower: \"1\",\n      bbMiddle: \"1\",\n      bbPercent: \"1\",\n      bbUpper: \"1\",\n      cciTwenty: \"1\",\n      change: 1,\n      changesPercentage: 1,\n      dayHigh: 1,\n      dayLow: 1,\n      earningsAnnouncement: \"1\",\n      emaEight: \"1\",\n      emaFifty: \"1\",\n      emaTwelve: \"1\",\n      emaTwenty: \"1\",\n      emaTwentySix: \"1\",\n      emaTwoHun: \"1\",\n      eps: 1,\n      exchange: \"No Data\",\n      macd: \"1\",\n      macdHistogram: \"1\",\n      macdSignalLine: \"1\",\n      marketCap: 1,\n      name: \"Placeholder for lack of Symbols\",\n      open: 1,\n      pe: 1,\n      previousClose: 1,\n      price: 1,\n      priceAvg50: 1,\n      priceAvg200: 1,\n      rsi: \"1\",\n      sharesOutstanding: 1,\n      smaFifty: \"1\",\n      smaFiveTeen: \"1\",\n      smaOneHun: \"1\",\n      smaThirty: \"1\",\n      smaTwenty: \"1\",\n      smaTwoHun: \"1\",\n      stochasticD: \"1\",\n      stochasticK: \"1\",\n      stochasticSignal: \"1\",\n      symbol: \"No Data\",\n      timestamp: 1,\n      volume: 1,\n      vwap: \"1\",\n      vwmaFifty: \"1\",\n      vwmaFiveTeen: \"1\",\n      vwmaOneHun: \"1\",\n      vwmaThirty: \"1\",\n      vwmaTwenty: \"1\",\n      vwmaTwoHun: \"1\",\n      williamsR: \"1\",\n      wmaFifty: \"1\",\n      wmaFiveTeen: \"1\",\n      wmaOneHun: \"1\",\n      wmaThirty: \"1\",\n      wmaTwenty: \"1\",\n      wmaTwoHun: \"1\",\n      yearHigh: 1,\n      yearLow: 1,\n      yesterdayVolume: 1\n    };\n\n    if (finalChartFatUp.length < 5) {\n      while (finalChartFatUp.length < 5) {\n        finalChartFatUp.push(holderObjUp);\n      }\n    }\n\n    if (finalChartFatDown.length < 5) {\n      while (finalChartFatDown.length < 5) {\n        finalChartFatDown.push(holderObjDown);\n      }\n    } // SLIM CHAT DOWN SO IT'S NOT BLOATED\n\n\n    let slimChartDown = 4;\n\n    while (slimChartDown >= 0) {\n      finalChart.unshift(finalChartFatDown[slimChartDown]);\n      slimChartDown--;\n    }\n\n    let slimChartUp = 4;\n\n    while (slimChartUp >= 0) {\n      finalChart.unshift(finalChartFatUp[slimChartUp]);\n      slimChartUp--;\n    }\n\n    callback(finalChart, filterUpDownStocks);\n  } // ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n  // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function smaFunction(chartArr, dataPull, newestPull, num) {\n    let culSMA = 0; // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n\n    let fiveTeenSMA = 13;\n    let twentySMA = 18;\n    let thirtySMA = 28;\n    let fiftySMA = 48;\n    let hunSMA = 98;\n    let twoHunSMA = 198;\n\n    try {\n      const todayPricePull = newestPull[0].price; // ------------- 15 DAY SMA -------------------------------\n\n      if (dataPull.historical.length <= 13) {\n        chartArr[num].smaFiveTeen = \"No Data\";\n      } else {\n        while (fiveTeenSMA >= 0) {\n          culSMA += dataPull.historical[fiveTeenSMA].close;\n          fiveTeenSMA--;\n        }\n\n        let smaFiveResult = (culSMA + todayPricePull) / 15;\n        chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 20 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 19) {\n        chartArr[num].smaTwenty = \"No Data\";\n      } else {\n        while (twentySMA >= 0) {\n          culSMA += dataPull.historical[twentySMA].close;\n          twentySMA--;\n        }\n\n        let smaTwentyResult = (culSMA + todayPricePull) / 20;\n        chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 30 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 29) {\n        chartArr[num].smaThirty = \"No Data\";\n      } else {\n        while (thirtySMA >= 0) {\n          culSMA += dataPull.historical[thirtySMA].close;\n          thirtySMA--;\n        }\n\n        let smaThirtyResult = (culSMA + todayPricePull) / 30;\n        chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 50 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 49) {\n        chartArr[num].smaFifty = \"No Data\";\n      } else {\n        while (fiftySMA >= 0) {\n          culSMA += dataPull.historical[fiftySMA].close;\n          fiftySMA--;\n        }\n\n        let smaFiftyResult = (culSMA + todayPricePull) / 50;\n        chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 100 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 99) {\n        chartArr[num].smaOneHun = \"No Data\";\n      } else {\n        while (hunSMA >= 0) {\n          culSMA += dataPull.historical[hunSMA].close;\n          hunSMA--;\n        }\n\n        let smaOneHunResult = (culSMA + todayPricePull) / 100;\n        chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 200 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 199) {\n        chartArr[num].smaTwoHun = \"No Data\";\n      } else {\n        while (twoHunSMA >= 0) {\n          culSMA += dataPull.historical[twoHunSMA].close;\n          twoHunSMA--;\n        }\n\n        let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n        chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n        culSMA = 0;\n      }\n    } catch (e) {}\n  } // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function wmaFunction(chartArr, dataPull, newestPull, num) {\n    // WMA FiveTeen --------------------------------------------------------------------\n    let weight = 14;\n    let wmaInterval = 0;\n    let iWma = 15;\n\n    try {\n      let wmaCul = newestPull[0].price * 15;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].wmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFiveTeen = wmaCul / iWma;\n        chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n      } // WMA Twenty --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 20;\n      weight = 19;\n      wmaInterval = 0;\n      iWma = 20;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].wmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwenty = wmaCul / iWma;\n        chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n      } // WMA THIRTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 30;\n      weight = 29;\n      wmaInterval = 0;\n      iWma = 30;\n\n      if (dataPull.historical.length < 30) {\n        chartArr[num].wmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaThirty = wmaCul / iWma;\n        chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n      } // WMA FIFTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 50;\n      weight = 49;\n      wmaInterval = 0;\n      iWma = 50;\n\n      if (dataPull.historical.length < 50) {\n        chartArr[num].wmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFifty = wmaCul / iWma;\n        chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n      } // WMA ONE HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 100;\n      weight = 99;\n      wmaInterval = 0;\n      iWma = 100;\n\n      if (dataPull.historical.length < 100) {\n        chartArr[num].wmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaOneHun = wmaCul / iWma;\n        chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n      } // WMA TWO HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 200;\n      weight = 199;\n      wmaInterval = 0;\n      iWma = 200;\n\n      if (dataPull.historical.length < 200) {\n        chartArr[num].wmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwoHun = wmaCul / iWma;\n        chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwmaFunction(chartArr, dataPull, newestPull, num) {\n    // VWMA FIVETEEN --------------------------------------------------------------------\n    try {\n      let price = 0;\n      let volume = 0;\n      const newPrice = newestPull[0].price;\n      const newVol = newestPull[0].volume;\n      let volCul = newestPull[0].volume;\n      let totalCul = newPrice * newVol;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].vwmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaFiveTeen = totalCul / volCul;\n        chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n      } // VWMA TWENTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].vwmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaTwenty = totalCul / volCul;\n        chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n      } // VWMA THIRTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 29) {\n        chartArr[num].vwmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaThirty = totalCul / volCul;\n        chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n      } // VWMA FIFTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 49) {\n        chartArr[num].vwmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaFifty = totalCul / volCul;\n        chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n      } // VWMA ONEHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 99) {\n        chartArr[num].vwmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaOneHun = totalCul / volCul;\n        chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n      } // VWMA TWOHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 199) {\n        chartArr[num].vwmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          price = dataPull.historical[i].close;\n          volume = dataPull.historical[i].volume;\n          totalCul += price * volume;\n          volCul += dataPull.historical[i].volume;\n        }\n\n        const vwmaTwoHun = totalCul / volCul;\n        chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n    let emaEight = 14;\n    let emaTwelve = 22;\n    let emaTwenty = 38;\n    let emaTwentySix = 50;\n    let emaFifty = 98;\n    let emaTwoHun = 398;\n    let prevDayEmaSub = 0;\n    let arrEma = [];\n    let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n\n    let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n    try {\n      const newPrice = newestPull[0].price; // EMA EIGHT ----------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 16) {\n        chartArr[num].emaEight = \"No Data\";\n      } else {\n        while (emaEight >= 15) {\n          prevDayEmaSub += dataPull.historical[emaEight].close;\n          emaEight--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 8; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 9 * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaEight--;\n\n        while (emaEight >= 0) {\n          let derp = 2 / 9 * (dataPull.historical[emaEight].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaEight--;\n        }\n\n        const finalEma = 2 / 9 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaEight = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWELVE ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 24) {\n        chartArr[num].emaTwelve = \"No Data\";\n      } else {\n        while (emaTwelve >= 11) {\n          prevDayEmaSub += dataPull.historical[emaTwelve].close;\n          emaTwelve--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 12; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 13 * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwelve--;\n\n        while (emaTwelve >= 0) {\n          let derp = 2 / 13 * (dataPull.historical[emaTwelve].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwelve < 8 && emaTwelve >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwelve.unshift(derp);\n          }\n\n          emaTwelve--;\n        }\n\n        const finalEma = 2 / 13 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwelve.unshift(finalEma);\n        chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 40) {\n        chartArr[num].emaTwenty = \"No Data\";\n      } else {\n        while (emaTwenty >= 19) {\n          prevDayEmaSub += dataPull.historical[emaTwenty].close;\n          emaTwenty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 20; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 21 * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwenty--;\n\n        while (emaTwenty >= 0) {\n          let derp = 2 / 21 * (dataPull.historical[emaTwenty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwenty--;\n        }\n\n        const finalEma = 2 / 21 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY SIX ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 51) {\n        chartArr[num].emaTwentySix = \"No Data\";\n      } else {\n        while (emaTwentySix >= 25) {\n          prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n          emaTwentySix--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 26; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 27 * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwentySix--;\n\n        while (emaTwentySix >= 0) {\n          let derp = 2 / 27 * (dataPull.historical[emaTwentySix].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwentySix < 8 && emaTwentySix >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwentySix.unshift(derp);\n          }\n\n          emaTwentySix--;\n        }\n\n        const finalEma = 2 / 27 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwentySix.unshift(finalEma);\n        chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA FIFTY -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 100) {\n        chartArr[num].emaFifty = \"No Data\";\n      } else {\n        while (emaFifty >= 49) {\n          prevDayEmaSub += dataPull.historical[emaFifty].close;\n          emaFifty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 50; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 51 * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaFifty--;\n\n        while (emaFifty >= 0) {\n          let derp = 2 / 51 * (dataPull.historical[emaFifty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaFifty--;\n        }\n\n        const finalEma = 2 / 51 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaFifty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 400) {\n        chartArr[num].emaTwoHun = \"No Data\";\n      } else {\n        while (emaTwoHun >= 199) {\n          prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n          emaTwoHun--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 200; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 201 * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwoHun--;\n\n        while (emaTwoHun >= 0) {\n          let derp = 2 / 201 * (dataPull.historical[emaTwoHun].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwoHun--;\n        }\n\n        const finalEma = 2 / 201 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n    } catch (e) {} // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n    macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n  } // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function macdFunction(chartArr, num, arr1, arr2) {\n    const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n    chartArr[num].macd = macd.toFixed(2); // CALCULATE SIGNAL LINE ----------------\n\n    let averageMacd = [];\n    let iMacd = 8;\n\n    try {\n      while (iMacd >= 0) {\n        averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n        iMacd--;\n      }\n\n      let averageSum = averageMacd.reduce((a, b) => a + b);\n      let finalAverageMacd = averageSum / 9;\n      let macdSignalLine = 2 / 9 * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n      chartArr[num].macdSignalLine = macdSignalLine.toFixed(2); // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n\n      let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n      chartArr[num].macdHistogram = histogram.toFixed(2); // FOR NO DATA TO PULL FROM\n\n      if (chartArr[num].macdHistogram === \"NaN\") {\n        chartArr[num].macdHistogram = \"No Data\";\n      }\n\n      if (chartArr[num].macd === \"NaN\") {\n        chartArr[num].macd = \"No Data\";\n      }\n\n      if (chartArr[num].macdSignalLine === \"NaN\") {\n        chartArr[num].macdSignalLine = \"No Data\";\n      }\n    } catch (e) {}\n  } // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function rsiFunction(chartArr, dataPull, newestPull, num) {\n    let iRSI = 13;\n    let iRSIAdjusted = 14;\n    let recentUpper = 0;\n    let recentDowner = 0;\n    let upMove = 0;\n    let downMove = 0;\n    let pastDownPeriod = 0;\n    let pastUpPeriod = 0;\n\n    try {\n      const newPrice = newestPull[0].price; // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n\n      if (dataPull.historical.length <= 14) {\n        chartArr[num].rsi = \"No Data\";\n      } else {\n        // LOOP FOR AVERAGE\n        while (iRSI >= 0) {\n          if (dataPull.historical[iRSI].close > dataPull.historical[iRSIAdjusted].close) {\n            upMove += dataPull.historical[iRSI].close - dataPull.historical[iRSIAdjusted].close;\n          } else {\n            downMove += dataPull.historical[iRSIAdjusted].close - dataPull.historical[iRSI].close;\n          }\n\n          iRSI--;\n          iRSIAdjusted--;\n        }\n\n        let averageUp = upMove / 14;\n        let averageDown = downMove / 14; // MOST RECENT DIFFERENCE\n\n        if (newPrice > dataPull.historical[0].close) {\n          recentUpper = newPrice - dataPull.historical[0].close;\n        } else {\n          recentDowner = dataPull.historical[0].close - newPrice;\n        }\n\n        pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n        pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n        let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n        chartArr[num].rsi = rsi.toFixed(2);\n      }\n    } catch (e) {}\n  } // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n    let iSO = 13;\n    let soLowHolder = [];\n    let soHighHolder = [];\n    let highestHigh = 0;\n    let lowestLow = 0; // FIRST %D\n\n    let topForm = [];\n    let bottomForm = []; // SECOND %D\n\n    let topFormTwo = [];\n    let bottomFormTwo = []; // THIRD %D\n\n    let topFormThree = [];\n    let bottomFormThree = []; // HOLDING SET OF %D FOR 14 3 3\n\n    let signalLineHolder = [];\n\n    try {\n      let newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 18) {\n        chartArr[num].stochasticK = \"No Data\";\n      } else {\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n        while (iSO >= 0) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        soHighHolder.push(newPrice);\n        soLowHolder.push(newPrice);\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        if (lowestLow === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        if (highestHigh === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        topForm.push(newPrice - lowestLow);\n        bottomForm.push(highestHigh - lowestLow); //FOR %K\n\n        chartArr[num].stochasticK = ((newPrice - lowestLow) / (highestHigh - lowestLow) * 100).toFixed(2); // RESET HOLDER AND VARs --------------------------------------------------------\n\n        iSO = 14;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n        while (iSO >= 1) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[0].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[0].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow); // RESET HOLDER AND VARs ------------------------------------------------\n\n        iSO = 15;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 2) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[1].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[1].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[1].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        let sumTop = topForm.reduce((a, b) => a + b, 0);\n        let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n        let slowD = sumTop / sumBottom * 100; // FOR %D\n\n        chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------------------------------\n\n        iSO = 16;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n        while (iSO >= 3) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormTwo.push(dataPull.historical[2].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[2].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------\n\n        iSO = 17;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 4) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormThree.push(dataPull.historical[3].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormThree.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); // ----------- TALLY UP LAST SMOOTHING -------------------------------\n\n        const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n        let smaD = sumStochD / 3;\n\n        if (smaD < 0) {\n          smaD *= -1;\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        } else {\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        }\n      }\n    } catch (e) {}\n  } // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function williamsRFunction(chartArr, dataPull, newestPull, num) {\n    let highs = [];\n    let lows = [];\n    let lowestLow = 0;\n    let highestHigh = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].williams = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          highs.push(dataPull.historical[i].high);\n          lows.push(dataPull.historical[i].low);\n        }\n\n        highs.push(newPrice);\n        lows.push(newPrice);\n        lowestLow = Math.min(...lows);\n        highestHigh = Math.max(...highs);\n        const williams = (highestHigh - dataPull.historical[0].close) / (highestHigh - lowestLow) * -100;\n        chartArr[num].williamsR = williams.toFixed(2);\n      }\n    } catch (e) {}\n  } // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function cciFunction(chartArr, dataPull, newestPull, num) {\n    let tpvCul = 0;\n    let tpv = [];\n    let tpvMa = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n      let tpvCurrent = newPrice;\n      const recentTpv = newPrice;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].cciTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 19; i++) {\n          const {\n            high,\n            close,\n            low\n          } = dataPull.historical[i];\n          tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n\n          tpvCurrent = (close + high + low) / 3;\n        } // ---- TPV SMA ------------------------\n\n\n        tpvCul = tpv.reduce((a, b) => a + b);\n        tpvMa = tpvCul / 20; // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n\n        const partOne = recentTpv - tpvMa;\n        const meanD = tpv.map(x => x - tpvMa);\n        const meanDMap = meanD.map(x => Math.abs(x));\n        const meanDSum = meanDMap.reduce((a, b) => a + b);\n        const meanDiv = meanDSum / 20; // PART TWO OF FORMULA --------------\n\n        const partTwo = meanDiv * 0.015; // CCI ------------------------------\n\n        const cci = partOne / partTwo;\n        chartArr[num].cciTwenty = cci.toFixed(2);\n      }\n    } catch (e) {}\n  } // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n    let smaCul = 0;\n    let closeHolder = [];\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].bbUpper = \"No Data\";\n        chartArr[num].bbLower = \"No Data\";\n        chartArr[num].bbMiddle = \"No Data\";\n      } else {\n        let closeP = newPrice;\n\n        for (let i = 0; i <= 19; i++) {\n          closeHolder.push(closeP);\n          smaCul += closeP;\n          closeP = dataPull.historical[i].close;\n        } // STANDARD DEVIATION CALC --------------------------------\n\n\n        const smaTwenty = smaCul / 20;\n        const priceAdj = closeHolder.map(x => x - smaTwenty);\n        const priceAdjAbs = priceAdj.map(x => Math.abs(x));\n        const priceAdjSqrt = priceAdjAbs.map(x => x * x);\n        const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n        const partTwoDev = partOneDev / 20;\n        const standardDev = Math.sqrt(partTwoDev); // BB BAND CALC --------------------------------------------\n\n        const bbUpper = smaTwenty + standardDev * 2;\n        const bbLower = smaTwenty - standardDev * 2;\n        const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n        chartArr[num].bbUpper = bbUpper.toFixed(2);\n        chartArr[num].bbLower = bbLower.toFixed(2);\n        chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n        chartArr[num].bbPercent = bbPercent.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwapFunction(chartArr, dataPull, num) {\n    // ----------- VWAP CALUC -------------------------------------------\n    let dayLengthPeriod = 0;\n    let tpvCul = 0;\n    let volumeCul = 0;\n    let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n    try {\n      // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n      while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n        dayLengthPeriod++;\n      } // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n\n      for (let i = 0; i < dayLengthPeriod; i++) {\n        const {\n          volume,\n          high,\n          close,\n          low,\n          date\n        } = dataPull[i];\n        let tpv = (high + low + close) / 3;\n\n        if (date.slice(0, 10) == newDateString) {\n          tpvCul += tpv * volume;\n          volumeCul += volume;\n        }\n\n        var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n\n        tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n      }\n\n      let vwap = tempVWAP[0].toFixed(2);\n      chartArr[num].vwap = vwap;\n    } catch (e) {}\n  } // SET VOLUME FOR LATER\n\n\n  function setVolume(chartArr, dataPull, newestPull, num) {\n    // SET RECENT YESTERDAY VOLUME\n    try {\n      if (dataPull.historical.length <= 0) {\n        chartArr[num].yesterdayVolume = 0;\n      } else {\n        chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n\n        if (marketDay == 0 || marketDay == 6) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (timeNum > 1830) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n      }\n\n      if (newestPull.length < 0) {\n        chartArr[num].volume = 0;\n      } else {\n        // SET RECENT VOLUME\n        chartArr[num].volume = newestPull[0].volume;\n      }\n    } catch (e) {}\n  } // TA FUNCTION ---------------------------------------------------------------------\n\n\n  async function technicalIndicators(finalArr, callback) {\n    let j = 0;\n\n    while (j < finalArr.length) {\n      // LOOP FOR TECHNICAL SYMBOL\n      // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n      const {\n        symbol\n      } = finalArr[j]; //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n\n      const resSMA = await fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n      // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataSMA).length) {\n          console.log(\"no SMA Pull data found\");\n        }\n      } catch (e) {} //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n\n\n      const resOscPulled = await fetch(`https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataRecentPulled = await resOscPulled.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataRecentPulled).length) {\n          console.log(\"no Recent Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      const resVWAP = await fetch(`https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataVWAP = await resVWAP.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataVWAP).length) {\n          console.log(\"no VWAP Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      vwapFunction(finalArr, dataVWAP, j); // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      smaFunction(finalArr, dataSMA, dataRecentPulled, j); // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      wmaFunction(finalArr, dataSMA, dataRecentPulled, j); // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      vwmaFunction(finalArr, dataSMA, dataRecentPulled, j); // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n\n      emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction); // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      rsiFunction(finalArr, dataSMA, dataRecentPulled, j); // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n      // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      williamsRFunction(finalArr, dataSMA, dataRecentPulled, j); // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      cciFunction(finalArr, dataSMA, dataRecentPulled, j); // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j); // SET VOLUME PROPERTIES\n\n      setVolume(finalArr, dataSMA, dataRecentPulled, j);\n      j++; // UPDATE WHILE LOOP\n    } // THIS IS THE END OF LOOP\n\n\n    callback(finalArr, buildIt);\n    console.log(buildIt);\n  } // ------------------BUILD OUT HTML\n\n\n  function filterUpDownStocks(finalArr, callback) {\n    let stocksUp = [];\n    let stocksDown = [];\n    let j = 0;\n\n    while (j < finalArr.length) {\n      const {\n        changesPercentage\n      } = finalArr[j];\n\n      if (changesPercentage > 0) {\n        stocksUp.push(finalArr[j]);\n      } else {\n        stocksDown.push(finalArr[j]);\n      }\n\n      j++;\n    } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n    // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n\n\n    for (let i = 0; i < stocksUp.length; i++) {\n      // UPPER ------------------------------------------------------------------------------\n      stocksUp[i].symbolUp = stocksUp[i].symbol;\n      delete stocksUp[i].symbol;\n      stocksUp[i].changeUp = stocksUp[i].change;\n      delete stocksUp[i].change;\n      stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n      delete stocksUp[i].avgVolume;\n      stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n      delete stocksUp[i].changesPercentage;\n      stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n      delete stocksUp[i].emaEight;\n      stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n      delete stocksUp[i].emaTwelve;\n      stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n      delete stocksUp[i].emaTwenty;\n      stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n      delete stocksUp[i].emaTwentySix;\n      stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n      delete stocksUp[i].emaFifty;\n      stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n      delete stocksUp[i].emaTwoHun;\n      stocksUp[i].macdUp = stocksUp[i].macd;\n      delete stocksUp[i].macd;\n      stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n      delete stocksUp[i].macdHistogram;\n      stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n      delete stocksUp[i].macdSignalLine;\n      stocksUp[i].priceUp = stocksUp[i].price;\n      delete stocksUp[i].price;\n      stocksUp[i].rsiUp = stocksUp[i].rsi;\n      delete stocksUp[i].rsi;\n      stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n      delete stocksUp[i].smaFiveTeen;\n      stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n      delete stocksUp[i].smaTwenty;\n      stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n      delete stocksUp[i].smaThirty;\n      stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n      delete stocksUp[i].smaFifty;\n      stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n      delete stocksUp[i].smaOneHun;\n      stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n      delete stocksUp[i].smaTwoHun;\n      stocksUp[i].volumeUp = stocksUp[i].volume;\n      delete stocksUp[i].volume;\n      stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n      delete stocksUp[i].yesterdayVolume;\n      stocksUp[i].vwapUp = stocksUp[i].vwap;\n      delete stocksUp[i].vwap;\n      stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n      delete stocksUp[i].stochasticD;\n      stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n      delete stocksUp[i].stochasticK;\n      stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n      delete stocksUp[i].stochasticSignal;\n      stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n      delete stocksUp[i].wmaFiveTeen;\n      stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n      delete stocksUp[i].wmaTwenty;\n      stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n      delete stocksUp[i].wmaThirty;\n      stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n      delete stocksUp[i].wmaFifty;\n      stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n      delete stocksUp[i].wmaOneHun;\n      stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n      delete stocksUp[i].wmaTwoHun;\n      stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n      delete stocksUp[i].vwmaFiveTeen;\n      stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n      delete stocksUp[i].vwmaTwenty;\n      stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n      delete stocksUp[i].vwmaThirty;\n      stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n      delete stocksUp[i].vwmaFifty;\n      stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n      delete stocksUp[i].vwmaOneHun;\n      stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n      delete stocksUp[i].vwmaTwoHun;\n      stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n      delete stocksUp[i].williamsR;\n      stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n      delete stocksUp[i].cciTwenty;\n      stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n      delete stocksUp[i].bbUpper;\n      stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n      delete stocksUp[i].bbLower;\n      stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n      delete stocksUp[i].bbMiddle;\n      stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n      delete stocksUp[i].bbPercent; // DOWNERS ------------------------------------------------------------------------------\n\n      stocksDown[i].symbolDown = stocksDown[i].symbol;\n      delete stocksDown[i].symbol;\n      stocksDown[i].changeDown = stocksDown[i].change;\n      delete stocksDown[i].change;\n      stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n      delete stocksDown[i].avgVolume;\n      stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n      delete stocksDown[i].changesPercentage;\n      stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n      delete stocksDown[i].emaEight;\n      stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n      delete stocksDown[i].emaTwelve;\n      stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n      delete stocksDown[i].emaTwenty;\n      stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n      delete stocksDown[i].emaTwentySix;\n      stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n      delete stocksDown[i].emaFifty;\n      stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n      delete stocksDown[i].emaTwoHun;\n      stocksDown[i].macdDown = stocksDown[i].macd;\n      delete stocksDown[i].macd;\n      stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n      delete stocksDown[i].macdHistogram;\n      stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n      delete stocksDown[i].macdSignalLine;\n      stocksDown[i].priceDown = stocksDown[i].price;\n      delete stocksDown[i].price;\n      stocksDown[i].rsiDown = stocksDown[i].rsi;\n      delete stocksDown[i].rsi;\n      stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n      delete stocksDown[i].smaFiveTeen;\n      stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n      delete stocksDown[i].smaTwenty;\n      stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n      delete stocksDown[i].smaThirty;\n      stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n      delete stocksDown[i].smaFifty;\n      stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n      delete stocksDown[i].smaOneHun;\n      stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n      delete stocksDown[i].smaTwoHun;\n      stocksDown[i].volumeDown = stocksDown[i].volume;\n      delete stocksDown[i].volume;\n      stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n      delete stocksDown[i].yesterdayVolume;\n      stocksDown[i].vwapDown = stocksDown[i].vwap;\n      delete stocksDown[i].vwap;\n      stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n      delete stocksDown[i].stochasticD;\n      stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n      delete stocksDown[i].stochasticK;\n      stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n      delete stocksDown[i].stochasticSignal;\n      stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n      delete stocksDown[i].wmaFiveTeen;\n      stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n      delete stocksDown[i].wmaTwenty;\n      stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n      delete stocksDown[i].wmaThirty;\n      stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n      delete stocksDown[i].wmaFifty;\n      stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n      delete stocksDown[i].wmaOneHun;\n      stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n      delete stocksDown[i].wmaTwoHun;\n      stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n      delete stocksDown[i].vwmaFiveTeen;\n      stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n      delete stocksDown[i].vwmaTwenty;\n      stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n      delete stocksDown[i].vwmaThirty;\n      stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n      delete stocksDown[i].vwmaFifty;\n      stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n      delete stocksDown[i].vwmaOneHun;\n      stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n      delete stocksDown[i].vwmaTwoHun;\n      stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n      delete stocksDown[i].williamsR;\n      stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n      delete stocksDown[i].cciTwenty;\n      stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n      delete stocksDown[i].bbUpper;\n      stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n      delete stocksDown[i].bbLower;\n      stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n      delete stocksDown[i].bbMiddle;\n      stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n      delete stocksDown[i].bbPercent;\n    }\n\n    callback(stocksUp, stocksDown);\n  }\n\n  function buildIt(arrUp, arrDown) {\n    for (let i = 0; i < arrUp.length; i++) {\n      // DECONSTRUCTING UP AND DOWN VAR\n      let {\n        avgVolumeUp,\n        volumeYesterdayUp,\n        changeUp,\n        changesPercentageUp,\n        priceUp,\n        symbolUp,\n        volumeUp,\n        vwapUp,\n        smaFiveTeenUp,\n        smaTwentyUp,\n        smaThirtyUp,\n        smaFiftyUp,\n        smaOneHunUp,\n        smaTwoHunUp,\n        emaEightUp,\n        emaTwelveUp,\n        emaTwentyUp,\n        emaTwentySixUp,\n        emaFiftyUp,\n        emaTwoHunUp,\n        wmaFiveTeenUp,\n        wmaTwentyUp,\n        wmaThirtyUp,\n        wmaFiftyUp,\n        wmaOneHunUp,\n        wmaTwoHunUp,\n        vwmaFiveTeenUp,\n        vwmaTwentyUp,\n        vwmaThirtyUp,\n        vwmaFiftyUp,\n        vwmaOneHunUp,\n        vwmaTwoHunUp,\n        macdUp,\n        macdHistogramUp,\n        macdSignalLineUp,\n        rsiUp,\n        stochasticDUp,\n        stochasticKUp,\n        stochasticSignalUp,\n        cciUp,\n        bbMiddleUp,\n        bbLowerUp,\n        bbUpperUp,\n        bbPercentUp,\n        williamsRUp\n      } = arrUp[i];\n      let {\n        avgVolumeDown,\n        volumeYesterdayDown,\n        changeDown,\n        changesPercentageDown,\n        priceDown,\n        symbolDown,\n        volumeDown,\n        vwapDown,\n        smaFiveTeenDown,\n        smaTwentyDown,\n        smaThirtyDown,\n        smaFiftyDown,\n        smaOneHunDown,\n        smaTwoHunDown,\n        emaEightDown,\n        emaTwelveDown,\n        emaTwentyDown,\n        emaTwentySixDown,\n        emaFiftyDown,\n        emaTwoHunDown,\n        wmaFiveTeenDown,\n        wmaTwentyDown,\n        wmaThirtyDown,\n        wmaFiftyDown,\n        wmaOneHunDown,\n        wmaTwoHunDown,\n        vwmaFiveTeenDown,\n        vwmaTwentyDown,\n        vwmaThirtyDown,\n        vwmaFiftyDown,\n        vwmaOneHunDown,\n        vwmaTwoHunDown,\n        macdDown,\n        macdHistogramDown,\n        macdSignalLineDown,\n        rsiDown,\n        stochasticDDown,\n        stochasticKDown,\n        stochasticSignalDown,\n        cciDown,\n        bbMiddleDown,\n        bbLowerDown,\n        bbUpperDown,\n        bbPercentDown,\n        williamsRDown\n      } = arrDown[i]; // ADJUST TO FIXED --------------------------------------------------------\n\n      if (priceUp == undefined) {\n        priceUp = 0;\n      }\n\n      if (priceDown == undefined) {\n        priceDown = 0;\n      }\n\n      priceUp = priceUp.toFixed(2);\n      priceDown = priceDown.toFixed(2);\n\n      if (changesPercentageUp == undefined) {\n        changesPercentageUp = 0;\n      }\n\n      if (changesPercentageDown == undefined) {\n        changesPercentageDown = 0;\n      }\n\n      changesPercentageUp = changesPercentageUp.toFixed(2);\n      changesPercentageDown = changesPercentageDown.toFixed(2);\n\n      if (changeUp == undefined) {\n        changeUp = 0;\n      }\n\n      if (changeDown == undefined) {\n        changeDown = 0;\n      }\n\n      changeUp = changeUp.toFixed(2);\n      changeDown = changeDown.toFixed(2); // UP VOLUME INCREASE ----------------------------\n\n      if (volumeUp == undefined) {\n        volumeUp = 0;\n      }\n\n      if (volumeDown == undefined) {\n        volumeDown = 0;\n      }\n\n      let volumeIncreaseUp = 0;\n\n      if (volumeUp > avgVolumeUp) {\n        let increase = volumeUp - avgVolumeUp;\n        volumeIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeUp;\n        volumeIncreaseUp = decrease / avgVolumeUp * -100;\n      } // DOWN VOLUME INCREASE ----------------------------\n\n\n      let volumeIncreaseDown = 0;\n\n      if (volumeDown > avgVolumeDown) {\n        let increase = volumeDown - avgVolumeDown;\n        volumeIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeDown;\n        volumeIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n      volumeIncreaseUp = volumeIncreaseUp.toFixed(2); // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n      // YESTERDAY UP VOLUME INCREASE ----------------------------\n\n      if (volumeYesterdayUp == undefined) {\n        volumeYesterdayUp = 0;\n      }\n\n      if (volumeYesterdayDown == undefined) {\n        volumeYesterdayDown = 0;\n      }\n\n      if (avgVolumeUp == undefined) {\n        avgVolumeUp = 0;\n      }\n\n      if (avgVolumeDown == undefined) {\n        avgVolumeDown = 0;\n      }\n\n      let yesterdayVolIncreaseUp = 0;\n\n      if (volumeYesterdayUp > avgVolumeUp) {\n        let increase = volumeYesterdayUp - avgVolumeUp;\n        yesterdayVolIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeYesterdayUp;\n        yesterdayVolIncreaseUp = decrease / avgVolumeUp * -100;\n      }\n\n      yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2); // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n      let yesterdayVolIncreaseDown = 0;\n\n      if (volumeYesterdayDown > avgVolumeDown) {\n        let increase = volumeYesterdayDown - avgVolumeDown;\n        yesterdayVolIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeYesterdayDown;\n        yesterdayVolIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2); // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n      let changeDownAdjusted = changeDown;\n\n      if (changeDownAdjusted < 0) {\n        changeDownAdjusted = changeDownAdjusted * -1;\n        changeDownAdjusted = changeDownAdjusted.toFixed(2);\n      } // NaN CHECK ----------------------------------------\n\n\n      if (isNaN(yesterdayVolIncreaseDown)) {\n        yesterdayVolIncreaseDown = \"No Data\";\n      }\n\n      if (isNaN(yesterdayVolIncreaseUp)) {\n        yesterdayVolIncreaseUp = \"No Data\";\n      } // ADJUST TO POSITIVE\n\n\n      if (stochasticDUp < 0) {\n        stochasticDUp = stochasticDUp * -1;\n      }\n\n      if (stochasticKUp < 0) {\n        stochasticKUp = stochasticKUp * -1;\n      }\n\n      if (stochasticDDown < 0) {\n        stochasticDDown = stochasticDDown * -1;\n      }\n\n      if (stochasticKDown < 0) {\n        stochasticKDown = stochasticKDown * -1;\n      } // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n\n\n      if (avgVolumeUp == undefined) {\n        avgVolumeUp = \"No Data\";\n      }\n\n      if (avgVolumeDown == undefined) {\n        avgVolumeDown = \"No Data\";\n      }\n\n      if (volumeUp == undefined) {\n        volumeUp = \"No Data\";\n      }\n\n      if (volumeDown == undefined) {\n        volumeDown = \"No Data\";\n      }\n\n      if (volumeIncreaseUp == undefined) {\n        volumeIncreaseUp = \"No Data\";\n      }\n\n      if (volumeIncreaseDown == undefined) {\n        volumeIncreaseDown = \"No Data\";\n      }\n\n      if (volumeYesterdayUp == undefined) {\n        volumeYesterdayUp = \"No Data\";\n      }\n\n      if (volumeYesterdayDown == undefined) {\n        volumeYesterdayDown = \"No Data\";\n      }\n\n      if (smaFiveTeenUp == undefined) {\n        smaFiveTeenUp = \"No Data\";\n      }\n\n      if (smaFiveTeenDown == undefined) {\n        smaFiveTeenDown = \"No Data\";\n      }\n\n      if (smaTwentyUp == undefined) {\n        smaTwentyUp = \"No Data\";\n      }\n\n      if (smaTwentyDown == undefined) {\n        smaTwentyDown = \"No Data\";\n      }\n\n      if (smaThirtyUp == undefined) {\n        smaThirtyUp = \"No Data\";\n      }\n\n      if (smaThirtyDown == undefined) {\n        smaThirtyDown = \"No Data\";\n      }\n\n      if (smaFiftyUp == undefined) {\n        smaFiftyUp = \"No Data\";\n      }\n\n      if (smaFiftyDown == undefined) {\n        smaFiftyDown = \"No Data\";\n      }\n\n      if (smaOneHunUp == undefined) {\n        smaOneHunUp = \"No Data\";\n      }\n\n      if (smaOneHunDown == undefined) {\n        smaOneHunDown = \"No Data\";\n      }\n\n      if (smaTwoHunUp == undefined) {\n        smaTwoHunUp = \"No Data\";\n      }\n\n      if (smaTwoHunDown == undefined) {\n        smaTwoHunDown = \"No Data\";\n      }\n\n      if (emaEightUp == undefined) {\n        emaEightUp = \"No Data\";\n      }\n\n      if (emaEightDown == undefined) {\n        emaEightDown = \"No Data\";\n      }\n\n      if (emaTwelveUp == undefined) {\n        emaTwelveUp = \"No Data\";\n      }\n\n      if (emaTwelveDown == undefined) {\n        emaTwelveDown = \"No Data\";\n      }\n\n      if (emaTwentyUp == undefined) {\n        emaTwentyUp = \"No Data\";\n      }\n\n      if (emaTwentyDown == undefined) {\n        emaTwentyDown = \"No Data\";\n      }\n\n      if (emaTwentySixUp == undefined) {\n        emaTwentySixUp = \"No Data\";\n      }\n\n      if (emaTwentySixDown == undefined) {\n        emaTwentySixDown = \"No Data\";\n      }\n\n      if (emaFiftyUp == undefined) {\n        emaFiftyUp = \"No Data\";\n      }\n\n      if (emaFiftyDown == undefined) {\n        emaFiftyDown = \"No Data\";\n      }\n\n      if (emaTwoHunUp == undefined) {\n        emaTwoHunUp = \"No Data\";\n      }\n\n      if (emaTwoHunDown == undefined) {\n        emaTwoHunDown = \"No Data\";\n      }\n\n      if (wmaFiveTeenUp == undefined) {\n        wmaFiveTeenUp = \"No Data\";\n      }\n\n      if (wmaFiveTeenDown == undefined) {\n        wmaFiveTeenDown = \"No Data\";\n      }\n\n      if (wmaTwentyUp == undefined) {\n        wmaTwentyUp = \"No Data\";\n      }\n\n      if (wmaTwentyDown == undefined) {\n        wmaTwentyDown = \"No Data\";\n      }\n\n      if (wmaThirtyUp == undefined) {\n        wmaThirtyUp = \"No Data\";\n      }\n\n      if (wmaThirtyDown == undefined) {\n        wmaThirtyDown = \"No Data\";\n      }\n\n      if (wmaFiftyUp == undefined) {\n        wmaFiftyUp = \"No Data\";\n      }\n\n      if (wmaFiftyDown == undefined) {\n        wmaFiftyDown = \"No Data\";\n      }\n\n      if (wmaOneHunUp == undefined) {\n        wmaOneHunUp = \"No Data\";\n      }\n\n      if (wmaOneHunDown == undefined) {\n        wmaOneHunDown = \"No Data\";\n      }\n\n      if (wmaTwoHunUp == undefined) {\n        wmaTwoHunUp = \"No Data\";\n      }\n\n      if (wmaTwoHunDown == undefined) {\n        wmaTwoHunDown = \"No Data\";\n      }\n\n      if (vwmaFiveTeenUp == undefined) {\n        vwmaFiveTeenUp = \"No Data\";\n      }\n\n      if (vwmaFiveTeenDown == undefined) {\n        vwmaFiveTeenDown = \"No Data\";\n      }\n\n      if (vwmaTwentyUp == undefined) {\n        vwmaTwentyUp = \"No Data\";\n      }\n\n      if (vwmaTwentyDown == undefined) {\n        vwmaTwentyDown = \"No Data\";\n      }\n\n      if (vwmaThirtyUp == undefined) {\n        vwmaThirtyUp = \"No Data\";\n      }\n\n      if (vwmaThirtyDown == undefined) {\n        vwmaThirtyDown = \"No Data\";\n      }\n\n      if (vwmaFiftyUp == undefined) {\n        vwmaFiftyUp = \"No Data\";\n      }\n\n      if (vwmaFiftyDown == undefined) {\n        vwmaFiftyDown = \"No Data\";\n      }\n\n      if (vwmaOneHunUp == undefined) {\n        vwmaOneHunUp = \"No Data\";\n      }\n\n      if (vwmaOneHunDown == undefined) {\n        vwmaOneHunDown = \"No Data\";\n      }\n\n      if (vwmaTwoHunUp == undefined) {\n        vwmaTwoHunUp = \"No Data\";\n      }\n\n      if (vwmaTwoHunDown == undefined) {\n        vwmaTwoHunDown = \"No Data\";\n      }\n\n      if (vwapDown == undefined) {\n        vwapDown = \"No Data\";\n      }\n\n      if (vwapUp == undefined) {\n        vwapUp = \"No Data\";\n      }\n\n      if (macdDown == undefined) {\n        macdDown = \"No Data\";\n      }\n\n      if (macdUp == undefined) {\n        macdUp = \"No Data\";\n      }\n\n      if (rsiDown == undefined) {\n        rsiDown = \"No Data\";\n      }\n\n      if (rsiUp == undefined) {\n        rsiUp = \"No Data\";\n      }\n\n      if (cciDown == undefined) {\n        cciDown = \"No Data\";\n      }\n\n      if (cciUp == undefined) {\n        cciUp = \"No Data\";\n      }\n\n      if (williamsRDown == undefined) {\n        williamsRDown = \"No Data\";\n      }\n\n      if (williamsRUp == undefined) {\n        williamsRUp = \"No Data\";\n      }\n\n      if (stochasticKUp == undefined) {\n        stochasticKUp = \"No Data\";\n      }\n\n      if (stochasticKDown == undefined) {\n        stochasticKDown = \"No Data\";\n      }\n\n      if (stochasticDUp == undefined) {\n        stochasticDUp = \"No Data\";\n      }\n\n      if (stochasticDDown == undefined) {\n        stochasticDDown = \"No Data\";\n      }\n\n      if (stochasticSignalUp == undefined) {\n        stochasticSignalUp = \"No Data\";\n      }\n\n      if (stochasticSignalDown == undefined) {\n        stochasticSignalDown = \"No Data\";\n      }\n\n      if (bbMiddleDown == undefined) {\n        bbMiddleDown = \"No Data\";\n      }\n\n      if (bbMiddleUp == undefined) {\n        bbMiddleUp = \"No Data\";\n      }\n\n      if (bbLowerDown == undefined) {\n        bbLowerDown = \"No Data\";\n      }\n\n      if (bbLowerUp == undefined) {\n        bbLowerUp = \"No Data\";\n      }\n\n      if (bbUpperDown == undefined) {\n        bbUpperDown = \"No Data\";\n      }\n\n      if (bbUpperUp == undefined) {\n        bbUpperUp = \"No Data\";\n      }\n\n      if (bbPercentDown == undefined) {\n        bbPercentDown = \"No Data\";\n      }\n\n      if (bbPercentUp == undefined) {\n        bbPercentUp = \"No Data\";\n      }\n\n      if (macdHistogramDown == undefined) {\n        macdHistogramDown = \"No Data\";\n      }\n\n      if (macdSignalLineDown == undefined) {\n        macdSignalLineDown = \"No Data\";\n      }\n\n      if (macdHistogramUp == undefined) {\n        macdHistogramUp = \"No Data\";\n      }\n\n      if (macdSignalLineUp == undefined) {\n        macdSignalLineUp = \"No Data\";\n      }\n\n      if (symbolUp == undefined) {\n        symbolUp = \"No Data\";\n      }\n\n      if (symbolDown == undefined) {\n        symbolDown = \"No Data\";\n      }\n\n      console.log('in api', arrUp);\n      return arrUp;\n    }\n  } //----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\n\n\n  filterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n};","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/ApiFunction.js"],"names":["technicalAnalysis","today","Date","year","getFullYear","date","getUTCDate","month","getUTCMonth","minutes","getUTCMinutes","hour","getUTCHours","time","timeNum","parseInt","marketDay","getDay","todayDate","newDateString","dateNumSlice","dateSliceStart","slice","newDateNum","toString","nasdaqMasterKey","nyseMasterKey","filterTradableSymbols","arr1","arr2","compileCallback","nyseHolderDown","nyseHolderUp","nasdaqHolderDown","nasdaqHolderUp","res","fetch","dataNyse","json","i","length","changesPercentage","indexOf","symbol","price","push","resTwo","dataNas","e","technicalIndicators","compileStocks","arr3","arr4","callback","finalChartFatDown","finalChartFatUp","finalChart","combinedStockDrop","concat","combinedStockUp","keys","filter","stock","match","sort","a","b","holderObjDown","avgVolume","bbLower","bbMiddle","bbPercent","bbUpper","cciTwenty","change","dayHigh","dayLow","earningsAnnouncement","emaEight","emaFifty","emaTwelve","emaTwenty","emaTwentySix","emaTwoHun","eps","exchange","macd","macdHistogram","macdSignalLine","marketCap","name","open","pe","previousClose","priceAvg50","priceAvg200","rsi","sharesOutstanding","smaFifty","smaFiveTeen","smaOneHun","smaThirty","smaTwenty","smaTwoHun","stochasticD","stochasticK","stochasticSignal","timestamp","volume","vwap","vwmaFifty","vwmaFiveTeen","vwmaOneHun","vwmaThirty","vwmaTwenty","vwmaTwoHun","williamsR","wmaFifty","wmaFiveTeen","wmaOneHun","wmaThirty","wmaTwenty","wmaTwoHun","yearHigh","yearLow","yesterdayVolume","holderObjUp","slimChartDown","unshift","slimChartUp","filterUpDownStocks","smaFunction","chartArr","dataPull","newestPull","num","culSMA","fiveTeenSMA","twentySMA","thirtySMA","fiftySMA","hunSMA","twoHunSMA","todayPricePull","historical","close","smaFiveResult","toFixed","smaTwentyResult","smaThirtyResult","smaFiftyResult","smaOneHunResult","smaTwoHunResult","wmaFunction","weight","wmaInterval","iWma","wmaCul","vwmaFunction","newPrice","newVol","volCul","totalCul","emaFunction","macdCallBack","prevDayEmaSub","arrEma","macdTwelve","macdTwentySix","subEMA","finalSubEma","derp","pop","finalEma","macdFunction","averageMacd","iMacd","averageSum","reduce","finalAverageMacd","histogram","rsiFunction","iRSI","iRSIAdjusted","recentUpper","recentDowner","upMove","downMove","pastDownPeriod","pastUpPeriod","averageUp","averageDown","stochOsc1433Function","iSO","soLowHolder","soHighHolder","highestHigh","lowestLow","topForm","bottomForm","topFormTwo","bottomFormTwo","topFormThree","bottomFormThree","signalLineHolder","low","high","Math","max","min","sumTop","sumBottom","slowD","sumStochD","smaD","williamsRFunction","highs","lows","williams","cciFunction","tpvCul","tpv","tpvMa","tpvCurrent","recentTpv","partOne","meanD","map","x","meanDMap","abs","meanDSum","meanDiv","partTwo","cci","bollingerBandsFunction","smaCul","closeHolder","closeP","priceAdj","priceAdjAbs","priceAdjSqrt","partOneDev","partTwoDev","standardDev","sqrt","vwapFunction","dayLengthPeriod","volumeCul","tempVWAP","vwapFinal","setVolume","finalArr","j","resSMA","dataSMA","Object","console","log","resOscPulled","dataRecentPulled","resVWAP","dataVWAP","buildIt","stocksUp","stocksDown","symbolUp","changeUp","avgVolumeUp","changesPercentageUp","emaEightUp","emaTwelveUp","emaTwentyUp","emaTwentySixUp","emaFiftyUp","emaTwoHunUp","macdUp","macdHistogramUp","macdSignalLineUp","priceUp","rsiUp","smaFiveTeenUp","smaTwentyUp","smaThirtyUp","smaFiftyUp","smaOneHunUp","smaTwoHunUp","volumeUp","volumeYesterdayUp","vwapUp","stochasticDUp","stochasticKUp","stochasticSignalUp","wmaFiveTeenUp","wmaTwentyUp","wmaThirtyUp","wmaFiftyUp","wmaOneHunUp","wmaTwoHunUp","vwmaFiveTeenUp","vwmaTwentyUp","vwmaThirtyUp","vwmaFiftyUp","vwmaOneHunUp","vwmaTwoHunUp","williamsRUp","cciUp","bbUpperUp","bbLowerUp","bbMiddleUp","bbPercentUp","symbolDown","changeDown","avgVolumeDown","changesPercentageDown","emaEightDown","emaTwelveDown","emaTwentyDown","emaTwentySixDown","emaFiftyDown","emaTwoHunDown","macdDown","macdHistogramDown","macdSignalLineDown","priceDown","rsiDown","smaFiveTeenDown","smaTwentyDown","smaThirtyDown","smaFiftyDown","smaOneHunDown","smaTwoHunDown","volumeDown","volumeYesterdayDown","vwapDown","stochasticDDown","stochasticKDown","stochasticSignalDown","wmaFiveTeenDown","wmaTwentyDown","wmaThirtyDown","wmaFiftyDown","wmaOneHunDown","wmaTwoHunDown","vwmaFiveTeenDown","vwmaTwentyDown","vwmaThirtyDown","vwmaFiftyDown","vwmaOneHunDown","vwmaTwoHunDown","williamsRDown","cciDown","bbUpperDown","bbLowerDown","bbMiddleDown","bbPercentDown","arrUp","arrDown","undefined","volumeIncreaseUp","increase","decrease","volumeIncreaseDown","yesterdayVolIncreaseUp","yesterdayVolIncreaseDown","changeDownAdjusted","isNaN"],"mappings":"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","sourcesContent":["export const technicalAnalysis = async () => {\n\n/// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------\n\nconst today = new Date\nconst year = today.getFullYear()\nlet date = today.getUTCDate()\nlet month = today.getUTCMonth() + 1\nlet minutes = today.getUTCMinutes()\nlet hour = today.getUTCHours()\n // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n    \n    //CALC FOR UTC TO EST\n    hour = hour - 5;\n    // CALC FOR EARLY MORNING HOURS UTC\n    if (hour < 0)\n    {\n        hour = hour + 24;\n    }\n   \n    // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n    if (minutes < 10) {\n        minutes = `0${minutes}`\n    }\n    const time = `${hour}${minutes}`\n    const timeNum = parseInt(time)\n\n    // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n    const marketDay = today.getDay()\n    // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n    if (marketDay == 0) {\n        date = date - 2\n                // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n                if (date <= 0) {\n\n                    if (month == 1 || month == 2 || month ==  4 || month == 6 || month ==  8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 30\n                        \n                    }\n                    else if (month == 5 || month == 7 || month ==  10 || month == 12) // MONTHS AFTER 30 DAYS\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 29\n                       \n                    }\n                    else if (month == 3 && (year % 4) == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 28\n                        \n                    }\n                    else  // MONTH AFTER 28\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 27\n                        \n                    }\n                }    \n    } else if (marketDay == 6) {\n        date = date - 1\n                // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n                if (date <= 0) {\n\n                    if (month == 1 || month == 2 || month ==  4 || month == 6 || month ==  8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 31\n                        \n                    }\n                    else if (month == 5 || month == 7 || month ==  10 || month == 12) // MONTHS AFTER 30 DAYS\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 30\n                       \n                    }\n                    else if (month == 3 && (year % 4) == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 29\n                        \n                    }\n                    else  // MONTH AFTER 28\n                    {\n                        month = month - 1\n                        if (month < 10) {\n                            month = `0${month}`\n                        }\n                        date = 28\n                        \n                    }\n                }    \n    }\n    // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n    if (marketDay == 1 && timeNum < 930) {\n        date = date - 3\n        // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n        if (date <= 0) {\n\n            if (month == 1 || month == 2 || month ==  4 || month == 6 || month ==  8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n            {\n                month = month - 1\n                if (month < 10) {\n                    month = `0${month}`\n                }\n                date = 29\n                \n            }\n            else if (month == 5 || month == 7 || month ==  10 || month == 12) // MONTHS AFTER 30 DAYS\n            {\n                month = month - 1\n                if (month < 10) {\n                    month = `0${month}`\n                }\n                date = 28\n               \n            }\n            else if (month == 3 && (year % 4) == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n            {\n                month = month - 1\n                if (month < 10) {\n                    month = `0${month}`\n                }\n                date = 27\n                \n            }\n            else  // MONTH AFTER 28\n            {\n                month = month - 1\n                if (month < 10) {\n                    month = `0${month}`\n                }\n                date = 26\n                \n            }\n        }    \n    } \n    else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {// ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n        date = date - 1\n        // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n        if (date <= 0) {\n\n            if (month == 1 || month == 2 || month ==  4 || month == 6 || month ==  8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n            {\n                month = month - 1\n                if (month == 0) {\n                    month = 1\n                }\n                date = 31\n                \n            }\n            else if (month == 5 || month == 7 || month ==  10 || month == 12) // MONTHS AFTER 30 DAYS\n            {\n                month = month - 1\n                date = 30\n                \n            }\n            else if (month == 3 && (year % 4) == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n            {\n                month = month - 1\n                date = 29\n               \n            }\n            else  // MONTH AFTER 28\n            {\n                month = month - 1\n                date = 28\n               \n            }\n    }    \n    }\n\n    // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n    if (date < 10) {\n        date = `0${date}`\n    }\n    if (month < 10) {\n        month = `0${month}`\n    }\n\n    // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n    let todayDate = `${year}-${month}-${date}`\n    //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n    if (todayDate === '2021-11-25') {\n        todayDate = '2021-11-24'\n    } \n    else if (todayDate === '2021-12-24') {\n        todayDate = '2021-12-23'\n    } \n    else if (todayDate === '2022-01-17') {\n        todayDate = '2022-01-14'\n    } \n    else if (todayDate === '2022-02-21') {\n        todayDate = '2022-02-18'\n    } \n    else if (todayDate === '2022-04-15') {\n        todayDate = '2022-04-14'\n    } \n    else if (todayDate === '2022-05-30') {\n        todayDate = '2022-05-27'\n    } \n    else if (todayDate === '2022-06-20') {\n        todayDate = '2022-06-17'\n    } \n    else if (todayDate === '2022-07-04') {\n        todayDate = '2022-07-01'\n    } \n    else if (todayDate === '2022-09-05') {\n        todayDate = '2022-09-02'\n    } \n    else if (todayDate === '2022-11-24') {\n        todayDate = '2022-11-23'\n    } \n    else if (todayDate === '2022-12-26') {\n        todayDate = '2022-12-23'\n    } \n// THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n    let newDateString = todayDate;\n\n    if ((hour + 4) >= 24) \n    {\n        const dateNumSlice = parseInt(date);\n        const dateSliceStart = todayDate.slice(0,8);\n        let newDateNum = dateNumSlice - 1\n        if (newDateNum < 10)\n        {\n            newDateNum = `0${newDateNum}`\n        }\n        newDateString = `${dateSliceStart}${newDateNum}`\n        newDateString = newDateString.toString()\n        // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n        if (date == 1 && (hour + 4) >= 24) {\n\n                if (month == 1 || month == 2 || month ==  4 || month == 6 || month ==  8 || month == 9 || month == 11) // MONTHS AFTER 31 DAYS\n                {\n                    month = month - 1\n                    if (month < 10) {\n                        month = `0${month}`\n                    }\n                    date = 31\n                    newDateString = `${year}-${month}-${date}`\n                }\n                else if (month == 5 || month == 7 || month ==  10 || month == 12) // MONTHS AFTER 30 DAYS\n                {\n                    month = month - 1\n                    if (month < 10) {\n                        month = `0${month}`\n                    }\n                    date = 30\n                    newDateString = `${year}-${month}-${date}`\n                }\n                else if (month == 3 && (year % 4) == 0) // MONTH AFTER 29 DAYS LEAP YEAR\n                {\n                    month = month - 1\n                    if (month < 10) {\n                        month = `0${month}`\n                    }\n                    date = 29\n                    newDateString = `${year}-${month}-${date}`\n                }\n                else  // MONTH AFTER 28\n                {\n                    month = month - 1\n                    if (month < 10) {\n                        month = `0${month}`\n                    }\n                    date = 28\n                    newDateString = `${year}-${month}-${date}`\n                }\n        }    \n    }\n\n// ---------------------- END OF DATE -------------------------------------\n\n// ---------------------- KEYS -------------------------------------\n\n  // NASDAQ KEYS\n  const nasdaqMasterKey = [\n    \"ADMS\",\n    \"TROO\",\n    \"CISO\",\n    \"PEAR\",\n    \"ISPO\",\n    \"SKIN\",\n    \"BLZE\",\n    \"CPTN\",\n    \"NN\",\n    \"FRSH\",\n    \"HLG\",\n    \"FATH\",\n    \"MF\",\n    \"DCFC\",\n    \"TH\",\n    \"FOLD\",\n    \"TKLF\",\n    \"VORB\",\n    \"MIGI\",\n    \"AURA\",\n    \"TSVT\",\n    \"RICK\",\n    \"RXST\",\n    \"CDEV\",\n    \"ADSE\",\n    \"BIOX\",\n    \"RGC\",\n    \"NAKD\",\n    \"AEHR\",\n    \"NEGG\",\n    \"LILM\",\n    \"AUR\",\n    \"CGNT\",\n    \"QFIN\",\n    \"INVE\",\n    \"HLTH\",\n    \"SPT\",\n    \"AUID\",\n    \"PRPL\",\n    \"BRZE\",\n    \"IREN\",\n    \"ARCT\",\n    \"QSI\",\n    \"LIAN\",\n    \"NEXT\",\n    \"THRX\",\n    \"FCUV\",\n    \"SLDP\",\n    \"ESSC\",\n    \"AFMD\",\n    \"PNT\",\n    \"VBIV\",\n    \"ARHS\",\n    \"INDI\",\n    \"ADAG\",\n    \"LWLG\",\n    \"RAPT\",\n    \"BZFD\",\n    \"AERI\",\n    \"CVT\",\n    \"TGLS\",\n    \"GRAB\",\n    \"NTLA\",\n    \"MARA\",\n    \"VAXX\",\n    \"TRUP\",\n    \"ADTH\",\n    \"KRYS\",\n    \"IMGO\",\n    \"TACO\",\n    \"MMAT\",\n    \"ELYM\",\n    \"SNCE\",\n    \"ENJY\",\n    \"FFIE\",\n    \"BIRD\",\n    \"MEIP\",\n    \"WEJO\",\n    \"ARQQ\",\n    \"PRDS\",\n    \"AVDX\",\n    \"TNGX\",\n    \"AUPH\",\n    \"MNTS\",\n    \"HMTV\",\n    \"STRC\",\n    \"SEV\",\n    \"JWEL\",\n    \"URGN\",\n    \"TCMD\",\n    \"LTRY\",\n    \"COCO\",\n    \"SOPA\",\n    \"XAIR\",\n    \"GGPI\",\n    \"AVPT\",\n    \"EYPT\",\n    \"RANI\",\n    \"RMBL\",\n    \"NVTS\",\n    \"KRUS\",\n    \"AMLX\",\n    \"INKT\",\n    \"TGTX\",\n    \"RPID\",\n    \"GLBE\",\n    \"MYPS\",\n    \"ARRY\",\n    \"AERC\",\n    \"PETZ\",\n    \"ABSI\",\n    \"FIVN\",\n    \"AMEH\",\n    \"HEPS\",\n    \"DZSI\",\n    \"XLO\",\n    \"UONE\",\n    \"SMLR\",\n    \"SAVA\",\n    \"VERA\",\n    \"TRDA\",\n    \"MTTR\",\n    \"CDNA\",\n    \"VUZI\",\n    \"FLNC\",\n    \"OSTK\",\n    \"AIP\",\n    \"NOTV\",\n    \"LIDR\",\n    \"ENPH\",\n    \"MARK\",\n    \"XELA\",\n    \"DLBE\",\n    \"GDYN\",\n    \"ALTM\",\n    \"DWAC\",\n    \"ROIV\",\n    \"AGEN\",\n    \"RETA\",\n    \"SGOC\",\n    \"CMBM\",\n    \"PTLO\",\n    \"ZGNX\",\n    \"ALPP\",\n    \"SDIG\",\n    \"RSVR\",\n    \"GPP\",\n    \"AKTS\",\n    \"CELU\",\n    \"RDUS\",\n    \"VIEW\",\n    \"HPK\",\n    \"ATER\",\n    \"ZY\",\n    \"EVER\",\n    \"RELY\",\n    \"MNKD\",\n    \"PROG\",\n    \"DAVE\",\n    \"FCEL\",\n    \"JSPR\",\n    \"LUCD\",\n    \"ATAI\",\n    \"PAVM\",\n    \"BTAI\",\n    \"RLAY\",\n    \"GTLB\",\n    \"AXSM\",\n    \"NRXP\",\n    \"ORGO\",\n    \"RVNC\",\n    \"ACMR\",\n    \"RMNI\",\n    \"JANX\",\n    \"ANY\",\n    \"KNBE\",\n    \"OCUL\",\n    \"EFTR\",\n    \"KPLT\",\n    \"FLXN\",\n    \"PTGX\",\n    \"CIFR\",\n    \"TRHC\",\n    \"PVAC\",\n    \"CLNN\",\n    \"ARQQ\",\n    \"SBTX\",\n    \"TYRA\",\n    \"OMER\",\n    \"AMTX\",\n    \"CMCSA\",\n    \"RCKT\",\n    \"INTC\",\n    \"XENE\",\n    \"MU\",\n    \"AAPL\",\n    \"PRTC\",\n    \"MSFT\",\n    \"SIRI\",\n    \"CZR\",\n    \"FB\",\n    \"VIGL\",\n    \"HYPR\",\n    \"GSM\",\n    \"JD\",\n    \"AVGO\",\n    \"AMAT\",\n    \"ZNGA\",\n    \"QCOM\",\n    \"CSCO\",\n    \"GRPN\",\n    \"GERN\",\n    \"GILD\",\n    \"ATVI\",\n    \"VEON\",\n    \"FLEX\",\n    \"FOXA\",\n    \"CVLT\",\n    \"MAT\",\n    \"CORZ\",\n    \"PYPL\",\n    \"MDLZ\",\n    \"NVDA\",\n    \"WDC\",\n    \"FSRD\",\n    \"ON\",\n    \"FITB\",\n    \"PTEN\",\n    \"JBLU\",\n    \"EBAY\",\n    \"HBAN\",\n    \"MRVL\",\n    \"WBA\",\n    \"TXN\",\n    \"OAS\",\n    \"ETSY\",\n    \"AMZN\",\n    \"NFLX\",\n    \"ENTG\",\n    \"CSX\",\n    \"WYNN\",\n    \"FOX\",\n    \"ZION\",\n    \"SYNH\",\n    \"PAYX\",\n    \"BIIB\",\n    \"SBUX\",\n    \"ADSK\",\n    \"BIDU\",\n    \"MLCO\",\n    \"NTRS\",\n    \"UAL\",\n    \"KHC\",\n    \"AAL\",\n    \"NWL\",\n    \"XRAY\",\n    \"TMUS\",\n    \"MOMO\",\n    \"STX\",\n    \"ADBE\",\n    \"TSLA\",\n    \"BUFF\",\n    \"LNT\",\n    \"LKQ\",\n    \"CENX\",\n    \"IMGN\",\n    \"LULU\",\n    \"STLD\",\n    \"PEP\",\n    \"CMPX\",\n    \"COST\",\n    \"IMMP\",\n    \"ALTR\",\n    \"ALXN\",\n    \"ZLAB\",\n    \"ADP\",\n    \"MNST\",\n    \"RIGL\",\n    \"LRCX\",\n    \"NXPI\",\n    \"ENDP\",\n    \"YNDX\",\n    \"GOOGL\",\n    \"CGNX\",\n    \"AMGN\",\n    \"FSLR\",\n    \"SLM\",\n    \"ODP\",\n    \"TLGT\",\n    \"PDCO\",\n    \"Z\",\n    \"CME\",\n    \"PPBI\",\n    \"EXC\",\n    \"CNDT\",\n    \"WEN\",\n    \"CTSH\",\n    \"HOLX\",\n    \"CTXS\",\n    \"SABR\",\n    \"DISH\",\n    \"SKYT\",\n    \"XEL\", \n    \"NTNX\",\n    \"HQY\",\n    \"IGIC\",\n    \"ARCC\",\n    \"SFIX\",\n    \"NWS\",\n    \"NVAX\",\n    \"DXCM\",\n    \"NTCT\",\n    \"NYMT\",\n    \"NAVI\",\n    \"TTWO\",\n    \"KLAC\",\n    \"GOOG\",\n    \"HSIC\",\n    \"CFVI\",\n    \"MEOH\",\n    \"GIII\",\n    \"SFM\",\n    \"QRVO\",\n    \"DOX\",\n    \"HMHC\",\n    \"NMRK\",\n    \"OPK\",\n    \"NUAN\",\n    \"GT\",\n    \"RAIN\",\n    \"EA\",\n    \"GPRO\",\n    \"VRTX\",\n    \"YY\",\n    \"FWONK\",\n    \"HOMB\",\n    \"NKTR\",\n    \"CERN\",\n    \"AKAM\",\n    \"CDNS\",\n    \"MDRX\",\n    \"ISBC\",\n    \"ORMP\",\n    \"NTAP\",\n    \"BBBY\",\n    \"MAR\",\n    \"VIAV\",\n    \"SHOO\",\n    \"CONE\",\n    \"RUN\",\n    \"HA\",\n    \"PBCT\",\n    \"UCBI\",\n    \"LBTYA\",\n    \"CBSH\",\n    \"TSCO\",\n    \"TER\",\n    \"TRUE\",\n    \"URBN\",\n    \"ROKU\",\n    \"CTRE\",\n    \"MCHP\",\n    \"MYNZ\",\n    \"KLIC\",\n    \"TEAM\",\n    \"HIMX\",\n    \"FANG\",\n    \"TROW\",\n    \"ARLP\",\n    \"BLMN\",\n    \"PPC\",\n    \"GNTX\",\n    \"EMBK\",\n    \"INTU\",\n    \"PCAR\",\n    \"XLNX\",\n    \"JBHT\",\n    \"EXPD\",\n    \"EXPE\",\n    \"WERN\",\n    \"HCSG\",\n    \"DLTR\",\n    \"MTSI\",\n    \"BGCP\",\n    \"SWKS\",\n    \"IIVI\",\n    \"CROX\",\n    \"ACHC\",\n    \"MLHR\",\n    \"QRTEA\",\n    \"TRIP\",\n    \"FAST\",\n    \"EWBC\",\n    \"SGH\",\n    \"ALNY\",\n    \"BMRN\",\n    \"CASA\",\n    \"AGNC\",\n    \"TXMD\",\n    \"INSM\",\n    \"BGFV\",\n    \"LAMR\",\n    \"EXEL\",\n    \"HZNP\",\n    \"ADI\",\n    \"OLED\",\n    \"EYE\",\n    \"SSNC\",\n    \"CHTR\",\n    \"ACAD\",\n    \"VLY\",\n    \"VOD\",\n    \"EXTR\",\n    \"FEYE\",\n    \"VECO\",\n    \"ERIC\",\n    \"MANH\",\n    \"TILE\",\n    \"CAKE\",\n    \"CAR\",\n    \"SPLK\",\n    \"VRSN\",\n    \"XOG\",\n    \"BZUN\",\n    \"NWSA\",\n    \"ARNA\",\n    \"ULTA\",\n    \"JACK\",\n    \"CPRT\",\n    \"CLVS\",\n    \"SBRA\",\n    \"FISV\",\n    \"DXLG\",\n    \"ONB\",\n    \"ATSG\",\n    \"SPWH\",\n    \"EQIX\",\n    \"RDFN\",\n    \"ORBC\",\n    \"LIVN\",\n    \"CTAS\",\n    \"REGI\",\n    \"VRNT\",\n    \"HAS\",\n    \"HALO\",\n    \"SGMO\",\n    \"KTOS\",\n    \"BHF\",\n    \"RYAAY\",\n    \"WDAY\",\n    \"VC\",\n    \"ROIC\",\n    \"MXIM\",\n    \"CSOD\",\n    \"SIVB\",\n    \"FIVE\",\n    \"LPLA\",\n    \"SEIC\",\n    \"FORM\",\n    \"BRKS\",\n    \"HTHT\",\n    \"PENN\",\n    \"IONS\",\n    \"KRNY\",\n    \"SBAC\",\n    \"BGNE\",\n    \"WB\",\n    \"THRM\",\n    \"UMPQ\",\n    \"PNFP\",\n    \"GLPI\",\n    \"LITE\",\n    \"ROST\",\n    \"PCRX\",\n    \"CSIQ\",\n    \"ICHR\",\n    \"ILMN\",\n    \"ISRG\",\n    \"CREE\",\n    \"COHR\",\n    \"FULT\",\n    \"UNIT\",\n    \"CASY\",\n    \"PODD\",\n    \"MATW\",\n    \"REGN\",\n    \"AGFY\",\n    \"MELI\",\n    \"SGMS\",\n    \"IMMR\",\n    \"MGPI\",\n    \"NTES\",\n    \"LTRPA\",\n    \"SND\",\n    \"PFG\",\n    \"STFC\",\n    \"PTC\",\n    \"CDW\",\n    \"SBGI\",\n    \"PLAY\",\n    \"WAFD\",\n    \"PETQ\",\n    \"IRDM\",\n    \"INCY\",\n    \"LBRDK\",\n    \"TRMB\",\n    \"ACGL\",\n    \"SBNY\",\n    \"GRFS\",\n    \"GOGO\",\n    \"SYNA\",\n    \"MTCH\",\n    \"XNET\",\n    \"HAIN\",\n    \"MRTX\",\n    \"ECHO\",\n    \"PDCE\",\n    \"LPSN\",\n    \"PLCE\",\n    \"SCHL\",\n    \"ADTN\",\n    \"BECN\",\n    \"BPOP\",\n    \"COMM\",\n    \"BLUE\",\n    \"WPRT\",\n    \"MASI\",\n    \"OKTA\",\n    \"BRKR\",\n    \"NBIX\",\n    \"CHKP\",\n    \"VERU\",\n    \"JAZZ\",\n    \"CMCO\",\n    \"ORLY\",\n    \"FFIV\",\n    \"PRTA\",\n    \"SCWX\",\n    \"PAAS\",\n    \"HOPE\",\n    \"MRTN\",\n    \"CRUS\",\n    \"TXRH\",\n    \"EEFT\",\n    \"CVGI\",\n    \"WWD\",\n    \"SNY\",\n    \"HOLI\",\n    \"SSRM\",\n    \"TSEM\",\n    \"DNLI\",\n    \"CHRW\",\n    \"CINC\",\n    \"SPPI\",\n    \"ASML\",\n    \"IDXX\",\n    \"SRPT\",\n    \"SGEN\",\n    \"TCBI\",\n    \"DXPE\",\n    \"NWBI\",\n    \"PSEC\",\n    \"QDEL\",\n    \"WETF\",\n    \"INVA\",\n    \"BJRI\",\n    \"JCOM\",\n    \"ZS\",\n    \"MIDD\",\n    \"RCII\",\n    \"CSGP\",\n    \"TTMI\",\n    \"ARWR\",\n    \"IAC\",\n    \"VIRT\",\n    \"UCTT\",\n    \"ANGI\",\n    \"BCOR\",\n    \"BLDR\",\n    \"CHEF\",\n    \"HUDI\",\n    \"KURA\",\n    \"GTHX\",\n    \"GPRE\",\n    \"HIBB\",\n    \"ALGN\",\n    \"LGIH\",\n    \"REG\",\n    \"NUVA\",\n    \"SWIR\",\n    \"ARAY\",\n    \"HTLD\",\n    \"VRNS\",\n    \"CINF\",\n    \"GLRE\",\n    \"RRR\",\n    \"ZG\",\n    \"FTNT\",\n    \"CLDX\",\n    \"MDCA\",\n    \"SRCL\",\n    \"RBBN\",\n    \"WTFC\",\n    \"SGRY\",\n    \"XPER\",\n    \"VG\",\n    \"GLNG\",\n    \"PETS\",\n    \"AMBA\",\n    \"AMKR\",\n    \"COUP\",\n    \"ICPT\",\n    \"PZZA\",\n    \"POOL\",\n    \"MGRC\",\n    \"FANH\",\n    \"INFN\",\n    \"MMSI\",\n    \"SREV\",\n    \"COLM\",\n    \"CCOI\",\n    \"SEDG\",\n    \"LLNW\",\n    \"PBYI\",\n    \"IRWD\",\n    \"CSGS\",\n    \"CNSL\",\n    \"CRIS\",\n    \"COLL\",\n    \"DRNA\",\n    \"BKCC\",\n    \"PACB\",\n    \"JNCE\",\n    \"MKSI\",\n    \"CDK\",\n    \"PACW\",\n    \"LOCO\",\n    \"RUSHA\",\n    \"CGEN\",\n    \"AAWW\",\n    \"WIX\",\n    \"INO\",\n    \"FOSL\",\n    \"FOXF\",\n    \"AZPN\",\n    \"IRBT\",\n    \"SBLK\",\n    \"CWST\",\n    \"UMBF\",\n    \"SOHU\",\n    \"FGEN\",\n    \"OCSL\",\n    \"HTLF\",\n    \"BLKB\",\n    \"HLIT\",\n    \"IPAR\",\n    \"CRTO\",\n    \"ZUMZ\",\n    \"BAND\",\n    \"ABMD\",\n    \"SSP\",\n    \"NDSN\",\n    \"ALSK\",\n    \"AYPR\",\n    \"FFBC\",\n    \"DLTH\",\n    \"AXTI\",\n    \"DBVT\",\n    \"BCRX\",\n    \"TOWN\",\n    \"JKHY\",\n    \"EPAY\",\n    \"VRSK\",\n    \"ICLR\",\n    \"VRA\",\n    \"OSUR\",\n    \"AVT\",\n    \"NVCR\",\n    \"PCH\",\n    \"SAFM\",\n    \"RMBS\",\n    \"TAST\",\n    \"OTEX\",\n    \"FHB\",\n    \"SANM\",\n    \"MGI\",\n    \"KOPN\",\n    \"OSBC\",\n    \"BRKL\",\n    \"SATS\",\n    \"SLGN\",\n    \"IBKR\",\n    \"ROCK\",\n    \"RNWK\",\n    \"ASTE\",\n    \"ACET\",\n    \"DMRC\",\n    \"CUTR\",\n    \"UEPS\",\n    \"AMCX\",\n    \"DIOD\",\n    \"RARE\",\n    \"INOV\",\n    \"PLYA\",\n    \"CFFN\",\n    \"HSII\",\n    \"LOPE\",\n    \"AMPL\",\n    \"SMTC\",\n    \"SCHN\",\n    \"HSON\",\n    \"UBSI\",\n    \"SMCI\",\n    \"ODFL\",\n    \"CFMS\",\n    \"WLTW\",\n    \"CDXS\",\n    \"FCFS\",\n    \"VREX\",\n    \"LSXMK\",\n    \"MSTR\",\n    \"COHU\",\n    \"OTIC\",\n    \"GRMN\",\n    \"MEDP\",\n    \"TWOU\",\n    \"ACTG\",\n    \"AMWD\",\n    \"CATY\",\n    \"COLB\",\n    \"GBT\",\n    \"MPAA\",\n    \"COWN\",\n    \"GTLS\",\n    \"SKYW\",\n    \"CONN\",\n    \"EZPW\",\n    \"MHLD\",\n    \"KPTI\",\n    \"AVID\",\n    \"SLDB\",\n    \"TBBK\",\n    \"MTRX\",\n    \"SPWR\",\n    \"SLAB\",\n    \"PEGA\",\n    \"NOVT\",\n    \"MYGN\",\n    \"AEIS\",\n    \"LHCG\",\n    \"NDAQ\",\n    \"WSFS\",\n    \"MMYT\",\n    \"UTHR\",\n    \"CALM\",\n    \"ALRM\",\n    \"MKTX\",\n    \"LSCC\",\n    \"ECPG\",\n    \"BKNG\",\n    \"CSTE\",\n    \"QNST\",\n    \"SHLD\",\n    \"SIMO\",\n    \"AMED\",\n    \"VNET\",\n    \"IIIN\",\n    \"HFWA\",\n    \"SCSC\",\n    \"QADA\",\n    \"TSC\",\n    \"SFNC\",\n    \"MRCY\",\n    \"ICFI\",\n    \"ACIW\",\n    \"PTCT\",\n    \"TFSL\",\n    \"RRGB\",\n    \"CECE\",\n    \"IART\",\n    \"YELL\",\n    \"LXRX\",\n    \"PRAA\",\n    \"STMP\",\n    \"SCVL\",\n    \"CORE\",\n    \"KRNT\",\n    \"MYRG\",\n    \"BANR\",\n    \"CRESY\",\n    \"VSAT\",\n    \"SIGI\",\n    \"ALKS\",\n    \"GLDD\",\n    \"FIZZ\",\n    \"SBBP\",\n    \"DORM\",\n    \"TUSK\",\n    \"MERC\",\n    \"HEES\",\n    \"AGFS\",\n    \"SNCR\",\n    \"HUBG\",\n    \"SNBR\",\n    \"LOGI\",\n    \"FLWS\",\n    \"EBIX\",\n    \"ANAB\",\n    \"ABUS\",\n    \"ANSS\",\n    \"CBRL\",\n    \"ADXS\",\n    \"ITRI\",\n    \"GBCI\",\n    \"ERII\",\n    \"CLMT\",\n    \"AINV\",\n    \"BL\",\n    \"SSYS\",\n    \"LKFN\",\n    \"ANGO\",\n    \"PRIM\",\n    \"CTMX\",\n    \"CASH\",\n    \"PINC\",\n    \"SFBS\",\n    \"FNKO\",\n    \"ZBRA\",\n    \"GABC\",\n    \"NCMI\",\n    \"MGLN\",\n    \"EDIT\",\n    \"PRGS\",\n    \"TRMK\",\n    \"ACRS\",\n    \"SPSC\",\n    \"EFSC\",\n    \"BOKF\",\n    \"PSMT\",\n    \"UVSP\",\n    \"OCFC\",\n    \"GOGL\",\n    \"CCRN\",\n    \"IRTC\",\n    \"TA\",\n    \"FRTA\",\n    \"PI\",\n    \"MNRO\",\n    \"FMBI\",\n    \"ACLS\",\n    \"ITCI\",\n    \"VIVO\",\n    \"MCHX\",\n    \"CRAI\",\n    \"DSGX\",\n    \"HCM\",\n    \"TREE\",\n    \"ACOR\",\n    \"PCTY\",\n    \"MSBI\",\n    \"HLNE\",\n    \"VYGR\",\n    \"EBSB\",\n    \"SNPS\",\n    \"MIME\",\n    \"NATI\",\n    \"PLXS\",\n    \"MANT\",\n    \"OMAB\",\n    \"VNOM\",\n    \"TCPC\",\n    \"IBTX\",\n    \"DSPG\",\n    \"FWONA\",\n    \"ZEAL\",\n    \"UHAL\",\n    \"BCOV\",\n    \"ACBI\",\n    \"CVBF\",\n    \"LSXMA\",\n    \"PATK\",\n    \"BPMC\",\n    \"SASR\",\n    \"NBRV\",\n    \"TVTY\",\n    \"NXST\",\n    \"TECH\",\n    \"WING\",\n    \"HAFC\",\n    \"ATRA\",\n    \"BOOM\",\n    \"EXLS\",\n    \"QLYS\",\n    \"QURE\",\n    \"ICUI\",\n    \"LSTR\",\n    \"WASH\",\n    \"BPY\",\n    \"KIRK\",\n    \"SAIA\",\n    \"AY\",\n    \"ADUS\",\n    \"LBAI\",\n    \"OMCL\",\n    \"UFPI\",\n    \"IBOC\",\n    \"CSQ\",\n    \"HELE\",\n    \"TRVG\",\n    \"SIEN\",\n    \"CPLP\",\n    \"JOBS\",\n    \"NISN\",\n    \"NICE\",\n    \"KALU\",\n    \"CAMP\",\n    \"ICON\",\n    \"ASPS\",\n    \"ZIXI\",\n    \"CGBD\",\n    \"RGEN\",\n    \"AOSL\",\n    \"CVGW\",\n    \"DGICA\",\n    \"SILC\",\n    \"RGLD\",\n    \"GBDC\",\n    \"OCSI\",\n    \"APVO\",\n    \"PLAB\",\n    \"AGYS\",\n    \"CALA\",\n    \"CG\",\n    \"TRST\",\n    \"SYKE\",\n    \"TEDU\",\n    \"FWRD\",\n    \"LBC\",\n    \"ADAP\",\n    \"LECO\",\n    \"TRVN\",\n    \"CHUY\",\n    \"CTRN\",\n    \"CENT\",\n    \"SPTN\",\n    \"NSIT\",\n    \"AMRS\",\n    \"EQBK\",\n    \"SEAC\",\n    \"ARGX\",\n    \"STKL\",\n    \"LFUS\",\n    \"CYBR\",\n    \"APOG\",\n    \"MPWR\",\n    \"FELE\",\n    \"SSB\",\n    \"ITRN\",\n    \"LANC\",\n    \"CHDN\",\n    \"ENTA\",\n    \"EXPO\",\n    \"FRGI\",\n    \"DAKT\",\n    \"AAON\",\n    \"FLDM\",\n    \"TCBK\",\n    \"SNDX\",\n    \"INGN\",\n    \"GSBC\",\n    \"LQDT\",\n    \"PBPB\",\n    \"AVAV\",\n    \"IPGP\",\n    \"AMPH\",\n    \"NDLS\",\n    \"ABCB\",\n    \"CYTK\",\n    \"NTGR\",\n    \"RDWR\",\n    \"GIFI\",\n    \"CACC\",\n    \"OSIS\",\n    \"LAUR\",\n    \"OXLC\",\n    \"PVAC\",\n    \"PNNT\",\n    \"AGIO\",\n    \"RUTH\",\n    \"SRCE\",\n    \"HURN\",\n    \"SBSI\",\n    \"SBCF\",\n    \"NNBR\",\n    \"SPKE\",\n    \"FRME\",\n    \"IDCC\",\n    \"ROLL\",\n    \"NSSC\",\n    \"FBNC\",\n    \"SLRC\",\n    \"EGLE\",\n    \"EQRX\",\n    \"PEBO\",\n    \"ODT\",\n    \"LOB\",\n    \"MCRI\",\n    \"CRNT\",\n    \"INSG\",\n    \"CPSI\",\n    \"SCPH\",\n    \"BBSI\",\n    \"FARO\",\n    \"VWTR\",\n    \"JRVR\",\n    \"NBTB\",\n    \"CMTL\",\n    \"IVAC\",\n    \"KFRC\",\n    \"CNOB\",\n    \"GLAD\",\n    \"UFCS\",\n    \"CCMP\",\n    \"TRS\",\n    \"CLNE\",\n    \"STRA\",\n    \"JAKK\",\n    \"ATNX\",\n    \"ALNA\",\n    \"PDFS\",\n    \"TBK\",\n    \"FIBK\",\n    \"OPTN\",\n    \"FFIN\",\n    \"RGNX\",\n    \"KE\",\n    \"ASYS\",\n    \"APEI\",\n    \"VICR\",\n    \"MORN\",\n    \"APLS\",\n    \"UEIC\",\n    \"HTBI\",\n    \"LYTS\",\n    \"CMPR\",\n    \"SRDX\",\n    \"WSBC\",\n    \"PFBC\",\n    \"CARG\",\n    \"EPZM\",\n    \"AIMC\",\n    \"CHI\",\n    \"ATRO\",\n    \"ENSG\",\n    \"ECOL\",\n    \"SHEN\",\n    \"QQQX\",\n    \"FRPH\",\n    \"MRIN\",\n    \"PRTS\",\n    \"BCPC\",\n    \"OTTR\",\n    \"HCKT\",\n    \"WSBF\",\n    \"CSII\",\n    \"PFLT\",\n    \"ALGT\",\n    \"MFIN\",\n    \"FSV\",\n    \"HTBK\",\n    \"KNSL\",\n    \"METC\",\n    \"NEOG\",\n    \"HMST\",\n    \"FFIC\",\n    \"IMKTA\",\n    \"RAIL\",\n    \"INDB\",\n    \"LCUT\",\n    \"ERIE\",\n    \"HSTM\",\n    \"FDUS\",\n    \"ANAT\",\n    \"OFIX\",\n    \"KVHI\",\n    \"ARCB\",\n    \"WABC\",\n    \"CNBKA\",\n    \"CCXI\",\n    \"UBFO\",\n    \"CNXN\",\n    \"HAYN\",\n    \"CAC\",\n    \"NATH\",\n    \"ANDE\",\n    \"GOOD\",\n    \"AMRK\",\n    \"CCD\",\n    \"DGII\",\n    \"VLGEA\",\n    \"WRLD\",\n    \"SYBT\",\n    \"HWKN\",\n    \"CHY\",\n    \"CEVA\",\n    \"HCCI\",\n    \"ILPT\",\n    \"CHW\",\n    \"CHCO\",\n    \"IBCP\",\n    \"TBPH\",\n    \"MBWM\",\n    \"RCKY\",\n    \"POWI\",\n    \"NTRA\",\n    \"PGC\",\n    \"ATAX\",\n    \"NFBK\",\n    \"MRSN\",\n    \"JBSS\",\n    \"TTEC\",\n    \"FISI\",\n    \"MOFG\",\n    \"RNST\",\n    \"KELYA\",\n    \"IMOS\",\n    \"SPOK\",\n    \"MCBC\",\n    \"PLUS\",\n    \"THFF\",\n    \"NCSM\",\n    \"PRFT\",\n    \"CSWI\",\n    \"NCNA\",\n    \"AMSC\",\n    \"GAIN\",\n    \"RAVN\",\n    \"IFRX\",\n    \"JJSF\",\n    \"TTEK\",\n    \"ANIP\",\n    \"CTBI\",\n    \"BATRA\",\n    \"BSRR\",\n    \"NVMI\",\n    \"FLXS\",\n    \"GLPG\",\n    \"ALLT\",\n    \"BANX\",\n    \"DCPH\",\n    \"HOFT\",\n    \"KBAL\",\n    \"LNDC\",\n    \"NWPX\",\n    \"SYRS\",\n    \"WNEB\",\n    \"ZEUS\",\n    \"NH\",\n    \"SPNE\",\n    \"FORR\",\n    \"STRL\",\n    \"STCN\",\n    \"MMLP\",\n    \"HBNC\",\n    \"MGNX\",\n    \"DCOM\",\n    \"GEOS\",\n    \"INBK\",\n    \"MCRB\",\n    \"SVVC\",\n    \"KALA\",\n    \"WDFC\",\n    \"LILA\",\n    \"IEP\",\n    \"LMNR\",\n    \"WEYS\",\n    \"RBB\",\n    \"VOXX\",\n    \"ESGR\",\n    \"ASND\",\n    \"CRMT\",\n    \"CWCO\",\n    \"EHTH\",\n    \"MRLN\",\n    \"QIWI\",\n    \"USAK\",\n    \"UTSI\",\n    \"FARM\",\n    \"ANIK\",\n    \"SVRA\",\n    \"BUSE\",\n    \"NRIX\",\n    \"HONE\",\n    \"VCTR\",\n    \"FCBC\",\n    \"UTMD\",\n    \"ATNI\",\n    \"MRCC\",\n    \"POWL\",\n    \"PWOD\",\n    \"SEED\",\n    \"TITN\",\n    \"CTG\",\n    \"COKE\",\n    \"KNDI\",\n    \"CLAR\",\n    \"TWIN\",\n    \"CCLP\",\n    \"INFI\",\n    \"VSEC\",\n    \"MGEE\",\n    \"CVCO\",\n    \"SP\",\n    \"STBA\",\n    \"TBNK\",\n    \"BFIN\",\n    \"ACGLP\",\n    \"CBTX\",\n    \"CIGI\",\n    \"IOSP\",\n    \"OVID\",\n    \"PCTI\",\n    \"RBCAA\",\n    \"SUNS\",\n    \"CCBG\",\n    \"DHIL\",\n    \"ESSA\",\n    \"FFNW\",\n    \"FCNCA\",\n    \"XONE\",\n    \"WTBA\",\n    \"ULH\",\n    \"AROW\",\n    \"BANF\",\n    \"BELFB\",\n    \"CHMG\",\n    \"CPIX\",\n    \"CLFD\",\n    \"CSTR\",\n    \"ESLT\",\n    \"GASS\",\n    \"GBLI\",\n    \"JOUT\",\n    \"LIFE\",\n    \"LORL\",\n    \"OFS\",\n    \"QUMU\",\n    \"RELL\",\n    \"SPKEP\",\n    \"STRS\",\n    \"TGA\",\n    \"TIG\",\n    \"VRTS\",\n    \"FWP\",\n    \"YORW\",\n    \"BMTC\",\n    \"PFMT\",\n    \"CRVL\",\n    \"PMBC\",\n    \"FNLC\",\n    \"AMNB\",\n    \"CHSCM\",\n    \"CHSCN\",\n    \"CFFI\",\n    \"SHBI\",\n    \"WIRE\",\n    \"ATRI\",\n    \"DWSN\",\n    \"OMP\",\n    \"AMSF\",\n    \"BSET\",\n    \"CASS\",\n    \"CHSCL\",\n    \"EBTC\",\n    \"FSTR\",\n    \"FTEK\",\n    \"GURE\",\n    \"JRJC\",\n    \"MGIC\",\n    \"OIIM\",\n    \"PBCTP\",\n    \"PERI\",\n    \"PKOH\",\n    \"RVSB\",\n    \"TANNI\",\n    \"TESS\",\n    \"TRIB\",\n    \"WHF\",\n    \"MTLS\",\n    \"MSEX\",\n    \"PLPC\",\n    \"FBIZ\",\n    \"AMSWA\",\n    \"MIND\",\n    \"IRCP\",\n    \"RUSHB\",\n    \"WTFCM\",\n    \"NWLI\",\n    \"NYMTP\",\n    \"SAFT\",\n    \"NRIM\",\n    \"ITIC\",\n    \"MLAB\",\n    \"ACGLO\",\n    \"AGNCN\",\n    \"ALCO\",\n    \"AMRB\",\n    \"ARTNA\",\n    \"ATEC\",\n    \"ATLC\",\n    \"AUDC\",\n    \"AVNW\",\n    \"CCNE\",\n    \"CGO\",\n    \"CHMA\",\n    \"CSWC\",\n    \"DMLP\",\n    \"ERYP\",\n    \"EXFO\",\n    \"FUNC\",\n    \"FUND\",\n    \"GILT\",\n    \"GNTY\",\n    \"GSIT\",\n    \"HBCP\",\n    \"HRZN\",\n    \"HURC\",\n    \"HWBK\",\n    \"IGLD\",\n    \"ISSC\",\n    \"JSM\",\n    \"KMDA\",\n    \"LAWS\",\n    \"LBTYB\",\n    \"LINC\",\n    \"LSXMB\",\n    \"LTRPB\",\n    \"MESO\",\n    \"MINDP\",\n    \"MPVDF\",\n    \"MRBK\",\n    \"MTEX\",\n    \"NCTY\",\n    \"NICK\",\n    \"NYMTN\",\n    \"NYMTO\",\n    \"OBSV\",\n    \"PATI\",\n    \"PFIS\",\n    \"PROV\",\n    \"PTNR\",\n    \"QADB\",\n    \"QRTEB\",\n    \"SBLKZ\",\n    \"SENEB\",\n    \"SLMBP\",\n    \"SPI\",\n    \"SPRO\",\n    \"TRMD\",\n    \"TZOO\",\n    \"USAP\",\n    \"USLM\",\n    \"XBIT\",\n    \"YRIV\",\n    \"ADPT\",\n    \"AFYA\",\n    \"AGNCM\",\n    \"KERN\",\n    \"AKRO\",\n    \"ALEC\",\n    \"ALLK\",\n    \"ALLO\",\n    \"AMTB\",\n    \"AMTBB\",\n    \"AFIN\",\n    \"AFINP\",\n    \"APTX\",\n    \"APYX\",\n    \"ARAV\",\n    \"ARCE\",\n    \"ARVN\",\n    \"ASRT\",\n    \"AUB\",\n    \"BCEL\",\n    \"JG\",\n    \"AUTL\",\n    \"AVRO\",\n    \"AXNX\",\n    \"OZK\",\n    \"BSVN\",\n    \"GLG\",\n    \"BCML\",\n    \"BLU\",\n    \"BRY\",\n    \"BYND\",\n    \"BCYC\",\n    \"BILI\",\n    \"BBIO\",\n    \"BHFAP\",\n    \"BPYPO\",\n    \"BPYPP\",\n    \"DOOO\",\n    \"BFST\",\n    \"CBNK\",\n    \"CARE\",\n    \"CHNG\",\n    \"CIH\",\n    \"CCB\",\n    \"CLBK\",\n    \"SCOR\",\n    \"ROAD\",\n    \"CRTX\",\n    \"CVET\",\n    \"CRNX\",\n    \"CFB\",\n    \"CRWD\",\n    \"CYCN\",\n    \"DOCU\",\n    \"DOYU\",\n    \"DBX\",\n    \"ECOR\",\n    \"ENOB\",\n    \"ENTX\",\n    \"EQ\",\n    \"EDRY\",\n    \"EVLO\",\n    \"EVOP\",\n    \"XCUR\",\n    \"DVOL\",\n    \"DALI\",\n    \"MYFW\",\n    \"FOCS\",\n    \"FTDR\",\n    \"GNFT\",\n    \"GMAB\",\n    \"GAINL\",\n    \"DRIV\",\n    \"CLOU\",\n    \"GSHD\",\n    \"GOSS\",\n    \"GSKY\",\n    \"GRIN\",\n    \"GRTS\",\n    \"GO\",\n    \"GH\",\n    \"HWC\",\n    \"HARP\",\n    \"HHR\",\n    \"HCAT\",\n    \"HLIO\",\n    \"FIXX\",\n    \"HOOK\",\n    \"IIIV\",\n    \"IDYA\",\n    \"IHRT\",\n    \"INMD\",\n    \"ICMB\",\n    \"IQ\",\n    \"USIG\",\n    \"ISEE\",\n    \"KLDO\",\n    \"KZR\",\n    \"KNSA\",\n    \"KLXE\",\n    \"LEGH\",\n    \"LEVL\",\n    \"YVR\",\n    \"LYFT\",\n    \"MGTA\",\n    \"MDJH\",\n    \"MGTX\",\n    \"MREO\",\n    \"MESA\",\n    \"MIST\",\n    \"TIGO\",\n    \"MIRM\",\n    \"MRNA\",\n    \"MOGO\",\n    \"MOR\",\n    \"COOP\",\n    \"NRC\",\n    \"NTUS\",\n    \"STIM\",\n    \"NFE\",\n    \"NXTC\",\n    \"NXGN\",\n    \"NGM\",\n    \"NIU\",\n    \"LASR\",\n    \"OPI\",\n    \"OCCI\",\n    \"OCCIP\",\n    \"ONCY\",\n    \"OSPN\",\n    \"OPBK\",\n    \"OPRA\",\n    \"OPRX\",\n    \"ORTX\",\n    \"OGI\",\n    \"OBNK\",\n    \"OSMT\",\n    \"OXSQ\",\n    \"HERD\",\n    \"PLMR\",\n    \"PAYS\",\n    \"PCB\",\n    \"PDSB\",\n    \"PHAS\",\n    \"PHIO\",\n    \"PHIOW\",\n    \"PHUN\",\n    \"PDD\",\n    \"PSTV\",\n    \"PTE\",\n    \"DTIL\",\n    \"POAI\",\n    \"PRVB\",\n    \"QTT\",\n    \"RTLR\",\n    \"RRBI\",\n    \"RDVT\",\n    \"RPAY\",\n    \"REPL\",\n    \"RMBI\",\n    \"RUBY\",\n    \"SRRK\",\n    \"SCPL\",\n    \"SEEL\",\n    \"SESN\",\n    \"SWAV\",\n    \"SIBN\",\n    \"SILK\",\n    \"SINT\",\n    \"SONO\",\n    \"SOHON\",\n    \"SPFI\",\n    \"STXB\",\n    \"STOK\",\n    \"STNE\",\n    \"SNDL\",\n    \"SBEA\",\n    \"SLGG\",\n    \"SURF\",\n    \"STRO\",\n    \"SSSS\",\n    \"TRNX\",\n    \"TCRR\",\n    \"TENB\",\n    \"BPRN\",\n    \"REAL\",\n    \"TLRY\",\n    \"TW\",\n    \"TBIO\",\n    \"TCDA\",\n    \"TSCAP\",\n    \"TSCBP\",\n    \"TPTX\",\n    \"BROG\",\n    \"TWST\",\n    \"UBX\",\n    \"TIGR\",\n    \"UPWK\",\n    \"UXIN\",\n    \"VLYPO\",\n    \"VLYPP\",\n    \"VIOT\",\n    \"HLAL\",\n    \"WTRH\",\n    \"WTREP\",\n    \"WW\",\n    \"XERS\",\n    \"YMAB\",\n    \"ZM\",\n    \"ZVO\",\n    \"AGNCP\",\n    \"DUOT\",\n    \"HUIZ\",\n    \"RVMD\",\n    \"MDRRP\",\n    \"PAE\",\n    \"AGNCO\",\n    \"ARQT\",\n    \"APRE\",\n    \"PDEV\",\n    \"AMHC\",\n    \"BRP\",\n    \"FITBO\",\n    \"BSBK\",\n    \"PHAT\",\n    \"BBQ\",\n    \"VIACA\",\n    \"SDC\",\n    \"BSBE\",\n    \"OPCH\",\n    \"PGNY\",\n    \"PRDO\",\n    \"VIAC\",\n    \"DHC\",\n    \"NLOK\",\n    \"SVC\",\n    \"IPHA\",\n    \"TXG\",\n    \"MCBS\",\n    \"PPD\",\n    \"DDOG\",\n    \"HQI\",\n    \"BDTX\",\n    \"FREQ\",\n    \"IMAB\",\n    \"CRNC\",\n    \"BSDE\",\n    \"GRTX\",\n    \"HBT\",\n    \"BUG\",\n    \"STSA\",\n    \"TCOM\",\n    \"REYN\",\n    \"PGEN\",\n    \"RILYP\",\n    \"WKEY\",\n    \"LATN\",\n    \"RCEL\",\n    \"PTON\",\n    \"TELA\",\n    \"VERO\",\n    \"PNTG\",\n    \"NTRSO\",\n    \"SDGR\",\n    \"ONEM\",\n    \"LIZI\",\n    \"XP\",\n    \"CABA\",\n    \"PWFL\",\n    \"PFHD\",\n    \"KRKR\",\n    \"IGMS\",\n    \"TARA\",\n    \"OCGN\",\n    \"CPZ\",\n    \"ONEW\",\n    \"XGN\",\n    \"SWKH\",\n    \"DRTT\",\n    \"JAN\",\n    \"BEAM\",\n    \"OPRT\",\n    \"FUTU\",\n    \"BNTX\",\n    \"SWTX\",\n    \"DHCNL\",\n    \"OYST\",\n    \"VIR\",\n    \"LDEM\",\n    \"MDIA\",\n    \"POTX\",\n    \"GXTG\",\n    \"HTIA\",\n    \"SITM\",\n    \"MOHO\",\n    \"LMNL\",\n    \"LMPX\",\n    \"ASTSW\",\n    \"NRBO\",\n    \"QK\",\n    \"GRNVR\",\n    \"THMO\",\n    \"GNRSU\",\n    \"PALI\",\n    \"BHFAL\",\n    \"COWNL\",\n    \"CHNGU\",\n    \"MEDS\",\n    \"DCOMP\",\n    \"MFH\",\n    \"GRIL\",\n    \"FDUSZ\",\n    \"OFSSZ\",\n    \"INBKZ\",\n    \"PTMN\",\n    \"ZCMD\",\n    \"SNUG\",\n    \"IMRA\",\n    \"IMRX\",\n    \"BWMX\",\n    \"ATCX\",\n    \"RSSS\",\n    \"CALB\",\n    \"PASG\",\n    \"BPYUP\",\n    \"BPYU\",\n    \"METX\",\n    \"ZNTL\",\n    \"RGP\",\n    \"SONN\",\n    \"AVCT\",\n    \"KROS\",\n    \"AVCTW\",\n    \"DKNG\",\n    \"ORIC\",\n    \"NVVEW\",\n    \"LYRA\",\n    \"PMAY\",\n    \"UMAY\",\n    \"BMAY\",\n    \"GAN\",\n    \"NMTR\",\n    \"AYLA\",\n    \"OCFCP\",\n    \"KC\",\n    \"HUSN\",\n    \"CRDF\",\n    \"TEGS\",\n    \"TAEQ\",\n    \"OEG\",\n    \"SJOYW\",\n    \"SJ\",\n    \"ESEB\",\n    \"ESCR\",\n    \"ESHY\",\n    \"GNRSW\",\n    \"MSVX\",\n    \"WINT\",\n    \"CCNC\",\n    \"DMAY\",\n    \"FMAY\",\n    \"HSTO\",\n    \"QLGN\",\n    \"BHFAO\",\n    \"NARI\",\n    \"CFCV\",\n    \"METXW\",\n    \"WTFCP\",\n    \"LRMR\",\n    \"AYRO\",\n    \"HYMCW\",\n    \"SHYF\",\n    \"HYMC\",\n    \"SWBI\",\n    \"NKLA\",\n    \"WMG\",\n    \"LEGN\",\n    \"PNFPP\",\n    \"DADA\",\n    \"PLRX\",\n    \"CALT\",\n    \"AMTI\",\n    \"ZI\",\n    \"FBCG\",\n    \"FBCV\",\n    \"VRM\",\n    \"FMBIP\",\n    \"LPRO\",\n    \"AUBAP\",\n    \"LTRN\",\n    \"UCBIO\",\n    \"UCL\",\n    \"GBIO\",\n    \"PCVX\",\n    \"AWH\",\n    \"BNR\",\n    \"RNA\",\n    \"HWCPZ\",\n    \"FBRX\",\n    \"RPRX\",\n    \"LGHLW\",\n    \"LGHL\",\n    \"RPTX\",\n    \"GTH\",\n    \"PFC\",\n    \"FJUN\",\n    \"DJUN\",\n    \"BRLIU\",\n    \"CEFA\",\n    \"TBKCP\",\n    \"OPINL\",\n    \"AKUS\",\n    \"PYPD\",\n    \"API\",\n    \"REE\",\n    \"FUSN\",\n    \"EBON\",\n    \"FREE\",\n    \"THY\",\n    \"MRSK\",\n    \"VIRS\",\n    \"HTLFP\",\n    \"MGNI\",\n    \"ALTA\",\n    \"SPQQ\",\n    \"NJUL\",\n    \"JULZ\",\n    \"HOFV\",\n    \"IMTX\",\n    \"HOFVW\",\n    \"ACCD\",\n    \"IMTXW\",\n    \"CVLG\",\n    \"SNEX\",\n    \"FMBIO\",\n    \"BLCT\",\n    \"AMYT\",\n    \"OTRK\",\n    \"CXDO\",\n    \"PSTX\",\n    \"NKTX\",\n    \"NCNO\",\n    \"GOCO\",\n    \"QH\",\n    \"ALXO\",\n    \"BLI\",\n    \"RNLX\",\n    \"INZY\",\n    \"ANNX\",\n    \"ITOS\",\n    \"JAMF\",\n    \"EDTK\",\n    \"SRGA\",\n    \"DJUL\",\n    \"IBBJ\",\n    \"FCRD\",\n    \"RMRM\",\n    \"HSAQ\",\n    \"AFIB\",\n    \"MLAC\",\n    \"FTHM\",\n    \"ALVR\",\n    \"BTBT\",\n    \"KBNT\",\n    \"RXT\",\n    \"KDNY\",\n    \"SVSVU\",\n    \"VCVCU\",\n    \"TLS\",\n    \"MRVI\",\n    \"SHC\",\n    \"HAACU\",\n    \"ARBGU\",\n    \"AVIR\",\n    \"LESL\",\n    \"GLTO\",\n    \"ALGM\",\n    \"DSACU\",\n    \"ROOT\",\n    \"BDSX\",\n    \"MCFE\",\n    \"YGMZ\",\n    \"PRAX\",\n    \"EAR\",\n    \"TARS\",\n    \"ALGS\",\n    \"OPT\",\n    \"EBC\",\n    \"MOTNU\",\n    \"CDAK\",\n    \"STTK\",\n    \"SPRB\",\n    \"KRON\",\n    \"AZYO\",\n    \"PAICU\",\n    \"NGACU\",\n    \"CCCC\",\n    \"ONCR\",\n    \"ASO\",\n    \"ABCM\",\n    \"FHTX\",\n    \"BLSA\",\n    \"LFTRU\",\n    \"LXEH\",\n    \"RCHGU\",\n    \"AVO\",\n    \"LUNG\",\n    \"SRSAU\",\n    \"SYTA\",\n    \"AMST\",\n    \"GLSI\",\n    \"GDRX\",\n    \"BSY\",\n    \"CRSR\",\n    \"CMPS\",\n    \"ATHA\",\n    \"VTRU\",\n    \"NMMCU\",\n    \"PTVE\",\n    \"SUMO\",\n    \"FROG\",\n    \"MTCR\",\n    \"STEP\",\n    \"OM\",\n    \"ITACU\",\n    \"CD\",\n    \"ORPH\",\n    \"GRAY\",\n    \"PMVP\",\n    \"PRLD\",\n    \"BCTG\",\n    \"TSHA\",\n    \"PRFX\",\n    \"AUVI\",\n    \"HCDI\",\n    \"FRLN\",\n    \"CMPI\",\n    \"IBEX\",\n    \"VSTA\",\n    \"INM\",\n    \"ADV\",\n    \"BTAQ\",\n    \"SWIM\",\n    \"GCMG\",\n    \"NGMS\",\n    \"OLMA\",\n    \"RIDE\",\n    \"SVAC\",\n    \"TRIT\",\n    \"TTCF\",\n    \"TWCT\",\n    \"VACQ\",\n    \"VIH\",\n    \"VLDR\",\n    \"VTRS\",\n    \"KNTE\",\n    \"SEER\",\n    \"SGTX\",\n    \"YQ\",\n    \"FLACU\",\n    \"ABNB\",\n    \"NEBCU\",\n    \"CERT\",\n    \"GHVIU\",\n    \"HYFM\",\n    \"ABCL\",\n    \"VVOS\",\n    \"WISH\",\n    \"UPST\",\n    \"BCAB\",\n    \"SCPS\",\n    \"OCG\",\n    \"WNW\",\n    \"COOLU\",\n    \"SCOAU\",\n    \"VIRI\",\n    \"MTACU\",\n    \"ACKIU\",\n    \"IKT\",\n    \"GBS\",\n    \"HCARU\",\n    \"PHAR\",\n    \"MRM\",\n    \"OPEN\",\n    \"OMEG\",\n    \"GRCL\",\n    \"CGEM\",\n    \"QLI\",\n    \"ENFAU\",\n    \"MAXN\",\n    \"MSGM\",\n    \"GPACU\",\n    \"AFRM\",\n    \"ASLE\",\n    \"POSH\",\n    \"AEACU\",\n    \"WOOF\",\n    \"PLTK\",\n    \"DRVN\",\n    \"BEEM\",\n    \"LI\",\n    \"DFH\",\n    \"PTIC\",\n    \"FTCV\",\n    \"ABST\",\n    \"AEPPZ\",\n    \"AOUT\",\n    \"BOWX\",\n    \"CCNEP\",\n    \"LFMD\",\n    \"DCBO\",\n    \"GBNY\",\n    \"GOVX\",\n    \"HGBL\",\n    \"HGEN\",\n    \"HRMY\",\n    \"IIVIP\",\n    \"INBX\",\n    \"INTZ\",\n    \"KYMR\",\n    \"LANDO\",\n    \"LEVLP\",\n    \"LIXT\",\n    \"LNSR\",\n    \"MDWT\",\n    \"MNSBP\",\n    \"NMFCL\",\n    \"ONDS\",\n    \"POWW\",\n    \"RAACU\",\n    \"RZLT\",\n    \"SMID\",\n    \"SHLS\",\n    \"TOMZ\",\n    \"VMAC\",\n    \"VMAR\",\n    \"EZGO\",\n    \"GHVI\",\n    \"SNRH\",\n    \"ACKIT\",\n    \"KINZ\",\n    \"MRAC\",\n    \"SANA\",\n    \"LABP\",\n    \"VLON\",\n    \"SVOK\",\n    \"RELI\",\n    \"TVAC\",\n    \"RLYB\",\n    \"SDH\",\n    \"BMBL\",\n    \"XM\",\n    \"APR\",\n    \"RAAC\",\n    \"TLIS\",\n    \"DBTX\",\n    \"TCACU\",\n    \"NEXI\",\n    \"LGVN\",\n    \"CNTA\",\n    \"APPH\",\n    \"LAZR\",\n    \"AEI\",\n    \"ABGI\",\n    \"FSII\",\n    \"VRPX\",\n    \"CFIV\",\n    \"PPTA\",\n    \"AUUD\",\n    \"GBOX\",\n    \"GOEV\",\n    \"DUNE\",\n    \"KEJI\",\n    \"REIT\",\n    \"KAIR\",\n    \"AKIC\",\n    \"ARYD\",\n    \"TMKR\",\n    \"PRSR\",\n    \"KLAQ\",\n    \"PAQC\",\n    \"EPHY\",\n    \"RNRG\",\n    \"LJAQ\",\n    \"IMCC\",\n    \"EAC\",\n    \"INKA\",\n    \"PACX\",\n    \"GSAQ\",\n    \"INNV\",\n    \"LEGO\",\n    \"ENFA\",\n    \"SWET\",\n    \"DLCA\",\n    \"HCCC\",\n    \"AEAC\",\n    \"HCIC\",\n    \"ADER\",\n    \"OCAX\",\n    \"RXDX\",\n    \"PYR\",\n    \"LBPH\",\n    \"MITC\",\n    \"OSTR\",\n    \"SCR\",\n    \"CNXC\",\n    \"MODV\",\n    \"GBNH\",\n    \"ASAX\",\n    \"JCIC\",\n    \"GMII\",\n    \"GMBT\",\n    \"VOSO\",\n    \"SHAC\",\n    \"DGNU\",\n    \"PGRW\",\n    \"GANX\",\n    \"RACB\",\n    \"LMAO\",\n    \"PCT\",\n    \"FNCH\",\n    \"CNTB\",\n    \"IHYF\",\n    \"JOET\",\n    \"WCBR\",\n    \"LBPS\",\n    \"QQQJ\",\n    \"CTEC\",\n    \"HYXF\",\n    \"UPC\",\n    \"BSCU\",\n    \"EMXF\",\n    \"BSJS\",\n    \"EWEB\",\n    \"BSMU\",\n    \"CHB\",\n    \"DEMZ\",\n    \"ACVA\",\n    \"OLK\",\n    \"WMPN\",\n    \"DSEY\",\n    \"EEIQ\",\n    \"MSDAU\",\n    \"CRCT\",\n    \"LVTX\",\n    \"EWTX\",\n    \"IKNA\",\n    \"ALHC\",\n    \"HYW\",\n    \"DSGN\",\n    \"TDUP\",\n    \"KRNLW\",\n    \"PUCK\",\n    \"GHACW\",\n    \"PUCKW\",\n    \"IBRX\",\n    \"ARVL\",\n    \"VIACP\",\n    \"COVA\",\n    \"KURI\",\n    \"ACHL\",\n    \"ULCC\",\n    \"GIGGW\",\n    \"KARO\",\n    \"EM\",\n    \"MSAC\",\n    \"XPDI\",\n    \"FORE\",\n    \"SCLE\",\n    \"TCAC\",\n    \"TCACW\",\n    \"TSIB\",\n    \"TSIBW\",\n    \"INVZ\",\n    \"MACA\",\n    \"ACEV\",\n    \"BTRS\",\n    \"NGAC\",\n    \"PLBY\",\n    \"TIOAU\",\n    \"BSKYU\",\n    \"AQWA\",\n    \"VENAR\",\n    \"NVSAW\",\n    \"NVSA\",\n    \"PMGM\",\n    \"KAII\",\n    \"DAPP\",\n    \"EBET\",\n    \"APP\",\n    \"KRT\",\n    \"TSP\",\n    \"GSEV\",\n    \"BMEA\",\n    \"AKYA\",\n    \"GBRG\",\n    \"COLI\",\n    \"RXRX\",\n    \"CLOV\",\n    \"LGO\",\n    \"BIGC\",\n    \"EGLX\",\n    \"AXON\",\n    \"HERA\",\n    \"COIN\",\n    \"UROY\",\n    \"PRVA\",\n    \"FTCI\",\n    \"VACC\",\n    \"SCAQ\",\n    \"MNMD\",\n    \"FYBR\",\n    \"HNST\",\n    \"FSBC\",\n    \"IPW\",\n    \"SVFD\",\n    \"DBGI\",\n    \"LGBT\",\n    \"VMEO\",\n    \"JZXN\",\n    \"QQQA\",\n    \"OTLY\",\n    \"CURI\",\n    \"BRCN\",\n    \"DYNS\",\n    \"NMTC\",\n    \"SOFI\",\n    \"DLO\",\n    \"ALZN\",\n    \"WKME\",\n    \"HUT\",\n    \"ISPC\",\n    \"LYEL\",\n    \"ME\",\n    \"GAME\",\n    \"BITF\",\n    \"SFT\",\n    \"BBIG\",\n    \"MIRO\",\n    \"GRVI\",\n    \"GLUE\",\n    \"VLAT\",\n    \"BON\",\n    \"CFLT\",\n    \"FA\",\n    \"GHRS\",\n    \"TKNO\",\n    \"GRPH\",\n    \"ELEV\",\n    \"MF\",\n    \"WGRO\",\n    \"GMVD\",\n    \"ASTR\",\n    \"DALN\",\n    \"GOBI\",\n    \"PAYO\",\n    \"LZ\",\n    \"XMTR\",\n    \"AVTE\",\n    \"CRTD\",\n    \"TBLA\",\n    \"AGRI\",\n    \"UNCY\",\n    \"ARYE\",\n    \"NXTP\",\n    \"IINN\",\n    \"PECO\",\n    \"SGHT\",\n    \"HCWB\",\n    \"ALTO\",\n    \"MKTW\",\n    \"BASE\",\n    \"KLTR\",\n    \"PYCR\",\n    \"GAMB\",\n    \"CRBU\",\n    \"OB\",\n    \"SOPH\",\n    \"CTKB\",\n    \"MQ\",\n    \"LCID\",\n    \"DUOL\",\n    \"SNPO\",\n    \"HOOD\",\n    \"BCTX\",\n    \"MVST\",\n    \"MNTV\",\n    \"OCDX\",\n    \"FDMT\",\n    \"TLMD\",\n    \"VOR\",\n    \"BOLT\",\n    \"ANGN\",\n    \"VERV\",\n    \"TERN\",\n    \"DNUT\",\n    \"TASK\",\n    \"NUVL\",\n    \"DAWN\",\n    \"INTA\",\n    \"LFST\",\n    \"CYT\",\n    \"TNYA\",\n    \"CVRX\",\n    \"OMGA\",\n    \"LHDX\",\n    \"PTRA\",\n    \"TMC\",\n    \"WFRD\",\n    \"WAFDP\",\n    \"VYNE\",\n    \"VINP\",\n    \"VIA\",\n    \"VALN\",\n    \"TRIN\",\n    \"TCBIO\",\n    \"TBLD\",\n    \"TALK\",\n    \"SVA\",\n    \"STGW\",\n    \"SMFR\",\n    \"SIOX\",\n    \"SIGIP\",\n    \"SHCR\",\n    \"SBNYP\",\n    \"RNW\",\n    \"QRTEP\",\n    \"PWP\",\n    \"PSM\",\n    \"PHVS\",\n    \"OMIC\",\n    \"NAUT\",\n    \"MOLN\",\n    \"MNDY\",\n    \"MAPS\",\n    \"LVOX\",\n    \"LTCH\",\n    \"LBRDP\",\n    \"IPSC\",\n    \"IMCR\",\n    \"IAS\",\n    \"HYZN\",\n    \"HMPT\",\n    \"GULF\",\n    \"GEG\",\n    \"FULTP\",\n    \"FLYW\",\n    \"EVGO\",\n    \"EVCM\",\n    \"ERAS\",\n    \"ENVX\",\n    \"ELMS\",\n    \"CMAX\",\n    \"BZ\",\n    \"BRAG\",\n    \"ADGI\",\n    \"BPYPM\",\n    \"BHFAN\",\n    \"ICVX\",\n    \"PCYO\",\n    \"TMCI\",\n  ];\n  //NYSE KEYS\n  const nyseMasterKey = [\n    \"MXC\",\n    \"GWH\",\n    \"UUUU\",\n    \"LXU\",\n    \"KMI\",\n    \"IONQ\",\n    \"GE\",\n    \"REI\",\n    \"BAC\",\n    \"HPQ\",\n    \"CX\",\n    \"F\",\n    \"SNAP\",\n    \"WFC\",\n    \"AIG\",\n    \"T\",\n    \"C\",\n    \"VALE\",\n    \"MS\",\n    \"JPM\",\n    \"ORCL\",\n    \"NKE\",\n    \"PG\",\n    \"BBD\",\n    \"PFE\",\n    \"NOK\",\n    \"TWTR\",\n    \"XOM\",\n    \"VIPS\",\n    \"AXP\",\n    \"BMY\",\n    \"V\",\n    \"KEY\",\n    \"RF\",\n    \"KR\",\n    \"HAL\",\n    \"BABA\",\n    \"MRO\",\n    \"GM\",\n    \"FCX\",\n    \"CRM\",\n    \"SQ\",\n    \"NUE\",\n    \"SWN\",\n    \"LOW\",\n    \"RAD\",\n    \"SLB\",\n    \"ABBV\",\n    \"GIS\",\n    \"VZ\",\n    \"XRX\",\n    \"X\",\n    \"DVN\",\n    \"IBN\",\n    \"MPC\",\n    \"PM\",\n    \"MSCI\",\n    \"RDN\",\n    \"KO\",\n    \"SRC\",\n    \"COP\",\n    \"CHK\",\n    \"DIS\",\n    \"LEN\",\n    \"CVX\",\n    \"AUY\",\n    \"WMT\",\n    \"CLF\",\n    \"MRK\",\n    \"MGM\",\n    \"GFI\",\n    \"KGC\",\n    \"SCHW\",\n    \"NBR\",\n    \"JNJ\",\n    \"BSX\",\n    \"ITUB\",\n    \"BK\",\n    \"HMY\",\n    \"APA\",\n    \"HOME\",\n    \"KOS\",\n    \"DAL\",\n    \"INFY\",\n    \"CCL\",\n    \"MFGP\",\n    \"PBR\",\n    \"LPI\",\n    \"ABT\",\n    \"USB\",\n    \"BA\",\n    \"GGB\",\n    \"DB\",\n    \"KNX\",\n    \"KBH\",\n    \"PGR\",\n    \"MO\",\n    \"MDT\",\n    \"RIG\",\n    \"BCS\",\n    \"EOG\",\n    \"HPE\",\n    \"OKE\",\n    \"CVS\",\n    \"HES\",\n    \"GDDY\",\n    \"BX\",\n    \"NLSN\",\n    \"TS\",\n    \"BOX\",\n    \"OXY\",\n    \"CVE\",\n    \"SYF\",\n    \"MTG\",\n    \"LUV\",\n    \"FTI\",\n    \"AA\",\n    \"ABEV\",\n    \"EQR\",\n    \"TAL\",\n    \"UNH\",\n    \"GES\",\n    \"CNC\",\n    \"CLDR\",\n    \"RES\",\n    \"CI\",\n    \"WMB\",\n    \"HBI\",\n    \"XL\",\n    \"D\",\n    \"CHS\",\n    \"CFG\",\n    \"SU\",\n    \"MMM\",\n    \"JBL\",\n    \"ACN\",\n    \"NTR\",\n    \"BRFS\",\n    \"LVS\",\n    \"EGO\",\n    \"GSK\",\n    \"TEVA\",\n    \"PAA\",\n    \"VLO\",\n    \"IMAX\",\n    \"FNB\",\n    \"HD\",\n    \"AR\",\n    \"ARNC\",\n    \"VOYA\",\n    \"SM\",\n    \"DHI\",\n    \"HRB\",\n    \"BTU\",\n    \"JBGS\",\n    \"IPG\",\n    \"DE\",\n    \"COG\",\n    \"IBM\",\n    \"NYT\",\n    \"OLN\",\n    \"JCI\",\n    \"VICI\",\n    \"VST\",\n    \"EPD\",\n    \"KMB\",\n    \"AEP\",\n    \"IT\",\n    \"CAT\",\n    \"AU\",\n    \"KKR\",\n    \"CMC\",\n    \"NRG\",\n    \"CPB\",\n    \"ATHM\",\n    \"WRB\",\n    \"TGT\",\n    \"TV\",\n    \"GLW\",\n    \"MAS\",\n    \"DOV\",\n    \"HRL\",\n    \"TECK\",\n    \"AES\",\n    \"PPL\",\n    \"SEE\",\n    \"NLY\",\n    \"FRC\",\n    \"K\",\n    \"M\",\n    \"TSM\",\n    \"STL\",\n    \"NYCB\",\n    \"TRQ\",\n    \"BAH\",\n    \"ARI\",\n    \"MET\",\n    \"AFL\",\n    \"TPR\",\n    \"WPM\",\n    \"WLL\",\n    \"PCG\",\n    \"CLR\",\n    \"HL\",\n    \"UAA\",\n    \"CAG\",\n    \"SO\",\n    \"GKOS\",\n    \"CCI\",\n    \"ZTO\",\n    \"GS\",\n    \"ADT\",\n    \"EMR\",\n    \"CNP\",\n    \"COTY\",\n    \"MA\",\n    \"AWI\",\n    \"BBVA\",\n    \"AER\",\n    \"GTN\",\n    \"CDE\",\n    \"NCR\",\n    \"AMT\",\n    \"PSTG\",\n    \"SJM\",\n    \"ETN\",\n    \"DUK\",\n    \"CL\",\n    \"KAR\",\n    \"NEE\",\n    \"PXD\",\n    \"ADM\",\n    \"VTR\",\n    \"VMW\",\n    \"DKS\",\n    \"WTI\",\n    \"CE\",\n    \"HUN\",\n    \"CSTM\",\n    \"VER\",\n    \"GPK\",\n    \"WELL\",\n    \"TJX\",\n    \"PLD\",\n    \"KSS\",\n    \"XEC\",\n    \"DRI\",\n    \"ATI\",\n    \"IAG\",\n    \"VFC\",\n    \"BDN\",\n    \"HON\",\n    \"ICE\",\n    \"WY\",\n    \"BLL\",\n    \"IVZ\",\n    \"DG\",\n    \"SID\",\n    \"SLCA\",\n    \"SGU\",\n    \"PK\",\n    \"TOL\",\n    \"BCO\",\n    \"BKD\",\n    \"AIV\",\n    \"TAP\",\n    \"MON\",\n    \"UNP\",\n    \"BDX\",\n    \"GME\",\n    \"MX\",\n    \"RLJ\",\n    \"LB\",\n    \"NCLH\",\n    \"NOV\",\n    \"LMT\",\n    \"MTZ\",\n    \"GPS\",\n    \"SYY\",\n    \"FTV\",\n    \"BKI\",\n    \"EIX\",\n    \"CPE\",\n    \"CF\",\n    \"PNC\",\n    \"WIT\",\n    \"LYB\",\n    \"MGA\",\n    \"AEO\",\n    \"BP\",\n    \"VVV\",\n    \"UPS\",\n    \"MUR\",\n    \"VMC\",\n    \"NOMD\",\n    \"ANTM\",\n    \"GD\",\n    \"KIM\",\n    \"FNF\",\n    \"BXMT\",\n    \"CHD\",\n    \"DLR\",\n    \"IP\",\n    \"CLI\",\n    \"SE\",\n    \"CC\",\n    \"DAN\",\n    \"ZBH\",\n    \"LPX\",\n    \"BBY\",\n    \"GRUB\",\n    \"BG\",\n    \"LC\",\n    \"PWR\",\n    \"NEM\",\n    \"BEN\",\n    \"SHLX\",\n    \"PBH\",\n    \"SBH\",\n    \"NI\",\n    \"LLY\",\n    \"STNG\",\n    \"LADR\",\n    \"FHN\",\n    \"HLX\",\n    \"RSG\",\n    \"BIG\",\n    \"CYH\",\n    \"PAYC\",\n    \"GCP\",\n    \"YUM\",\n    \"STZ\",\n    \"LYG\",\n    \"USFD\",\n    \"THC\",\n    \"DOC\",\n    \"ALLY\",\n    \"EVR\",\n    \"CMS\",\n    \"RIO\",\n    \"PDM\",\n    \"KMT\",\n    \"HP\",\n    \"FLR\",\n    \"JHG\",\n    \"FDX\",\n    \"EMN\",\n    \"WU\",\n    \"BAX\",\n    \"CARS\",\n    \"TEL\",\n    \"MLM\",\n    \"GWW\",\n    \"PBF\",\n    \"BW\",\n    \"CMI\",\n    \"CNQ\",\n    \"HCA\",\n    \"QTS\",\n    \"SAN\",\n    \"CNHI\",\n    \"CNX\",\n    \"INFO\",\n    \"ES\",\n    \"ARMK\",\n    \"OII\",\n    \"NOW\",\n    \"APTV\",\n    \"QD\",\n    \"NSC\",\n    \"PSX\",\n    \"GAB\",\n    \"PNW\",\n    \"AMH\",\n    \"FOE\",\n    \"A\",\n    \"MOS\",\n    \"LPL\",\n    \"SKX\",\n    \"HST\",\n    \"UE\",\n    \"PHM\",\n    \"MT\",\n    \"CAAP\",\n    \"WRE\",\n    \"RRC\",\n    \"FL\",\n    \"AGO\",\n    \"DRE\",\n    \"CCJ\",\n    \"AXTA\",\n    \"AEM\",\n    \"BB\",\n    \"CB\",\n    \"PRU\",\n    \"PVG\",\n    \"AVYA\",\n    \"SC\",\n    \"ANF\",\n    \"HIG\",\n    \"ITW\",\n    \"AZN\",\n    \"YELP\",\n    \"MTOR\",\n    \"EVC\",\n    \"IRM\",\n    \"POST\",\n    \"EL\",\n    \"ING\",\n    \"UBS\",\n    \"KRG\",\n    \"VSH\",\n    \"TWLO\",\n    \"RLGY\",\n    \"HPP\",\n    \"CNO\",\n    \"JNPR\",\n    \"FEDU\",\n    \"AUD\",\n    \"BANC\",\n    \"INVH\",\n    \"OMF\",\n    \"LW\",\n    \"NHI\",\n    \"FE\",\n    \"NOC\",\n    \"ASH\",\n    \"O\",\n    \"FET\",\n    \"TPH\",\n    \"AMX\",\n    \"FLO\",\n    \"SHO\",\n    \"COF\",\n    \"FLT\",\n    \"IGT\",\n    \"RXN\",\n    \"OSK\",\n    \"DHR\",\n    \"AMN\",\n    \"RCL\",\n    \"W\",\n    \"IR\",\n    \"PEG\",\n    \"FBP\",\n    \"WEC\",\n    \"MDC\",\n    \"TISI\",\n    \"YUMC\",\n    \"ALV\",\n    \"BHP\",\n    \"BXP\",\n    \"BYD\",\n    \"WGO\",\n    \"KSU\",\n    \"PUMP\",\n    \"FBHS\",\n    \"TXT\",\n    \"AGI\",\n    \"ED\",\n    \"OUT\",\n    \"DBD\",\n    \"CBT\",\n    \"STOR\",\n    \"ABB\",\n    \"CP\",\n    \"PNR\",\n    \"PKI\",\n    \"ASB\",\n    \"UHS\",\n    \"ENB\",\n    \"TDC\",\n    \"AG\",\n    \"NAT\",\n    \"SPG\",\n    \"TRP\",\n    \"RH\",\n    \"CBRE\",\n    \"HGV\",\n    \"AEG\",\n    \"BTI\",\n    \"NVS\",\n    \"QSR\",\n    \"CXP\",\n    \"LDOS\",\n    \"MPW\",\n    \"CIM\",\n    \"ETH\",\n    \"AEE\",\n    \"HCC\",\n    \"MBT\",\n    \"TMO\",\n    \"OFC\",\n    \"STT\",\n    \"HLF\",\n    \"WRK\",\n    \"BR\",\n    \"MCD\",\n    \"PRO\",\n    \"TWO\",\n    \"AXL\",\n    \"SUN\",\n    \"ZEN\",\n    \"ATEN\",\n    \"CRC\",\n    \"ATUS\",\n    \"SIG\",\n    \"BDC\",\n    \"XPO\",\n    \"APO\",\n    \"CRI\",\n    \"AGCO\",\n    \"MMC\",\n    \"GNW\",\n    \"TMHC\",\n    \"URI\",\n    \"MCO\",\n    \"SLG\",\n    \"PAGS\",\n    \"L\",\n    \"MBI\",\n    \"VNO\",\n    \"PDS\",\n    \"BCC\",\n    \"PRTY\",\n    \"OGE\",\n    \"QGEN\",\n    \"EAT\",\n    \"DXC\",\n    \"UDR\",\n    \"KBR\",\n    \"STM\",\n    \"AQUA\",\n    \"EQT\",\n    \"SRE\",\n    \"SAVE\",\n    \"HTA\",\n    \"NPTN\",\n    \"SQM\",\n    \"SXT\",\n    \"OMC\",\n    \"CVA\",\n    \"LXP\",\n    \"FMC\",\n    \"KN\",\n    \"KW\",\n    \"SCS\",\n    \"CXW\",\n    \"DFS\",\n    \"PH\",\n    \"USA\",\n    \"CIEN\",\n    \"OIS\",\n    \"SCCO\",\n    \"YEXT\",\n    \"REVG\",\n    \"DVAX\",\n    \"ALLE\",\n    \"MHK\",\n    \"GRA\",\n    \"VNTR\",\n    \"SUM\",\n    \"ERJ\",\n    \"UNM\",\n    \"NJR\",\n    \"NNN\",\n    \"PAGP\",\n    \"AOS\",\n    \"DGX\",\n    \"CUZ\",\n    \"FIS\",\n    \"TRN\",\n    \"SPGI\",\n    \"AN\",\n    \"ABR\",\n    \"MCK\",\n    \"MUX\",\n    \"IEX\",\n    \"INN\",\n    \"TROX\",\n    \"OEC\",\n    \"ATH\",\n    \"ABC\",\n    \"EFX\",\n    \"DPZ\",\n    \"ENLC\",\n    \"TTM\",\n    \"OHI\",\n    \"SUI\",\n    \"MPLX\",\n    \"EC\",\n    \"SIX\",\n    \"VEEV\",\n    \"NVO\",\n    \"SWK\",\n    \"SNDR\",\n    \"EW\",\n    \"SKT\",\n    \"ROK\",\n    \"ALL\",\n    \"APRN\",\n    \"MFC\",\n    \"ZTS\",\n    \"BUD\",\n    \"UA\",\n    \"AROC\",\n    \"THO\",\n    \"KT\",\n    \"TGNA\",\n    \"CHGG\",\n    \"WM\",\n    \"ASX\",\n    \"ALB\",\n    \"RHI\",\n    \"HLT\",\n    \"DNOW\",\n    \"WPG\",\n    \"DRH\",\n    \"OC\",\n    \"CUBE\",\n    \"AGRO\",\n    \"AL\",\n    \"EVH\",\n    \"UIS\",\n    \"JELD\",\n    \"TDG\",\n    \"RY\",\n    \"SYK\",\n    \"HR\",\n    \"TRV\",\n    \"CSL\",\n    \"GWRE\",\n    \"ANET\",\n    \"WSM\",\n    \"EXP\",\n    \"BWA\",\n    \"SWCH\",\n    \"APLE\",\n    \"ADS\",\n    \"DRQ\",\n    \"AXS\",\n    \"MTDR\",\n    \"CAJ\",\n    \"AVDL\",\n    \"CNI\",\n    \"CAL\",\n    \"SAP\",\n    \"ESNT\",\n    \"NMFC\",\n    \"OI\",\n    \"MDU\",\n    \"PSXP\",\n    \"CWH\",\n    \"DECK\",\n    \"SMFG\",\n    \"LAZ\",\n    \"NEXA\",\n    \"PLNT\",\n    \"CAH\",\n    \"AYI\",\n    \"DVA\",\n    \"WCN\",\n    \"MYOV\",\n    \"ABM\",\n    \"NGL\",\n    \"ARCO\",\n    \"LNC\",\n    \"NGG\",\n    \"GTES\",\n    \"CMA\",\n    \"ALK\",\n    \"HUM\",\n    \"TEX\",\n    \"JWN\",\n    \"HFC\",\n    \"PQG\",\n    \"EDU\",\n    \"ESRT\",\n    \"LBRT\",\n    \"PEB\",\n    \"TSN\",\n    \"HSBC\",\n    \"OMI\",\n    \"MMP\",\n    \"HDB\",\n    \"TSE\",\n    \"WAL\",\n    \"SBS\",\n    \"ARE\",\n    \"TRGP\",\n    \"LYV\",\n    \"MFA\",\n    \"ECL\",\n    \"ELY\",\n    \"ARES\",\n    \"DDD\",\n    \"MKC\",\n    \"BSBR\",\n    \"RMD\",\n    \"BKU\",\n    \"H\",\n    \"EXPR\",\n    \"AVB\",\n    \"CVEO\",\n    \"TDOC\",\n    \"TRU\",\n    \"SOGO\",\n    \"XYL\",\n    \"SFUN\",\n    \"DY\",\n    \"MGP\",\n    \"SONY\",\n    \"MAA\",\n    \"AEL\",\n    \"WES\",\n    \"QUAD\",\n    \"RYN\",\n    \"VSTO\",\n    \"BHVN\",\n    \"PPG\",\n    \"ORI\",\n    \"TPC\",\n    \"XHR\",\n    \"MC\",\n    \"DDS\",\n    \"TMST\",\n    \"FR\",\n    \"CIG\",\n    \"CUK\",\n    \"MSI\",\n    \"FNV\",\n    \"KMX\",\n    \"LFC\",\n    \"BRX\",\n    \"LH\",\n    \"NBHC\",\n    \"FND\",\n    \"MOH\",\n    \"FUL\",\n    \"MRC\",\n    \"EXR\",\n    \"CPG\",\n    \"WHR\",\n    \"HSY\",\n    \"SEAS\",\n    \"PGRE\",\n    \"COO\",\n    \"JT\",\n    \"WRI\",\n    \"CPT\",\n    \"SHOP\",\n    \"MWA\",\n    \"GWB\",\n    \"BOOT\",\n    \"ALEX\",\n    \"TKR\",\n    \"RL\",\n    \"TD\",\n    \"BRO\",\n    \"ALSN\",\n    \"FAF\",\n    \"G\",\n    \"CFX\",\n    \"PANW\",\n    \"GPC\",\n    \"ELP\",\n    \"KMPR\",\n    \"BGS\",\n    \"CRS\",\n    \"AMC\",\n    \"BVN\",\n    \"EXK\",\n    \"BLK\",\n    \"POR\",\n    \"BBL\",\n    \"GCI\",\n    \"DYN\",\n    \"HOG\",\n    \"STWD\",\n    \"UNVR\",\n    \"TUP\",\n    \"FSM\",\n    \"XIN\",\n    \"ADNT\",\n    \"HAE\",\n    \"DLX\",\n    \"GEO\",\n    \"AAP\",\n    \"AON\",\n    \"SKM\",\n    \"MAN\",\n    \"TNET\",\n    \"LZB\",\n    \"FTSI\",\n    \"BXS\",\n    \"TRI\",\n    \"JQC\",\n    \"GMS\",\n    \"PBI\",\n    \"RJF\",\n    \"TTC\",\n    \"BAM\",\n    \"SHW\",\n    \"AMP\",\n    \"SNR\",\n    \"WSO\",\n    \"ATO\",\n    \"STAG\",\n    \"WAB\",\n    \"PFGC\",\n    \"MUSA\",\n    \"DK\",\n    \"CM\",\n    \"SWX\",\n    \"MTW\",\n    \"IRS\",\n    \"MIC\",\n    \"CNK\",\n    \"OCN\",\n    \"ENS\",\n    \"TFX\",\n    \"EQC\",\n    \"DEI\",\n    \"UFS\",\n    \"MTN\",\n    \"SPR\",\n    \"LEE\",\n    \"NRZ\",\n    \"HBM\",\n    \"EVRI\",\n    \"LCI\",\n    \"PII\",\n    \"CTT\",\n    \"AHH\",\n    \"SF\",\n    \"DCP\",\n    \"VEDL\",\n    \"WBS\",\n    \"WST\",\n    \"SCI\",\n    \"BERY\",\n    \"ENIA\",\n    \"SPNT\",\n    \"CCK\",\n    \"WNC\",\n    \"ETR\",\n    \"FLS\",\n    \"WBT\",\n    \"CRH\",\n    \"GHL\",\n    \"IPI\",\n    \"HIW\",\n    \"CPS\",\n    \"APH\",\n    \"REXR\",\n    \"TK\",\n    \"RS\",\n    \"HEI\",\n    \"CFR\",\n    \"YPF\",\n    \"CMG\",\n    \"RPM\",\n    \"BNS\",\n    \"BWXT\",\n    \"WOW\",\n    \"PRMW\",\n    \"WOR\",\n    \"HUBS\",\n    \"QUOT\",\n    \"COLD\",\n    \"NS\",\n    \"FMX\",\n    \"PKG\",\n    \"CLX\",\n    \"VGR\",\n    \"HII\",\n    \"PRGO\",\n    \"MSA\",\n    \"SQNS\",\n    \"ACM\",\n    \"HLI\",\n    \"CMP\",\n    \"SPB\",\n    \"IFF\",\n    \"RYI\",\n    \"MAC\",\n    \"IQV\",\n    \"WNS\",\n    \"VIV\",\n    \"FCF\",\n    \"SNP\",\n    \"RPAI\",\n    \"IVR\",\n    \"TTI\",\n    \"THS\",\n    \"RRD\",\n    \"TBI\",\n    \"BHE\",\n    \"BCE\",\n    \"ENIC\",\n    \"SPXC\",\n    \"ARCH\",\n    \"AM\",\n    \"TGI\",\n    \"AWK\",\n    \"R\",\n    \"EXG\",\n    \"BKH\",\n    \"AVD\",\n    \"CMCM\",\n    \"GPN\",\n    \"HE\",\n    \"SJI\",\n    \"UGI\",\n    \"CBD\",\n    \"SMG\",\n    \"WAT\",\n    \"FLOW\",\n    \"CWT\",\n    \"MTB\",\n    \"CRL\",\n    \"FDS\",\n    \"JLL\",\n    \"HSC\",\n    \"SAIL\",\n    \"PNM\",\n    \"MXL\",\n    \"AVY\",\n    \"WMS\",\n    \"DHT\",\n    \"AVA\",\n    \"WLK\",\n    \"PSA\",\n    \"NTB\",\n    \"STE\",\n    \"DCI\",\n    \"FTAI\",\n    \"AIZ\",\n    \"BURL\",\n    \"LEG\",\n    \"COR\",\n    \"AAN\",\n    \"SOI\",\n    \"PRA\",\n    \"GPMT\",\n    \"INT\",\n    \"LPG\",\n    \"BAP\",\n    \"BC\",\n    \"SNN\",\n    \"CUBI\",\n    \"CADE\",\n    \"AJRD\",\n    \"APAM\",\n    \"PEI\",\n    \"ST\",\n    \"AKR\",\n    \"CHKR\",\n    \"MLI\",\n    \"ROG\",\n    \"UMC\",\n    \"KEYS\",\n    \"HRC\",\n    \"FRT\",\n    \"ASC\",\n    \"STC\",\n    \"IRT\",\n    \"LII\",\n    \"OSG\",\n    \"GOOS\",\n    \"BMO\",\n    \"EPAM\",\n    \"PVH\",\n    \"MTD\",\n    \"EGHT\",\n    \"ESS\",\n    \"INGR\",\n    \"HT\",\n    \"WPC\",\n    \"AWR\",\n    \"WLKP\",\n    \"BFAM\",\n    \"TEN\",\n    \"SUP\",\n    \"LL\",\n    \"LEA\",\n    \"APD\",\n    \"SXC\",\n    \"ATTO\",\n    \"DAR\",\n    \"AJG\",\n    \"RGA\",\n    \"KB\",\n    \"SNV\",\n    \"MOD\",\n    \"NSH\",\n    \"SNA\",\n    \"CLDT\",\n    \"DEO\",\n    \"UNFI\",\n    \"SAH\",\n    \"NVTA\",\n    \"HZO\",\n    \"TNK\",\n    \"HMC\",\n    \"GPI\",\n    \"CPA\",\n    \"HOV\",\n    \"CTLT\",\n    \"ROBO\",\n    \"NMM\",\n    \"SAIC\",\n    \"TPX\",\n    \"VVR\",\n    \"UL\",\n    \"HVT\",\n    \"GOLD\",\n    \"RLI\",\n    \"KEX\",\n    \"OR\",\n    \"B\",\n    \"DIN\",\n    \"NM\",\n    \"GVA\",\n    \"EVTC\",\n    \"DESP\",\n    \"TGP\",\n    \"NFJ\",\n    \"ENZ\",\n    \"KRA\",\n    \"KDMN\",\n    \"CNS\",\n    \"LXU\",\n    \"SON\",\n    \"GDOT\",\n    \"ROP\",\n    \"NLS\",\n    \"SITE\",\n    \"RBA\",\n    \"EFR\",\n    \"TEF\",\n    \"CSLT\",\n    \"KEP\",\n    \"CEIX\",\n    \"GIL\",\n    \"KYN\",\n    \"NVGS\",\n    \"MCY\",\n    \"AZUL\",\n    \"TCS\",\n    \"GATX\",\n    \"EPC\",\n    \"SRG\",\n    \"MSM\",\n    \"GEF\",\n    \"LOMA\",\n    \"HCHC\",\n    \"GGG\",\n    \"TDS\",\n    \"MTH\",\n    \"GNL\",\n    \"BXC\",\n    \"NPO\",\n    \"RCI\",\n    \"BSMX\",\n    \"BAK\",\n    \"SEM\",\n    \"CCU\",\n    \"GEL\",\n    \"HEP\",\n    \"GNRC\",\n    \"WD\",\n    \"DNB\",\n    \"RSKD\",\n    \"IVC\",\n    \"ITT\",\n    \"CHH\",\n    \"BDJ\",\n    \"PGTI\",\n    \"MDP\",\n    \"WWE\",\n    \"RNG\",\n    \"EHC\",\n    \"DTE\",\n    \"DEA\",\n    \"ERF\",\n    \"ETV\",\n    \"NFG\",\n    \"CNNE\",\n    \"WCC\",\n    \"BRC\",\n    \"AAT\",\n    \"ENR\",\n    \"NSA\",\n    \"RFP\",\n    \"USAC\",\n    \"WSR\",\n    \"RWT\",\n    \"SFL\",\n    \"AME\",\n    \"DCT\",\n    \"SR\",\n    \"HRTG\",\n    \"AYX\",\n    \"BEDU\",\n    \"CIB\",\n    \"BLD\",\n    \"NETI\",\n    \"BHLB\",\n    \"RE\",\n    \"FBC\",\n    \"CLS\",\n    \"PHK\",\n    \"GBX\",\n    \"VRS\",\n    \"HUBB\",\n    \"PBA\",\n    \"UAN\",\n    \"GMED\",\n    \"PB\",\n    \"VVI\",\n    \"TU\",\n    \"LCII\",\n    \"ADX\",\n    \"CSU\",\n    \"APTS\",\n    \"JILL\",\n    \"WWW\",\n    \"RPT\",\n    \"AFG\",\n    \"CYD\",\n    \"FPH\",\n    \"MNR\",\n    \"FN\",\n    \"CPK\",\n    \"ORC\",\n    \"SLF\",\n    \"KL\",\n    \"WK\",\n    \"FUN\",\n    \"CACI\",\n    \"SUPV\",\n    \"BOH\",\n    \"CEPU\",\n    \"ENV\",\n    \"AIN\",\n    \"CAE\",\n    \"NUV\",\n    \"HXL\",\n    \"SWM\",\n    \"EME\",\n    \"OFG\",\n    \"GLT\",\n    \"PHG\",\n    \"CMO\",\n    \"BXMX\",\n    \"AZO\",\n    \"JKS\",\n    \"TM\",\n    \"UVV\",\n    \"LAD\",\n    \"TWI\",\n    \"RYAM\",\n    \"DCO\",\n    \"HYT\",\n    \"FCPT\",\n    \"ENBL\",\n    \"MFG\",\n    \"CBB\",\n    \"NVRO\",\n    \"MMS\",\n    \"HTGC\",\n    \"NR\",\n    \"RVT\",\n    \"FMS\",\n    \"EMD\",\n    \"RDY\",\n    \"TLK\",\n    \"HTH\",\n    \"PKX\",\n    \"PAG\",\n    \"SSTK\",\n    \"BMA\",\n    \"FDP\",\n    \"BGY\",\n    \"AB\",\n    \"NUS\",\n    \"MD\",\n    \"FTK\",\n    \"PAM\",\n    \"JBT\",\n    \"PJT\",\n    \"BKE\",\n    \"RHP\",\n    \"ADC\",\n    \"ENVA\",\n    \"CMRE\",\n    \"ARW\",\n    \"NEA\",\n    \"AMG\",\n    \"NMR\",\n    \"LSI\",\n    \"EPR\",\n    \"IGD\",\n    \"GUT\",\n    \"AIT\",\n    \"MODN\",\n    \"SNX\",\n    \"TX\",\n    \"BSAC\",\n    \"PTR\",\n    \"SSL\",\n    \"HMN\",\n    \"BMI\",\n    \"CHCT\",\n    \"HHC\",\n    \"PMT\",\n    \"SHAK\",\n    \"GOLF\",\n    \"WTTR\",\n    \"DOOR\",\n    \"EGP\",\n    \"PSO\",\n    \"AOD\",\n    \"EEX\",\n    \"VCV\",\n    \"BIO\",\n    \"E\",\n    \"KRC\",\n    \"ACCO\",\n    \"TRNO\",\n    \"ASGN\",\n    \"CVNA\",\n    \"GER\",\n    \"ATKR\",\n    \"SJR\",\n    \"SA\",\n    \"NGVT\",\n    \"BY\",\n    \"VMI\",\n    \"FCN\",\n    \"WEX\",\n    \"CURO\",\n    \"KODK\",\n    \"MTRN\",\n    \"FI\",\n    \"SPH\",\n    \"NEWR\",\n    \"VCRA\",\n    \"BZH\",\n    \"PRI\",\n    \"STAR\",\n    \"LTC\",\n    \"ELS\",\n    \"TGS\",\n    \"CDR\",\n    \"BIF\",\n    \"ASIX\",\n    \"TEO\",\n    \"ZEPP\",\n    \"SRT\",\n    \"CBZ\",\n    \"RQI\",\n    \"OGS\",\n    \"RBC\",\n    \"CIO\",\n    \"NWE\",\n    \"POLY\",\n    \"GOL\",\n    \"ELF\",\n    \"VAC\",\n    \"VEC\",\n    \"WBK\",\n    \"IIF\",\n    \"AIR\",\n    \"EBR\",\n    \"HASI\",\n    \"CVI\",\n    \"AWF\",\n    \"FBK\",\n    \"ACC\",\n    \"RELX\",\n    \"JE\",\n    \"RGS\",\n    \"ITGR\",\n    \"KRO\",\n    \"SB\",\n    \"CCO\",\n    \"EBS\",\n    \"EURN\",\n    \"QTWO\",\n    \"NOA\",\n    \"CALX\",\n    \"AHT\",\n    \"TGH\",\n    \"EVA\",\n    \"ATR\",\n    \"ABG\",\n    \"DS\",\n    \"ARR\",\n    \"ATGE\",\n    \"WHD\",\n    \"JPS\",\n    \"CATO\",\n    \"MTX\",\n    \"BOE\",\n    \"FENG\",\n    \"TREX\",\n    \"FTS\",\n    \"CCS\",\n    \"CLB\",\n    \"CIT\",\n    \"UTI\",\n    \"BGB\",\n    \"IBP\",\n    \"RNGR\",\n    \"RACE\",\n    \"ROL\",\n    \"KOP\",\n    \"HI\",\n    \"BTCM\",\n    \"ETY\",\n    \"GLP\",\n    \"RYB\",\n    \"MAIN\",\n    \"DQ\",\n    \"TYL\",\n    \"AVAL\",\n    \"FPL\",\n    \"MOV\",\n    \"GTS\",\n    \"JRO\",\n    \"ARC\",\n    \"KFY\",\n    \"GIB\",\n    \"BCEI\",\n    \"DFIN\",\n    \"NNI\",\n    \"EVF\",\n    \"NTG\",\n    \"RMAX\",\n    \"HRI\",\n    \"LDL\",\n    \"PRLB\",\n    \"BIT\",\n    \"MMI\",\n    \"CR\",\n    \"CEQP\",\n    \"LNN\",\n    \"GDV\",\n    \"PEN\",\n    \"AGR\",\n    \"TKC\",\n    \"VMO\",\n    \"CRK\",\n    \"NWN\",\n    \"TSQ\",\n    \"CODI\",\n    \"IGR\",\n    \"SAM\",\n    \"DSX\",\n    \"IIPR\",\n    \"CNMD\",\n    \"HEQ\",\n    \"BPMP\",\n    \"CEN\",\n    \"UNF\",\n    \"EMO\",\n    \"NEP\",\n    \"CNA\",\n    \"CRY\",\n    \"SSD\",\n    \"AMBC\",\n    \"TSLX\",\n    \"TNC\",\n    \"UGP\",\n    \"CO\",\n    \"TDY\",\n    \"SFE\",\n    \"TRTX\",\n    \"SRI\",\n    \"MEI\",\n    \"USPH\",\n    \"JOE\",\n    \"TARO\",\n    \"HIX\",\n    \"TRTN\",\n    \"PARR\",\n    \"ASA\",\n    \"NNA\",\n    \"REX\",\n    \"EXTN\",\n    \"AWP\",\n    \"FPI\",\n    \"GLOB\",\n    \"BNED\",\n    \"CPF\",\n    \"DSL\",\n    \"PBFX\",\n    \"RCUS\",\n    \"AMRC\",\n    \"SD\",\n    \"THG\",\n    \"NOAH\",\n    \"IDA\",\n    \"MED\",\n    \"ETJ\",\n    \"NSL\",\n    \"WMK\",\n    \"IDT\",\n    \"TNP\",\n    \"NGS\",\n    \"AGS\",\n    \"GPRK\",\n    \"FOR\",\n    \"PPT\",\n    \"VLRS\",\n    \"CIR\",\n    \"THR\",\n    \"RNR\",\n    \"CHE\",\n    \"DHX\",\n    \"MUC\",\n    \"NSP\",\n    \"BBN\",\n    \"NZF\",\n    \"CBU\",\n    \"NX\",\n    \"EARN\",\n    \"PFSI\",\n    \"AQN\",\n    \"EDD\",\n    \"FEI\",\n    \"GPX\",\n    \"MCA\",\n    \"VOC\",\n    \"SRV\",\n    \"ETO\",\n    \"ASR\",\n    \"PSB\",\n    \"MN\",\n    \"AFI\",\n    \"ICD\",\n    \"CW\",\n    \"ALE\",\n    \"Y\",\n    \"HZN\",\n    \"KOF\",\n    \"PHI\",\n    \"CTR\",\n    \"MFL\",\n    \"ORA\",\n    \"ESTE\",\n    \"VKQ\",\n    \"WMC\",\n    \"LEJU\",\n    \"NCZ\",\n    \"UTF\",\n    \"GHY\",\n    \"PAC\",\n    \"AZZ\",\n    \"SJT\",\n    \"DX\",\n    \"IO\",\n    \"BLX\",\n    \"EFC\",\n    \"ACP\",\n    \"ICL\",\n    \"MIE\",\n    \"NHF\",\n    \"PHD\",\n    \"SMHI\",\n    \"HNI\",\n    \"NEU\",\n    \"FSS\",\n    \"HCI\",\n    \"NXRT\",\n    \"ISD\",\n    \"NVG\",\n    \"PHT\",\n    \"PIM\",\n    \"TYG\",\n    \"FRO\",\n    \"HY\",\n    \"CLH\",\n    \"USNA\",\n    \"WPP\",\n    \"IFN\",\n    \"TREC\",\n    \"MATX\",\n    \"PKE\",\n    \"JRS\",\n    \"MAXR\",\n    \"OXM\",\n    \"JDD\",\n    \"SMLP\",\n    \"GTY\",\n    \"WTS\",\n    \"BFZ\",\n    \"ECOM\",\n    \"CEO\",\n    \"BBW\",\n    \"NRK\",\n    \"AVK\",\n    \"HIO\",\n    \"NMZ\",\n    \"PTY\",\n    \"TR\",\n    \"CABO\",\n    \"AAC\",\n    \"BCX\",\n    \"GIM\",\n    \"GPM\",\n    \"AGM\",\n    \"UMH\",\n    \"FIX\",\n    \"HQH\",\n    \"CAF\",\n    \"CAI\",\n    \"GLOP\",\n    \"MG\",\n    \"OIA\",\n    \"PCK\",\n    \"TEI\",\n    \"VHI\",\n    \"PUK\",\n    \"JAX\",\n    \"DLB\",\n    \"TPB\",\n    \"CII\",\n    \"THQ\",\n    \"MCR\",\n    \"BTO\",\n    \"BIP\",\n    \"WIW\",\n    \"MCS\",\n    \"CIA\",\n    \"CLW\",\n    \"CEM\",\n    \"GMRE\",\n    \"IHD\",\n    \"ORN\",\n    \"MKL\",\n    \"EOI\",\n    \"FICO\",\n    \"GRC\",\n    \"OLP\",\n    \"PZN\",\n    \"SJW\",\n    \"GFF\",\n    \"LEO\",\n    \"FLY\",\n    \"AGX\",\n    \"SMP\",\n    \"GNK\",\n    \"HQL\",\n    \"IGI\",\n    \"PFN\",\n    \"EIG\",\n    \"BST\",\n    \"STK\",\n    \"DNP\",\n    \"INSW\",\n    \"NCV\",\n    \"PCN\",\n    \"CHT\",\n    \"ETW\",\n    \"KAMN\",\n    \"USM\",\n    \"TDW\",\n    \"HIL\",\n    \"NAD\",\n    \"OOMA\",\n    \"UVE\",\n    \"BTZ\",\n    \"CXE\",\n    \"DPG\",\n    \"FFC\",\n    \"FPF\",\n    \"MIXT\",\n    \"MTL\",\n    \"NL\",\n    \"PCI\",\n    \"VTA\",\n    \"SHG\",\n    \"MQT\",\n    \"CORR\",\n    \"REV\",\n    \"EGY\",\n    \"GHM\",\n    \"GCO\",\n    \"RGR\",\n    \"MITT\",\n    \"SMM\",\n    \"JPC\",\n    \"NVR\",\n    \"ESE\",\n    \"ACRE\",\n    \"HFRO\",\n    \"DCF\",\n    \"HMLP\",\n    \"NIM\",\n    \"NRP\",\n    \"PBT\",\n    \"FGB\",\n    \"PFS\",\n    \"MPA\",\n    \"YRD\",\n    \"JRI\",\n    \"LRN\",\n    \"GNT\",\n    \"ARDC\",\n    \"ECC\",\n    \"EFT\",\n    \"EHI\",\n    \"EOD\",\n    \"ETG\",\n    \"FSD\",\n    \"JGH\",\n    \"KNOP\",\n    \"MYJ\",\n    \"RENN\",\n    \"VRTV\",\n    \"TSI\",\n    \"IHG\",\n    \"KIO\",\n    \"SOR\",\n    \"KMF\",\n    \"MYE\",\n    \"PMF\",\n    \"FC\",\n    \"NC\",\n    \"BFK\",\n    \"CEA\",\n    \"HBB\",\n    \"IGA\",\n    \"IIM\",\n    \"NAN\",\n    \"NDP\",\n    \"RM\",\n    \"UTL\",\n    \"SCL\",\n    \"EOS\",\n    \"SPXX\",\n    \"NTP\",\n    \"DBL\",\n    \"MUI\",\n    \"NIE\",\n    \"ASG\",\n    \"STN\",\n    \"GHC\",\n    \"BRT\",\n    \"CSV\",\n    \"DSM\",\n    \"EBF\",\n    \"EVT\",\n    \"FMO\",\n    \"FOF\",\n    \"HNP\",\n    \"IDE\",\n    \"MMT\",\n    \"MMU\",\n    \"RCS\",\n    \"SZC\",\n    \"VGM\",\n    \"DSU\",\n    \"IQI\",\n    \"NP\",\n    \"WTM\",\n    \"SBOW\",\n    \"CHMI\",\n    \"AFB\",\n    \"GOF\",\n    \"JFR\",\n    \"BSM\",\n    \"IRL\",\n    \"JTA\",\n    \"KF\",\n    \"KTF\",\n    \"MPX\",\n    \"NAC\",\n    \"ORAN\",\n    \"PDT\",\n    \"PML\",\n    \"RMT\",\n    \"WHG\",\n    \"PGZ\",\n    \"CTBB\",\n    \"TG\",\n    \"UHT\",\n    \"LITB\",\n    \"ZTR\",\n    \"KAI\",\n    \"UBA\",\n    \"MHO\",\n    \"SCM\",\n    \"BGH\",\n    \"BGR\",\n    \"BGX\",\n    \"BUI\",\n    \"CEE\",\n    \"ETB\",\n    \"FIV\",\n    \"HYI\",\n    \"IVH\",\n    \"KREF\",\n    \"MAV\",\n    \"MCN\",\n    \"MYN\",\n    \"NEV\",\n    \"NPK\",\n    \"PFO\",\n    \"PMX\",\n    \"SOJC\",\n    \"STON\",\n    \"TLYS\",\n    \"GSL\",\n    \"TRC\",\n    \"MUJ\",\n    \"PLOW\",\n    \"RNP\",\n    \"DMO\",\n    \"JTD\",\n    \"VPG\",\n    \"BGT\",\n    \"MGU\",\n    \"CAPL\",\n    \"DKL\",\n    \"ACH\",\n    \"ALG\",\n    \"BLW\",\n    \"BSL\",\n    \"BTT\",\n    \"DTW\",\n    \"DUKH\",\n    \"GRX\",\n    \"IAE\",\n    \"JCE\",\n    \"JCO\",\n    \"MFM\",\n    \"MQY\",\n    \"MYI\",\n    \"PMM\",\n    \"SAFE\",\n    \"VET\",\n    \"WF\",\n    \"JHI\",\n    \"JP\",\n    \"PFL\",\n    \"BCH\",\n    \"IX\",\n    \"NINE\",\n    \"GF\",\n    \"FF\",\n    \"PCF\",\n    \"PDI\",\n    \"AC\",\n    \"PEO\",\n    \"OPY\",\n    \"KWR\",\n    \"CMSA\",\n    \"ARD\",\n    \"AZRE\",\n    \"BHK\",\n    \"BPT\",\n    \"CBH\",\n    \"CELP\",\n    \"COE\",\n    \"DFP\",\n    \"DIAX\",\n    \"EDI\",\n    \"EFL\",\n    \"FAM\",\n    \"FDEU\",\n    \"FIF\",\n    \"JLS\",\n    \"KSM\",\n    \"LDP\",\n    \"LGI\",\n    \"MLR\",\n    \"MNP\",\n    \"MXF\",\n    \"NIQ\",\n    \"NXQ\",\n    \"OPP\",\n    \"PAR\",\n    \"PFFD\",\n    \"PNI\",\n    \"PYN\",\n    \"SBI\",\n    \"SOJB\",\n    \"TVC\",\n    \"VTN\",\n    \"WIA\",\n    \"CIF\",\n    \"BBU\",\n    \"MSB\",\n    \"BH\",\n    \"NCA\",\n    \"GPJA\",\n    \"ALX\",\n    \"EDN\",\n    \"MVO\",\n    \"CLPR\",\n    \"GBL\",\n    \"AFT\",\n    \"AP\",\n    \"ASPN\",\n    \"BKT\",\n    \"BNY\",\n    \"BYM\",\n    \"CPAC\",\n    \"CTS\",\n    \"CULP\",\n    \"DHF\",\n    \"DTY\",\n    \"EGF\",\n    \"EMP\",\n    \"ENJ\",\n    \"FCT\",\n    \"FLC\",\n    \"FRA\",\n    \"FT\",\n    \"GDL\",\n    \"GGM\",\n    \"GGT\",\n    \"GNE\",\n    \"GSBD\",\n    \"HESM\",\n    \"HTD\",\n    \"JPT\",\n    \"KEN\",\n    \"LAC\",\n    \"MCB\",\n    \"MHI\",\n    \"MSP\",\n    \"MTR\",\n    \"MUA\",\n    \"MYD\",\n    \"NID\",\n    \"NXJ\",\n    \"NXN\",\n    \"PHX\",\n    \"RZB\",\n    \"SPLP\",\n    \"SRLP\",\n    \"TBB\",\n    \"TDA\",\n    \"TDF\",\n    \"THW\",\n    \"TPL\",\n    \"TTP\",\n    \"UFI\",\n    \"UZA\",\n    \"VGI\",\n    \"VJET\",\n    \"VPV\",\n    \"ZNH\",\n    \"BGIO\",\n    \"HGH\",\n    \"RA\",\n    \"SHI\",\n    \"DTJ\",\n    \"RZA\",\n    \"MIN\",\n    \"CXH\",\n    \"TPVG\",\n    \"EVTL\",\n    \"BFS\",\n    \"PYT\",\n    \"TAC\",\n    \"TCI\",\n    \"ACV\",\n    \"AEB\",\n    \"AGD\",\n    \"AIF\",\n    \"AIW\",\n    \"AJX\",\n    \"AJXA\",\n    \"AMOV\",\n    \"ARL\",\n    \"AXR\",\n    \"BBDO\",\n    \"BEP\",\n    \"BKN\",\n    \"BME\",\n    \"BTA\",\n    \"BWG\",\n    \"CCM\",\n    \"CCZ\",\n    \"CGA\",\n    \"CHN\",\n    \"CINR\",\n    \"CMU\",\n    \"CRT\",\n    \"CTDD\",\n    \"DAC\",\n    \"DDF\",\n    \"SST\",\n    \"DDT\",\n    \"DEX\",\n    \"DIVO\",\n    \"DLNG\",\n    \"DMB\",\n    \"DRD\",\n    \"DRUA\",\n    \"DTEC\",\n    \"DTF\",\n    \"DVD\",\n    \"EAI\",\n    \"ECCB\",\n    \"ECCY\",\n    \"EDF\",\n    \"EEA\",\n    \"ELC\",\n    \"ELVT\",\n    \"EMF\",\n    \"ENO\",\n    \"EOT\",\n    \"EQS\",\n    \"ETX\",\n    \"EVG\",\n    \"EVN\",\n    \"EXD\",\n    \"FEO\",\n    \"FFA\",\n    \"FMN\",\n    \"FMY\",\n    \"GAM\",\n    \"GBAB\",\n    \"GCV\",\n    \"GDO\",\n    \"GGZ\",\n    \"GIG\",\n    \"GJH\",\n    \"GJO\",\n    \"GJP\",\n    \"GJR\",\n    \"GJS\",\n    \"GJT\",\n    \"GMTA\",\n    \"HIE\",\n    \"HPF\",\n    \"HPI\",\n    \"HPS\",\n    \"HTFA\",\n    \"HTY\",\n    \"HYB\",\n    \"IBA\",\n    \"IHC\",\n    \"IHIT\",\n    \"IHTA\",\n    \"INDF\",\n    \"INSI\",\n    \"ITCB\",\n    \"JBK\",\n    \"JEMD\",\n    \"JEQ\",\n    \"JHB\",\n    \"JHS\",\n    \"JHX\",\n    \"JMM\",\n    \"JMP\",\n    \"JOF\",\n    \"JPI\",\n    \"JSD\",\n    \"KFS\",\n    \"KRP\",\n    \"KTH\",\n    \"KTN\",\n    \"LND\",\n    \"LUB\",\n    \"LXFR\",\n    \"MANU\",\n    \"MCI\",\n    \"MDLQ\",\n    \"MDLX\",\n    \"MFD\",\n    \"MFV\",\n    \"MGF\",\n    \"MHD\",\n    \"MHF\",\n    \"MHLA\",\n    \"MHN\",\n    \"MHNC\",\n    \"MIY\",\n    \"MLP\",\n    \"MMD\",\n    \"MPV\",\n    \"MSD\",\n    \"MUE\",\n    \"MVT\",\n    \"MXE\",\n    \"MYC\",\n    \"NAZ\",\n    \"NBB\",\n    \"HLGN\",\n    \"NGVC\",\n    \"NKG\",\n    \"NKX\",\n    \"NMI\",\n    \"NMS\",\n    \"NMT\",\n    \"NNY\",\n    \"NOM\",\n    \"NPV\",\n    \"NQP\",\n    \"NRT\",\n    \"NSS\",\n    \"NTZ\",\n    \"NUO\",\n    \"NUW\",\n    \"NWHM\",\n    \"NXC\",\n    \"NXP\",\n    \"NXR\",\n    \"ODC\",\n    \"PAI\",\n    \"PCM\",\n    \"PCQ\",\n    \"PFD\",\n    \"PFH\",\n    \"PGP\",\n    \"PKO\",\n    \"PMO\",\n    \"PNF\",\n    \"PSF\",\n    \"PYS\",\n    \"PZC\",\n    \"RFI\",\n    \"RGT\",\n    \"RIV\",\n    \"SAR\",\n    \"SBR\",\n    \"SCD\",\n    \"SCX\",\n    \"SFB\",\n    \"SOL\",\n    \"SPE\",\n    \"SWZ\",\n    \"SXI\",\n    \"TDI\",\n    \"TPVY\",\n    \"TPZ\",\n    \"TVE\",\n    \"TWN\",\n    \"TY\",\n    \"UBP\",\n    \"TDCX\",\n    \"USDP\",\n    \"VBF\",\n    \"VLT\",\n    \"VNCE\",\n    \"WALA\",\n    \"WEA\",\n    \"XFLT\",\n    \"ZYME\",\n    \"ALC\",\n    \"AMCR\",\n    \"AMRX\",\n    \"HKIB\",\n    \"PLAN\",\n    \"FINS\",\n    \"ACA\",\n    \"ARGO\",\n    \"ARLO\",\n    \"AMK\",\n    \"ACB\",\n    \"AVLR\",\n    \"AVNS\",\n    \"AVTR\",\n    \"EQH\",\n    \"AX\",\n    \"BRPM\",\n    \"BCSF\",\n    \"BBDC\",\n    \"BHC\",\n    \"BBAR\",\n    \"BEST\",\n    \"BJ\",\n    \"BSTZ\",\n    \"BE\",\n    \"BORR\",\n    \"BHR\",\n    \"MNRL\",\n    \"BSIG\",\n    \"BV\",\n    \"CANG\",\n    \"CGC\",\n    \"CPRI\",\n    \"CDAY\",\n    \"CHRA\",\n    \"CHWY\",\n    \"CWEN\",\n    \"CNF\",\n    \"CCEP\",\n    \"CFXA\",\n    \"CTK\",\n    \"CPLG\",\n    \"CNR\",\n    \"CTVA\",\n    \"CWK\",\n    \"DELL\",\n    \"DBI\",\n    \"DCUE\",\n    \"DOW\",\n    \"DD\",\n    \"DT\",\n    \"ELAN\",\n    \"ESTC\",\n    \"ESI\",\n    \"DAVA\",\n    \"ET\",\n    \"EQNR\",\n    \"ETRN\",\n    \"EPRT\",\n    \"EB\",\n    \"EVRG\",\n    \"ACR\",\n    \"FPAC\",\n    \"FTCH\",\n    \"FSLY\",\n    \"FVRR\",\n    \"FLNG\",\n    \"FSK\",\n    \"GL\",\n    \"EAF\",\n    \"GHG\",\n    \"GSAH\",\n    \"GOTU\",\n    \"HNGR\",\n    \"HEXO\",\n    \"HGLB\",\n    \"HUYA\",\n    \"IAA\",\n    \"INSP\",\n    \"IFS\",\n    \"JEF\",\n    \"JMIA\",\n    \"KDP\",\n    \"KTB\",\n    \"LHX\",\n    \"LAIX\",\n    \"LHC\",\n    \"LEVI\",\n    \"LIN\",\n    \"LTHM\",\n    \"RAMP\",\n    \"MGY\",\n    \"MEC\",\n    \"MDLA\",\n    \"AMPY\",\n    \"MUFG\",\n    \"MOGU\",\n    \"CTOS\",\n    \"NIO\",\n    \"JHAA\",\n    \"NVT\",\n    \"ONE\",\n    \"ORCC\",\n    \"PD\",\n    \"PSN\",\n    \"PVL\",\n    \"PRT\",\n    \"PHR\",\n    \"NRGX\",\n    \"PINS\",\n    \"PSTL\",\n    \"PROS\",\n    \"NEW\",\n    \"RMED\",\n    \"PACK\",\n    \"RC\",\n    \"REZI\",\n    \"RVI\",\n    \"RVLV\",\n    \"RMM\",\n    \"RSF\",\n    \"RMI\",\n    \"SCPE\",\n    \"SRL\",\n    \"SITC\",\n    \"WORK\",\n    \"SMAR\",\n    \"SWI\",\n    \"SPAQ\",\n    \"SPOT\",\n    \"MSC\",\n    \"STG\",\n    \"JOBY\",\n    \"NOVA\",\n    \"SUZ\",\n    \"TAK\",\n    \"TALO\",\n    \"TME\",\n    \"TEAF\",\n    \"TUFN\",\n    \"USX\",\n    \"UBER\",\n    \"UI\",\n    \"VAPO\",\n    \"VNE\",\n    \"VCIF\",\n    \"VIST\",\n    \"WEI\",\n    \"WH\",\n    \"XYF\",\n    \"YETI\",\n    \"ZUO\",\n    \"AEF\",\n    \"VRT\",\n    \"TFII\",\n    \"ACEL\",\n    \"AIO\",\n    \"BILL\",\n    \"RFL\",\n    \"BKR\",\n    \"BRBR\",\n    \"BMEZ\",\n    \"J\",\n    \"EIC\",\n    \"FINV\",\n    \"BRMK\",\n    \"EPAC\",\n    \"CSPR\",\n    \"DAO\",\n    \"FHI\",\n    \"SCU\",\n    \"NTCO\",\n    \"ONTO\",\n    \"PEAK\",\n    \"NREF\",\n    \"PINE\",\n    \"PING\",\n    \"NET\",\n    \"NEX\",\n    \"OCFT\",\n    \"PIPR\",\n    \"NVST\",\n    \"NMCO\",\n    \"SI\",\n    \"OVV\",\n    \"SPCE\",\n    \"CHPT\",\n    \"TFC\",\n    \"VVNT\",\n    \"VEL\",\n    \"WTRG\",\n    \"HCXZ\",\n    \"HCXY\",\n    \"NTEST\",\n    \"ENBA\",\n    \"NRUC\",\n    \"IFFT\",\n    \"PRS\",\n    \"SREA\",\n    \"SAF\",\n    \"AFGC\",\n    \"AEFC\",\n    \"AQNB\",\n    \"AQNA\",\n    \"CMSD\",\n    \"CMSC\",\n    \"UNMA\",\n    \"UZB\",\n    \"ARGD\",\n    \"CUBB\",\n    \"DUKB\",\n    \"ECCX\",\n    \"WTRU\",\n    \"MGR\",\n    \"BSA\",\n    \"TBC\",\n    \"AFGE\",\n    \"AFGB\",\n    \"RCB\",\n    \"RCA\",\n    \"PBC\",\n    \"PBY\",\n    \"SOLN\",\n    \"QVCD\",\n    \"AIC\",\n    \"DTP\",\n    \"ELAT\",\n    \"GSLD\",\n    \"SOJD\",\n    \"QVCC\",\n    \"NFH\",\n    \"SJIJ\",\n    \"SWT\",\n    \"DLY\",\n    \"ATCO\",\n    \"SBSW\",\n    \"RESP\",\n    \"TT\",\n    \"GFLU\",\n    \"GFL\",\n    \"ALTG\",\n    \"SCVX\",\n    \"RFM\",\n    \"CBO\",\n    \"BIPC\",\n    \"HWM\",\n    \"CARR\",\n    \"RTX\",\n    \"OTIS\",\n    \"CCAC\",\n    \"ZGYH\",\n    \"IVES\",\n    \"BKMC\",\n    \"BKSE\",\n    \"KOKU\",\n    \"BKLC\",\n    \"BBMC\",\n    \"MSGE\",\n    \"MSGS\",\n    \"BKSB\",\n    \"BKAG\",\n    \"BKEM\",\n    \"APG\",\n    \"DEED\",\n    \"NVVE\",\n    \"GLCN\",\n    \"GLIN\",\n    \"DFPHW\",\n    \"DFPH\",\n    \"GAU\",\n    \"ARB\",\n    \"TAAG\",\n    \"TADS\",\n    \"JEPI\",\n    \"JIG\",\n    \"ADCT\",\n    \"SLQT\",\n    \"TMBR\",\n    \"MTCN\",\n    \"SGOV\",\n    \"SSLY\",\n    \"BDXB\",\n    \"AFGD\",\n    \"CEFD\",\n    \"CHX\",\n    \"MLPR\",\n    \"FOUR\",\n    \"MVRL\",\n    \"SBBA\",\n    \"EMBD\",\n    \"HIPR\",\n    \"DYHG\",\n    \"NIFE\",\n    \"AZEK\",\n    \"VTOL\",\n    \"DEEP\",\n    \"PAMC\",\n    \"WFH\",\n    \"IBDV\",\n    \"PALC\",\n    \"EUSB\",\n    \"PFFV\",\n    \"ACI\",\n    \"SOAC\",\n    \"ALTL\",\n    \"DYFN\",\n    \"FTHY\",\n    \"SII\",\n    \"AZAL\",\n    \"SAK\",\n    \"LMND\",\n    \"ZEV\",\n    \"PCGU\",\n    \"LOCL\",\n    \"AVNT\",\n    \"DMS\",\n    \"IBTK\",\n    \"SOS\",\n    \"GBGR\",\n    \"MEG\",\n    \"GBLO\",\n    \"NWG\",\n    \"FUSE\",\n    \"BEKE\",\n    \"FCRW\",\n    \"NTST\",\n    \"OSH\",\n    \"BEPC\",\n    \"ASGI\",\n    \"RKT\",\n    \"TREB\",\n    \"PLTR\",\n    \"U\",\n    \"YSG\",\n    \"LU\",\n    \"SQZ\",\n    \"MAX\",\n    \"GATO\",\n    \"MNSO\",\n    \"IH\",\n    \"FUBO\",\n    \"GHLD\",\n    \"ASAN\",\n    \"AMWL\",\n    \"BNL\",\n    \"SNOW\",\n    \"BQ\",\n    \"YALA\",\n    \"VIAO\",\n    \"XPEV\",\n    \"ASAQ\",\n    \"BSN\",\n    \"CPSR\",\n    \"CRHC\",\n    \"DGNR\",\n    \"ENPC\",\n    \"EOSE\",\n    \"EQD\",\n    \"FGNA\",\n    \"FSR\",\n    \"FST\",\n    \"GOAC\",\n    \"HYLN\",\n    \"HZAC\",\n    \"LEAP\",\n    \"MP\",\n    \"OACB\",\n    \"NUVB\",\n    \"PDAC\",\n    \"PIAI\",\n    \"PMVC\",\n    \"PSTH\",\n    \"RBAC\",\n    \"RTP\",\n    \"STEM\",\n    \"TWND\",\n    \"YAC\",\n    \"LUMN\",\n    \"VNT\",\n    \"QS\",\n    \"DASH\",\n    \"IPOF\",\n    \"PRG\",\n    \"ACIC\",\n    \"AIRC\",\n    \"AJAX\",\n    \"AVAN\",\n    \"BOAC\",\n    \"FMAC\",\n    \"HIGA\",\n    \"HZON\",\n    \"IMPX\",\n    \"IPOD\",\n    \"PACE\",\n    \"RICE\",\n    \"SDHY\",\n    \"SG\",\n    \"SEAH\",\n    \"SKLZ\",\n    \"SPNV\",\n    \"BARK\",\n    \"TPGY\",\n    \"VYGG\",\n    \"XPOA\",\n    \"AGCB\",\n    \"AGC\",\n    \"AI\",\n    \"CDRE\",\n    \"MYTE\",\n    \"APSG\",\n    \"CIXX\",\n    \"HPX\",\n    \"LSPD\",\n    \"NYC\",\n    \"TIMB\",\n    \"TINV\",\n    \"TMX\",\n    \"HIMS\",\n    \"LDI\",\n    \"ATC\",\n    \"SGFY\",\n    \"DM\",\n    \"BFLY\",\n    \"OSCR\",\n    \"BUZZ\",\n    \"RBLX\",\n    \"FHS\",\n    \"CPNG\",\n    \"ARIS\",\n    \"HAYW\",\n    \"CSR\",\n    \"TNL\",\n    \"CCIV\",\n    \"OUST\",\n    \"VEI\",\n    \"TUYA\",\n    \"NAPA\",\n    \"ESGC\",\n    \"DOCN\",\n    \"VZIO\",\n    \"SEMR\",\n    \"ZH\",\n    \"AEVA\",\n    \"COUR\",\n    \"COMP\",\n    \"PANA\",\n    \"PSFE\",\n    \"RMO\",\n    \"STLA\",\n    \"UWMC\",\n    \"AGL\",\n    \"CS\",\n    \"PATH\",\n    \"DV\",\n    \"AGTI\",\n    \"EDR\",\n    \"GTX\",\n    \"LEV\",\n    \"SMWB\",\n    \"MPLN\",\n    \"SQSP\",\n    \"PCOR\",\n    \"PAY\",\n    \"ZIP\",\n    \"RSI\",\n    \"ZME\",\n    \"OGN\",\n    \"CXM\",\n    \"YMM\",\n    \"BHG\",\n    \"DOCS\",\n    \"ATIP\",\n    \"MCW\",\n    \"DDL\",\n    \"S\",\n    \"IS\",\n    \"DIDI\",\n    \"FXLV\",\n    \"BRDG\",\n    \"INST\",\n    \"VTEX\",\n    \"ZVIA\",\n    \"DEN\",\n    \"WFG\",\n    \"LAW\",\n    \"XPOF\",\n    \"CNM\",\n    \"MLNK\",\n    \"DOLE\",\n    \"BBWI\",\n    \"VSCO\",\n    \"TIXT\",\n    \"CLVT\",\n    \"DTM\",\n    \"DBRG\",\n    \"BALY\",\n    \"UTZ\",\n    \"DNMR\",\n    \"GIC\",\n    \"NABL\",\n    \"ONTF\",\n    \"BVH\",\n    \"RYAN\",\n    \"FOA\",\n    \"PWSC\",\n    \"FIGS\",\n    \"AOMR\",\n    \"COOK\",\n    \"YOU\",\n    \"CNVY\",\n    \"IRNT\",\n    \"ONON\",\n    \"BROS\",\n    \"MOTV\",\n    \"ZIM\",\n    \"ZETA\",\n    \"WEBR\",\n    \"WDI\",\n    \"VAL\",\n    \"UPH\",\n    \"UP\",\n    \"RKLY\",\n    \"UGIC\",\n    \"TTE\",\n    \"SUNL\",\n    \"STPC\",\n    \"SPIR\",\n    \"SKIL\",\n    \"RTPZ\",\n    \"ROT\",\n    \"RLX\",\n    \"RERE\",\n    \"RDW\",\n    \"RAAS\",\n    \"PV\",\n    \"PRPB\",\n    \"PNTM\",\n    \"PDO\",\n    \"OWLT\",\n    \"OCA\",\n    \"NXU\",\n    \"NSTB\",\n    \"BKKT\",\n    \"NSR\",\n    \"NMG\",\n    \"NDMO\",\n    \"MKFG\",\n    \"MCG\",\n    \"OPAD\",\n    \"LOKB\",\n    \"LFT\",\n    \"KNL\",\n    \"KAHC\",\n    \"JWSM\",\n    \"JBI\",\n    \"IVAN\",\n    \"IIAC\",\n    \"HLLY\",\n    \"GXO\",\n    \"GPOR\",\n    \"GFX\",\n    \"GENI\",\n    \"GB\",\n    \"FREY\",\n    \"FERG\",\n    \"ETD\",\n    \"ECVT\",\n    \"DMYI\",\n    \"DEH\",\n    \"CVII\",\n    \"CURV\",\n    \"CSAN\",\n    \"CPUH\",\n    \"CND\",\n    \"CGAU\",\n    \"CCV\",\n    \"CBAH\",\n    \"CAS\",\n    \"CAP\",\n    \"CANO\",\n    \"BRW\",\n    \"BRSP\",\n    \"BODY\",\n    \"BLND\",\n    \"BAMR\",\n    \"FORG\",\n    \"TOST\",\n    \"AKA\",\n    \"ESMT\",\n    \"NRDY\",\n    \"DNA\",\n    \"IHS\",\n    \"LEU\",\n    \"WDH\",\n    \"WE\",\n    \"BBLN\",\n    \"WBX\",\n    \"ACHR\",\n    \"WOLF\",\n    \"CTV\",\n    \"SMRT\",\n    \"AVYA\",\n    \"BHIL\",\n    \"AMAM\",\n    \"HGTY\",\n    \"KIND\",\n    \"BRDS\",\n    \"DOMA\",\n    \"BKSY\",\n    \"CIAN\",\n    \"MDV\",\n  ];\n  \n  // ---------------------- END OF KEYS -------------------------------------\n\n\n// ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\nasync function filterTradableSymbols(arr1, arr2, compileCallback) {\n  let nyseHolderDown = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n  let nyseHolderUp = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n  let nasdaqHolderDown = [];\n  let nasdaqHolderUp = [];\n  try {\n    // ------ FETCH NYSE\n    const res = await fetch(\n      \"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n    );\n    const dataNyse = await res.json();\n    // ----- FILTER TRADABLE SYMBOLS ON NYSE THAT HAVE DROPPED\n    for (let i = 0; i < dataNyse.length; i++) {\n      if (\n        dataNyse[i].changesPercentage < -5 &&\n        arr1.indexOf(dataNyse[i].symbol) > 0 &&\n        dataNyse[i].price > 1\n      ) {\n        nyseHolderDown.push(dataNyse[i]);\n      }\n    }\n\n    for (let i = 0; i < dataNyse.length; i++) {\n      if (\n        dataNyse[i].changesPercentage > 5 &&\n        arr1.indexOf(dataNyse[i].symbol) > 0 &&\n        dataNyse[i].price > 1\n      ) {\n        nyseHolderUp.push(dataNyse[i]);\n      }\n    }\n    // ------ FETCH NASDAQ\n    const resTwo = await fetch(\n      \"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n    );\n    const dataNas = await resTwo.json();\n    // ----- FILTER TRADABLE SYMBOLS ON NASDAQ THAT HAVE DROPPED\n    for (let i = 0; i < dataNas.length; i++) {\n      if (\n        dataNas[i].changesPercentage < -5 &&\n        arr2.indexOf(dataNas[i].symbol) > 0 &&\n        dataNas[i].price > 1\n      ) {\n        nasdaqHolderDown.push(dataNas[i]);\n      }\n    }\n\n    for (let i = 0; i < dataNas.length; i++) {\n      if (\n        dataNas[i].changesPercentage > 5 &&\n        arr2.indexOf(dataNas[i].symbol) > 0 &&\n        dataNas[i].price > 1\n      ) {\n        nasdaqHolderUp.push(dataNas[i]);\n      }\n    }\n    //--------- CATCH\n  } catch (e) {}\n  compileCallback(\n    nasdaqHolderDown,\n    nyseHolderDown,\n    nyseHolderUp,\n    nasdaqHolderUp,\n    technicalIndicators\n  ); // CALLBACK FOR STOCK FILTER\n}\n\nfunction compileStocks(arr1, arr2, arr3, arr4, callback) {\n  //---------------------- COMBINE AND SORT LARGEST DROP -------------------------\n  let finalChartFatDown = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  let finalChartFatUp = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  let finalChart = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  // ------- THIS IS A FILTER FOR WEIRD STOCK SYMBOLS THAT SLIP IN ----------\n\n  let combinedStockDrop = [];\n  combinedStockDrop = combinedStockDrop.concat(arr1, arr2);\n\n  let combinedStockUp = [];\n  combinedStockUp = combinedStockUp.concat(arr3, arr4);\n\n  const keys = /^[A-Z]{1,4}$/g;\n  finalChartFatDown = combinedStockDrop.filter((stock) => {\n    return stock.symbol.match(keys);\n  });\n\n  finalChartFatUp = combinedStockUp.filter((stock) => {\n    return stock.symbol.match(keys);\n  });\n\n  for (let i = 0; i < finalChartFatDown.length; i++) {\n    finalChartFatDown.sort((a, b) => {\n      return a.changesPercentage - b.changesPercentage;\n    });\n  }\n\n  for (let i = 0; i < finalChartFatUp.length; i++) {\n    finalChartFatUp.sort((a, b) => {\n      return b.changesPercentage - a.changesPercentage;\n    });\n  }\n  // MAKE SURE ARR HAS RIGHT LENGTH TO LOAD ------------\n  const holderObjDown = {\n    avgVolume: -1,\n    bbLower: \"-1\",\n    bbMiddle: \"-1\",\n    bbPercent: \"-1\",\n    bbUpper: \"-1\",\n    cciTwenty: \"-1\",\n    change: -1,\n    changesPercentage: -1,\n    dayHigh: -1,\n    dayLow: -1,\n    earningsAnnouncement: \"-1\",\n    emaEight: \"-1\",\n    emaFifty: \"-1\",\n    emaTwelve: \"-1\",\n    emaTwenty: \"-1\",\n    emaTwentySix: \"-1\",\n    emaTwoHun: \"-1\",\n    eps: -1,\n    exchange: \"No Data\",\n    macd: \"-1\",\n    macdHistogram: \"-1\",\n    macdSignalLine: \"-1\",\n    marketCap: -1,\n    name: \"Placeholder for lack of Symbols\",\n    open: -1,\n    pe: -1,\n    previousClose: -1,\n    price: 1,\n    priceAvg50: -1,\n    priceAvg200: -1,\n    rsi: \"-1\",\n    sharesOutstanding: -1,\n    smaFifty: \"-1\",\n    smaFiveTeen: \"-1\",\n    smaOneHun: \"-1\",\n    smaThirty: \"-1\",\n    smaTwenty: \"-1\",\n    smaTwoHun: \"-1\",\n    stochasticD: \"-1\",\n    stochasticK: \"-1\",\n    stochasticSignal: \"-1\",\n    symbol: \"No Data\",\n    timestamp: -1,\n    volume: -1,\n    vwap: \"-1\",\n    vwmaFifty: \"-1\",\n    vwmaFiveTeen: \"-1\",\n    vwmaOneHun: \"-1\",\n    vwmaThirty: \"-1\",\n    vwmaTwenty: \"-1\",\n    vwmaTwoHun: \"-1\",\n    williamsR: \"-1\",\n    wmaFifty: \"-1\",\n    wmaFiveTeen: \"-1\",\n    wmaOneHun: \"-1\",\n    wmaThirty: \"-1\",\n    wmaTwenty: \"-1\",\n    wmaTwoHun: \"-1\",\n    yearHigh: -1,\n    yearLow: -1,\n    yesterdayVolume: -1,\n  };\n  const holderObjUp = {\n    avgVolume: 1,\n    bbLower: \"1\",\n    bbMiddle: \"1\",\n    bbPercent: \"1\",\n    bbUpper: \"1\",\n    cciTwenty: \"1\",\n    change: 1,\n    changesPercentage: 1,\n    dayHigh: 1,\n    dayLow: 1,\n    earningsAnnouncement: \"1\",\n    emaEight: \"1\",\n    emaFifty: \"1\",\n    emaTwelve: \"1\",\n    emaTwenty: \"1\",\n    emaTwentySix: \"1\",\n    emaTwoHun: \"1\",\n    eps: 1,\n    exchange: \"No Data\",\n    macd: \"1\",\n    macdHistogram: \"1\",\n    macdSignalLine: \"1\",\n    marketCap: 1,\n    name: \"Placeholder for lack of Symbols\",\n    open: 1,\n    pe: 1,\n    previousClose: 1,\n    price: 1,\n    priceAvg50: 1,\n    priceAvg200: 1,\n    rsi: \"1\",\n    sharesOutstanding: 1,\n    smaFifty: \"1\",\n    smaFiveTeen: \"1\",\n    smaOneHun: \"1\",\n    smaThirty: \"1\",\n    smaTwenty: \"1\",\n    smaTwoHun: \"1\",\n    stochasticD: \"1\",\n    stochasticK: \"1\",\n    stochasticSignal: \"1\",\n    symbol: \"No Data\",\n    timestamp: 1,\n    volume: 1,\n    vwap: \"1\",\n    vwmaFifty: \"1\",\n    vwmaFiveTeen: \"1\",\n    vwmaOneHun: \"1\",\n    vwmaThirty: \"1\",\n    vwmaTwenty: \"1\",\n    vwmaTwoHun: \"1\",\n    williamsR: \"1\",\n    wmaFifty: \"1\",\n    wmaFiveTeen: \"1\",\n    wmaOneHun: \"1\",\n    wmaThirty: \"1\",\n    wmaTwenty: \"1\",\n    wmaTwoHun: \"1\",\n    yearHigh: 1,\n    yearLow: 1,\n    yesterdayVolume: 1,\n  };\n\n  if (finalChartFatUp.length < 5) {\n    while (finalChartFatUp.length < 5) {\n      finalChartFatUp.push(holderObjUp);\n    }\n  }\n  if (finalChartFatDown.length < 5) {\n    while (finalChartFatDown.length < 5) {\n      finalChartFatDown.push(holderObjDown);\n    }\n  }\n  // SLIM CHAT DOWN SO IT'S NOT BLOATED\n  let slimChartDown = 4;\n  while (slimChartDown >= 0) {\n    finalChart.unshift(finalChartFatDown[slimChartDown]);\n    slimChartDown--;\n  }\n\n  let slimChartUp = 4;\n  while (slimChartUp >= 0) {\n    finalChart.unshift(finalChartFatUp[slimChartUp]);\n    slimChartUp--;\n  }\n\n  callback(finalChart, filterUpDownStocks);\n}\n\n// ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n\n// SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction smaFunction(chartArr, dataPull, newestPull, num) {\n  let culSMA = 0;\n\n  // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n  let fiveTeenSMA = 13;\n  let twentySMA = 18;\n  let thirtySMA = 28;\n  let fiftySMA = 48;\n  let hunSMA = 98;\n  let twoHunSMA = 198;\n\n  try {\n    const todayPricePull = newestPull[0].price;\n    // ------------- 15 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 13) {\n      chartArr[num].smaFiveTeen = \"No Data\";\n    } else {\n      while (fiveTeenSMA >= 0) {\n        culSMA += dataPull.historical[fiveTeenSMA].close;\n        fiveTeenSMA--;\n      }\n      let smaFiveResult = (culSMA + todayPricePull) / 15;\n      chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 20 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 19) {\n      chartArr[num].smaTwenty = \"No Data\";\n    } else {\n      while (twentySMA >= 0) {\n        culSMA += dataPull.historical[twentySMA].close;\n        twentySMA--;\n      }\n      let smaTwentyResult = (culSMA + todayPricePull) / 20;\n      chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 30 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 29) {\n      chartArr[num].smaThirty = \"No Data\";\n    } else {\n      while (thirtySMA >= 0) {\n        culSMA += dataPull.historical[thirtySMA].close;\n        thirtySMA--;\n      }\n      let smaThirtyResult = (culSMA + todayPricePull) / 30;\n      chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 50 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 49) {\n      chartArr[num].smaFifty = \"No Data\";\n    } else {\n      while (fiftySMA >= 0) {\n        culSMA += dataPull.historical[fiftySMA].close;\n        fiftySMA--;\n      }\n      let smaFiftyResult = (culSMA + todayPricePull) / 50;\n      chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 100 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 99) {\n      chartArr[num].smaOneHun = \"No Data\";\n    } else {\n      while (hunSMA >= 0) {\n        culSMA += dataPull.historical[hunSMA].close;\n        hunSMA--;\n      }\n      let smaOneHunResult = (culSMA + todayPricePull) / 100;\n      chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 200 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 199) {\n      chartArr[num].smaTwoHun = \"No Data\";\n    } else {\n      while (twoHunSMA >= 0) {\n        culSMA += dataPull.historical[twoHunSMA].close;\n        twoHunSMA--;\n      }\n      let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n      chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n      culSMA = 0;\n    }\n  } catch (e) {}\n}\n// WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction wmaFunction(chartArr, dataPull, newestPull, num) {\n  // WMA FiveTeen --------------------------------------------------------------------\n  let weight = 14;\n  let wmaInterval = 0;\n  let iWma = 15;\n  try {\n    let wmaCul = newestPull[0].price * 15;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].wmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFiveTeen = wmaCul / iWma;\n      chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n    }\n\n    // WMA Twenty --------------------------------------------------------------------\n    wmaCul = newestPull[0].price * 20;\n    weight = 19;\n    wmaInterval = 0;\n    iWma = 20;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].wmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwenty = wmaCul / iWma;\n      chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n    }\n\n    // WMA THIRTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 30;\n    weight = 29;\n    wmaInterval = 0;\n    iWma = 30;\n\n    if (dataPull.historical.length < 30) {\n      chartArr[num].wmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaThirty = wmaCul / iWma;\n      chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n    }\n\n    // WMA FIFTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 50;\n    weight = 49;\n    wmaInterval = 0;\n    iWma = 50;\n\n    if (dataPull.historical.length < 50) {\n      chartArr[num].wmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFifty = wmaCul / iWma;\n      chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n    }\n\n    // WMA ONE HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 100;\n    weight = 99;\n    wmaInterval = 0;\n    iWma = 100;\n\n    if (dataPull.historical.length < 100) {\n      chartArr[num].wmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaOneHun = wmaCul / iWma;\n      chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n    }\n\n    // WMA TWO HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 200;\n    weight = 199;\n    wmaInterval = 0;\n    iWma = 200;\n\n    if (dataPull.historical.length < 200) {\n      chartArr[num].wmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwoHun = wmaCul / iWma;\n      chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwmaFunction(chartArr, dataPull, newestPull, num) {\n  // VWMA FIVETEEN --------------------------------------------------------------------\n\n  try {\n    let price = 0;\n    let volume = 0;\n    const newPrice = newestPull[0].price;\n    const newVol = newestPull[0].volume;\n\n    let volCul = newestPull[0].volume;\n    let totalCul = newPrice * newVol;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].vwmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        price = dataPull.historical[i].close;\n        volume = dataPull.historical[i].volume;\n        totalCul += price * volume;\n        volCul += dataPull.historical[i].volume;\n      }\n      const vwmaFiveTeen = totalCul / volCul;\n      chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n    }\n\n    // VWMA TWENTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].vwmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        price = dataPull.historical[i].close;\n        volume = dataPull.historical[i].volume;\n        totalCul += price * volume;\n        volCul += dataPull.historical[i].volume;\n      }\n      const vwmaTwenty = totalCul / volCul;\n      chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n    }\n\n    // VWMA THIRTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 29) {\n      chartArr[num].vwmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        price = dataPull.historical[i].close;\n        volume = dataPull.historical[i].volume;\n        totalCul += price * volume;\n        volCul += dataPull.historical[i].volume;\n      }\n      const vwmaThirty = totalCul / volCul;\n      chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n    }\n\n    // VWMA FIFTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 49) {\n      chartArr[num].vwmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        price = dataPull.historical[i].close;\n        volume = dataPull.historical[i].volume;\n        totalCul += price * volume;\n        volCul += dataPull.historical[i].volume;\n      }\n      const vwmaFifty = totalCul / volCul;\n      chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n    }\n\n    // VWMA ONEHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 99) {\n      chartArr[num].vwmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        price = dataPull.historical[i].close;\n        volume = dataPull.historical[i].volume;\n        totalCul += price * volume;\n        volCul += dataPull.historical[i].volume;\n      }\n      const vwmaOneHun = totalCul / volCul;\n      chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n    }\n\n    // VWMA TWOHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 199) {\n      chartArr[num].vwmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        price = dataPull.historical[i].close;\n        volume = dataPull.historical[i].volume;\n        totalCul += price * volume;\n        volCul += dataPull.historical[i].volume;\n      }\n      const vwmaTwoHun = totalCul / volCul;\n      chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n  let emaEight = 14;\n  let emaTwelve = 22;\n  let emaTwenty = 38;\n  let emaTwentySix = 50;\n  let emaFifty = 98;\n  let emaTwoHun = 398;\n  let prevDayEmaSub = 0;\n  let arrEma = [];\n\n  let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n  let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n  try {\n    const newPrice = newestPull[0].price;\n\n    // EMA EIGHT ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 16) {\n      chartArr[num].emaEight = \"No Data\";\n    } else {\n      while (emaEight >= 15) {\n        prevDayEmaSub += dataPull.historical[emaEight].close;\n        emaEight--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 8;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 9) * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaEight--;\n      while (emaEight >= 0) {\n        let derp =\n          (2 / 9) * (dataPull.historical[emaEight].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaEight--;\n      }\n\n      const finalEma = (2 / 9) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaEight = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n    // EMA TWELVE ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 24) {\n      chartArr[num].emaTwelve = \"No Data\";\n    } else {\n      while (emaTwelve >= 11) {\n        prevDayEmaSub += dataPull.historical[emaTwelve].close;\n        emaTwelve--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n      const subEMA = prevDayEmaSub / 12;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 13) * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwelve--;\n\n      while (emaTwelve >= 0) {\n        let derp =\n          (2 / 13) * (dataPull.historical[emaTwelve].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwelve < 8 && emaTwelve >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwelve.unshift(derp);\n        }\n        emaTwelve--;\n      }\n\n      const finalEma = (2 / 13) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwelve.unshift(finalEma);\n\n      chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 40) {\n      chartArr[num].emaTwenty = \"No Data\";\n    } else {\n      while (emaTwenty >= 19) {\n        prevDayEmaSub += dataPull.historical[emaTwenty].close;\n        emaTwenty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 20;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 21) * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwenty--;\n      while (emaTwenty >= 0) {\n        let derp =\n          (2 / 21) * (dataPull.historical[emaTwenty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwenty--;\n      }\n\n      const finalEma = (2 / 21) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY SIX ----------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 51) {\n      chartArr[num].emaTwentySix = \"No Data\";\n    } else {\n      while (emaTwentySix >= 25) {\n        prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n        emaTwentySix--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 26;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 27) * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwentySix--;\n      while (emaTwentySix >= 0) {\n        let derp =\n          (2 / 27) * (dataPull.historical[emaTwentySix].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwentySix < 8 && emaTwentySix >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwentySix.unshift(derp);\n        }\n        emaTwentySix--;\n      }\n\n      const finalEma = (2 / 27) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwentySix.unshift(finalEma);\n\n      chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA FIFTY -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 100) {\n      chartArr[num].emaFifty = \"No Data\";\n    } else {\n      while (emaFifty >= 49) {\n        prevDayEmaSub += dataPull.historical[emaFifty].close;\n        emaFifty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 50;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 51) * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaFifty--;\n      while (emaFifty >= 0) {\n        let derp =\n          (2 / 51) * (dataPull.historical[emaFifty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaFifty--;\n      }\n\n      const finalEma = (2 / 51) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaFifty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 400) {\n      chartArr[num].emaTwoHun = \"No Data\";\n    } else {\n      while (emaTwoHun >= 199) {\n        prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n        emaTwoHun--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 200;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 201) * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwoHun--;\n      while (emaTwoHun >= 0) {\n        let derp =\n          (2 / 201) * (dataPull.historical[emaTwoHun].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwoHun--;\n      }\n\n      const finalEma = (2 / 201) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n  } catch (e) {}\n\n  // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n  macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n}\n// MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\nfunction macdFunction(chartArr, num, arr1, arr2) {\n  const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n  chartArr[num].macd = macd.toFixed(2);\n  // CALCULATE SIGNAL LINE ----------------\n  let averageMacd = [];\n  let iMacd = 8;\n\n  try {\n    while (iMacd >= 0) {\n      averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n      iMacd--;\n    }\n    let averageSum = averageMacd.reduce((a, b) => a + b);\n    let finalAverageMacd = averageSum / 9;\n    let macdSignalLine =\n      (2 / 9) * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n    chartArr[num].macdSignalLine = macdSignalLine.toFixed(2);\n    // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n    let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n    chartArr[num].macdHistogram = histogram.toFixed(2);\n    // FOR NO DATA TO PULL FROM\n    if (chartArr[num].macdHistogram === \"NaN\") {\n      chartArr[num].macdHistogram = \"No Data\";\n    }\n    if (chartArr[num].macd === \"NaN\") {\n      chartArr[num].macd = \"No Data\";\n    }\n    if (chartArr[num].macdSignalLine === \"NaN\") {\n      chartArr[num].macdSignalLine = \"No Data\";\n    }\n  } catch (e) {}\n}\n// RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction rsiFunction(chartArr, dataPull, newestPull, num) {\n  let iRSI = 13;\n  let iRSIAdjusted = 14;\n  let recentUpper = 0;\n  let recentDowner = 0;\n  let upMove = 0;\n  let downMove = 0;\n  let pastDownPeriod = 0;\n  let pastUpPeriod = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n    if (dataPull.historical.length <= 14) {\n      chartArr[num].rsi = \"No Data\";\n    } else {\n      // LOOP FOR AVERAGE\n      while (iRSI >= 0) {\n        if (\n          dataPull.historical[iRSI].close >\n          dataPull.historical[iRSIAdjusted].close\n        ) {\n          upMove +=\n            dataPull.historical[iRSI].close -\n            dataPull.historical[iRSIAdjusted].close;\n        } else {\n          downMove +=\n            dataPull.historical[iRSIAdjusted].close -\n            dataPull.historical[iRSI].close;\n        }\n        iRSI--;\n        iRSIAdjusted--;\n      }\n\n      let averageUp = upMove / 14;\n      let averageDown = downMove / 14;\n\n      // MOST RECENT DIFFERENCE\n      if (newPrice > dataPull.historical[0].close) {\n        recentUpper = newPrice - dataPull.historical[0].close;\n      } else {\n        recentDowner = dataPull.historical[0].close - newPrice;\n      }\n\n      pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n      pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n\n      let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n      chartArr[num].rsi = rsi.toFixed(2);\n    }\n  } catch (e) {}\n}\n// STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n  let iSO = 13;\n\n  let soLowHolder = [];\n  let soHighHolder = [];\n  let highestHigh = 0;\n  let lowestLow = 0;\n  // FIRST %D\n  let topForm = [];\n  let bottomForm = [];\n  // SECOND %D\n  let topFormTwo = [];\n  let bottomFormTwo = [];\n  // THIRD %D\n  let topFormThree = [];\n  let bottomFormThree = [];\n  // HOLDING SET OF %D FOR 14 3 3\n  let signalLineHolder = [];\n  try {\n    let newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 18) {\n      chartArr[num].stochasticK = \"No Data\";\n    } else {\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n\n      while (iSO >= 0) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      soHighHolder.push(newPrice);\n      soLowHolder.push(newPrice);\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      if (lowestLow === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      if (highestHigh === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      topForm.push(newPrice - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      //FOR %K\n      chartArr[num].stochasticK = (\n        ((newPrice - lowestLow) / (highestHigh - lowestLow)) *\n        100\n      ).toFixed(2);\n\n      // RESET HOLDER AND VARs --------------------------------------------------------\n\n      iSO = 14;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n      while (iSO >= 1) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[0].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[0].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      // RESET HOLDER AND VARs ------------------------------------------------\n\n      iSO = 15;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 2) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[1].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[1].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[1].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      let sumTop = topForm.reduce((a, b) => a + b, 0);\n      let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n\n      let slowD = (sumTop / sumBottom) * 100;\n\n      // FOR %D\n      chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------------------------------\n\n      iSO = 16;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n      while (iSO >= 3) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormTwo.push(dataPull.historical[2].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[2].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------\n\n      iSO = 17;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 4) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormThree.push(dataPull.historical[3].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormThree.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      // ----------- TALLY UP LAST SMOOTHING -------------------------------\n      const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n      let smaD = sumStochD / 3;\n\n      if (smaD < 0) {\n        smaD *= -1;\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      } else {\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      }\n    }\n  } catch (e) {}\n}\n// WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction williamsRFunction(chartArr, dataPull, newestPull, num) {\n  let highs = [];\n  let lows = [];\n  let lowestLow = 0;\n  let highestHigh = 0;\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].williams = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        highs.push(dataPull.historical[i].high);\n        lows.push(dataPull.historical[i].low);\n      }\n\n      highs.push(newPrice);\n      lows.push(newPrice);\n\n      lowestLow = Math.min(...lows);\n      highestHigh = Math.max(...highs);\n\n      const williams =\n        ((highestHigh - dataPull.historical[0].close) /\n          (highestHigh - lowestLow)) *\n        -100;\n\n      chartArr[num].williamsR = williams.toFixed(2);\n    }\n  } catch (e) {}\n}\n// CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction cciFunction(chartArr, dataPull, newestPull, num) {\n  let tpvCul = 0;\n  let tpv = [];\n  let tpvMa = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    let tpvCurrent = newPrice;\n    const recentTpv = newPrice;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].cciTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 19; i++) {\n        const { high, close, low } = dataPull.historical[i];\n        tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n        tpvCurrent = (close + high + low) / 3;\n      }\n      // ---- TPV SMA ------------------------\n      tpvCul = tpv.reduce((a, b) => a + b);\n      tpvMa = tpvCul / 20;\n      // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n      const partOne = recentTpv - tpvMa;\n\n      const meanD = tpv.map((x) => x - tpvMa);\n      const meanDMap = meanD.map((x) => Math.abs(x));\n      const meanDSum = meanDMap.reduce((a, b) => a + b);\n      const meanDiv = meanDSum / 20;\n      // PART TWO OF FORMULA --------------\n      const partTwo = meanDiv * 0.015;\n      // CCI ------------------------------\n      const cci = partOne / partTwo;\n\n      chartArr[num].cciTwenty = cci.toFixed(2);\n    }\n  } catch (e) {}\n}\n// BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n  let smaCul = 0;\n  let closeHolder = [];\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].bbUpper = \"No Data\";\n      chartArr[num].bbLower = \"No Data\";\n      chartArr[num].bbMiddle = \"No Data\";\n    } else {\n      let closeP = newPrice;\n      for (let i = 0; i <= 19; i++) {\n        closeHolder.push(closeP);\n        smaCul += closeP;\n        closeP = dataPull.historical[i].close;\n      }\n      // STANDARD DEVIATION CALC --------------------------------\n      const smaTwenty = smaCul / 20;\n\n      const priceAdj = closeHolder.map((x) => x - smaTwenty);\n\n      const priceAdjAbs = priceAdj.map((x) => Math.abs(x));\n\n      const priceAdjSqrt = priceAdjAbs.map((x) => x * x);\n\n      const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n\n      const partTwoDev = partOneDev / 20;\n      const standardDev = Math.sqrt(partTwoDev);\n      // BB BAND CALC --------------------------------------------\n      const bbUpper = smaTwenty + standardDev * 2;\n      const bbLower = smaTwenty - standardDev * 2;\n\n      const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n\n      chartArr[num].bbUpper = bbUpper.toFixed(2);\n      chartArr[num].bbLower = bbLower.toFixed(2);\n      chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n      chartArr[num].bbPercent = bbPercent.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwapFunction(chartArr, dataPull, num) {\n  // ----------- VWAP CALUC -------------------------------------------\n  let dayLengthPeriod = 0;\n  let tpvCul = 0;\n  let volumeCul = 0;\n  let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n  try {\n    // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n    while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n      dayLengthPeriod++;\n    }\n\n    // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n    for (let i = 0; i < dayLengthPeriod; i++) {\n      const { volume, high, close, low, date } = dataPull[i];\n      let tpv = (high + low + close) / 3;\n      if (date.slice(0, 10) == newDateString) {\n        tpvCul += tpv * volume;\n        volumeCul += volume;\n      }\n      var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n      tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n    }\n    let vwap = tempVWAP[0].toFixed(2);\n    chartArr[num].vwap = vwap;\n  } catch (e) {}\n}\n// SET VOLUME FOR LATER\nfunction setVolume(chartArr, dataPull, newestPull, num) {\n  // SET RECENT YESTERDAY VOLUME\n  try {\n    if (dataPull.historical.length <= 0) {\n      chartArr[num].yesterdayVolume = 0;\n    } else {\n      chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n      if (marketDay == 0 || marketDay == 6) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (timeNum > 1830) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n    }\n    if (newestPull.length < 0) {\n      chartArr[num].volume = 0;\n    } else {\n      // SET RECENT VOLUME\n      chartArr[num].volume = newestPull[0].volume;\n    }\n  } catch (e) {}\n}\n\n// TA FUNCTION ---------------------------------------------------------------------\nasync function technicalIndicators(finalArr, callback) {\n  let j = 0;\n\n  while (j < finalArr.length) {\n    // LOOP FOR TECHNICAL SYMBOL\n\n    // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n    const { symbol } = finalArr[j];\n\n    //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n    const resSMA = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataSMA).length) {\n        console.log(\"no SMA Pull data found\");\n      }\n    } catch (e) {}\n\n    //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n    const resOscPulled = await fetch(\n      `https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataRecentPulled = await resOscPulled.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataRecentPulled).length) {\n        console.log(\"no Recent Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    const resVWAP = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataVWAP = await resVWAP.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataVWAP).length) {\n        console.log(\"no VWAP Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    vwapFunction(finalArr, dataVWAP, j);\n\n    // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    smaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    wmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    vwmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n    emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction);\n\n    // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    rsiFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n\n    // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    williamsRFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    cciFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // SET VOLUME PROPERTIES\n    setVolume(finalArr, dataSMA, dataRecentPulled, j);\n\n    j++; // UPDATE WHILE LOOP\n  } // THIS IS THE END OF LOOP\n  callback(finalArr, buildIt);\n\n  console.log(buildIt);\n}\n// ------------------BUILD OUT HTML\nfunction filterUpDownStocks(finalArr, callback) {\n  let stocksUp = [];\n  let stocksDown = [];\n\n  let j = 0;\n\n  while (j < finalArr.length) {\n    const { changesPercentage } = finalArr[j];\n\n    if (changesPercentage > 0) {\n      stocksUp.push(finalArr[j]);\n    } else {\n      stocksDown.push(finalArr[j]);\n    }\n\n    j++;\n  } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n\n  // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n  for (let i = 0; i < stocksUp.length; i++) {\n    // UPPER ------------------------------------------------------------------------------\n    stocksUp[i].symbolUp = stocksUp[i].symbol;\n    delete stocksUp[i].symbol;\n    stocksUp[i].changeUp = stocksUp[i].change;\n    delete stocksUp[i].change;\n    stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n    delete stocksUp[i].avgVolume;\n    stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n    delete stocksUp[i].changesPercentage;\n    stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n    delete stocksUp[i].emaEight;\n    stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n    delete stocksUp[i].emaTwelve;\n    stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n    delete stocksUp[i].emaTwenty;\n    stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n    delete stocksUp[i].emaTwentySix;\n    stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n    delete stocksUp[i].emaFifty;\n    stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n    delete stocksUp[i].emaTwoHun;\n    stocksUp[i].macdUp = stocksUp[i].macd;\n    delete stocksUp[i].macd;\n    stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n    delete stocksUp[i].macdHistogram;\n    stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n    delete stocksUp[i].macdSignalLine;\n    stocksUp[i].priceUp = stocksUp[i].price;\n    delete stocksUp[i].price;\n    stocksUp[i].rsiUp = stocksUp[i].rsi;\n    delete stocksUp[i].rsi;\n    stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n    delete stocksUp[i].smaFiveTeen;\n    stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n    delete stocksUp[i].smaTwenty;\n    stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n    delete stocksUp[i].smaThirty;\n    stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n    delete stocksUp[i].smaFifty;\n    stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n    delete stocksUp[i].smaOneHun;\n    stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n    delete stocksUp[i].smaTwoHun;\n    stocksUp[i].volumeUp = stocksUp[i].volume;\n    delete stocksUp[i].volume;\n    stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n    delete stocksUp[i].yesterdayVolume;\n    stocksUp[i].vwapUp = stocksUp[i].vwap;\n    delete stocksUp[i].vwap;\n    stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n    delete stocksUp[i].stochasticD;\n    stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n    delete stocksUp[i].stochasticK;\n    stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n    delete stocksUp[i].stochasticSignal;\n    stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n    delete stocksUp[i].wmaFiveTeen;\n    stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n    delete stocksUp[i].wmaTwenty;\n    stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n    delete stocksUp[i].wmaThirty;\n    stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n    delete stocksUp[i].wmaFifty;\n    stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n    delete stocksUp[i].wmaOneHun;\n    stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n    delete stocksUp[i].wmaTwoHun;\n    stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n    delete stocksUp[i].vwmaFiveTeen;\n    stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n    delete stocksUp[i].vwmaTwenty;\n    stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n    delete stocksUp[i].vwmaThirty;\n    stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n    delete stocksUp[i].vwmaFifty;\n    stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n    delete stocksUp[i].vwmaOneHun;\n    stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n    delete stocksUp[i].vwmaTwoHun;\n    stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n    delete stocksUp[i].williamsR;\n    stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n    delete stocksUp[i].cciTwenty;\n    stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n    delete stocksUp[i].bbUpper;\n    stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n    delete stocksUp[i].bbLower;\n    stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n    delete stocksUp[i].bbMiddle;\n    stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n    delete stocksUp[i].bbPercent;\n    // DOWNERS ------------------------------------------------------------------------------\n    stocksDown[i].symbolDown = stocksDown[i].symbol;\n    delete stocksDown[i].symbol;\n    stocksDown[i].changeDown = stocksDown[i].change;\n    delete stocksDown[i].change;\n    stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n    delete stocksDown[i].avgVolume;\n    stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n    delete stocksDown[i].changesPercentage;\n    stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n    delete stocksDown[i].emaEight;\n    stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n    delete stocksDown[i].emaTwelve;\n    stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n    delete stocksDown[i].emaTwenty;\n    stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n    delete stocksDown[i].emaTwentySix;\n    stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n    delete stocksDown[i].emaFifty;\n    stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n    delete stocksDown[i].emaTwoHun;\n    stocksDown[i].macdDown = stocksDown[i].macd;\n    delete stocksDown[i].macd;\n    stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n    delete stocksDown[i].macdHistogram;\n    stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n    delete stocksDown[i].macdSignalLine;\n    stocksDown[i].priceDown = stocksDown[i].price;\n    delete stocksDown[i].price;\n    stocksDown[i].rsiDown = stocksDown[i].rsi;\n    delete stocksDown[i].rsi;\n    stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n    delete stocksDown[i].smaFiveTeen;\n    stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n    delete stocksDown[i].smaTwenty;\n    stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n    delete stocksDown[i].smaThirty;\n    stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n    delete stocksDown[i].smaFifty;\n    stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n    delete stocksDown[i].smaOneHun;\n    stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n    delete stocksDown[i].smaTwoHun;\n    stocksDown[i].volumeDown = stocksDown[i].volume;\n    delete stocksDown[i].volume;\n    stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n    delete stocksDown[i].yesterdayVolume;\n    stocksDown[i].vwapDown = stocksDown[i].vwap;\n    delete stocksDown[i].vwap;\n    stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n    delete stocksDown[i].stochasticD;\n    stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n    delete stocksDown[i].stochasticK;\n    stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n    delete stocksDown[i].stochasticSignal;\n    stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n    delete stocksDown[i].wmaFiveTeen;\n    stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n    delete stocksDown[i].wmaTwenty;\n    stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n    delete stocksDown[i].wmaThirty;\n    stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n    delete stocksDown[i].wmaFifty;\n    stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n    delete stocksDown[i].wmaOneHun;\n    stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n    delete stocksDown[i].wmaTwoHun;\n    stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n    delete stocksDown[i].vwmaFiveTeen;\n    stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n    delete stocksDown[i].vwmaTwenty;\n    stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n    delete stocksDown[i].vwmaThirty;\n    stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n    delete stocksDown[i].vwmaFifty;\n    stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n    delete stocksDown[i].vwmaOneHun;\n    stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n    delete stocksDown[i].vwmaTwoHun;\n    stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n    delete stocksDown[i].williamsR;\n    stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n    delete stocksDown[i].cciTwenty;\n    stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n    delete stocksDown[i].bbUpper;\n    stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n    delete stocksDown[i].bbLower;\n    stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n    delete stocksDown[i].bbMiddle;\n    stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n    delete stocksDown[i].bbPercent;\n  }\n  callback(stocksUp, stocksDown);\n}\n\n\nfunction buildIt(arrUp, arrDown) {\n\n  for (let i = 0; i < arrUp.length; i++) {\n    // DECONSTRUCTING UP AND DOWN VAR\n    let {\n      avgVolumeUp,\n      volumeYesterdayUp,\n      changeUp,\n      changesPercentageUp,\n      priceUp,\n      symbolUp,\n      volumeUp,\n      vwapUp,\n      smaFiveTeenUp,\n      smaTwentyUp,\n      smaThirtyUp,\n      smaFiftyUp,\n      smaOneHunUp,\n      smaTwoHunUp,\n      emaEightUp,\n      emaTwelveUp,\n      emaTwentyUp,\n      emaTwentySixUp,\n      emaFiftyUp,\n      emaTwoHunUp,\n      wmaFiveTeenUp,\n      wmaTwentyUp,\n      wmaThirtyUp,\n      wmaFiftyUp,\n      wmaOneHunUp,\n      wmaTwoHunUp,\n      vwmaFiveTeenUp,\n      vwmaTwentyUp,\n      vwmaThirtyUp,\n      vwmaFiftyUp,\n      vwmaOneHunUp,\n      vwmaTwoHunUp,\n      macdUp,\n      macdHistogramUp,\n      macdSignalLineUp,\n      rsiUp,\n      stochasticDUp,\n      stochasticKUp,\n      stochasticSignalUp,\n      cciUp,\n      bbMiddleUp,\n      bbLowerUp,\n      bbUpperUp,\n      bbPercentUp,\n      williamsRUp,\n    } = arrUp[i];\n\n    let {\n      avgVolumeDown,\n      volumeYesterdayDown,\n      changeDown,\n      changesPercentageDown,\n      priceDown,\n      symbolDown,\n      volumeDown,\n      vwapDown,\n      smaFiveTeenDown,\n      smaTwentyDown,\n      smaThirtyDown,\n      smaFiftyDown,\n      smaOneHunDown,\n      smaTwoHunDown,\n      emaEightDown,\n      emaTwelveDown,\n      emaTwentyDown,\n      emaTwentySixDown,\n      emaFiftyDown,\n      emaTwoHunDown,\n      wmaFiveTeenDown,\n      wmaTwentyDown,\n      wmaThirtyDown,\n      wmaFiftyDown,\n      wmaOneHunDown,\n      wmaTwoHunDown,\n      vwmaFiveTeenDown,\n      vwmaTwentyDown,\n      vwmaThirtyDown,\n      vwmaFiftyDown,\n      vwmaOneHunDown,\n      vwmaTwoHunDown,\n      macdDown,\n      macdHistogramDown,\n      macdSignalLineDown,\n      rsiDown,\n      stochasticDDown,\n      stochasticKDown,\n      stochasticSignalDown,\n      cciDown,\n      bbMiddleDown,\n      bbLowerDown,\n      bbUpperDown,\n      bbPercentDown,\n      williamsRDown,\n    } = arrDown[i];\n\n    // ADJUST TO FIXED --------------------------------------------------------\n    if (priceUp == undefined) {\n      priceUp = 0;\n    }\n    if (priceDown == undefined) {\n      priceDown = 0;\n    }\n\n    priceUp = priceUp.toFixed(2);\n    priceDown = priceDown.toFixed(2);\n    if (changesPercentageUp == undefined) {\n      changesPercentageUp = 0;\n    }\n    if (changesPercentageDown == undefined) {\n      changesPercentageDown = 0;\n    }\n    changesPercentageUp = changesPercentageUp.toFixed(2);\n    changesPercentageDown = changesPercentageDown.toFixed(2);\n\n    if (changeUp == undefined) {\n      changeUp = 0;\n    }\n    if (changeDown == undefined) {\n      changeDown = 0;\n    }\n    changeUp = changeUp.toFixed(2);\n    changeDown = changeDown.toFixed(2);\n    // UP VOLUME INCREASE ----------------------------\n    if (volumeUp == undefined) {\n      volumeUp = 0;\n    }\n    if (volumeDown == undefined) {\n      volumeDown = 0;\n    }\n\n    let volumeIncreaseUp = 0;\n\n    if (volumeUp > avgVolumeUp) {\n      let increase = volumeUp - avgVolumeUp;\n      volumeIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeUp;\n      volumeIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n    // DOWN VOLUME INCREASE ----------------------------\n    let volumeIncreaseDown = 0;\n\n    if (volumeDown > avgVolumeDown) {\n      let increase = volumeDown - avgVolumeDown;\n      volumeIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeDown;\n      volumeIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n    volumeIncreaseUp = volumeIncreaseUp.toFixed(2);\n\n    // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n\n    // YESTERDAY UP VOLUME INCREASE ----------------------------\n    if (volumeYesterdayUp == undefined) {\n      volumeYesterdayUp = 0;\n    }\n    if (volumeYesterdayDown == undefined) {\n      volumeYesterdayDown = 0;\n    }\n    if (avgVolumeUp == undefined) {\n      avgVolumeUp = 0;\n    }\n    if (avgVolumeDown == undefined) {\n      avgVolumeDown = 0;\n    }\n    let yesterdayVolIncreaseUp = 0;\n\n    if (volumeYesterdayUp > avgVolumeUp) {\n      let increase = volumeYesterdayUp - avgVolumeUp;\n      yesterdayVolIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeYesterdayUp;\n      yesterdayVolIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n\n    yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2);\n\n    // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n    let yesterdayVolIncreaseDown = 0;\n\n    if (volumeYesterdayDown > avgVolumeDown) {\n      let increase = volumeYesterdayDown - avgVolumeDown;\n      yesterdayVolIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeYesterdayDown;\n      yesterdayVolIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2);\n\n    // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n    let changeDownAdjusted = changeDown;\n\n    if (changeDownAdjusted < 0) {\n      changeDownAdjusted = changeDownAdjusted * -1;\n      changeDownAdjusted = changeDownAdjusted.toFixed(2);\n    }\n    // NaN CHECK ----------------------------------------\n    if (isNaN(yesterdayVolIncreaseDown)) {\n      yesterdayVolIncreaseDown = \"No Data\";\n    }\n    if (isNaN(yesterdayVolIncreaseUp)) {\n      yesterdayVolIncreaseUp = \"No Data\";\n    }\n\n    // ADJUST TO POSITIVE\n    if (stochasticDUp < 0) {\n      stochasticDUp = stochasticDUp * -1;\n    }\n    if (stochasticKUp < 0) {\n      stochasticKUp = stochasticKUp * -1;\n    }\n    if (stochasticDDown < 0) {\n      stochasticDDown = stochasticDDown * -1;\n    }\n    if (stochasticKDown < 0) {\n      stochasticKDown = stochasticKDown * -1;\n    }\n\n    // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n    if (avgVolumeUp == undefined) {\n      avgVolumeUp = \"No Data\";\n    }\n    if (avgVolumeDown == undefined) {\n      avgVolumeDown = \"No Data\";\n    }\n    if (volumeUp == undefined) {\n      volumeUp = \"No Data\";\n    }\n    if (volumeDown == undefined) {\n      volumeDown = \"No Data\";\n    }\n    if (volumeIncreaseUp == undefined) {\n      volumeIncreaseUp = \"No Data\";\n    }\n    if (volumeIncreaseDown == undefined) {\n      volumeIncreaseDown = \"No Data\";\n    }\n    if (volumeYesterdayUp == undefined) {\n      volumeYesterdayUp = \"No Data\";\n    }\n    if (volumeYesterdayDown == undefined) {\n      volumeYesterdayDown = \"No Data\";\n    }\n\n    if (smaFiveTeenUp == undefined) {\n      smaFiveTeenUp = \"No Data\";\n    }\n    if (smaFiveTeenDown == undefined) {\n      smaFiveTeenDown = \"No Data\";\n    }\n    if (smaTwentyUp == undefined) {\n      smaTwentyUp = \"No Data\";\n    }\n    if (smaTwentyDown == undefined) {\n      smaTwentyDown = \"No Data\";\n    }\n    if (smaThirtyUp == undefined) {\n      smaThirtyUp = \"No Data\";\n    }\n    if (smaThirtyDown == undefined) {\n      smaThirtyDown = \"No Data\";\n    }\n    if (smaFiftyUp == undefined) {\n      smaFiftyUp = \"No Data\";\n    }\n    if (smaFiftyDown == undefined) {\n      smaFiftyDown = \"No Data\";\n    }\n    if (smaOneHunUp == undefined) {\n      smaOneHunUp = \"No Data\";\n    }\n    if (smaOneHunDown == undefined) {\n      smaOneHunDown = \"No Data\";\n    }\n    if (smaTwoHunUp == undefined) {\n      smaTwoHunUp = \"No Data\";\n    }\n    if (smaTwoHunDown == undefined) {\n      smaTwoHunDown = \"No Data\";\n    }\n\n    if (emaEightUp == undefined) {\n      emaEightUp = \"No Data\";\n    }\n    if (emaEightDown == undefined) {\n      emaEightDown = \"No Data\";\n    }\n    if (emaTwelveUp == undefined) {\n      emaTwelveUp = \"No Data\";\n    }\n    if (emaTwelveDown == undefined) {\n      emaTwelveDown = \"No Data\";\n    }\n    if (emaTwentyUp == undefined) {\n      emaTwentyUp = \"No Data\";\n    }\n    if (emaTwentyDown == undefined) {\n      emaTwentyDown = \"No Data\";\n    }\n    if (emaTwentySixUp == undefined) {\n      emaTwentySixUp = \"No Data\";\n    }\n    if (emaTwentySixDown == undefined) {\n      emaTwentySixDown = \"No Data\";\n    }\n    if (emaFiftyUp == undefined) {\n      emaFiftyUp = \"No Data\";\n    }\n    if (emaFiftyDown == undefined) {\n      emaFiftyDown = \"No Data\";\n    }\n    if (emaTwoHunUp == undefined) {\n      emaTwoHunUp = \"No Data\";\n    }\n    if (emaTwoHunDown == undefined) {\n      emaTwoHunDown = \"No Data\";\n    }\n\n    if (wmaFiveTeenUp == undefined) {\n      wmaFiveTeenUp = \"No Data\";\n    }\n    if (wmaFiveTeenDown == undefined) {\n      wmaFiveTeenDown = \"No Data\";\n    }\n    if (wmaTwentyUp == undefined) {\n      wmaTwentyUp = \"No Data\";\n    }\n    if (wmaTwentyDown == undefined) {\n      wmaTwentyDown = \"No Data\";\n    }\n    if (wmaThirtyUp == undefined) {\n      wmaThirtyUp = \"No Data\";\n    }\n    if (wmaThirtyDown == undefined) {\n      wmaThirtyDown = \"No Data\";\n    }\n    if (wmaFiftyUp == undefined) {\n      wmaFiftyUp = \"No Data\";\n    }\n    if (wmaFiftyDown == undefined) {\n      wmaFiftyDown = \"No Data\";\n    }\n    if (wmaOneHunUp == undefined) {\n      wmaOneHunUp = \"No Data\";\n    }\n    if (wmaOneHunDown == undefined) {\n      wmaOneHunDown = \"No Data\";\n    }\n    if (wmaTwoHunUp == undefined) {\n      wmaTwoHunUp = \"No Data\";\n    }\n    if (wmaTwoHunDown == undefined) {\n      wmaTwoHunDown = \"No Data\";\n    }\n\n    if (vwmaFiveTeenUp == undefined) {\n      vwmaFiveTeenUp = \"No Data\";\n    }\n    if (vwmaFiveTeenDown == undefined) {\n      vwmaFiveTeenDown = \"No Data\";\n    }\n    if (vwmaTwentyUp == undefined) {\n      vwmaTwentyUp = \"No Data\";\n    }\n    if (vwmaTwentyDown == undefined) {\n      vwmaTwentyDown = \"No Data\";\n    }\n    if (vwmaThirtyUp == undefined) {\n      vwmaThirtyUp = \"No Data\";\n    }\n    if (vwmaThirtyDown == undefined) {\n      vwmaThirtyDown = \"No Data\";\n    }\n    if (vwmaFiftyUp == undefined) {\n      vwmaFiftyUp = \"No Data\";\n    }\n    if (vwmaFiftyDown == undefined) {\n      vwmaFiftyDown = \"No Data\";\n    }\n    if (vwmaOneHunUp == undefined) {\n      vwmaOneHunUp = \"No Data\";\n    }\n    if (vwmaOneHunDown == undefined) {\n      vwmaOneHunDown = \"No Data\";\n    }\n    if (vwmaTwoHunUp == undefined) {\n      vwmaTwoHunUp = \"No Data\";\n    }\n    if (vwmaTwoHunDown == undefined) {\n      vwmaTwoHunDown = \"No Data\";\n    }\n\n    if (vwapDown == undefined) {\n      vwapDown = \"No Data\";\n    }\n    if (vwapUp == undefined) {\n      vwapUp = \"No Data\";\n    }\n\n    if (macdDown == undefined) {\n      macdDown = \"No Data\";\n    }\n    if (macdUp == undefined) {\n      macdUp = \"No Data\";\n    }\n\n    if (rsiDown == undefined) {\n      rsiDown = \"No Data\";\n    }\n    if (rsiUp == undefined) {\n      rsiUp = \"No Data\";\n    }\n\n    if (cciDown == undefined) {\n      cciDown = \"No Data\";\n    }\n    if (cciUp == undefined) {\n      cciUp = \"No Data\";\n    }\n\n    if (williamsRDown == undefined) {\n      williamsRDown = \"No Data\";\n    }\n    if (williamsRUp == undefined) {\n      williamsRUp = \"No Data\";\n    }\n\n    if (stochasticKUp == undefined) {\n      stochasticKUp = \"No Data\";\n    }\n    if (stochasticKDown == undefined) {\n      stochasticKDown = \"No Data\";\n    }\n    if (stochasticDUp == undefined) {\n      stochasticDUp = \"No Data\";\n    }\n    if (stochasticDDown == undefined) {\n      stochasticDDown = \"No Data\";\n    }\n    if (stochasticSignalUp == undefined) {\n      stochasticSignalUp = \"No Data\";\n    }\n    if (stochasticSignalDown == undefined) {\n      stochasticSignalDown = \"No Data\";\n    }\n\n    if (bbMiddleDown == undefined) {\n      bbMiddleDown = \"No Data\";\n    }\n    if (bbMiddleUp == undefined) {\n      bbMiddleUp = \"No Data\";\n    }\n    if (bbLowerDown == undefined) {\n      bbLowerDown = \"No Data\";\n    }\n    if (bbLowerUp == undefined) {\n      bbLowerUp = \"No Data\";\n    }\n    if (bbUpperDown == undefined) {\n      bbUpperDown = \"No Data\";\n    }\n    if (bbUpperUp == undefined) {\n      bbUpperUp = \"No Data\";\n    }\n    if (bbPercentDown == undefined) {\n      bbPercentDown = \"No Data\";\n    }\n    if (bbPercentUp == undefined) {\n      bbPercentUp = \"No Data\";\n    }\n    if (macdHistogramDown == undefined) {\n      macdHistogramDown = \"No Data\";\n    }\n    if (macdSignalLineDown == undefined) {\n      macdSignalLineDown = \"No Data\";\n    }\n    if (macdHistogramUp == undefined) {\n      macdHistogramUp = \"No Data\";\n    }\n    if (macdSignalLineUp == undefined) {\n      macdSignalLineUp = \"No Data\";\n    }\n    if (symbolUp == undefined) {\n      symbolUp = \"No Data\";\n    }\n    if (symbolDown == undefined) {\n      symbolDown = \"No Data\";\n    }\n    \n    console.log('in api', arrUp)\n    return arrUp;\n  }}\n\n//----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\nfilterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n\n}"]},"metadata":{},"sourceType":"module"}