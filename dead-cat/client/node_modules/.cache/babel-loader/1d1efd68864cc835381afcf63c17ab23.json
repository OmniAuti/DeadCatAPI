{"ast":null,"code":"export const technicalPortfolioAnalysis = async arr => {\n  // CHECKING ON PORTFOLIO TO MAKE SURE IT HAS SOMETHING ----------------------------------\n  if (arr === null) {\n    alert('Sorry, your portfolio seems to be malfunctioning.');\n    return;\n  } else if (arr.length <= 0) {\n    alert('Sorry, your portfolio seems to be malfunctioning.');\n    return;\n  }\n\n  console.log(arr); /// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------\n\n  const today = new Date();\n  const year = today.getFullYear();\n  let date = today.getUTCDate();\n  let month = today.getUTCMonth() + 1;\n  let minutes = today.getUTCMinutes();\n  let hour = today.getUTCHours(); // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n  //CALC FOR UTC TO EST\n\n  hour = hour - 4; // CALC FOR EARLY MORNING HOURS UTC\n\n  if (hour < 0) {\n    hour = hour + 24;\n  } // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  const time = `${hour}${minutes}`;\n  const timeNum = parseInt(time); // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n\n  const marketDay = today.getDay(); // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n\n  if (marketDay == 0) {\n    date = date - 2; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 27;\n      }\n    }\n  } else if (marketDay == 6) {\n    date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      }\n    }\n  } // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n\n\n  if (marketDay == 1 && timeNum < 930) {\n    date = date - 3; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 27;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 26;\n      }\n    }\n  } else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {\n    // ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n    date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month == 0) {\n          month = 1;\n        }\n\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        date = 28;\n      }\n    }\n  } // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n\n\n  if (date < 10) {\n    date = `0${date}`;\n  }\n\n  if (month < 10) {\n    month = `0${month}`;\n  } // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n\n\n  let todayDate = `${year}-${month}-${date}`; //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n\n  if (todayDate === \"2021-11-25\") {\n    todayDate = \"2021-11-24\";\n  } else if (todayDate === \"2021-12-24\") {\n    todayDate = \"2021-12-23\";\n  } else if (todayDate === \"2022-01-17\") {\n    todayDate = \"2022-01-14\";\n  } else if (todayDate === \"2022-02-21\") {\n    todayDate = \"2022-02-18\";\n  } else if (todayDate === \"2022-04-15\") {\n    todayDate = \"2022-04-14\";\n  } else if (todayDate === \"2022-05-30\") {\n    todayDate = \"2022-05-27\";\n  } else if (todayDate === \"2022-06-20\") {\n    todayDate = \"2022-06-17\";\n  } else if (todayDate === \"2022-07-04\") {\n    todayDate = \"2022-07-01\";\n  } else if (todayDate === \"2022-09-05\") {\n    todayDate = \"2022-09-02\";\n  } else if (todayDate === \"2022-11-24\") {\n    todayDate = \"2022-11-23\";\n  } else if (todayDate === \"2022-12-26\") {\n    todayDate = \"2022-12-23\";\n  } // THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n\n\n  let newDateString = todayDate;\n\n  if (hour + 4 >= 24) {\n    const dateNumSlice = parseInt(date);\n    const dateSliceStart = todayDate.slice(0, 8);\n    let newDateNum = dateNumSlice - 1;\n\n    if (newDateNum < 10) {\n      newDateNum = `0${newDateNum}`;\n    }\n\n    newDateString = `${dateSliceStart}${newDateNum}`;\n    newDateString = newDateString.toString(); // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date == 1 && hour + 4 >= 24) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 31;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n        newDateString = `${year}-${month}-${date}`;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n        newDateString = `${year}-${month}-${date}`;\n      }\n    }\n  } // ---------------------- END OF DATE -------------------------------------\n  // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n\n\n  async function filterTradableSymbols(portArr) {\n    try {\n      // ------ FETCH NYSE\n      const res = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNyse = await res.json(); // ------ FETCH NASDAQ\n\n      const resTwo = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNas = await resTwo.json(); // FILTER THESE STOCKS DOWN TO JUST WHAT IS IN PORTFOLIO\n\n      const combinedStock = await dataNyse.concat(dataNas); // IN ANOTHER FUNCTION MAKE THE FILTER TO MATCH PORTFOLIO ARR\n      // GETTING INFO FOR PORTFOLIO STOCK ===========================\n\n      var holderArr = [];\n\n      for (let i = 0; i < portArr.length; i++) {\n        for (let j = 0; j < combinedStock.length; j++) {\n          if (portArr[i].symbol === combinedStock[j].symbol) {\n            holderArr.push(combinedStock[j]);\n          }\n        }\n      }\n\n      return holderArr; //--------- CATCH\n    } catch (e) {}\n  }\n\n  filterTradableSymbols(arr);\n};","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/JS/APIPortfolioFunction.js"],"names":["technicalPortfolioAnalysis","arr","alert","length","console","log","today","Date","year","getFullYear","date","getUTCDate","month","getUTCMonth","minutes","getUTCMinutes","hour","getUTCHours","time","timeNum","parseInt","marketDay","getDay","todayDate","newDateString","dateNumSlice","dateSliceStart","slice","newDateNum","toString","filterTradableSymbols","portArr","res","fetch","dataNyse","json","resTwo","dataNas","combinedStock","concat","holderArr","i","j","symbol","push","e"],"mappings":"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","sourcesContent":["export const technicalPortfolioAnalysis = async (arr) => {\n\n\n    // CHECKING ON PORTFOLIO TO MAKE SURE IT HAS SOMETHING ----------------------------------\n\n    if (arr === null) {\n        alert('Sorry, your portfolio seems to be malfunctioning.')\n        return;\n      } else if (arr.length <= 0) {\n        alert('Sorry, your portfolio seems to be malfunctioning.')\n        return;\n      }\n\n      console.log(arr)\n\n  /// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------\n  const today = new Date();\n  const year = today.getFullYear();\n  let date = today.getUTCDate();\n  let month = today.getUTCMonth() + 1;\n  let minutes = today.getUTCMinutes();\n  let hour = today.getUTCHours();\n  // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n\n  //CALC FOR UTC TO EST\n  hour = hour - 4;\n  // CALC FOR EARLY MORNING HOURS UTC\n  if (hour < 0) {\n    hour = hour + 24;\n  }\n\n  // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  const time = `${hour}${minutes}`;\n  const timeNum = parseInt(time);\n\n  // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n  const marketDay = today.getDay();\n  // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n  if (marketDay == 0) {\n    date = date - 2;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 27;\n      }\n    }\n  } else if (marketDay == 6) {\n    date = date - 1;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      }\n    }\n  }\n  // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n  if (marketDay == 1 && timeNum < 930) {\n    date = date - 3;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 27;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 26;\n      }\n    }\n  } else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {\n    // ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n    date = date - 1;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month == 0) {\n          month = 1;\n        }\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        date = 28;\n      }\n    }\n  }\n\n  // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n  if (date < 10) {\n    date = `0${date}`;\n  }\n  if (month < 10) {\n    month = `0${month}`;\n  }\n\n  // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n  let todayDate = `${year}-${month}-${date}`;\n  //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n  if (todayDate === \"2021-11-25\") {\n    todayDate = \"2021-11-24\";\n  } else if (todayDate === \"2021-12-24\") {\n    todayDate = \"2021-12-23\";\n  } else if (todayDate === \"2022-01-17\") {\n    todayDate = \"2022-01-14\";\n  } else if (todayDate === \"2022-02-21\") {\n    todayDate = \"2022-02-18\";\n  } else if (todayDate === \"2022-04-15\") {\n    todayDate = \"2022-04-14\";\n  } else if (todayDate === \"2022-05-30\") {\n    todayDate = \"2022-05-27\";\n  } else if (todayDate === \"2022-06-20\") {\n    todayDate = \"2022-06-17\";\n  } else if (todayDate === \"2022-07-04\") {\n    todayDate = \"2022-07-01\";\n  } else if (todayDate === \"2022-09-05\") {\n    todayDate = \"2022-09-02\";\n  } else if (todayDate === \"2022-11-24\") {\n    todayDate = \"2022-11-23\";\n  } else if (todayDate === \"2022-12-26\") {\n    todayDate = \"2022-12-23\";\n  }\n  // THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n  let newDateString = todayDate;\n\n  if (hour + 4 >= 24) {\n    const dateNumSlice = parseInt(date);\n    const dateSliceStart = todayDate.slice(0, 8);\n    let newDateNum = dateNumSlice - 1;\n    if (newDateNum < 10) {\n      newDateNum = `0${newDateNum}`;\n    }\n    newDateString = `${dateSliceStart}${newDateNum}`;\n    newDateString = newDateString.toString();\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date == 1 && hour + 4 >= 24) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 31;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n        newDateString = `${year}-${month}-${date}`;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n        newDateString = `${year}-${month}-${date}`;\n      }\n    }\n  }\n\n  // ---------------------- END OF DATE -------------------------------------\n\n\n\n  // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n  async function filterTradableSymbols(portArr) {\n\n\n    try {\n      // ------ FETCH NYSE\n      const res = await fetch(\n        \"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n      );\n      const dataNyse = await res.json();\n       \n      // ------ FETCH NASDAQ\n      const resTwo = await fetch(\n        \"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n      );\n      const dataNas = await resTwo.json();\n\n      // FILTER THESE STOCKS DOWN TO JUST WHAT IS IN PORTFOLIO\n      const combinedStock = await dataNyse.concat(dataNas);\n        // IN ANOTHER FUNCTION MAKE THE FILTER TO MATCH PORTFOLIO ARR\n    \n      // GETTING INFO FOR PORTFOLIO STOCK ===========================\n\n      var holderArr = [];\n      for (let i = 0; i < portArr.length; i++) {\n        for (let j = 0; j < combinedStock.length; j++) {\n          if (portArr[i].symbol === combinedStock[j].symbol) {\n            holderArr.push(combinedStock[j])\n          }\n        }\n      }\n\n      return holderArr;\n        //--------- CATCH\n    } catch (e) {}\n\n    \n  }\n\n  filterTradableSymbols(arr)\n\n}"]},"metadata":{},"sourceType":"module"}