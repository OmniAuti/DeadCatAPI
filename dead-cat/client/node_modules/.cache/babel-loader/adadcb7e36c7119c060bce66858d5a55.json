{"ast":null,"code":"export const technicalPortfolioAnalysis = async arr => {\n  // CHECKING ON PORTFOLIO TO MAKE SURE IT HAS SOMETHING ----------------------------------\n  if (arr === null) {\n    alert(\"Sorry, your portfolio seems to be malfunctioning.\");\n    return [];\n  } else if (arr.length <= 0) {\n    alert(\"Sorry, your portfolio seems to be malfunctioning.\");\n    return [];\n  } /// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------==============\n\n\n  const today = new Date();\n  const year = today.getFullYear();\n  let date = today.getUTCDate();\n  let month = today.getUTCMonth() + 1;\n  let minutes = today.getUTCMinutes();\n  let hour = today.getUTCHours(); // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n  //CALC FOR UTC TO EST\n\n  hour = hour - 4; // CALC FOR EARLY MORNING HOURS UTC\n\n  if (hour < 0) {\n    hour = hour + 24;\n  } // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  const time = `${hour}${minutes}`;\n  const timeNum = parseInt(time); // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n\n  const marketDay = today.getDay(); // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n\n  if (marketDay == 0) {\n    date = date - 2; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 27;\n      }\n    }\n  } else if (marketDay == 6) {\n    date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      }\n    }\n  } // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n\n\n  if (marketDay == 1 && timeNum < 930) {\n    date = date - 3; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 27;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 26;\n      }\n    }\n  } else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {\n    // ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n    date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month == 0) {\n          month = 1;\n        }\n\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        date = 28;\n      }\n    }\n  } // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n\n\n  if (date < 10) {\n    date = `0${date}`;\n  }\n\n  if (month < 10) {\n    month = `0${month}`;\n  } // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n\n\n  let todayDate = `${year}-${month}-${date}`; //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n\n  if (todayDate === \"2021-11-25\") {\n    todayDate = \"2021-11-24\";\n  } else if (todayDate === \"2021-12-24\") {\n    todayDate = \"2021-12-23\";\n  } else if (todayDate === \"2022-01-17\") {\n    todayDate = \"2022-01-14\";\n  } else if (todayDate === \"2022-02-21\") {\n    todayDate = \"2022-02-18\";\n  } else if (todayDate === \"2022-04-15\") {\n    todayDate = \"2022-04-14\";\n  } else if (todayDate === \"2022-05-30\") {\n    todayDate = \"2022-05-27\";\n  } else if (todayDate === \"2022-06-20\") {\n    todayDate = \"2022-06-17\";\n  } else if (todayDate === \"2022-07-04\") {\n    todayDate = \"2022-07-01\";\n  } else if (todayDate === \"2022-09-05\") {\n    todayDate = \"2022-09-02\";\n  } else if (todayDate === \"2022-11-24\") {\n    todayDate = \"2022-11-23\";\n  } else if (todayDate === \"2022-12-26\") {\n    todayDate = \"2022-12-23\";\n  } // THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n\n\n  let newDateString = todayDate;\n\n  if (hour + 4 >= 24) {\n    const dateNumSlice = parseInt(date);\n    const dateSliceStart = todayDate.slice(0, 8);\n    let newDateNum = dateNumSlice - 1;\n\n    if (newDateNum < 10) {\n      newDateNum = `0${newDateNum}`;\n    }\n\n    newDateString = `${dateSliceStart}${newDateNum}`;\n    newDateString = newDateString.toString(); // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date == 1 && hour + 4 >= 24) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 31;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n        newDateString = `${year}-${month}-${date}`;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n        newDateString = `${year}-${month}-${date}`;\n      }\n    }\n  } // ---------------------- END OF DATE -------------------------------------\n  // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n\n\n  async function filterTradableSymbols(portArr, callback) {\n    try {\n      // ------ FETCH NYSE\n      const res = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNyse = await res.json(); // ------ FETCH NASDAQ\n\n      const resTwo = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNas = await resTwo.json(); // FILTER THESE STOCKS DOWN TO JUST WHAT IS IN PORTFOLIO\n\n      const combinedStock = await dataNyse.concat(dataNas); // IN ANOTHER FUNCTION MAKE THE FILTER TO MATCH PORTFOLIO ARR\n      // GETTING INFO FOR PORTFOLIO STOCK ===========================\n\n      var holderArr = [];\n\n      for (let i = 0; i < portArr.length; i++) {\n        for (let j = 0; j < combinedStock.length; j++) {\n          if (portArr[i].symbol === combinedStock[j].symbol) {\n            holderArr.push(combinedStock[j]);\n          }\n        }\n      } //--------- CATCH\n\n    } catch (e) {}\n\n    const returnedData = await callback(holderArr, technicalIndicators);\n    return returnedData;\n  } // ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n  // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function smaFunction(chartArr, dataPull, newestPull, num) {\n    let culSMA = 0; // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n\n    let fiveTeenSMA = 13;\n    let twentySMA = 18;\n    let thirtySMA = 28;\n    let fiftySMA = 48;\n    let hunSMA = 98;\n    let twoHunSMA = 198;\n\n    try {\n      const todayPricePull = newestPull[0].price; // ------------- 15 DAY SMA -------------------------------\n\n      if (dataPull.historical.length <= 13) {\n        chartArr[num].smaFiveTeen = \"No Data\";\n      } else {\n        while (fiveTeenSMA >= 0) {\n          culSMA += dataPull.historical[fiveTeenSMA].close;\n          fiveTeenSMA--;\n        }\n\n        let smaFiveResult = (culSMA + todayPricePull) / 15;\n        chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 20 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 19) {\n        chartArr[num].smaTwenty = \"No Data\";\n      } else {\n        while (twentySMA >= 0) {\n          culSMA += dataPull.historical[twentySMA].close;\n          twentySMA--;\n        }\n\n        let smaTwentyResult = (culSMA + todayPricePull) / 20;\n        chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 30 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 29) {\n        chartArr[num].smaThirty = \"No Data\";\n      } else {\n        while (thirtySMA >= 0) {\n          culSMA += dataPull.historical[thirtySMA].close;\n          thirtySMA--;\n        }\n\n        let smaThirtyResult = (culSMA + todayPricePull) / 30;\n        chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 50 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 49) {\n        chartArr[num].smaFifty = \"No Data\";\n      } else {\n        while (fiftySMA >= 0) {\n          culSMA += dataPull.historical[fiftySMA].close;\n          fiftySMA--;\n        }\n\n        let smaFiftyResult = (culSMA + todayPricePull) / 50;\n        chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 100 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 99) {\n        chartArr[num].smaOneHun = \"No Data\";\n      } else {\n        while (hunSMA >= 0) {\n          culSMA += dataPull.historical[hunSMA].close;\n          hunSMA--;\n        }\n\n        let smaOneHunResult = (culSMA + todayPricePull) / 100;\n        chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 200 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 199) {\n        chartArr[num].smaTwoHun = \"No Data\";\n      } else {\n        while (twoHunSMA >= 0) {\n          culSMA += dataPull.historical[twoHunSMA].close;\n          twoHunSMA--;\n        }\n\n        let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n        chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n        culSMA = 0;\n      }\n    } catch (e) {}\n  } // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function wmaFunction(chartArr, dataPull, newestPull, num) {\n    // WMA FiveTeen --------------------------------------------------------------------\n    let weight = 14;\n    let wmaInterval = 0;\n    let iWma = 15;\n\n    try {\n      let wmaCul = newestPull[0].price * 15;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].wmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFiveTeen = wmaCul / iWma;\n        chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n      } // WMA Twenty --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 20;\n      weight = 19;\n      wmaInterval = 0;\n      iWma = 20;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].wmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwenty = wmaCul / iWma;\n        chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n      } // WMA THIRTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 30;\n      weight = 29;\n      wmaInterval = 0;\n      iWma = 30;\n\n      if (dataPull.historical.length < 30) {\n        chartArr[num].wmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaThirty = wmaCul / iWma;\n        chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n      } // WMA FIFTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 50;\n      weight = 49;\n      wmaInterval = 0;\n      iWma = 50;\n\n      if (dataPull.historical.length < 50) {\n        chartArr[num].wmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFifty = wmaCul / iWma;\n        chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n      } // WMA ONE HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 100;\n      weight = 99;\n      wmaInterval = 0;\n      iWma = 100;\n\n      if (dataPull.historical.length < 100) {\n        chartArr[num].wmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaOneHun = wmaCul / iWma;\n        chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n      } // WMA TWO HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 200;\n      weight = 199;\n      wmaInterval = 0;\n      iWma = 200;\n\n      if (dataPull.historical.length < 200) {\n        chartArr[num].wmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwoHun = wmaCul / iWma;\n        chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwmaFunction(chartArr, dataPull, newestPull, num) {\n    // VWMA FIVETEEN --------------------------------------------------------------------\n    try {\n      let price = 0;\n      let volume = 0;\n      const newPrice = newestPull[0].price;\n      const newVol = newestPull[0].volume;\n      let volCul = newestPull[0].volume;\n      let totalCul = newPrice * newVol;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].vwmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFiveTeen = totalCul / volCul;\n        chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n      } // VWMA TWENTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].vwmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwenty = totalCul / volCul;\n        chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n      } // VWMA THIRTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 29) {\n        chartArr[num].vwmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaThirty = totalCul / volCul;\n        chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n      } // VWMA FIFTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 49) {\n        chartArr[num].vwmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFifty = totalCul / volCul;\n        chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n      } // VWMA ONEHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 99) {\n        chartArr[num].vwmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaOneHun = totalCul / volCul;\n        chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n      } // VWMA TWOHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 199) {\n        chartArr[num].vwmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwoHun = totalCul / volCul;\n        chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n    let emaEight = 14;\n    let emaTwelve = 22;\n    let emaTwenty = 38;\n    let emaTwentySix = 50;\n    let emaFifty = 98;\n    let emaTwoHun = 398;\n    let prevDayEmaSub = 0;\n    let arrEma = [];\n    let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n\n    let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n    try {\n      const newPrice = newestPull[0].price; // EMA EIGHT ----------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 16) {\n        chartArr[num].emaEight = \"No Data\";\n      } else {\n        while (emaEight >= 15) {\n          prevDayEmaSub += dataPull.historical[emaEight].close;\n          emaEight--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 8; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 9 * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaEight--;\n\n        while (emaEight >= 0) {\n          let derp = 2 / 9 * (dataPull.historical[emaEight].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaEight--;\n        }\n\n        const finalEma = 2 / 9 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaEight = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWELVE ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 24) {\n        chartArr[num].emaTwelve = \"No Data\";\n      } else {\n        while (emaTwelve >= 11) {\n          prevDayEmaSub += dataPull.historical[emaTwelve].close;\n          emaTwelve--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 12; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 13 * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwelve--;\n\n        while (emaTwelve >= 0) {\n          let derp = 2 / 13 * (dataPull.historical[emaTwelve].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwelve < 8 && emaTwelve >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwelve.unshift(derp);\n          }\n\n          emaTwelve--;\n        }\n\n        const finalEma = 2 / 13 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwelve.unshift(finalEma);\n        chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 40) {\n        chartArr[num].emaTwenty = \"No Data\";\n      } else {\n        while (emaTwenty >= 19) {\n          prevDayEmaSub += dataPull.historical[emaTwenty].close;\n          emaTwenty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 20; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 21 * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwenty--;\n\n        while (emaTwenty >= 0) {\n          let derp = 2 / 21 * (dataPull.historical[emaTwenty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwenty--;\n        }\n\n        const finalEma = 2 / 21 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY SIX ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 51) {\n        chartArr[num].emaTwentySix = \"No Data\";\n      } else {\n        while (emaTwentySix >= 25) {\n          prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n          emaTwentySix--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 26; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 27 * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwentySix--;\n\n        while (emaTwentySix >= 0) {\n          let derp = 2 / 27 * (dataPull.historical[emaTwentySix].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwentySix < 8 && emaTwentySix >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwentySix.unshift(derp);\n          }\n\n          emaTwentySix--;\n        }\n\n        const finalEma = 2 / 27 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwentySix.unshift(finalEma);\n        chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA FIFTY -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 100) {\n        chartArr[num].emaFifty = \"No Data\";\n      } else {\n        while (emaFifty >= 49) {\n          prevDayEmaSub += dataPull.historical[emaFifty].close;\n          emaFifty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 50; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 51 * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaFifty--;\n\n        while (emaFifty >= 0) {\n          let derp = 2 / 51 * (dataPull.historical[emaFifty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaFifty--;\n        }\n\n        const finalEma = 2 / 51 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaFifty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 400) {\n        chartArr[num].emaTwoHun = \"No Data\";\n      } else {\n        while (emaTwoHun >= 199) {\n          prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n          emaTwoHun--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 200; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 201 * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwoHun--;\n\n        while (emaTwoHun >= 0) {\n          let derp = 2 / 201 * (dataPull.historical[emaTwoHun].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwoHun--;\n        }\n\n        const finalEma = 2 / 201 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n    } catch (e) {} // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n    macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n  } // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function macdFunction(chartArr, num, arr1, arr2) {\n    const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n    chartArr[num].macd = macd.toFixed(2); // CALCULATE SIGNAL LINE ----------------\n\n    let averageMacd = [];\n    let iMacd = 8;\n\n    try {\n      while (iMacd >= 0) {\n        averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n        iMacd--;\n      }\n\n      let averageSum = averageMacd.reduce((a, b) => a + b);\n      let finalAverageMacd = averageSum / 9;\n      let macdSignalLine = 2 / 9 * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n      chartArr[num].macdSignalLine = macdSignalLine.toFixed(2); // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n\n      let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n      chartArr[num].macdHistogram = histogram.toFixed(2); // FOR NO DATA TO PULL FROM\n\n      if (chartArr[num].macdHistogram === \"NaN\") {\n        chartArr[num].macdHistogram = \"No Data\";\n      }\n\n      if (chartArr[num].macd === \"NaN\") {\n        chartArr[num].macd = \"No Data\";\n      }\n\n      if (chartArr[num].macdSignalLine === \"NaN\") {\n        chartArr[num].macdSignalLine = \"No Data\";\n      }\n    } catch (e) {}\n  } // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function rsiFunction(chartArr, dataPull, newestPull, num) {\n    let iRSI = 13;\n    let iRSIAdjusted = 14;\n    let recentUpper = 0;\n    let recentDowner = 0;\n    let upMove = 0;\n    let downMove = 0;\n    let pastDownPeriod = 0;\n    let pastUpPeriod = 0;\n\n    try {\n      const newPrice = newestPull[0].price; // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n\n      if (dataPull.historical.length <= 14) {\n        chartArr[num].rsi = \"No Data\";\n      } else {\n        // LOOP FOR AVERAGE\n        while (iRSI >= 0) {\n          if (dataPull.historical[iRSI].close > dataPull.historical[iRSIAdjusted].close) {\n            upMove += dataPull.historical[iRSI].close - dataPull.historical[iRSIAdjusted].close;\n          } else {\n            downMove += dataPull.historical[iRSIAdjusted].close - dataPull.historical[iRSI].close;\n          }\n\n          iRSI--;\n          iRSIAdjusted--;\n        }\n\n        let averageUp = upMove / 14;\n        let averageDown = downMove / 14; // MOST RECENT DIFFERENCE\n\n        if (newPrice > dataPull.historical[0].close) {\n          recentUpper = newPrice - dataPull.historical[0].close;\n        } else {\n          recentDowner = dataPull.historical[0].close - newPrice;\n        }\n\n        pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n        pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n        let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n        chartArr[num].rsi = rsi.toFixed(2);\n      }\n    } catch (e) {}\n  } // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n    let iSO = 13;\n    let soLowHolder = [];\n    let soHighHolder = [];\n    let highestHigh = 0;\n    let lowestLow = 0; // FIRST %D\n\n    let topForm = [];\n    let bottomForm = []; // SECOND %D\n\n    let topFormTwo = [];\n    let bottomFormTwo = []; // THIRD %D\n\n    let topFormThree = [];\n    let bottomFormThree = []; // HOLDING SET OF %D FOR 14 3 3\n\n    let signalLineHolder = [];\n\n    try {\n      let newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 18) {\n        chartArr[num].stochasticK = \"No Data\";\n      } else {\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n        while (iSO >= 0) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        soHighHolder.push(newPrice);\n        soLowHolder.push(newPrice);\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        if (lowestLow === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        if (highestHigh === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        topForm.push(newPrice - lowestLow);\n        bottomForm.push(highestHigh - lowestLow); //FOR %K\n\n        chartArr[num].stochasticK = ((newPrice - lowestLow) / (highestHigh - lowestLow) * 100).toFixed(2); // RESET HOLDER AND VARs --------------------------------------------------------\n\n        iSO = 14;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n        while (iSO >= 1) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[0].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[0].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow); // RESET HOLDER AND VARs ------------------------------------------------\n\n        iSO = 15;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 2) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[1].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[1].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[1].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        let sumTop = topForm.reduce((a, b) => a + b, 0);\n        let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n        let slowD = sumTop / sumBottom * 100; // FOR %D\n\n        chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------------------------------\n\n        iSO = 16;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n        while (iSO >= 3) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormTwo.push(dataPull.historical[2].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[2].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------\n\n        iSO = 17;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 4) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormThree.push(dataPull.historical[3].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormThree.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); // ----------- TALLY UP LAST SMOOTHING -------------------------------\n\n        const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n        let smaD = sumStochD / 3;\n\n        if (smaD < 0) {\n          smaD *= -1;\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        } else {\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        }\n      }\n    } catch (e) {}\n  } // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function williamsRFunction(chartArr, dataPull, newestPull, num) {\n    let highs = [];\n    let lows = [];\n    let lowestLow = 0;\n    let highestHigh = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].williams = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          highs.push(dataPull.historical[i].high);\n          lows.push(dataPull.historical[i].low);\n        }\n\n        highs.push(newPrice);\n        lows.push(newPrice);\n        lowestLow = Math.min(...lows);\n        highestHigh = Math.max(...highs);\n        const williams = (highestHigh - dataPull.historical[0].close) / (highestHigh - lowestLow) * -100;\n        chartArr[num].williamsR = williams.toFixed(2);\n      }\n    } catch (e) {}\n  } // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function cciFunction(chartArr, dataPull, newestPull, num) {\n    let tpvCul = 0;\n    let tpv = [];\n    let tpvMa = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n      let tpvCurrent = newPrice;\n      const recentTpv = newPrice;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].cciTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 19; i++) {\n          const {\n            high,\n            close,\n            low\n          } = dataPull.historical[i];\n          tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n\n          tpvCurrent = (close + high + low) / 3;\n        } // ---- TPV SMA ------------------------\n\n\n        tpvCul = tpv.reduce((a, b) => a + b);\n        tpvMa = tpvCul / 20; // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n\n        const partOne = recentTpv - tpvMa;\n        const meanD = tpv.map(x => x - tpvMa);\n        const meanDMap = meanD.map(x => Math.abs(x));\n        const meanDSum = meanDMap.reduce((a, b) => a + b);\n        const meanDiv = meanDSum / 20; // PART TWO OF FORMULA --------------\n\n        const partTwo = meanDiv * 0.015; // CCI ------------------------------\n\n        const cci = partOne / partTwo;\n        chartArr[num].cciTwenty = cci.toFixed(2);\n      }\n    } catch (e) {}\n  } // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n    let smaCul = 0;\n    let closeHolder = [];\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].bbUpper = \"No Data\";\n        chartArr[num].bbLower = \"No Data\";\n        chartArr[num].bbMiddle = \"No Data\";\n      } else {\n        let closeP = newPrice;\n\n        for (let i = 0; i <= 19; i++) {\n          closeHolder.push(closeP);\n          smaCul += closeP;\n          closeP = dataPull.historical[i].close;\n        } // STANDARD DEVIATION CALC --------------------------------\n\n\n        const smaTwenty = smaCul / 20;\n        const priceAdj = closeHolder.map(x => x - smaTwenty);\n        const priceAdjAbs = priceAdj.map(x => Math.abs(x));\n        const priceAdjSqrt = priceAdjAbs.map(x => x * x);\n        const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n        const partTwoDev = partOneDev / 20;\n        const standardDev = Math.sqrt(partTwoDev); // BB BAND CALC --------------------------------------------\n\n        const bbUpper = smaTwenty + standardDev * 2;\n        const bbLower = smaTwenty - standardDev * 2;\n        const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n        chartArr[num].bbUpper = bbUpper.toFixed(2);\n        chartArr[num].bbLower = bbLower.toFixed(2);\n        chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n        chartArr[num].bbPercent = bbPercent.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwapFunction(chartArr, dataPull, num) {\n    // ----------- VWAP CALUC -------------------------------------------\n    let dayLengthPeriod = 0;\n    let tpvCul = 0;\n    let volumeCul = 0;\n    let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n    try {\n      // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n      while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n        dayLengthPeriod++;\n      } // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n\n      for (let i = 0; i < dayLengthPeriod; i++) {\n        const {\n          volume,\n          high,\n          close,\n          low,\n          date\n        } = dataPull[i];\n        let tpv = (high + low + close) / 3;\n\n        if (date.slice(0, 10) == newDateString) {\n          tpvCul += tpv * volume;\n          volumeCul += volume;\n        }\n\n        var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n\n        tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n      }\n\n      let vwap = tempVWAP[0].toFixed(2);\n      chartArr[num].vwap = vwap;\n    } catch (e) {}\n  } // SET VOLUME FOR LATER\n\n\n  function setVolume(chartArr, dataPull, newestPull, num) {\n    // SET RECENT YESTERDAY VOLUME\n    try {\n      if (dataPull.historical.length <= 0) {\n        chartArr[num].yesterdayVolume = 0;\n      } else {\n        chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n\n        if (marketDay == 0 || marketDay == 6) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (timeNum > 1830) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n      }\n\n      if (newestPull.length < 0) {\n        chartArr[num].volume = 0;\n      } else {\n        // SET RECENT VOLUME\n        chartArr[num].volume = newestPull[0].volume;\n      }\n    } catch (e) {}\n  } // TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\n\n\n  async function technicalIndicators(portfolioArr, callback) {\n    let j = 0;\n\n    while (j < portfolioArr.length) {\n      // LOOP FOR TECHNICAL SYMBOL\n      // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n      const {\n        symbol\n      } = portfolioArr[j]; //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n\n      const resSMA = await fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n      // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataSMA).length) {\n          console.log(\"no SMA Pull data found\");\n        }\n      } catch (e) {} //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n\n\n      const resOscPulled = await fetch(`https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataRecentPulled = await resOscPulled.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataRecentPulled).length) {\n          console.log(\"no Recent Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      const resVWAP = await fetch(`https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataVWAP = await resVWAP.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataVWAP).length) {\n          console.log(\"no VWAP Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      vwapFunction(portfolioArr, dataVWAP, j); // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      smaFunction(portfolioArr, dataSMA, dataRecentPulled, j); // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      wmaFunction(portfolioArr, dataSMA, dataRecentPulled, j); // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      vwmaFunction(portfolioArr, dataSMA, dataRecentPulled, j); // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n\n      emaFunction(portfolioArr, dataSMA, dataRecentPulled, j, macdFunction); // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      rsiFunction(portfolioArr, dataSMA, dataRecentPulled, j); // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      stochOsc1433Function(portfolioArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n      // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      williamsRFunction(portfolioArr, dataSMA, dataRecentPulled, j); // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      cciFunction(portfolioArr, dataSMA, dataRecentPulled, j); // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      bollingerBandsFunction(portfolioArr, dataSMA, dataRecentPulled, j); // SET VOLUME PROPERTIES\n\n      setVolume(portfolioArr, dataSMA, dataRecentPulled, j);\n      j++; // UPDATE WHILE LOOP\n    } // THIS IS THE END OF LOOP\n\n\n    const returnedData = await callback(portfolioArr, buildSearchTech);\n    return returnedData;\n  }\n\n  async function buildSearchTech(arr) {\n    if (returnedData.length < 10) {\n      while (returnedData.length < 10) {\n        console.log(returnedData);\n        returnedData.push(emptyPortObj);\n      }\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n      let {\n        symbol,\n        price,\n        change,\n        changesPercentage,\n        avgVolume,\n        volume,\n        yesterdayVolume,\n        vwap,\n        smaFiveTeen,\n        smaTwenty,\n        smaThirty,\n        smaFifty,\n        smaOneHun,\n        smaTwoHun,\n        emaEight,\n        emaTwelve,\n        emaTwenty,\n        emaTwentySix,\n        emaFifty,\n        emaTwoHun,\n        wmaFiveTeen,\n        wmaTwenty,\n        wmaThirty,\n        wmaFifty,\n        wmaOneHun,\n        wmaTwoHun,\n        vwmaFiveTeen,\n        vwmaTwenty,\n        vwmaThirty,\n        vwmaFifty,\n        vwmaOneHun,\n        vwmaTwoHun,\n        macd,\n        macdHistogram,\n        macdSignalLine,\n        rsi,\n        stochasticD,\n        stochasticK,\n        stochasticSignal,\n        cciTwenty,\n        bbMiddle,\n        bbLower,\n        bbUpper,\n        bbPercent,\n        williamsR\n      } = arr[i];\n      let directionArrow = \"up\"; // SETS ARROW FOR UP AND DOWN --------------\n\n      if (changesPercentage < 0) {\n        arr[i].directionArrow = \"down\";\n      } else {\n        arr[i].directionArrow = \"up\";\n      } // CHANGE TO POSITIVE BUT ARROW POINTS DOWN OR UP ----------\n\n\n      if (change < 0) {\n        arr[i].change = change * -1;\n      } // ADJUST TO FIXED --------------------------------------------------------\n\n\n      price = price.toFixed(2);\n      change = change.toFixed(2);\n      changesPercentage = changesPercentage.toFixed(2); // VOLUME INCREASE TODAY ----------\n\n      let volumeIncrease = 0;\n\n      if (volume > avgVolume) {\n        let increase = volume - avgVolume;\n        volumeIncrease = increase / avgVolume * 100;\n      } else {\n        let decrease = avgVolume - volume;\n        volumeIncrease = decrease / avgVolume * -100;\n      }\n\n      volumeIncrease = volumeIncrease.toFixed(2); // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n\n      let yesterdayVolIncrease = 0;\n\n      if (yesterdayVolume > avgVolume) {\n        let increase = yesterdayVolume - avgVolume;\n        yesterdayVolIncrease = increase / avgVolume * 100;\n      } else {\n        let decrease = avgVolume - yesterdayVolume;\n        yesterdayVolIncrease = decrease / avgVolume * -100;\n      }\n\n      yesterdayVolIncrease = yesterdayVolIncrease.toFixed(2); // NaN CHECK ----------------------------------------\n\n      if (isNaN(yesterdayVolIncrease)) {\n        arr[i].yesterdayVolIncrease = \"No Data\";\n      } // ADJUST TO POSITIVE\n\n\n      if (arr[i].stochasticD < 0) {\n        arr[i].stochasticD = arr[i].stochasticD * -1;\n      }\n\n      if (arr[i].stochasticK < 0) {\n        arr[i].stochasticK = arr[i].stochasticK * -1;\n      }\n\n      if (arr[i].stochasticD < 0) {\n        arr[i].stochasticD = arr[i].stochasticD * -1;\n      }\n\n      if (arr[i].stochasticK < 0) {\n        arr[i].stochasticK = arr[i].stochasticK * -1;\n      } // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n\n\n      if (arr[i].avgVolume == undefined) {\n        arr[i].avgVolume = \"No Data\";\n      }\n\n      if (arr[i].volume == undefined) {\n        arr[i].volume = \"No Data\";\n      }\n\n      if (arr[i].volumeIncrease == undefined) {\n        arr[i].volumeIncrease = \"No Data\";\n      }\n\n      if (arr[i].yesterdayVolume == undefined) {\n        arr[i].yesterdayVolume = \"No Data\";\n      }\n\n      if (arr[i].smaFiveTeen == undefined) {\n        arr[i].smaFiveTeen = \"No Data\";\n      }\n\n      if (arr[i].smaTwenty == undefined) {\n        arr[i].smaTwenty = \"No Data\";\n      }\n\n      if (arr[i].smaThirty == undefined) {\n        arr[i].smaThirty = \"No Data\";\n      }\n\n      if (arr[i].smaFifty == undefined) {\n        arr[i].smaFifty = \"No Data\";\n      }\n\n      if (arr[i].smaOneHun == undefined) {\n        arr[i].smaOneHun = \"No Data\";\n      }\n\n      if (arr[i].smaTwoHun == undefined) {\n        arr[i].smaTwoHun = \"No Data\";\n      }\n\n      if (arr[i].emaEight == undefined) {\n        arr[i].emaEight = \"No Data\";\n      }\n\n      if (arr[i].emaTwelve == undefined) {\n        arr[i].emaTwelve = \"No Data\";\n      }\n\n      if (arr[i].emaTwenty == undefined) {\n        arr[i].emaTwenty = \"No Data\";\n      }\n\n      if (arr[i].emaTwentySix == undefined) {\n        arr[i].emaTwentySix = \"No Data\";\n      }\n\n      if (arr[i].emaFifty == undefined) {\n        arr[i].emaFifty = \"No Data\";\n      }\n\n      if (arr[i].emaTwoHun == undefined) {\n        arr[i].emaTwoHun = \"No Data\";\n      }\n\n      if (arr[i].wmaFiveTeen == undefined) {\n        arr[i].wmaFiveTeen = \"No Data\";\n      }\n\n      if (arr[i].wmaTwenty == undefined) {\n        arr[i].wmaTwenty = \"No Data\";\n      }\n\n      if (arr[i].wmaThirty == undefined) {\n        arr[i].wmaThirty = \"No Data\";\n      }\n\n      if (arr[i].wmaFifty == undefined) {\n        arr[i].wmaFifty = \"No Data\";\n      }\n\n      if (arr[i].wmaOneHun == undefined) {\n        arr[i].wmaOneHun = \"No Data\";\n      }\n\n      if (arr[i].wmaTwoHun == undefined) {\n        arr[i].wmaTwoHun = \"No Data\";\n      }\n\n      if (arr[i].vwmaFiveTeen == undefined) {\n        arr[i].vwmaFiveTeen = \"No Data\";\n      }\n\n      if (arr[i].vwmaTwenty == undefined) {\n        arr[i].vwmaTwenty = \"No Data\";\n      }\n\n      if (arr[i].vwmaThirty == undefined) {\n        arr[i].vwmaThirty = \"No Data\";\n      }\n\n      if (arr[i].vwmaFifty == undefined) {\n        arr[i].vwmaFifty = \"No Data\";\n      }\n\n      if (arr[i].vwmaOneHun == undefined) {\n        arr[i].vwmaOneHun = \"No Data\";\n      }\n\n      if (arr[i].vwmaTwoHun == undefined) {\n        arr[i].vwmaTwoHun = \"No Data\";\n      }\n\n      if (arr[i].vwap == undefined) {\n        arr[i].vwap = \"No Data\";\n      }\n\n      if (arr[i].macd == undefined) {\n        arr[i].macd = \"No Data\";\n      }\n\n      if (arr[i].rsi == undefined) {\n        arr[i].rsi = \"No Data\";\n      }\n\n      if (arr[i].cciTwenty == undefined) {\n        arr[i].cciTwenty = \"No Data\";\n      }\n\n      if (arr[i].williamsR == undefined) {\n        arr[i].williamsR = \"No Data\";\n      }\n\n      if (arr[i].stochasticK == undefined) {\n        arr[i].stochasticK = \"No Data\";\n      }\n\n      if (arr[i].stochasticD == undefined) {\n        arr[i].stochasticD = \"No Data\";\n      }\n\n      if (arr[i].stochasticSignal == undefined) {\n        arr[i].stochasticSignal = \"No Data\";\n      }\n\n      if (arr[i].bbMiddle == undefined) {\n        arr[i].bbMiddle = \"No Data\";\n      }\n\n      if (arr[i].bbLower == undefined) {\n        arr[i].bbLower = \"No Data\";\n      }\n\n      if (arr[i].bbUpper == undefined) {\n        arr[i].bbUpper = \"No Data\";\n      }\n\n      if (arr[i].bbPercent == undefined) {\n        arr[i].bbPercent = \"No Data\";\n      } // ADJUST TO POSITIVE\n\n\n      if (arr[i].stochasticD < 0) {\n        arr[i].stochasticD = arr[i].stochasticD * -1;\n      }\n\n      if (arr[i].stochasticK < 0) {\n        arr[i].stochasticK = arr[i].stochasticK * -1;\n      }\n\n      if (arr[i].stochasticD < 0) {\n        arr[i].stochasticD = arr[i].stochasticD * -1;\n      }\n\n      if (arr[i].stochasticK < 0) {\n        arr[i].stochasticK = arr[i].stochasticK * -1;\n      }\n\n      arr[i].volumeIncreaseToday = volumeIncrease;\n      arr[i].volumeIncreaseYesterday = yesterdayVolIncrease;\n      arr[i].volumeYesterday = yesterdayVolume;\n    }\n\n    const returnedData = await arr;\n    return returnedData;\n  }\n\n  const returnedData = await filterTradableSymbols(arr, technicalIndicators);\n  return returnedData;\n};","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/JS/APIPortfolioFunction.js"],"names":["technicalPortfolioAnalysis","arr","alert","length","today","Date","year","getFullYear","date","getUTCDate","month","getUTCMonth","minutes","getUTCMinutes","hour","getUTCHours","time","timeNum","parseInt","marketDay","getDay","todayDate","newDateString","dateNumSlice","dateSliceStart","slice","newDateNum","toString","filterTradableSymbols","portArr","callback","res","fetch","dataNyse","json","resTwo","dataNas","combinedStock","concat","holderArr","i","j","symbol","push","e","returnedData","technicalIndicators","smaFunction","chartArr","dataPull","newestPull","num","culSMA","fiveTeenSMA","twentySMA","thirtySMA","fiftySMA","hunSMA","twoHunSMA","todayPricePull","price","historical","smaFiveTeen","close","smaFiveResult","toFixed","smaTwenty","smaTwentyResult","smaThirty","smaThirtyResult","smaFifty","smaFiftyResult","smaOneHun","smaOneHunResult","smaTwoHun","smaTwoHunResult","wmaFunction","weight","wmaInterval","iWma","wmaCul","wmaFiveTeen","wmaTwenty","wmaThirty","wmaFifty","wmaOneHun","wmaTwoHun","vwmaFunction","volume","newPrice","newVol","volCul","totalCul","vwmaFiveTeen","undefined","isNaN","vwmaTwenty","vwmaThirty","vwmaFifty","vwmaOneHun","vwmaTwoHun","emaFunction","macdCallBack","emaEight","emaTwelve","emaTwenty","emaTwentySix","emaFifty","emaTwoHun","prevDayEmaSub","arrEma","macdTwelve","macdTwentySix","subEMA","finalSubEma","unshift","derp","pop","finalEma","macdFunction","arr1","arr2","macd","averageMacd","iMacd","averageSum","reduce","a","b","finalAverageMacd","macdSignalLine","histogram","macdHistogram","rsiFunction","iRSI","iRSIAdjusted","recentUpper","recentDowner","upMove","downMove","pastDownPeriod","pastUpPeriod","rsi","averageUp","averageDown","stochOsc1433Function","iSO","soLowHolder","soHighHolder","highestHigh","lowestLow","topForm","bottomForm","topFormTwo","bottomFormTwo","topFormThree","bottomFormThree","signalLineHolder","stochasticK","low","high","Math","max","min","sumTop","sumBottom","slowD","stochasticD","sumStochD","smaD","stochasticSignal","williamsRFunction","highs","lows","williams","williamsR","cciFunction","tpvCul","tpv","tpvMa","tpvCurrent","recentTpv","cciTwenty","partOne","meanD","map","x","meanDMap","abs","meanDSum","meanDiv","partTwo","cci","bollingerBandsFunction","smaCul","closeHolder","bbUpper","bbLower","bbMiddle","closeP","priceAdj","priceAdjAbs","priceAdjSqrt","partOneDev","partTwoDev","standardDev","sqrt","bbPercent","vwapFunction","dayLengthPeriod","volumeCul","tempVWAP","vwapFinal","vwap","setVolume","yesterdayVolume","portfolioArr","resSMA","dataSMA","Object","keys","console","log","resOscPulled","dataRecentPulled","resVWAP","dataVWAP","buildSearchTech","emptyPortObj","change","changesPercentage","avgVolume","directionArrow","volumeIncrease","increase","decrease","yesterdayVolIncrease","volumeIncreaseToday","volumeIncreaseYesterday","volumeYesterday"],"mappings":"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","sourcesContent":["export const technicalPortfolioAnalysis = async (arr) => {\n  // CHECKING ON PORTFOLIO TO MAKE SURE IT HAS SOMETHING ----------------------------------\n  if (arr === null) {\n    alert(\"Sorry, your portfolio seems to be malfunctioning.\");\n    return [];\n  } else if (arr.length <= 0) {\n    alert(\"Sorry, your portfolio seems to be malfunctioning.\");\n    return [];\n  }\n\n  /// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------==============\n  const today = new Date();\n  const year = today.getFullYear();\n  let date = today.getUTCDate();\n  let month = today.getUTCMonth() + 1;\n  let minutes = today.getUTCMinutes();\n  let hour = today.getUTCHours();\n  // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n\n  //CALC FOR UTC TO EST\n  hour = hour - 4;\n  // CALC FOR EARLY MORNING HOURS UTC\n  if (hour < 0) {\n    hour = hour + 24;\n  }\n\n  // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  const time = `${hour}${minutes}`;\n  const timeNum = parseInt(time);\n\n  // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n  const marketDay = today.getDay();\n  // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n  if (marketDay == 0) {\n    date = date - 2;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 27;\n      }\n    }\n  } else if (marketDay == 6) {\n    date = date - 1;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      }\n    }\n  }\n  // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n  if (marketDay == 1 && timeNum < 930) {\n    date = date - 3;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 27;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 26;\n      }\n    }\n  } else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {\n    // ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n    date = date - 1;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month == 0) {\n          month = 1;\n        }\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        date = 28;\n      }\n    }\n  }\n\n  // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n  if (date < 10) {\n    date = `0${date}`;\n  }\n  if (month < 10) {\n    month = `0${month}`;\n  }\n\n  // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n  let todayDate = `${year}-${month}-${date}`;\n  //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n  if (todayDate === \"2021-11-25\") {\n    todayDate = \"2021-11-24\";\n  } else if (todayDate === \"2021-12-24\") {\n    todayDate = \"2021-12-23\";\n  } else if (todayDate === \"2022-01-17\") {\n    todayDate = \"2022-01-14\";\n  } else if (todayDate === \"2022-02-21\") {\n    todayDate = \"2022-02-18\";\n  } else if (todayDate === \"2022-04-15\") {\n    todayDate = \"2022-04-14\";\n  } else if (todayDate === \"2022-05-30\") {\n    todayDate = \"2022-05-27\";\n  } else if (todayDate === \"2022-06-20\") {\n    todayDate = \"2022-06-17\";\n  } else if (todayDate === \"2022-07-04\") {\n    todayDate = \"2022-07-01\";\n  } else if (todayDate === \"2022-09-05\") {\n    todayDate = \"2022-09-02\";\n  } else if (todayDate === \"2022-11-24\") {\n    todayDate = \"2022-11-23\";\n  } else if (todayDate === \"2022-12-26\") {\n    todayDate = \"2022-12-23\";\n  }\n  // THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n  let newDateString = todayDate;\n\n  if (hour + 4 >= 24) {\n    const dateNumSlice = parseInt(date);\n    const dateSliceStart = todayDate.slice(0, 8);\n    let newDateNum = dateNumSlice - 1;\n    if (newDateNum < 10) {\n      newDateNum = `0${newDateNum}`;\n    }\n    newDateString = `${dateSliceStart}${newDateNum}`;\n    newDateString = newDateString.toString();\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date == 1 && hour + 4 >= 24) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 31;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n        newDateString = `${year}-${month}-${date}`;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n        newDateString = `${year}-${month}-${date}`;\n      }\n    }\n  }\n\n  // ---------------------- END OF DATE -------------------------------------\n\n  // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n  async function filterTradableSymbols(portArr, callback) {\n    try {\n      // ------ FETCH NYSE\n      const res = await fetch(\n        \"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n      );\n      const dataNyse = await res.json();\n\n      // ------ FETCH NASDAQ\n      const resTwo = await fetch(\n        \"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n      );\n      const dataNas = await resTwo.json();\n\n      // FILTER THESE STOCKS DOWN TO JUST WHAT IS IN PORTFOLIO\n      const combinedStock = await dataNyse.concat(dataNas);\n      // IN ANOTHER FUNCTION MAKE THE FILTER TO MATCH PORTFOLIO ARR\n\n      // GETTING INFO FOR PORTFOLIO STOCK ===========================\n\n      var holderArr = [];\n      for (let i = 0; i < portArr.length; i++) {\n        for (let j = 0; j < combinedStock.length; j++) {\n          if (portArr[i].symbol === combinedStock[j].symbol) {\n            holderArr.push(combinedStock[j]);\n          }\n        }\n      }\n\n      //--------- CATCH\n    } catch (e) {}\n    const returnedData = await callback(holderArr, technicalIndicators);\n    return returnedData;\n  }\n\n  // ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n\n  // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function smaFunction(chartArr, dataPull, newestPull, num) {\n    let culSMA = 0;\n\n    // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n    let fiveTeenSMA = 13;\n    let twentySMA = 18;\n    let thirtySMA = 28;\n    let fiftySMA = 48;\n    let hunSMA = 98;\n    let twoHunSMA = 198;\n\n    try {\n      const todayPricePull = newestPull[0].price;\n      // ------------- 15 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 13) {\n        chartArr[num].smaFiveTeen = \"No Data\";\n      } else {\n        while (fiveTeenSMA >= 0) {\n          culSMA += dataPull.historical[fiveTeenSMA].close;\n          fiveTeenSMA--;\n        }\n        let smaFiveResult = (culSMA + todayPricePull) / 15;\n        chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n        culSMA = 0;\n      }\n      // ------------- 20 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 19) {\n        chartArr[num].smaTwenty = \"No Data\";\n      } else {\n        while (twentySMA >= 0) {\n          culSMA += dataPull.historical[twentySMA].close;\n          twentySMA--;\n        }\n        let smaTwentyResult = (culSMA + todayPricePull) / 20;\n        chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n        culSMA = 0;\n      }\n      // ------------- 30 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 29) {\n        chartArr[num].smaThirty = \"No Data\";\n      } else {\n        while (thirtySMA >= 0) {\n          culSMA += dataPull.historical[thirtySMA].close;\n          thirtySMA--;\n        }\n        let smaThirtyResult = (culSMA + todayPricePull) / 30;\n        chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n        culSMA = 0;\n      }\n      // ------------- 50 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 49) {\n        chartArr[num].smaFifty = \"No Data\";\n      } else {\n        while (fiftySMA >= 0) {\n          culSMA += dataPull.historical[fiftySMA].close;\n          fiftySMA--;\n        }\n        let smaFiftyResult = (culSMA + todayPricePull) / 50;\n        chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n        culSMA = 0;\n      }\n      // ------------- 100 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 99) {\n        chartArr[num].smaOneHun = \"No Data\";\n      } else {\n        while (hunSMA >= 0) {\n          culSMA += dataPull.historical[hunSMA].close;\n          hunSMA--;\n        }\n        let smaOneHunResult = (culSMA + todayPricePull) / 100;\n        chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n        culSMA = 0;\n      }\n      // ------------- 200 DAY SMA -------------------------------\n      if (dataPull.historical.length <= 199) {\n        chartArr[num].smaTwoHun = \"No Data\";\n      } else {\n        while (twoHunSMA >= 0) {\n          culSMA += dataPull.historical[twoHunSMA].close;\n          twoHunSMA--;\n        }\n        let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n        chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n        culSMA = 0;\n      }\n    } catch (e) {}\n  }\n  // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function wmaFunction(chartArr, dataPull, newestPull, num) {\n    // WMA FiveTeen --------------------------------------------------------------------\n    let weight = 14;\n    let wmaInterval = 0;\n    let iWma = 15;\n    try {\n      let wmaCul = newestPull[0].price * 15;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].wmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaFiveTeen = wmaCul / iWma;\n        chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n      }\n\n      // WMA Twenty --------------------------------------------------------------------\n      wmaCul = newestPull[0].price * 20;\n      weight = 19;\n      wmaInterval = 0;\n      iWma = 20;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].wmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaTwenty = wmaCul / iWma;\n        chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n      }\n\n      // WMA THIRTY --------------------------------------------------------------------\n\n      wmaCul = newestPull[0].price * 30;\n      weight = 29;\n      wmaInterval = 0;\n      iWma = 30;\n\n      if (dataPull.historical.length < 30) {\n        chartArr[num].wmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaThirty = wmaCul / iWma;\n        chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n      }\n\n      // WMA FIFTY --------------------------------------------------------------------\n\n      wmaCul = newestPull[0].price * 50;\n      weight = 49;\n      wmaInterval = 0;\n      iWma = 50;\n\n      if (dataPull.historical.length < 50) {\n        chartArr[num].wmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaFifty = wmaCul / iWma;\n        chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n      }\n\n      // WMA ONE HUNDRED --------------------------------------------------------------------\n\n      wmaCul = newestPull[0].price * 100;\n      weight = 99;\n      wmaInterval = 0;\n      iWma = 100;\n\n      if (dataPull.historical.length < 100) {\n        chartArr[num].wmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaOneHun = wmaCul / iWma;\n        chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n      }\n\n      // WMA TWO HUNDRED --------------------------------------------------------------------\n\n      wmaCul = newestPull[0].price * 200;\n      weight = 199;\n      wmaInterval = 0;\n      iWma = 200;\n\n      if (dataPull.historical.length < 200) {\n        chartArr[num].wmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n        const wmaTwoHun = wmaCul / iWma;\n        chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function vwmaFunction(chartArr, dataPull, newestPull, num) {\n    // VWMA FIVETEEN --------------------------------------------------------------------\n\n    try {\n      let price = 0;\n      let volume = 0;\n      const newPrice = newestPull[0].price;\n      const newVol = newestPull[0].volume;\n\n      let volCul = newestPull[0].volume;\n      let totalCul = newPrice * newVol;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].vwmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          price = dataPull.historical[i].close;\n          if (price == undefined) {\n            price = 0;\n          }\n          volume = dataPull.historical[i].volume;\n          if (volume == undefined) {\n            volume = 0;\n          }\n          totalCul += price * volume;\n          if (isNaN(totalCul)) {\n            return;\n          }\n          volCul += dataPull.historical[i].volume;\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFiveTeen = totalCul / volCul;\n\n        chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n      }\n\n      // VWMA TWENTY --------------------------------------------------------------------\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].vwmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          price = dataPull.historical[i].close;\n          if (price == undefined) {\n            price = 0;\n          }\n          volume = dataPull.historical[i].volume;\n          if (volume == undefined) {\n            volume = 0;\n          }\n          totalCul += price * volume;\n          if (isNaN(totalCul)) {\n            return;\n          }\n          volCul += dataPull.historical[i].volume;\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n        const vwmaTwenty = totalCul / volCul;\n\n        chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n      }\n\n      // VWMA THIRTY --------------------------------------------------------------------\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 29) {\n        chartArr[num].vwmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          price = dataPull.historical[i].close;\n          if (price == undefined) {\n            price = 0;\n          }\n          volume = dataPull.historical[i].volume;\n          if (volume == undefined) {\n            volume = 0;\n          }\n          totalCul += price * volume;\n          if (isNaN(totalCul)) {\n            return;\n          }\n          volCul += dataPull.historical[i].volume;\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n        const vwmaThirty = totalCul / volCul;\n        chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n      }\n\n      // VWMA FIFTY --------------------------------------------------------------------\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 49) {\n        chartArr[num].vwmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          price = dataPull.historical[i].close;\n          if (price == undefined) {\n            price = 0;\n          }\n          volume = dataPull.historical[i].volume;\n          if (volume == undefined) {\n            volume = 0;\n          }\n          totalCul += price * volume;\n          if (isNaN(totalCul)) {\n            return;\n          }\n          volCul += dataPull.historical[i].volume;\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n        const vwmaFifty = totalCul / volCul;\n        chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n      }\n\n      // VWMA ONEHUN --------------------------------------------------------------------\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 99) {\n        chartArr[num].vwmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          price = dataPull.historical[i].close;\n          if (price == undefined) {\n            price = 0;\n          }\n          volume = dataPull.historical[i].volume;\n          if (volume == undefined) {\n            volume = 0;\n          }\n          totalCul += price * volume;\n          if (isNaN(totalCul)) {\n            return;\n          }\n          volCul += dataPull.historical[i].volume;\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n        const vwmaOneHun = totalCul / volCul;\n        chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n      }\n\n      // VWMA TWOHUN --------------------------------------------------------------------\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 199) {\n        chartArr[num].vwmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          price = dataPull.historical[i].close;\n          if (price == undefined) {\n            price = 0;\n          }\n          volume = dataPull.historical[i].volume;\n          if (volume == undefined) {\n            volume = 0;\n          }\n          totalCul += price * volume;\n          if (isNaN(totalCul)) {\n            return;\n          }\n          volCul += dataPull.historical[i].volume;\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n        const vwmaTwoHun = totalCul / volCul;\n        chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n    let emaEight = 14;\n    let emaTwelve = 22;\n    let emaTwenty = 38;\n    let emaTwentySix = 50;\n    let emaFifty = 98;\n    let emaTwoHun = 398;\n    let prevDayEmaSub = 0;\n    let arrEma = [];\n\n    let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n    let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      // EMA EIGHT ----------------------------------------------------------------------\n      if (dataPull.historical.length <= 16) {\n        chartArr[num].emaEight = \"No Data\";\n      } else {\n        while (emaEight >= 15) {\n          prevDayEmaSub += dataPull.historical[emaEight].close;\n          emaEight--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n        const subEMA = prevDayEmaSub / 8;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 9) * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaEight--;\n        while (emaEight >= 0) {\n          let derp =\n            (2 / 9) * (dataPull.historical[emaEight].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaEight--;\n        }\n\n        const finalEma = (2 / 9) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n\n        chartArr[num].emaEight = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n      // EMA TWELVE ----------------------------------------------------------------------\n      if (dataPull.historical.length <= 24) {\n        chartArr[num].emaTwelve = \"No Data\";\n      } else {\n        while (emaTwelve >= 11) {\n          prevDayEmaSub += dataPull.historical[emaTwelve].close;\n          emaTwelve--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n        const subEMA = prevDayEmaSub / 12;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 13) * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwelve--;\n\n        while (emaTwelve >= 0) {\n          let derp =\n            (2 / 13) * (dataPull.historical[emaTwelve].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          if (emaTwelve < 8 && emaTwelve >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwelve.unshift(derp);\n          }\n          emaTwelve--;\n        }\n\n        const finalEma = (2 / 13) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwelve.unshift(finalEma);\n\n        chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n\n      // EMA TWENTY ----------------------------------------------------------------------\n      if (dataPull.historical.length <= 40) {\n        chartArr[num].emaTwenty = \"No Data\";\n      } else {\n        while (emaTwenty >= 19) {\n          prevDayEmaSub += dataPull.historical[emaTwenty].close;\n          emaTwenty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n        const subEMA = prevDayEmaSub / 20;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 21) * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwenty--;\n        while (emaTwenty >= 0) {\n          let derp =\n            (2 / 21) * (dataPull.historical[emaTwenty].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwenty--;\n        }\n\n        const finalEma = (2 / 21) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n\n        chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n\n      // EMA TWENTY SIX ----------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 51) {\n        chartArr[num].emaTwentySix = \"No Data\";\n      } else {\n        while (emaTwentySix >= 25) {\n          prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n          emaTwentySix--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n        const subEMA = prevDayEmaSub / 26;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 27) * (dataPull.historical[emaTwentySix].close - subEMA) +\n          subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwentySix--;\n        while (emaTwentySix >= 0) {\n          let derp =\n            (2 / 27) * (dataPull.historical[emaTwentySix].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          if (emaTwentySix < 8 && emaTwentySix >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwentySix.unshift(derp);\n          }\n          emaTwentySix--;\n        }\n\n        const finalEma = (2 / 27) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwentySix.unshift(finalEma);\n\n        chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n\n      // EMA FIFTY -----------------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 100) {\n        chartArr[num].emaFifty = \"No Data\";\n      } else {\n        while (emaFifty >= 49) {\n          prevDayEmaSub += dataPull.historical[emaFifty].close;\n          emaFifty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n        const subEMA = prevDayEmaSub / 50;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 51) * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaFifty--;\n        while (emaFifty >= 0) {\n          let derp =\n            (2 / 51) * (dataPull.historical[emaFifty].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaFifty--;\n        }\n\n        const finalEma = (2 / 51) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n\n        chartArr[num].emaFifty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n\n      // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 400) {\n        chartArr[num].emaTwoHun = \"No Data\";\n      } else {\n        while (emaTwoHun >= 199) {\n          prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n          emaTwoHun--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n        const subEMA = prevDayEmaSub / 200;\n        //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n        const finalSubEma =\n          (2 / 201) * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwoHun--;\n        while (emaTwoHun >= 0) {\n          let derp =\n            (2 / 201) * (dataPull.historical[emaTwoHun].close - arrEma[0]) +\n            arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwoHun--;\n        }\n\n        const finalEma = (2 / 201) * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n\n        chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n    } catch (e) {}\n\n    // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n    macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n  }\n  // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n  function macdFunction(chartArr, num, arr1, arr2) {\n    const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n    chartArr[num].macd = macd.toFixed(2);\n    // CALCULATE SIGNAL LINE ----------------\n    let averageMacd = [];\n    let iMacd = 8;\n\n    try {\n      while (iMacd >= 0) {\n        averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n        iMacd--;\n      }\n      let averageSum = averageMacd.reduce((a, b) => a + b);\n      let finalAverageMacd = averageSum / 9;\n      let macdSignalLine =\n        (2 / 9) * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n      chartArr[num].macdSignalLine = macdSignalLine.toFixed(2);\n      // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n      let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n      chartArr[num].macdHistogram = histogram.toFixed(2);\n      // FOR NO DATA TO PULL FROM\n      if (chartArr[num].macdHistogram === \"NaN\") {\n        chartArr[num].macdHistogram = \"No Data\";\n      }\n      if (chartArr[num].macd === \"NaN\") {\n        chartArr[num].macd = \"No Data\";\n      }\n      if (chartArr[num].macdSignalLine === \"NaN\") {\n        chartArr[num].macdSignalLine = \"No Data\";\n      }\n    } catch (e) {}\n  }\n  // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function rsiFunction(chartArr, dataPull, newestPull, num) {\n    let iRSI = 13;\n    let iRSIAdjusted = 14;\n    let recentUpper = 0;\n    let recentDowner = 0;\n    let upMove = 0;\n    let downMove = 0;\n    let pastDownPeriod = 0;\n    let pastUpPeriod = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n      // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n      if (dataPull.historical.length <= 14) {\n        chartArr[num].rsi = \"No Data\";\n      } else {\n        // LOOP FOR AVERAGE\n        while (iRSI >= 0) {\n          if (\n            dataPull.historical[iRSI].close >\n            dataPull.historical[iRSIAdjusted].close\n          ) {\n            upMove +=\n              dataPull.historical[iRSI].close -\n              dataPull.historical[iRSIAdjusted].close;\n          } else {\n            downMove +=\n              dataPull.historical[iRSIAdjusted].close -\n              dataPull.historical[iRSI].close;\n          }\n          iRSI--;\n          iRSIAdjusted--;\n        }\n\n        let averageUp = upMove / 14;\n        let averageDown = downMove / 14;\n\n        // MOST RECENT DIFFERENCE\n        if (newPrice > dataPull.historical[0].close) {\n          recentUpper = newPrice - dataPull.historical[0].close;\n        } else {\n          recentDowner = dataPull.historical[0].close - newPrice;\n        }\n\n        pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n        pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n\n        let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n        chartArr[num].rsi = rsi.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n    let iSO = 13;\n\n    let soLowHolder = [];\n    let soHighHolder = [];\n    let highestHigh = 0;\n    let lowestLow = 0;\n    // FIRST %D\n    let topForm = [];\n    let bottomForm = [];\n    // SECOND %D\n    let topFormTwo = [];\n    let bottomFormTwo = [];\n    // THIRD %D\n    let topFormThree = [];\n    let bottomFormThree = [];\n    // HOLDING SET OF %D FOR 14 3 3\n    let signalLineHolder = [];\n    try {\n      let newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 18) {\n        chartArr[num].stochasticK = \"No Data\";\n      } else {\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n\n        while (iSO >= 0) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        soHighHolder.push(newPrice);\n        soLowHolder.push(newPrice);\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        if (lowestLow === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        if (highestHigh === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        topForm.push(newPrice - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n\n        //FOR %K\n        chartArr[num].stochasticK = (\n          ((newPrice - lowestLow) / (highestHigh - lowestLow)) *\n          100\n        ).toFixed(2);\n\n        // RESET HOLDER AND VARs --------------------------------------------------------\n\n        iSO = 14;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n\n        // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n        while (iSO >= 1) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        topForm.push(dataPull.historical[0].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n\n        topFormTwo.push(dataPull.historical[0].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n\n        // RESET HOLDER AND VARs ------------------------------------------------\n\n        iSO = 15;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n\n        // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 2) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        topForm.push(dataPull.historical[1].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n\n        topFormTwo.push(dataPull.historical[1].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n\n        topFormThree.push(dataPull.historical[1].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow);\n\n        // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        let sumTop = topForm.reduce((a, b) => a + b, 0);\n        let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n\n        let slowD = (sumTop / sumBottom) * 100;\n\n        // FOR %D\n        chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n\n        signalLineHolder.push(slowD);\n\n        //RESET VARS ---------------------------------------------------------------------\n\n        iSO = 16;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0;\n\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n        while (iSO >= 3) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        topFormTwo.push(dataPull.historical[2].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n\n        topFormThree.push(dataPull.historical[2].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow);\n\n        // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n\n        slowD = (sumTop / sumBottom) * 100;\n\n        signalLineHolder.push(slowD);\n\n        //RESET VARS ---------------------------------------------\n\n        iSO = 17;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0;\n\n        // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 4) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        topFormThree.push(dataPull.historical[3].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow);\n\n        // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormThree.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n\n        slowD = (sumTop / sumBottom) * 100;\n\n        signalLineHolder.push(slowD);\n\n        // ----------- TALLY UP LAST SMOOTHING -------------------------------\n        const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n        let smaD = sumStochD / 3;\n\n        if (smaD < 0) {\n          smaD *= -1;\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        } else {\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        }\n      }\n    } catch (e) {}\n  }\n  // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  function williamsRFunction(chartArr, dataPull, newestPull, num) {\n    let highs = [];\n    let lows = [];\n    let lowestLow = 0;\n    let highestHigh = 0;\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].williams = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          highs.push(dataPull.historical[i].high);\n          lows.push(dataPull.historical[i].low);\n        }\n\n        highs.push(newPrice);\n        lows.push(newPrice);\n\n        lowestLow = Math.min(...lows);\n        highestHigh = Math.max(...highs);\n\n        const williams =\n          ((highestHigh - dataPull.historical[0].close) /\n            (highestHigh - lowestLow)) *\n          -100;\n\n        chartArr[num].williamsR = williams.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  function cciFunction(chartArr, dataPull, newestPull, num) {\n    let tpvCul = 0;\n    let tpv = [];\n    let tpvMa = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n      let tpvCurrent = newPrice;\n      const recentTpv = newPrice;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].cciTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 19; i++) {\n          const { high, close, low } = dataPull.historical[i];\n          tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n          tpvCurrent = (close + high + low) / 3;\n        }\n        // ---- TPV SMA ------------------------\n        tpvCul = tpv.reduce((a, b) => a + b);\n        tpvMa = tpvCul / 20;\n        // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n        const partOne = recentTpv - tpvMa;\n\n        const meanD = tpv.map((x) => x - tpvMa);\n        const meanDMap = meanD.map((x) => Math.abs(x));\n        const meanDSum = meanDMap.reduce((a, b) => a + b);\n        const meanDiv = meanDSum / 20;\n        // PART TWO OF FORMULA --------------\n        const partTwo = meanDiv * 0.015;\n        // CCI ------------------------------\n        const cci = partOne / partTwo;\n\n        chartArr[num].cciTwenty = cci.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  function bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n    let smaCul = 0;\n    let closeHolder = [];\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].bbUpper = \"No Data\";\n        chartArr[num].bbLower = \"No Data\";\n        chartArr[num].bbMiddle = \"No Data\";\n      } else {\n        let closeP = newPrice;\n        for (let i = 0; i <= 19; i++) {\n          closeHolder.push(closeP);\n          smaCul += closeP;\n          closeP = dataPull.historical[i].close;\n        }\n        // STANDARD DEVIATION CALC --------------------------------\n        const smaTwenty = smaCul / 20;\n\n        const priceAdj = closeHolder.map((x) => x - smaTwenty);\n\n        const priceAdjAbs = priceAdj.map((x) => Math.abs(x));\n\n        const priceAdjSqrt = priceAdjAbs.map((x) => x * x);\n\n        const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n\n        const partTwoDev = partOneDev / 20;\n        const standardDev = Math.sqrt(partTwoDev);\n        // BB BAND CALC --------------------------------------------\n        const bbUpper = smaTwenty + standardDev * 2;\n        const bbLower = smaTwenty - standardDev * 2;\n\n        const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n\n        chartArr[num].bbUpper = bbUpper.toFixed(2);\n        chartArr[num].bbLower = bbLower.toFixed(2);\n        chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n        chartArr[num].bbPercent = bbPercent.toFixed(2);\n      }\n    } catch (e) {}\n  }\n  // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n  function vwapFunction(chartArr, dataPull, num) {\n    // ----------- VWAP CALUC -------------------------------------------\n    let dayLengthPeriod = 0;\n    let tpvCul = 0;\n    let volumeCul = 0;\n    let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n    try {\n      // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n      while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n        dayLengthPeriod++;\n      }\n\n      // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n      for (let i = 0; i < dayLengthPeriod; i++) {\n        const { volume, high, close, low, date } = dataPull[i];\n        let tpv = (high + low + close) / 3;\n        if (date.slice(0, 10) == newDateString) {\n          tpvCul += tpv * volume;\n          volumeCul += volume;\n        }\n        var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n        tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n      }\n      let vwap = tempVWAP[0].toFixed(2);\n      chartArr[num].vwap = vwap;\n    } catch (e) {}\n  }\n  // SET VOLUME FOR LATER\n  function setVolume(chartArr, dataPull, newestPull, num) {\n    // SET RECENT YESTERDAY VOLUME\n    try {\n      if (dataPull.historical.length <= 0) {\n        chartArr[num].yesterdayVolume = 0;\n      } else {\n        chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n        if (marketDay == 0 || marketDay == 6) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (timeNum > 1830) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n      }\n      if (newestPull.length < 0) {\n        chartArr[num].volume = 0;\n      } else {\n        // SET RECENT VOLUME\n        chartArr[num].volume = newestPull[0].volume;\n      }\n    } catch (e) {}\n  }\n\n  // TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\n  async function technicalIndicators(portfolioArr, callback) {\n    let j = 0;\n\n    while (j < portfolioArr.length) {\n      // LOOP FOR TECHNICAL SYMBOL\n\n      // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n      const { symbol } = portfolioArr[j];\n\n      //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n      const resSMA = await fetch(\n        `https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n      );\n      const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n      // ERROR CHECK FOR EMPTY PULL\n      try {\n        if (!Object.keys(dataSMA).length) {\n          console.log(\"no SMA Pull data found\");\n        }\n      } catch (e) {}\n\n      //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n      const resOscPulled = await fetch(\n        `https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n      );\n      const dataRecentPulled = await resOscPulled.json();\n      // ERROR CHECK FOR EMPTY PULL\n      try {\n        if (!Object.keys(dataRecentPulled).length) {\n          console.log(\"no Recent Pull data found\");\n        }\n      } catch (e) {}\n\n      // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n      const resVWAP = await fetch(\n        `https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n      );\n      const dataVWAP = await resVWAP.json();\n      // ERROR CHECK FOR EMPTY PULL\n      try {\n        if (!Object.keys(dataVWAP).length) {\n          console.log(\"no VWAP Pull data found\");\n        }\n      } catch (e) {}\n\n      // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n      vwapFunction(portfolioArr, dataVWAP, j);\n\n      // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      smaFunction(portfolioArr, dataSMA, dataRecentPulled, j);\n\n      // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      wmaFunction(portfolioArr, dataSMA, dataRecentPulled, j);\n\n      // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      vwmaFunction(portfolioArr, dataSMA, dataRecentPulled, j);\n\n      // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n      emaFunction(portfolioArr, dataSMA, dataRecentPulled, j, macdFunction);\n\n      // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      rsiFunction(portfolioArr, dataSMA, dataRecentPulled, j);\n\n      // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      stochOsc1433Function(portfolioArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n\n      // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      williamsRFunction(portfolioArr, dataSMA, dataRecentPulled, j);\n\n      // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      cciFunction(portfolioArr, dataSMA, dataRecentPulled, j);\n\n      // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      bollingerBandsFunction(portfolioArr, dataSMA, dataRecentPulled, j);\n\n      // SET VOLUME PROPERTIES\n      setVolume(portfolioArr, dataSMA, dataRecentPulled, j);\n\n      j++; // UPDATE WHILE LOOP\n    } // THIS IS THE END OF LOOP\n\n    const returnedData = await callback(portfolioArr, buildSearchTech);\n\n    return returnedData;\n  }\n\n  async function buildSearchTech(arr) {\n\n    if (returnedData.length < 10) {\n      while (returnedData.length < 10) {\n        console.log(returnedData)\n        returnedData.push(emptyPortObj)\n      }\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n      let {\n        symbol,\n        price,\n        change,\n        changesPercentage,\n        avgVolume,\n        volume,\n        yesterdayVolume,\n        vwap,\n        smaFiveTeen,\n        smaTwenty,\n        smaThirty,\n        smaFifty,\n        smaOneHun,\n        smaTwoHun,\n        emaEight,\n        emaTwelve,\n        emaTwenty,\n        emaTwentySix,\n        emaFifty,\n        emaTwoHun,\n        wmaFiveTeen,\n        wmaTwenty,\n        wmaThirty,\n        wmaFifty,\n        wmaOneHun,\n        wmaTwoHun,\n        vwmaFiveTeen,\n        vwmaTwenty,\n        vwmaThirty,\n        vwmaFifty,\n        vwmaOneHun,\n        vwmaTwoHun,\n        macd,\n        macdHistogram,\n        macdSignalLine,\n        rsi,\n        stochasticD,\n        stochasticK,\n        stochasticSignal,\n        cciTwenty,\n        bbMiddle,\n        bbLower,\n        bbUpper,\n        bbPercent,\n        williamsR,\n      } = arr[i];\n\n      let directionArrow = \"up\";\n      // SETS ARROW FOR UP AND DOWN --------------\n      if (changesPercentage < 0) {\n        arr[i].directionArrow = \"down\";\n      } else {\n        arr[i].directionArrow = \"up\";\n      }\n\n      // CHANGE TO POSITIVE BUT ARROW POINTS DOWN OR UP ----------\n      if (change < 0) {\n        arr[i].change = change * -1;\n      }\n\n      // ADJUST TO FIXED --------------------------------------------------------\n\n      price = price.toFixed(2);\n\n      change = change.toFixed(2);\n\n      changesPercentage = changesPercentage.toFixed(2);\n\n      // VOLUME INCREASE TODAY ----------\n      let volumeIncrease = 0;\n\n      if (volume > avgVolume) {\n        let increase = volume - avgVolume;\n        volumeIncrease = (increase / avgVolume) * 100;\n      } else {\n        let decrease = avgVolume - volume;\n        volumeIncrease = (decrease / avgVolume) * -100;\n      }\n\n      volumeIncrease = volumeIncrease.toFixed(2);\n\n      // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n      let yesterdayVolIncrease = 0;\n\n      if (yesterdayVolume > avgVolume) {\n        let increase = yesterdayVolume - avgVolume;\n        yesterdayVolIncrease = (increase / avgVolume) * 100;\n      } else {\n        let decrease = avgVolume - yesterdayVolume;\n        yesterdayVolIncrease = (decrease / avgVolume) * -100;\n      }\n\n      yesterdayVolIncrease = yesterdayVolIncrease.toFixed(2);\n\n      // NaN CHECK ----------------------------------------\n      if (isNaN(yesterdayVolIncrease)) {\n        arr[i].yesterdayVolIncrease = \"No Data\";\n      }\n\n      // ADJUST TO POSITIVE\n      if (arr[i].stochasticD < 0) {\n        arr[i].stochasticD = arr[i].stochasticD * -1;\n      }\n      if (arr[i].stochasticK < 0) {\n        arr[i].stochasticK = arr[i].stochasticK * -1;\n      }\n      if (arr[i].stochasticD < 0) {\n        arr[i].stochasticD = arr[i].stochasticD * -1;\n      }\n      if (arr[i].stochasticK < 0) {\n        arr[i].stochasticK = arr[i].stochasticK * -1;\n      }\n\n      // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n\n      if (arr[i].avgVolume == undefined) {\n        arr[i].avgVolume = \"No Data\";\n      }\n\n      if (arr[i].volume == undefined) {\n        arr[i].volume = \"No Data\";\n      }\n\n      if (arr[i].volumeIncrease == undefined) {\n        arr[i].volumeIncrease = \"No Data\";\n      }\n\n      if (arr[i].yesterdayVolume == undefined) {\n        arr[i].yesterdayVolume = \"No Data\";\n      }\n\n      if (arr[i].smaFiveTeen == undefined) {\n        arr[i].smaFiveTeen = \"No Data\";\n      }\n\n      if (arr[i].smaTwenty == undefined) {\n        arr[i].smaTwenty = \"No Data\";\n      }\n\n      if (arr[i].smaThirty == undefined) {\n        arr[i].smaThirty = \"No Data\";\n      }\n\n      if (arr[i].smaFifty == undefined) {\n        arr[i].smaFifty = \"No Data\";\n      }\n\n      if (arr[i].smaOneHun == undefined) {\n        arr[i].smaOneHun = \"No Data\";\n      }\n\n      if (arr[i].smaTwoHun == undefined) {\n        arr[i].smaTwoHun = \"No Data\";\n      }\n\n      if (arr[i].emaEight == undefined) {\n        arr[i].emaEight = \"No Data\";\n      }\n\n      if (arr[i].emaTwelve == undefined) {\n        arr[i].emaTwelve = \"No Data\";\n      }\n\n      if (arr[i].emaTwenty == undefined) {\n        arr[i].emaTwenty = \"No Data\";\n      }\n\n      if (arr[i].emaTwentySix == undefined) {\n        arr[i].emaTwentySix = \"No Data\";\n      }\n\n      if (arr[i].emaFifty == undefined) {\n        arr[i].emaFifty = \"No Data\";\n      }\n\n      if (arr[i].emaTwoHun == undefined) {\n        arr[i].emaTwoHun = \"No Data\";\n      }\n\n      if (arr[i].wmaFiveTeen == undefined) {\n        arr[i].wmaFiveTeen = \"No Data\";\n      }\n\n      if (arr[i].wmaTwenty == undefined) {\n        arr[i].wmaTwenty = \"No Data\";\n      }\n\n      if (arr[i].wmaThirty == undefined) {\n        arr[i].wmaThirty = \"No Data\";\n      }\n\n      if (arr[i].wmaFifty == undefined) {\n        arr[i].wmaFifty = \"No Data\";\n      }\n\n      if (arr[i].wmaOneHun == undefined) {\n        arr[i].wmaOneHun = \"No Data\";\n      }\n\n      if (arr[i].wmaTwoHun == undefined) {\n        arr[i].wmaTwoHun = \"No Data\";\n      }\n\n      if (arr[i].vwmaFiveTeen == undefined) {\n        arr[i].vwmaFiveTeen = \"No Data\";\n      }\n      if (arr[i].vwmaTwenty == undefined) {\n        arr[i].vwmaTwenty = \"No Data\";\n      }\n      if (arr[i].vwmaThirty == undefined) {\n        arr[i].vwmaThirty = \"No Data\";\n      }\n      if (arr[i].vwmaFifty == undefined) {\n        arr[i].vwmaFifty = \"No Data\";\n      }\n      if (arr[i].vwmaOneHun == undefined) {\n        arr[i].vwmaOneHun = \"No Data\";\n      }\n      if (arr[i].vwmaTwoHun == undefined) {\n        arr[i].vwmaTwoHun = \"No Data\";\n      }\n\n      if (arr[i].vwap == undefined) {\n        arr[i].vwap = \"No Data\";\n      }\n\n      if (arr[i].macd == undefined) {\n        arr[i].macd = \"No Data\";\n      }\n\n      if (arr[i].rsi == undefined) {\n        arr[i].rsi = \"No Data\";\n      }\n      if (arr[i].cciTwenty == undefined) {\n        arr[i].cciTwenty = \"No Data\";\n      }\n\n      if (arr[i].williamsR == undefined) {\n        arr[i].williamsR = \"No Data\";\n      }\n\n      if (arr[i].stochasticK == undefined) {\n        arr[i].stochasticK = \"No Data\";\n      }\n      if (arr[i].stochasticD == undefined) {\n        arr[i].stochasticD = \"No Data\";\n      }\n      if (arr[i].stochasticSignal == undefined) {\n        arr[i].stochasticSignal = \"No Data\";\n      }\n\n      if (arr[i].bbMiddle == undefined) {\n        arr[i].bbMiddle = \"No Data\";\n      }\n      if (arr[i].bbLower == undefined) {\n        arr[i].bbLower = \"No Data\";\n      }\n      if (arr[i].bbUpper == undefined) {\n        arr[i].bbUpper = \"No Data\";\n      }\n      if (arr[i].bbPercent == undefined) {\n        arr[i].bbPercent = \"No Data\";\n      }\n\n      // ADJUST TO POSITIVE\n      if (arr[i].stochasticD < 0) {\n        arr[i].stochasticD = arr[i].stochasticD * -1;\n      }\n      if (arr[i].stochasticK < 0) {\n        arr[i].stochasticK = arr[i].stochasticK * -1;\n      }\n      if (arr[i].stochasticD < 0) {\n        arr[i].stochasticD = arr[i].stochasticD * -1;\n      }\n      if (arr[i].stochasticK < 0) {\n        arr[i].stochasticK = arr[i].stochasticK * -1;\n      }\n\n      arr[i].volumeIncreaseToday = volumeIncrease;\n      arr[i].volumeIncreaseYesterday = yesterdayVolIncrease;\n      arr[i].volumeYesterday = yesterdayVolume;\n    }\n    const returnedData = await arr;\n    return returnedData;\n  }\n\n  const returnedData = await filterTradableSymbols(arr, technicalIndicators);\n\n\n\n  return returnedData;\n};\n"]},"metadata":{},"sourceType":"module"}