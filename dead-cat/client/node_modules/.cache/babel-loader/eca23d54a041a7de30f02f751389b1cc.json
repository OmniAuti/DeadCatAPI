{"ast":null,"code":"var _jsxFileName = \"/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/PortfolioHolder.js\",\n    _s = $RefreshSig$();\n\nimport PortfolioItem from \"./PortfolioItem\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PortfolioHolder = props => {\n  _s();\n\n  const [storageArr, setStorageArr] = useState(null);\n  const [isEmpty, setIsEmpty] = useState(true); // THIS IS FOR DELETING\n\n  const handleDeleteStorageItem = id => {\n    console.log('ok');\n    setStorageArr(storageArr.filter(item => item.id !== id));\n  };\n\n  useEffect(() => {\n    if (props.newStorage === false) return; // WILL STOP FROM RUNNING\n\n    setStorageArr(JSON.parse(localStorage.getItem(\"deadCatPortfolio\")));\n    setIsEmpty(false);\n  }, [props.newStorage]);\n  useEffect(() => {\n    if (storageArr === null) {\n      localStorage.clear(\"deadCatPortfolio\");\n      return;\n    } // if (storageArr === []) {\n    //   localStorage.clear(\"deadCatPortfolio\")\n    //   return\n    // }\n\n\n    localStorage.setItem(\"deadCatPortfolio\", JSON.stringify(storageArr));\n  }, [storageArr]);\n  useEffect(() => {\n    const storageCheck = JSON.parse(localStorage.getItem(\"deadCatPortfolio\"));\n\n    if (storageCheck === null) {\n      setIsEmpty(true);\n    } else {\n      setIsEmpty(false);\n    }\n  }, []);\n\n  if (isEmpty) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.handleClearPortfolio,\n        tabIndex: props.activePortfolio ? -1 : 0,\n        className: \"clear-portfolio\",\n        children: \"Clear Entire Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), storageArr.map(data => /*#__PURE__*/_jsxDEV(PortfolioItem, {\n        handleDeleteStorageItem: handleDeleteStorageItem,\n        data: data\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.handleClearPortfolio,\n        tabIndex: props.activePortfolio ? -1 : 0,\n        className: \"clear-portfolio\",\n        children: \"Clear Entire Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(PortfolioHolder, \"PUGrfzR3XXPoy9gPrEIdDpowKHo=\");\n\n_c = PortfolioHolder;\nexport default PortfolioHolder;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioHolder\");","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/PortfolioHolder.js"],"names":["PortfolioItem","useState","useEffect","PortfolioHolder","props","storageArr","setStorageArr","isEmpty","setIsEmpty","handleDeleteStorageItem","id","console","log","filter","item","newStorage","JSON","parse","localStorage","getItem","clear","setItem","stringify","storageCheck","handleClearPortfolio","activePortfolio","map","data"],"mappings":"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","sourcesContent":["import PortfolioItem from \"./PortfolioItem\";\nimport { useState, useEffect } from \"react\";\n\nconst PortfolioHolder = (props) => {\n  const [storageArr, setStorageArr] = useState(null);\n  const [isEmpty, setIsEmpty] = useState(true);\n// THIS IS FOR DELETING\n  const handleDeleteStorageItem = (id) => {\n    console.log('ok')\n    setStorageArr(storageArr.filter((item) => item.id !== id));\n  };\n\n  useEffect(() => {\n    if (props.newStorage === false) return; // WILL STOP FROM RUNNING\n    setStorageArr(JSON.parse(localStorage.getItem(\"deadCatPortfolio\")));\n    setIsEmpty(false)\n  }, [props.newStorage]);\n\n\n  useEffect(() => {\n    if (storageArr === null) {\n      localStorage.clear(\"deadCatPortfolio\")\n      return\n    }\n\n    // if (storageArr === []) {\n    //   localStorage.clear(\"deadCatPortfolio\")\n    //   return\n    // }\n    \n    localStorage.setItem(\"deadCatPortfolio\", JSON.stringify(storageArr))\n  }, [storageArr])\n\n  useEffect(() => {\n    const storageCheck = JSON.parse(localStorage.getItem(\"deadCatPortfolio\"));\n    if (storageCheck === null) {\n      setIsEmpty(true);\n    } else {\n      setIsEmpty(false)\n    }\n  }, [])\n\nif (isEmpty) {\n  return (\n    <div className=\"portfolio-holder\">\n      <hr></hr>\n\n      <p>Empty</p>\n\n      <button\n        onClick={props.handleClearPortfolio}\n        tabIndex={props.activePortfolio ? -1 : 0}\n        className=\"clear-portfolio\"\n      >\n        Clear Entire Portfolio\n      </button>\n    </div>\n  );\n  } else {\n    return (\n      <div className=\"portfolio-holder\">\n        <hr></hr>\n\n        {storageArr.map((data) => (\n          <PortfolioItem\n            handleDeleteStorageItem={handleDeleteStorageItem}\n            key={data.id}\n            data={data}\n          />\n        ))}\n\n        <button\n          onClick={props.handleClearPortfolio}\n          tabIndex={props.activePortfolio ? -1 : 0}\n          className=\"clear-portfolio\"\n        >\n          Clear Entire Portfolio\n        </button>\n      </div>\n    );\n  }\n};\n\nexport default PortfolioHolder;\n"]},"metadata":{},"sourceType":"module"}