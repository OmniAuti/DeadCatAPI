{"ast":null,"code":"var _jsxFileName = \"/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport PortfolioForm from \"./PortfolioForm\";\nimport PortfolioHeader from \"./PortfolioHeader\";\nimport PortfolioHolder from \"./PortfolioHolder\";\nimport PortfolioSettings from \"./PortfolioSettings\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Portfolio = props => {\n  _s();\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [localStorageArr, setLocalStorageArr] = useState([]);\n\n  const handleShowSettings = () => {\n    setShowSettings(!showSettings);\n  };\n\n  const handleSaveSettings = () => {\n    // SAVE TO LOCAL STORAGE HERE --------\n    setShowSettings(!showSettings);\n  };\n\n  useEffect(() => {\n    setShowSettings(false);\n  }, [props.activePortfolio]); // CLEARS STATE WHEN PORTFOLIO IS CLEARED\n\n  const handleClearPortfolioClose = () => {\n    setLocalStorageArr([]);\n  };\n\n  const handleClearPortfolioChange = () => {\n    setLocalStorageArr([inputVal, ...localStorageArr]);\n  }; //  SETS THE LOCAL STORAGE ON CHANGE TO STATE --------\n\n\n  useEffect(() => {\n    console.log(localStorageArr, 'state');\n    const portfolioStorage = localStorage.getItem(['deadCatPortfolio']);\n    console.log(portfolioStorage, 'storage get');\n    localStorage.setItem('deadCatPortfolio', localStorageArr);\n  }, [localStorageArr]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: props.activePortfolioZ ? {\n      zIndex: \"-1\"\n    } : {\n      zIndex: \"99\"\n    },\n    className: props.activePortfolio ? \"portfolio-cont\" : \"portfolio-cont active-portfolio\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.activePortfolio ? \"portfolio\" : \"portfolio active-portfolio\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        tabIndex: props.activePortfolio ? -1 : 0,\n        onClick: handleShowSettings,\n        className: \"portfolio-settings\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/settings.svg\",\n          alt: \"Options Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        tabIndex: props.activePortfolio ? -1 : 0,\n        onClick: props.handleOpenPortfolio,\n        className: \"portfolio-close\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PortfolioSettings, {\n        activePortfolio: props.activePortfolio,\n        handleSaveSettings: handleSaveSettings,\n        showSettings: showSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PortfolioHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PortfolioForm, {\n        activePortfolio: props.activePortfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PortfolioHolder, {\n        activePortfolio: props.activePortfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Portfolio, \"UjC7JlUgpkGAvOhATf38tPZivEk=\");\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/Portfolio.js"],"names":["PortfolioForm","PortfolioHeader","PortfolioHolder","PortfolioSettings","useState","useEffect","Portfolio","props","showSettings","setShowSettings","localStorageArr","setLocalStorageArr","handleShowSettings","handleSaveSettings","activePortfolio","handleClearPortfolioClose","handleClearPortfolioChange","inputVal","console","log","portfolioStorage","localStorage","getItem","setItem","activePortfolioZ","zIndex","handleOpenPortfolio"],"mappings":"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","sourcesContent":["import PortfolioForm from \"./PortfolioForm\";\nimport PortfolioHeader from \"./PortfolioHeader\";\nimport PortfolioHolder from \"./PortfolioHolder\";\nimport PortfolioSettings from \"./PortfolioSettings\";\n\nimport { useState, useEffect } from \"react\";\n\nconst Portfolio = (props) => {\n  const [showSettings, setShowSettings] = useState(false);\n  const [localStorageArr, setLocalStorageArr] = useState([])\n\n  const handleShowSettings = () => {\n    setShowSettings(!showSettings);\n  };\n  const handleSaveSettings = () => {\n    // SAVE TO LOCAL STORAGE HERE --------\n    setShowSettings(!showSettings);\n  };\n\n  useEffect(() => {\n    setShowSettings(false);\n  }, [props.activePortfolio]);\n\n// CLEARS STATE WHEN PORTFOLIO IS CLEARED\nconst handleClearPortfolioClose = () => {\n    setLocalStorageArr([])\n}\n\nconst handleClearPortfolioChange = () => {\n    setLocalStorageArr([inputVal, ...localStorageArr])\n}\n\n//  SETS THE LOCAL STORAGE ON CHANGE TO STATE --------\nuseEffect(() => {\n\n    console.log(localStorageArr, 'state')\n    const portfolioStorage = localStorage.getItem(['deadCatPortfolio'])\n    console.log(portfolioStorage, 'storage get')\n    localStorage.setItem('deadCatPortfolio', localStorageArr)\n\n  }, [localStorageArr])\n\n\n  return (\n    <div\n      style={props.activePortfolioZ ? { zIndex: \"-1\" } : { zIndex: \"99\" }}\n      className={\n        props.activePortfolio\n          ? \"portfolio-cont\"\n          : \"portfolio-cont active-portfolio\"\n      }\n    >\n      <div\n        className={\n          props.activePortfolio ? \"portfolio\" : \"portfolio active-portfolio\"\n        }\n      >\n        <button\n          tabIndex={props.activePortfolio ? -1 : 0}\n          onClick={handleShowSettings}\n          className=\"portfolio-settings\"\n        >\n          <img src=\"/images/settings.svg\" alt=\"Options Icon\" />\n        </button>\n        <button\n          tabIndex={props.activePortfolio ? -1 : 0}\n          onClick={props.handleOpenPortfolio}\n          className=\"portfolio-close\"\n        >\n          <p>X</p>\n        </button>\n\n        <PortfolioSettings\n          activePortfolio={props.activePortfolio}\n          handleSaveSettings={handleSaveSettings}\n          showSettings={showSettings}\n        />\n        <PortfolioHeader />\n        <PortfolioForm activePortfolio={props.activePortfolio} />\n        <PortfolioHolder activePortfolio={props.activePortfolio} />\n      </div>\n    </div>\n  );\n};\n\nexport default Portfolio;\n"]},"metadata":{},"sourceType":"module"}