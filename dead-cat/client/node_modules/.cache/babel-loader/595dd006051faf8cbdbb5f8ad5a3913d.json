{"ast":null,"code":"import { handleDate } from \"./functions/handleDate\";\nimport { nyseFetch } from \"./functions/nyseFetch\";\nimport { nasdaqFetch } from \"./functions/nasdaqFetch\";\nexport const technicalAnalysis = async () => {\n  const dateObj = {\n    today: null,\n    year: null,\n    date: null,\n    month: null,\n    minutes: null,\n    hour: null,\n    time: null,\n    timeNum: null,\n    marketDay: null,\n    newDateString: null,\n    todayDate: null\n  }; // SET DATE\n\n  await handleDate(dateObj);\n  console.log(dateObj); // ---------------------- KEYS -------------------------------------\n\n  const nasdaqMasterKey = [\"ADMS\", \"LFLY\", \"NEPT\", \"STBX\", \"HLVX\", \"ZFOX\", \"NUTX\", \"LQDA\", \"EVBG\", \"SKYX\", \"SOND\", \"JZ\", \"MITK\", \"CDLX\", \"GCT\", \"UDMY\", \"SIGA\", \"RYTM\", \"FAZE\", \"GSUN\", \"VTNR\", \"PGY\", \"ALVO\", \"DRTS\", \"RADA\", \"SYM\", \"VSCA\", \"INTR\", \"GRNA\", \"IONR\", \"BLTE\", \"ALT\", \"MSPR\", \"SATL\", \"LYT\", \"SOUN\", \"MKD\", \"TROO\", \"CISO\", \"BGXX\", \"PEAR\", \"ISPO\", \"SKIN\", \"BLZE\", \"CPTN\", \"NN\", \"FRSH\", \"HLG\", \"FATH\", \"MF\", \"DCFC\", \"TH\", \"FOLD\", \"TKLF\", \"VORB\", \"MIGI\", \"AURA\", \"TSVT\", \"RICK\", \"RXST\", \"CDEV\", \"ADSE\", \"BIOX\", \"RGC\", \"NAKD\", \"AEHR\", \"NEGG\", \"LILM\", \"AUR\", \"CGNT\", \"QFIN\", \"INVE\", \"HLTH\", \"SPT\", \"AUID\", \"PRPL\", \"BRZE\", \"IREN\", \"ARCT\", \"QSI\", \"LIAN\", \"NEXT\", \"THRX\", \"FCUV\", \"SLDP\", \"ESSC\", \"AFMD\", \"PNT\", \"VBIV\", \"ARHS\", \"INDI\", \"ADAG\", \"LWLG\", \"RAPT\", \"BZFD\", \"AERI\", \"CVT\", \"TGLS\", \"GRAB\", \"NTLA\", \"MARA\", \"VAXX\", \"TRUP\", \"ADTH\", \"KRYS\", \"IMGO\", \"TACO\", \"MMAT\", \"ELYM\", \"SNCE\", \"ENJY\", \"FFIE\", \"BIRD\", \"MEIP\", \"WEJO\", \"ARQQ\", \"PRDS\", \"AVDX\", \"TNGX\", \"AUPH\", \"MNTS\", \"HMTV\", \"STRC\", \"SEV\", \"JWEL\", \"URGN\", \"TCMD\", \"LTRY\", \"COCO\", \"SOPA\", \"XAIR\", \"GGPI\", \"AVPT\", \"EYPT\", \"RANI\", \"RMBL\", \"NVTS\", \"KRUS\", \"AMLX\", \"INKT\", \"TGTX\", \"RPID\", \"GLBE\", \"MYPS\", \"ARRY\", \"AERC\", \"PETZ\", \"ABSI\", \"FIVN\", \"AMEH\", \"HEPS\", \"DZSI\", \"XLO\", \"WVE\", \"UONE\", \"SMLR\", \"SAVA\", \"VERA\", \"TRDA\", \"MTTR\", \"CDNA\", \"VUZI\", \"FLNC\", \"OSTK\", \"AIP\", \"NOTV\", \"LIDR\", \"ENPH\", \"MARK\", \"XELA\", \"DLBE\", \"GDYN\", \"ALTM\", \"DWAC\", \"ROIV\", \"AGEN\", \"RETA\", \"SGOC\", \"CMBM\", \"PTLO\", \"ZGNX\", \"ALPP\", \"SDIG\", \"RSVR\", \"GPP\", \"AKTS\", \"CELU\", \"RDUS\", \"VIEW\", \"HPK\", \"ATER\", \"ZY\", \"EVER\", \"RELY\", \"MNKD\", \"PROG\", \"DAVE\", \"FCEL\", \"JSPR\", \"LUCD\", \"ATAI\", \"PAVM\", \"BTMD\", \"BTAI\", \"RLAY\", \"GTLB\", \"AXSM\", \"NRXP\", \"ORGO\", \"RVNC\", \"ACMR\", \"RMNI\", \"JANX\", \"ANY\", \"KNBE\", \"OCUL\", \"EFTR\", \"KPLT\", \"FLXN\", \"PTGX\", \"CIFR\", \"TRHC\", \"PVAC\", \"CLNN\", \"ARQQ\", \"SBTX\", \"TYRA\", \"OMER\", \"AMTX\", \"DOMO\", \"CMCSA\", \"RCKT\", \"INTC\", \"XENE\", \"MU\", \"AAPL\", \"PRTC\", \"MSFT\", \"SIRI\", \"CZR\", \"FB\", \"VIGL\", \"HYPR\", \"GSM\", \"JD\", \"AVGO\", \"AMAT\", \"ZNGA\", \"QCOM\", \"CSCO\", \"GRPN\", \"GERN\", \"GILD\", \"ATVI\", \"VEON\", \"FLEX\", \"FOXA\", \"CVLT\", \"MAT\", \"CORZ\", \"PYPL\", \"MDLZ\", \"NVDA\", \"WDC\", \"FSRD\", \"ON\", \"FITB\", \"PTEN\", \"JBLU\", \"EBAY\", \"HBAN\", \"MRVL\", \"WBA\", \"TXN\", \"OAS\", \"ETSY\", \"AMZN\", \"NFLX\", \"ENTG\", \"CSX\", \"WYNN\", \"FOX\", \"ZION\", \"SYNH\", \"PAYX\", \"BIIB\", \"SBUX\", \"ADSK\", \"BIDU\", \"MLCO\", \"NTRS\", \"UAL\", \"KHC\", \"AAL\", \"NWL\", \"XRAY\", \"TMUS\", \"MOMO\", \"STX\", \"ADBE\", \"TSLA\", \"BUFF\", \"LNT\", \"LKQ\", \"CENX\", \"IMGN\", \"LULU\", \"STLD\", \"PEP\", \"CMPX\", \"COST\", \"IMMP\", \"ALTR\", \"ALXN\", \"ZLAB\", \"ADP\", \"MNST\", \"RIGL\", \"LRCX\", \"NXPI\", \"ENDP\", \"YNDX\", \"GOOGL\", \"CGNX\", \"AMGN\", \"FSLR\", \"SLM\", \"ODP\", \"TLGT\", \"PDCO\", \"Z\", \"CME\", \"PPBI\", \"EXC\", \"CNDT\", \"WEN\", \"CTSH\", \"HOLX\", \"CTXS\", \"SABR\", \"DISH\", \"SKYT\", \"XEL\", \"NTNX\", \"HQY\", \"IGIC\", \"ARCC\", \"SFIX\", \"NWS\", \"NVAX\", \"DXCM\", \"NTCT\", \"NYMT\", \"NAVI\", \"TTWO\", \"KLAC\", \"GOOG\", \"HSIC\", \"CFVI\", \"MEOH\", \"GIII\", \"SFM\", \"QRVO\", \"DOX\", \"HMHC\", \"NMRK\", \"OPK\", \"NUAN\", \"GT\", \"RAIN\", \"EA\", \"GPRO\", \"VRTX\", \"YY\", \"FWONK\", \"HOMB\", \"NKTR\", \"CERN\", \"AKAM\", \"CDNS\", \"MDRX\", \"ISBC\", \"ORMP\", \"NTAP\", \"BBBY\", \"MAR\", \"VIAV\", \"SHOO\", \"CONE\", \"RUN\", \"HA\", \"PBCT\", \"UCBI\", \"LBTYA\", \"CBSH\", \"TSCO\", \"TER\", \"TRUE\", \"URBN\", \"ROKU\", \"CTRE\", \"MCHP\", \"MYNZ\", \"KLIC\", \"TEAM\", \"HIMX\", \"FANG\", \"TROW\", \"ARLP\", \"BLMN\", \"PPC\", \"GNTX\", \"EMBK\", \"INTU\", \"PCAR\", \"XLNX\", \"JBHT\", \"EXPD\", \"EXPE\", \"WERN\", \"HCSG\", \"DLTR\", \"MTSI\", \"BGCP\", \"SWVL\", \"SWKS\", \"IIVI\", \"CROX\", \"ACHC\", \"MLHR\", \"QRTEA\", \"TRIP\", \"FAST\", \"EWBC\", \"SGH\", \"ALNY\", \"BMRN\", \"CASA\", \"AGNC\", \"TXMD\", \"INSM\", \"BGFV\", \"LAMR\", \"EXEL\", \"HZNP\", \"ADI\", \"OLED\", \"EYE\", \"SSNC\", \"CHTR\", \"ACAD\", \"VLY\", \"VOD\", \"EXTR\", \"FEYE\", \"VECO\", \"ERIC\", \"MANH\", \"TILE\", \"CAKE\", \"CAR\", \"SPLK\", \"VRSN\", \"XOG\", \"BZUN\", \"NWSA\", \"ARNA\", \"ULTA\", \"JACK\", \"CPRT\", \"CLVS\", \"SBRA\", \"FISV\", \"DXLG\", \"ONB\", \"ATSG\", \"SPWH\", \"EQIX\", \"RDFN\", \"ORBC\", \"LIVN\", \"CTAS\", \"REGI\", \"VRNT\", \"HAS\", \"HALO\", \"SGMO\", \"KTOS\", \"BHF\", \"RYAAY\", \"WDAY\", \"VC\", \"ROIC\", \"MXIM\", \"CSOD\", \"SIVB\", \"FIVE\", \"LPLA\", \"SEIC\", \"FORM\", \"BRKS\", \"HTHT\", \"PENN\", \"IONS\", \"KRNY\", \"SBAC\", \"BGNE\", \"WB\", \"THRM\", \"UMPQ\", \"PNFP\", \"GLPI\", \"LITE\", \"ROST\", \"PCRX\", \"CSIQ\", \"ICHR\", \"ILMN\", \"ISRG\", \"CREE\", \"COHR\", \"LMDX\", \"FULT\", \"UNIT\", \"CASY\", \"PODD\", \"MATW\", \"REGN\", \"AGFY\", \"MELI\", \"SGMS\", \"IMMR\", \"MGPI\", \"NTES\", \"LTRPA\", \"SND\", \"PFG\", \"STFC\", \"PTC\", \"CDW\", \"SBGI\", \"PLAY\", \"WAFD\", \"PETQ\", \"IRDM\", \"INCY\", \"LBRDK\", \"TRMB\", \"ACGL\", \"SBNY\", \"GRFS\", \"GOGO\", \"SYNA\", \"MTCH\", \"XNET\", \"HAIN\", \"MRTX\", \"ECHO\", \"PDCE\", \"LPSN\", \"PLCE\", \"SCHL\", \"ADTN\", \"BECN\", \"BPOP\", \"COMM\", \"BLUE\", \"WPRT\", \"MASI\", \"OKTA\", \"BRKR\", \"NBIX\", \"CHKP\", \"VERU\", \"JAZZ\", \"CMCO\", \"ORLY\", \"FFIV\", \"PRTA\", \"SCWX\", \"PAAS\", \"HOPE\", \"MRTN\", \"CRUS\", \"TXRH\", \"EEFT\", \"CVGI\", \"WWD\", \"SNY\", \"HOLI\", \"SSRM\", \"TSEM\", \"DNLI\", \"CHRW\", \"CINC\", \"SPPI\", \"ASML\", \"IDXX\", \"SRPT\", \"SGEN\", \"TCBI\", \"DXPE\", \"NWBI\", \"PSEC\", \"QDEL\", \"WETF\", \"INVA\", \"BJRI\", \"JCOM\", \"ZS\", \"MIDD\", \"RCII\", \"CSGP\", \"TTMI\", \"ARWR\", \"IAC\", \"VIRT\", \"UCTT\", \"ANGI\", \"BCOR\", \"BLDR\", \"CHEF\", \"HUDI\", \"KURA\", \"GTHX\", \"GPRE\", \"HIBB\", \"ALGN\", \"LGIH\", \"REG\", \"NUVA\", \"SWIR\", \"ARAY\", \"HTLD\", \"VRNS\", \"CINF\", \"GLRE\", \"RRR\", \"ZG\", \"FTNT\", \"CLDX\", \"MDCA\", \"SRCL\", \"RBBN\", \"WTFC\", \"SGRY\", \"XPER\", \"VG\", \"GLNG\", \"PETS\", \"AMBA\", \"AMKR\", \"COUP\", \"ICPT\", \"PZZA\", \"POOL\", \"MGRC\", \"FANH\", \"INFN\", \"MMSI\", \"SREV\", \"COLM\", \"CCOI\", \"SEDG\", \"LLNW\", \"PBYI\", \"IRWD\", \"CSGS\", \"CNSL\", \"CRIS\", \"COLL\", \"DRNA\", \"BKCC\", \"PACB\", \"JNCE\", \"MKSI\", \"CDK\", \"PACW\", \"LOCO\", \"RUSHA\", \"CGEN\", \"AAWW\", \"WIX\", \"INO\", \"FOSL\", \"FOXF\", \"AZPN\", \"IRBT\", \"SBLK\", \"CWST\", \"UMBF\", \"SOHU\", \"FGEN\", \"OCSL\", \"HTLF\", \"BLKB\", \"HLIT\", \"IPAR\", \"CRTO\", \"ZUMZ\", \"BAND\", \"ABMD\", \"SSP\", \"NDSN\", \"ALSK\", \"AYPR\", \"FFBC\", \"DLTH\", \"AXTI\", \"DBVT\", \"BCRX\", \"TOWN\", \"JKHY\", \"EPAY\", \"VRSK\", \"ICLR\", \"VRA\", \"OSUR\", \"AVT\", \"NVCR\", \"PCH\", \"SAFM\", \"RMBS\", \"TAST\", \"OTEX\", \"FHB\", \"SANM\", \"MGI\", \"KOPN\", \"OSBC\", \"BRKL\", \"SATS\", \"SLGN\", \"IBKR\", \"ROCK\", \"RNWK\", \"ASTE\", \"ACET\", \"DMRC\", \"CUTR\", \"UEPS\", \"AMCX\", \"DIOD\", \"RARE\", \"INOV\", \"PLYA\", \"CFFN\", \"HSII\", \"LOPE\", \"AMPL\", \"SMTC\", \"SCHN\", \"HSON\", \"UBSI\", \"SMCI\", \"ODFL\", \"CFMS\", \"WLTW\", \"CDXS\", \"FCFS\", \"VREX\", \"LSXMK\", \"MSTR\", \"COHU\", \"OTIC\", \"GRMN\", \"MEDP\", \"TWOU\", \"ACTG\", \"AMWD\", \"CATY\", \"COLB\", \"GBT\", \"MPAA\", \"COWN\", \"GTLS\", \"SKYW\", \"CONN\", \"EZPW\", \"MHLD\", \"KPTI\", \"AVID\", \"SLDB\", \"TBBK\", \"MTRX\", \"SPWR\", \"SLAB\", \"PEGA\", \"NOVT\", \"MYGN\", \"AEIS\", \"LHCG\", \"NDAQ\", \"WSFS\", \"MMYT\", \"UTHR\", \"CALM\", \"ALRM\", \"MKTX\", \"LSCC\", \"ECPG\", \"BKNG\", \"CSTE\", \"QNST\", \"SHLD\", \"SIMO\", \"AMED\", \"VNET\", \"IIIN\", \"HFWA\", \"SCSC\", \"QADA\", \"TSC\", \"SFNC\", \"MRCY\", \"ICFI\", \"ACIW\", \"PTCT\", \"TFSL\", \"RRGB\", \"CECE\", \"IART\", \"YELL\", \"LXRX\", \"PRAA\", \"STMP\", \"SCVL\", \"CORE\", \"KRNT\", \"MYRG\", \"BANR\", \"CRESY\", \"VSAT\", \"SIGI\", \"ALKS\", \"GLDD\", \"FIZZ\", \"SBBP\", \"DORM\", \"TUSK\", \"MERC\", \"HEES\", \"AGFS\", \"SNCR\", \"HUBG\", \"SNBR\", \"LOGI\", \"FLWS\", \"EBIX\", \"ANAB\", \"ABUS\", \"ANSS\", \"CBRL\", \"ADXS\", \"ITRI\", \"GBCI\", \"ERII\", \"CLMT\", \"AINV\", \"BL\", \"SSYS\", \"LKFN\", \"ANGO\", \"PRIM\", \"CTMX\", \"CASH\", \"PINC\", \"SFBS\", \"FNKO\", \"ZBRA\", \"GABC\", \"NCMI\", \"MGLN\", \"EDIT\", \"PRGS\", \"TRMK\", \"ACRS\", \"SPSC\", \"EFSC\", \"BOKF\", \"PSMT\", \"UVSP\", \"OCFC\", \"GOGL\", \"CCRN\", \"IRTC\", \"TA\", \"FRTA\", \"PI\", \"MNRO\", \"FMBI\", \"ACLS\", \"ITCI\", \"VIVO\", \"MCHX\", \"CRAI\", \"DSGX\", \"HCM\", \"TREE\", \"ACOR\", \"PCTY\", \"MSBI\", \"HLNE\", \"VYGR\", \"EBSB\", \"SNPS\", \"MIME\", \"NATI\", \"PLXS\", \"MANT\", \"OMAB\", \"VNOM\", \"TCPC\", \"IBTX\", \"DSPG\", \"FWONA\", \"ZEAL\", \"UHAL\", \"BCOV\", \"ACBI\", \"CVBF\", \"LSXMA\", \"PATK\", \"BPMC\", \"SASR\", \"NBRV\", \"TVTY\", \"NXST\", \"TECH\", \"WING\", \"HAFC\", \"ATRA\", \"BOOM\", \"EXLS\", \"QLYS\", \"QURE\", \"ICUI\", \"LSTR\", \"WASH\", \"BPY\", \"KIRK\", \"SAIA\", \"AY\", \"ADUS\", \"LBAI\", \"OMCL\", \"UFPI\", \"IBOC\", \"CSQ\", \"HELE\", \"TRVG\", \"SIEN\", \"CPLP\", \"JOBS\", \"NISN\", \"NICE\", \"KALU\", \"CAMP\", \"ICON\", \"ASPS\", \"ZIXI\", \"CGBD\", \"RGEN\", \"AOSL\", \"CVGW\", \"DGICA\", \"SILC\", \"RGLD\", \"GBDC\", \"OCSI\", \"APVO\", \"PLAB\", \"AGYS\", \"CALA\", \"CG\", \"TRST\", \"SYKE\", \"TEDU\", \"FWRD\", \"LBC\", \"ADAP\", \"LECO\", \"TRVN\", \"CHUY\", \"CTRN\", \"CENT\", \"SPTN\", \"NSIT\", \"AMRS\", \"EQBK\", \"SEAC\", \"ARGX\", \"STKL\", \"LFUS\", \"CYBR\", \"APOG\", \"MPWR\", \"FELE\", \"SSB\", \"ITRN\", \"LANC\", \"CHDN\", \"ENTA\", \"EXPO\", \"FRGI\", \"DAKT\", \"AAON\", \"FLDM\", \"TCBK\", \"SNDX\", \"INGN\", \"GSBC\", \"LQDT\", \"PBPB\", \"AVAV\", \"IPGP\", \"AMPH\", \"NDLS\", \"ABCB\", \"CYTK\", \"NTGR\", \"RDWR\", \"GIFI\", \"CACC\", \"OSIS\", \"LAUR\", \"OXLC\", \"PVAC\", \"PNNT\", \"AGIO\", \"RUTH\", \"SRCE\", \"HURN\", \"SBSI\", \"SBCF\", \"NNBR\", \"SPKE\", \"FRME\", \"IDCC\", \"ROLL\", \"NSSC\", \"FBNC\", \"SLRC\", \"EGLE\", \"EQRX\", \"PEBO\", \"ODT\", \"LOB\", \"MCRI\", \"CRNT\", \"INSG\", \"CPSI\", \"SCPH\", \"BBSI\", \"FARO\", \"VWTR\", \"JRVR\", \"NBTB\", \"CMTL\", \"IVAC\", \"KFRC\", \"CNOB\", \"GLAD\", \"UFCS\", \"CCMP\", \"TRS\", \"CLNE\", \"STRA\", \"JAKK\", \"ATNX\", \"ALNA\", \"PDFS\", \"TBK\", \"FIBK\", \"OPTN\", \"FFIN\", \"RGNX\", \"KE\", \"ASYS\", \"APEI\", \"VICR\", \"MORN\", \"APLS\", \"UEIC\", \"HTBI\", \"LYTS\", \"CMPR\", \"SRDX\", \"WSBC\", \"PFBC\", \"CARG\", \"EPZM\", \"AIMC\", \"CHI\", \"ATRO\", \"ENSG\", \"ECOL\", \"SHEN\", \"QQQX\", \"FRPH\", \"MRIN\", \"PRTS\", \"BCPC\", \"OTTR\", \"HCKT\", \"WSBF\", \"CSII\", \"PFLT\", \"ALGT\", \"MFIN\", \"FSV\", \"HTBK\", \"KNSL\", \"METC\", \"NEOG\", \"HMST\", \"FFIC\", \"IMKTA\", \"RAIL\", \"INDB\", \"LCUT\", \"ERIE\", \"HSTM\", \"FDUS\", \"ANAT\", \"OFIX\", \"KVHI\", \"ARCB\", \"WABC\", \"CNBKA\", \"CCXI\", \"UBFO\", \"CNXN\", \"HAYN\", \"CAC\", \"NATH\", \"ANDE\", \"GOOD\", \"AMRK\", \"CCD\", \"DGII\", \"VLGEA\", \"WRLD\", \"SYBT\", \"HWKN\", \"CHY\", \"CEVA\", \"HCCI\", \"ILPT\", \"CHW\", \"CHCO\", \"IBCP\", \"TBPH\", \"MBWM\", \"RCKY\", \"POWI\", \"NTRA\", \"PGC\", \"ATAX\", \"NFBK\", \"MRSN\", \"JBSS\", \"TTEC\", \"FISI\", \"MOFG\", \"RNST\", \"KELYA\", \"IMOS\", \"SPOK\", \"MCBC\", \"PLUS\", \"THFF\", \"NCSM\", \"PRFT\", \"CSWI\", \"NCNA\", \"AMSC\", \"GAIN\", \"RAVN\", \"IFRX\", \"JJSF\", \"TTEK\", \"ANIP\", \"CTBI\", \"BATRA\", \"BSRR\", \"NVMI\", \"FLXS\", \"GLPG\", \"ALLT\", \"BANX\", \"DCPH\", \"HOFT\", \"KBAL\", \"LNDC\", \"NWPX\", \"SYRS\", \"WNEB\", \"ZEUS\", \"NH\", \"SPNE\", \"FORR\", \"STRL\", \"STCN\", \"MMLP\", \"HBNC\", \"MGNX\", \"DCOM\", \"GEOS\", \"INBK\", \"MCRB\", \"SVVC\", \"KALA\", \"WDFC\", \"LILA\", \"IEP\", \"LMNR\", \"WEYS\", \"RBB\", \"VOXX\", \"ESGR\", \"ASND\", \"CRMT\", \"CWCO\", \"EHTH\", \"MRLN\", \"QIWI\", \"USAK\", \"UTSI\", \"FARM\", \"ANIK\", \"SVRA\", \"BUSE\", \"NRIX\", \"HONE\", \"VCTR\", \"FCBC\", \"UTMD\", \"ATNI\", \"MRCC\", \"POWL\", \"PWOD\", \"SEED\", \"TITN\", \"CTG\", \"COKE\", \"KNDI\", \"CLAR\", \"TWIN\", \"CCLP\", \"INFI\", \"VSEC\", \"MGEE\", \"CVCO\", \"SP\", \"STBA\", \"TBNK\", \"BFIN\", \"ACGLP\", \"CBTX\", \"CIGI\", \"IOSP\", \"OVID\", \"PCTI\", \"RBCAA\", \"SUNS\", \"CCBG\", \"DHIL\", \"ESSA\", \"FFNW\", \"FCNCA\", \"XONE\", \"WTBA\", \"ULH\", \"AROW\", \"BANF\", \"BELFB\", \"CHMG\", \"CPIX\", \"CLFD\", \"CSTR\", \"ESLT\", \"GASS\", \"GBLI\", \"JOUT\", \"LIFE\", \"LORL\", \"OFS\", \"QUMU\", \"RELL\", \"SPKEP\", \"STRS\", \"TGA\", \"TIG\", \"VRTS\", \"FWP\", \"YORW\", \"BMTC\", \"PFMT\", \"CRVL\", \"PMBC\", \"FNLC\", \"AMNB\", \"CHSCM\", \"CHSCN\", \"CFFI\", \"SHBI\", \"WIRE\", \"ATRI\", \"DWSN\", \"OMP\", \"AMSF\", \"BSET\", \"CASS\", \"CHSCL\", \"EBTC\", \"FSTR\", \"FTEK\", \"GURE\", \"JRJC\", \"MGIC\", \"OIIM\", \"PBCTP\", \"PERI\", \"PKOH\", \"RVSB\", \"TANNI\", \"TESS\", \"TRIB\", \"WHF\", \"MTLS\", \"MSEX\", \"PLPC\", \"FBIZ\", \"AMSWA\", \"MIND\", \"IRCP\", \"RUSHB\", \"WTFCM\", \"NWLI\", \"NYMTP\", \"SAFT\", \"NRIM\", \"ITIC\", \"MLAB\", \"ACGLO\", \"AGNCN\", \"ALCO\", \"AMRB\", \"ARTNA\", \"ATEC\", \"ATLC\", \"AUDC\", \"AVNW\", \"CCNE\", \"CGO\", \"CHMA\", \"CSWC\", \"DMLP\", \"ERYP\", \"EXFO\", \"FUNC\", \"FUND\", \"GILT\", \"GNTY\", \"GSIT\", \"HBCP\", \"HRZN\", \"HURC\", \"HWBK\", \"IGLD\", \"ISSC\", \"JSM\", \"KMDA\", \"LAWS\", \"LBTYB\", \"LINC\", \"LSXMB\", \"LTRPB\", \"MESO\", \"MINDP\", \"MPVDF\", \"MRBK\", \"MTEX\", \"NCTY\", \"NICK\", \"NYMTN\", \"NYMTO\", \"OBSV\", \"PATI\", \"PFIS\", \"PROV\", \"PTNR\", \"QADB\", \"QRTEB\", \"SBLKZ\", \"SENEB\", \"SLMBP\", \"SPI\", \"SPRO\", \"TRMD\", \"TZOO\", \"USAP\", \"USLM\", \"XBIT\", \"YRIV\", \"ADPT\", \"AFYA\", \"AGNCM\", \"KERN\", \"AKRO\", \"ALEC\", \"ALLK\", \"ALLO\", \"AMTB\", \"AMTBB\", \"AFIN\", \"AFINP\", \"APTX\", \"APYX\", \"ARAV\", \"ARCE\", \"ARVN\", \"ASRT\", \"AUB\", \"BCEL\", \"JG\", \"AUTL\", \"AVRO\", \"AXNX\", \"OZK\", \"BSVN\", \"GLG\", \"BCML\", \"BLU\", \"BRY\", \"BYND\", \"BCYC\", \"BILI\", \"BBIO\", \"BHFAP\", \"BPYPO\", \"BPYPP\", \"DOOO\", \"BFST\", \"CBNK\", \"CARE\", \"CHNG\", \"CIH\", \"CCB\", \"CLBK\", \"SCOR\", \"ROAD\", \"CRTX\", \"CVET\", \"CRNX\", \"CFB\", \"CRWD\", \"CYCN\", \"DOCU\", \"DOYU\", \"DBX\", \"ECOR\", \"ENOB\", \"ENTX\", \"EQ\", \"EDRY\", \"EVLO\", \"EVOP\", \"XCUR\", \"DVOL\", \"DALI\", \"MYFW\", \"FOCS\", \"FTDR\", \"GNFT\", \"GMAB\", \"GAINL\", \"DRIV\", \"CLOU\", \"GSHD\", \"GOSS\", \"GSKY\", \"GRIN\", \"GRTS\", \"GO\", \"GH\", \"HWC\", \"HARP\", \"HHR\", \"HCAT\", \"HLIO\", \"FIXX\", \"HOOK\", \"IIIV\", \"IDYA\", \"IHRT\", \"INMD\", \"ICMB\", \"IQ\", \"USIG\", \"ISEE\", \"KLDO\", \"KZR\", \"KNSA\", \"KLXE\", \"LEGH\", \"LEVL\", \"YVR\", \"LYFT\", \"MGTA\", \"MDJH\", \"MGTX\", \"MREO\", \"MESA\", \"MIST\", \"TIGO\", \"MIRM\", \"MRNA\", \"MOGO\", \"MOR\", \"COOP\", \"NRC\", \"NTUS\", \"STIM\", \"NFE\", \"NXTC\", \"NXGN\", \"NGM\", \"NIU\", \"LASR\", \"OPI\", \"OCCI\", \"OCCIP\", \"ONCY\", \"OSPN\", \"OPBK\", \"OPRA\", \"OPRX\", \"ORTX\", \"OGI\", \"OBNK\", \"OSMT\", \"OXSQ\", \"HERD\", \"PLMR\", \"PAYS\", \"PCB\", \"PDSB\", \"PHAS\", \"PHIO\", \"PHIOW\", \"PHUN\", \"PDD\", \"PSTV\", \"PTE\", \"DTIL\", \"POAI\", \"PRVB\", \"QTT\", \"RTLR\", \"RRBI\", \"RDVT\", \"RPAY\", \"REPL\", \"RMBI\", \"RUBY\", \"SRRK\", \"SCPL\", \"SEEL\", \"SESN\", \"SWAV\", \"SIBN\", \"SILK\", \"SINT\", \"SONO\", \"SOHON\", \"SPFI\", \"STXB\", \"STOK\", \"STNE\", \"SNDL\", \"SBEA\", \"SLGG\", \"SURF\", \"STRO\", \"SSSS\", \"TRNX\", \"TCRR\", \"TENB\", \"BPRN\", \"REAL\", \"TLRY\", \"TW\", \"TBIO\", \"TCDA\", \"TSCAP\", \"TSCBP\", \"TPTX\", \"BROG\", \"TWST\", \"UBX\", \"TIGR\", \"UPWK\", \"UXIN\", \"VLYPO\", \"VLYPP\", \"VIOT\", \"HLAL\", \"WTRH\", \"WTREP\", \"WW\", \"XERS\", \"YMAB\", \"ZM\", \"ZVO\", \"AGNCP\", \"DUOT\", \"HUIZ\", \"RVMD\", \"MDRRP\", \"PAE\", \"AGNCO\", \"ARQT\", \"APRE\", \"PDEV\", \"AMHC\", \"BRP\", \"FITBO\", \"BSBK\", \"PHAT\", \"BBQ\", \"VIACA\", \"SDC\", \"BSBE\", \"OPCH\", \"PGNY\", \"PRDO\", \"VIAC\", \"DHC\", \"NLOK\", \"SVC\", \"IPHA\", \"TXG\", \"MCBS\", \"PPD\", \"DDOG\", \"HQI\", \"BDTX\", \"FREQ\", \"IMAB\", \"CRNC\", \"BSDE\", \"GRTX\", \"HBT\", \"BUG\", \"STSA\", \"TCOM\", \"REYN\", \"PGEN\", \"RILYP\", \"WKEY\", \"LATN\", \"RCEL\", \"PTON\", \"TELA\", \"VERO\", \"PNTG\", \"NTRSO\", \"SDGR\", \"ONEM\", \"LIZI\", \"XP\", \"CABA\", \"PWFL\", \"PFHD\", \"KRKR\", \"IGMS\", \"TARA\", \"OCGN\", \"CPZ\", \"ONEW\", \"XGN\", \"SWKH\", \"DRTT\", \"JAN\", \"BEAM\", \"OPRT\", \"FUTU\", \"BNTX\", \"SWTX\", \"DHCNL\", \"OYST\", \"VIR\", \"LDEM\", \"MDIA\", \"POTX\", \"GXTG\", \"HTIA\", \"SITM\", \"MOHO\", \"LMNL\", \"LMPX\", \"ASTSW\", \"NRBO\", \"QK\", \"GRNVR\", \"THMO\", \"GNRSU\", \"PALI\", \"BHFAL\", \"COWNL\", \"CHNGU\", \"MEDS\", \"DCOMP\", \"MFH\", \"GRIL\", \"FDUSZ\", \"OFSSZ\", \"INBKZ\", \"PTMN\", \"ZCMD\", \"SNUG\", \"IMRA\", \"IMRX\", \"BWMX\", \"ATCX\", \"RSSS\", \"CALB\", \"PASG\", \"BPYUP\", \"BPYU\", \"METX\", \"ZNTL\", \"RGP\", \"SONN\", \"AVCT\", \"KROS\", \"AVCTW\", \"DKNG\", \"ORIC\", \"NVVEW\", \"LYRA\", \"PMAY\", \"UMAY\", \"BMAY\", \"GAN\", \"NMTR\", \"AYLA\", \"OCFCP\", \"KC\", \"HUSN\", \"CRDF\", \"TEGS\", \"TAEQ\", \"OEG\", \"SJOYW\", \"SJ\", \"ESEB\", \"ESCR\", \"ESHY\", \"GNRSW\", \"MSVX\", \"WINT\", \"CCNC\", \"DMAY\", \"FMAY\", \"HSTO\", \"QLGN\", \"BHFAO\", \"NARI\", \"CFCV\", \"METXW\", \"WTFCP\", \"LRMR\", \"AYRO\", \"HYMCW\", \"SHYF\", \"HYMC\", \"SWBI\", \"NKLA\", \"WMG\", \"LEGN\", \"PNFPP\", \"DADA\", \"PLRX\", \"CALT\", \"AMTI\", \"ZI\", \"FBCG\", \"FBCV\", \"VRM\", \"FMBIP\", \"LPRO\", \"AUBAP\", \"LTRN\", \"UCBIO\", \"UCL\", \"GBIO\", \"PCVX\", \"AWH\", \"BNR\", \"RNA\", \"HWCPZ\", \"FBRX\", \"RPRX\", \"LGHLW\", \"LGHL\", \"RPTX\", \"GTH\", \"PFC\", \"FJUN\", \"DJUN\", \"BRLIU\", \"CEFA\", \"TBKCP\", \"OPINL\", \"AKUS\", \"PYPD\", \"API\", \"REE\", \"FUSN\", \"EBON\", \"FREE\", \"THY\", \"MRSK\", \"VIRS\", \"HTLFP\", \"MGNI\", \"ALTA\", \"SPQQ\", \"NJUL\", \"JULZ\", \"HOFV\", \"IMTX\", \"HOFVW\", \"ACCD\", \"IMTXW\", \"CVLG\", \"SNEX\", \"FMBIO\", \"BLCT\", \"AMYT\", \"OTRK\", \"CXDO\", \"PSTX\", \"NKTX\", \"NCNO\", \"GOCO\", \"QH\", \"ALXO\", \"BLI\", \"RNLX\", \"INZY\", \"ANNX\", \"ITOS\", \"JAMF\", \"EDTK\", \"SRGA\", \"DJUL\", \"IBBJ\", \"FCRD\", \"RMRM\", \"HSAQ\", \"AFIB\", \"MLAC\", \"FTHM\", \"ALVR\", \"BTBT\", \"KBNT\", \"RXT\", \"KDNY\", \"SVSVU\", \"VCVCU\", \"TLS\", \"MRVI\", \"SHC\", \"HAACU\", \"ARBGU\", \"AVIR\", \"LESL\", \"GLTO\", \"ALGM\", \"DSACU\", \"ROOT\", \"BDSX\", \"MCFE\", \"YGMZ\", \"PRAX\", \"EAR\", \"TARS\", \"ALGS\", \"OPT\", \"EBC\", \"MOTNU\", \"CDAK\", \"STTK\", \"SPRB\", \"KRON\", \"AZYO\", \"PAICU\", \"NGACU\", \"CCCC\", \"ONCR\", \"ASO\", \"ABCM\", \"FHTX\", \"BLSA\", \"LFTRU\", \"LXEH\", \"RCHGU\", \"AVO\", \"LUNG\", \"SRSAU\", \"SYTA\", \"AMST\", \"GLSI\", \"GDRX\", \"BSY\", \"CRSR\", \"CMPS\", \"ATHA\", \"VTRU\", \"NMMCU\", \"PTVE\", \"SUMO\", \"FROG\", \"MTCR\", \"STEP\", \"OM\", \"ITACU\", \"CD\", \"ORPH\", \"GRAY\", \"PMVP\", \"PRLD\", \"BCTG\", \"TSHA\", \"PRFX\", \"AUVI\", \"HCDI\", \"FRLN\", \"CMPI\", \"IBEX\", \"VSTA\", \"INM\", \"ADV\", \"BTAQ\", \"SWIM\", \"GCMG\", \"NGMS\", \"OLMA\", \"RIDE\", \"SVAC\", \"TRIT\", \"TTCF\", \"TWCT\", \"VACQ\", \"VIH\", \"VLDR\", \"VTRS\", \"KNTE\", \"SEER\", \"SGTX\", \"YQ\", \"FLACU\", \"ABNB\", \"NEBCU\", \"CERT\", \"GHVIU\", \"HYFM\", \"ABCL\", \"VVOS\", \"WISH\", \"UPST\", \"BCAB\", \"SCPS\", \"OCG\", \"WNW\", \"COOLU\", \"SCOAU\", \"VIRI\", \"MTACU\", \"ACKIU\", \"IKT\", \"GBS\", \"HCARU\", \"PHAR\", \"MRM\", \"OPEN\", \"OMEG\", \"GRCL\", \"CGEM\", \"QLI\", \"ENFAU\", \"MAXN\", \"MSGM\", \"GPACU\", \"AFRM\", \"ASLE\", \"POSH\", \"AEACU\", \"WOOF\", \"PLTK\", \"DRVN\", \"BEEM\", \"LI\", \"DFH\", \"PTIC\", \"FTCV\", \"ABST\", \"AEPPZ\", \"AOUT\", \"BOWX\", \"CCNEP\", \"LFMD\", \"DCBO\", \"GBNY\", \"GOVX\", \"HGBL\", \"HGEN\", \"HRMY\", \"IIVIP\", \"INBX\", \"INTZ\", \"KYMR\", \"LANDO\", \"LEVLP\", \"LIXT\", \"LNSR\", \"MDWT\", \"MNSBP\", \"NMFCL\", \"ONDS\", \"POWW\", \"RAACU\", \"RZLT\", \"SMID\", \"SHLS\", \"TOMZ\", \"VMAC\", \"VMAR\", \"EZGO\", \"GHVI\", \"SNRH\", \"ACKIT\", \"KINZ\", \"MRAC\", \"SANA\", \"LABP\", \"VLON\", \"SVOK\", \"RELI\", \"TVAC\", \"RLYB\", \"SDH\", \"BMBL\", \"XM\", \"APR\", \"RAAC\", \"TLIS\", \"DBTX\", \"TCACU\", \"NEXI\", \"LGVN\", \"CNTA\", \"APPH\", \"APPS\", \"LAZR\", \"AEI\", \"ABGI\", \"FSII\", \"VRPX\", \"CFIV\", \"PPTA\", \"AUUD\", \"GBOX\", \"GOEV\", \"DUNE\", \"KEJI\", \"REIT\", \"KAIR\", \"AKIC\", \"ARYD\", \"TMKR\", \"PRSR\", \"KLAQ\", \"NESR\", \"PAQC\", \"EPHY\", \"RNRG\", \"LJAQ\", \"IMCC\", \"EAC\", \"INKA\", \"PACX\", \"GSAQ\", \"INNV\", \"LEGO\", \"ENFA\", \"SWET\", \"DLCA\", \"HCCC\", \"AEAC\", \"HCIC\", \"ADER\", \"OCAX\", \"RXDX\", \"PYR\", \"LBPH\", \"MITC\", \"OSTR\", \"SCR\", \"CNXC\", \"MODV\", \"GBNH\", \"ASAX\", \"JCIC\", \"GMII\", \"GMBT\", \"SHAC\", \"DGNU\", \"PGRW\", \"GANX\", \"RACB\", \"LMAO\", \"PCT\", \"FNCH\", \"CNTB\", \"IHYF\", \"JOET\", \"WCBR\", \"LBPS\", \"QQQJ\", \"CTEC\", \"HYXF\", \"UPC\", \"BSCU\", \"EMXF\", \"BSJS\", \"EWEB\", \"BSMU\", \"CHB\", \"DEMZ\", \"ACVA\", \"OLK\", \"WMPN\", \"DSEY\", \"EEIQ\", \"MSDAU\", \"CRCT\", \"LVTX\", \"EWTX\", \"IKNA\", \"ALHC\", \"HYW\", \"DSGN\", \"TDUP\", \"KRNLW\", \"PUCK\", \"GHACW\", \"PUCKW\", \"IBRX\", \"ARVL\", \"VIACP\", \"COVA\", \"KURI\", \"ACHL\", \"ULCC\", \"GIGGW\", \"KARO\", \"EM\", \"MSAC\", \"XPDI\", \"FORE\", \"SCLE\", \"TCAC\", \"TCACW\", \"TSIB\", \"TSIBW\", \"INVZ\", \"MACA\", \"ACEV\", \"BTRS\", \"NGAC\", \"PLBY\", \"TIOAU\", \"BSKYU\", \"AQWA\", \"VENAR\", \"NVSAW\", \"NVSA\", \"PMGM\", \"KAII\", \"DAPP\", \"EBET\", \"APP\", \"KRT\", \"TSP\", \"GSEV\", \"BMEA\", \"AKYA\", \"GBRG\", \"COLI\", \"RXRX\", \"CLOV\", \"LGO\", \"BIGC\", \"EGLX\", \"AXON\", \"HERA\", \"COIN\", \"UROY\", \"PRVA\", \"FTCI\", \"VACC\", \"SCAQ\", \"MNMD\", \"FYBR\", \"HNST\", \"FSBC\", \"IPW\", \"SVFD\", \"DBGI\", \"LGBT\", \"VMEO\", \"JZXN\", \"QQQA\", \"OTLY\", \"CURI\", \"BRCN\", \"DYNS\", \"NMTC\", \"SOFI\", \"DLO\", \"ALZN\", \"WKME\", \"HUT\", \"ISPC\", \"LYEL\", \"ME\", \"GAME\", \"BITF\", \"SFT\", \"BBIG\", \"MIRO\", \"GRVI\", \"GLUE\", \"VLAT\", \"BON\", \"CFLT\", \"FA\", \"GHRS\", \"TKNO\", \"GRPH\", \"ELEV\", \"MF\", \"WGRO\", \"GMVD\", \"ASTR\", \"DALN\", \"GOBI\", \"PAYO\", \"LZ\", \"XMTR\", \"AVTE\", \"CRTD\", \"TBLA\", \"AGRI\", \"UNCY\", \"ARYE\", \"NXTP\", \"IINN\", \"PECO\", \"SGHT\", \"HCWB\", \"ALTO\", \"MKTW\", \"BASE\", \"KLTR\", \"PYCR\", \"GAMB\", \"CRBU\", \"OB\", \"SOPH\", \"CTKB\", \"MQ\", \"LCID\", \"DUOL\", \"SNPO\", \"HOOD\", \"BCTX\", \"MVST\", \"MNTV\", \"OCDX\", \"FDMT\", \"TLMD\", \"VOR\", \"BOLT\", \"ANGN\", \"VERV\", \"TERN\", \"DNUT\", \"TASK\", \"NUVL\", \"DAWN\", \"INTA\", \"LFST\", \"CYT\", \"TNYA\", \"CVRX\", \"OMGA\", \"LHDX\", \"PTRA\", \"TMC\", \"WFRD\", \"WAFDP\", \"VYNE\", \"VINP\", \"VIA\", \"VALN\", \"TRIN\", \"TCBIO\", \"TBLD\", \"TALK\", \"SVA\", \"STGW\", \"SMFR\", \"SIOX\", \"SIGIP\", \"SHCR\", \"SBNYP\", \"RNW\", \"QRTEP\", \"PWP\", \"PSM\", \"PHVS\", \"OMIC\", \"NAUT\", \"MOLN\", \"MNDY\", \"MAPS\", \"LVOX\", \"LTCH\", \"LBRDP\", \"IPSC\", \"IMCR\", \"IAS\", \"HYZN\", \"HMPT\", \"GULF\", \"GEG\", \"FULTP\", \"FLYW\", \"EVGO\", \"EVCM\", \"ERAS\", \"ENVX\", \"ELMS\", \"CMAX\", \"BZ\", \"BRAG\", \"ADGI\", \"BPYPM\", \"BHFAN\", \"ICVX\", \"PCYO\", \"TMCI\", \"GETY\"]; //NYSE KEYS\n\n  const nyseMasterKeyn  // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n\n  async function filterTradableSymbols(arr1, arr2, compileCallback) {\n    let nyseHolderDown = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n\n    let nyseHolderUp = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n\n    let nasdaqHolderDown = [];\n    let nasdaqHolderUp = [];\n\n    try {\n      // ------ FETCH NYSE\n      const res = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNyse = await res.json(); // ----- FILTER TRADABLE SYMBOLS ON NYSE THAT HAVE DROPPED\n\n      for (let i = 0; i < dataNyse.length; i++) {\n        if (dataNyse[i].changesPercentage < -5 && arr1.indexOf(dataNyse[i].symbol) > 0 && dataNyse[i].price > 1) {\n          nyseHolderDown.push(dataNyse[i]);\n        }\n      }\n\n      for (let i = 0; i < dataNyse.length; i++) {\n        if (dataNyse[i].changesPercentage > 5 && arr1.indexOf(dataNyse[i].symbol) > 0 && dataNyse[i].price > 1) {\n          nyseHolderUp.push(dataNyse[i]);\n        }\n      } // ------ FETCH NASDAQ\n\n\n      const resTwo = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNas = await resTwo.json(); // ----- FILTER TRADABLE SYMBOLS ON NASDAQ THAT HAVE DROPPED\n\n      for (let i = 0; i < dataNas.length; i++) {\n        if (dataNas[i].changesPercentage < -5 && arr2.indexOf(dataNas[i].symbol) > 0 && dataNas[i].price > 1) {\n          nasdaqHolderDown.push(dataNas[i]);\n        }\n      }\n\n      for (let i = 0; i < dataNas.length; i++) {\n        if (dataNas[i].changesPercentage > 5 && arr2.indexOf(dataNas[i].symbol) > 0 && dataNas[i].price > 1) {\n          nasdaqHolderUp.push(dataNas[i]);\n        }\n      } //--------- CATCH\n\n    } catch (e) {}\n\n    const returnedData = await compileCallback(nasdaqHolderDown, nyseHolderDown, nyseHolderUp, nasdaqHolderUp, technicalIndicators); // CALLBACK FOR STOCK FILTER\n\n    return returnedData;\n  }\n\n  async function compileStocks(arr1, arr2, arr3, arr4, callback) {\n    //---------------------- COMBINE AND SORT LARGEST DROP -------------------------\n    let finalChartFatDown = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n\n    let finalChartFatUp = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n\n    let finalChart = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n    // ------- THIS IS A FILTER FOR WEIRD STOCK SYMBOLS THAT SLIP IN ----------\n\n    let combinedStockDrop = [];\n    combinedStockDrop = combinedStockDrop.concat(arr1, arr2);\n    let combinedStockUp = [];\n    combinedStockUp = combinedStockUp.concat(arr3, arr4);\n    const keys = /^[A-Z]{1,4}$/g;\n    finalChartFatDown = combinedStockDrop.filter(stock => {\n      return stock.symbol.match(keys);\n    });\n    finalChartFatUp = combinedStockUp.filter(stock => {\n      return stock.symbol.match(keys);\n    });\n\n    for (let i = 0; i < finalChartFatDown.length; i++) {\n      finalChartFatDown.sort((a, b) => {\n        return a.changesPercentage - b.changesPercentage;\n      });\n    }\n\n    for (let i = 0; i < finalChartFatUp.length; i++) {\n      finalChartFatUp.sort((a, b) => {\n        return b.changesPercentage - a.changesPercentage;\n      });\n    } // MAKE SURE ARR HAS RIGHT LENGTH TO LOAD ------------\n\n\n    const holderObjDown = {\n      avgVolume: -1,\n      bbLower: \"-1\",\n      bbMiddle: \"-1\",\n      bbPercent: \"-1\",\n      bbUpper: \"-1\",\n      cciTwenty: \"-1\",\n      change: -1,\n      changesPercentage: -1,\n      dayHigh: -1,\n      dayLow: -1,\n      earningsAnnouncement: \"-1\",\n      emaEight: \"-1\",\n      emaFifty: \"-1\",\n      emaTwelve: \"-1\",\n      emaTwenty: \"-1\",\n      emaTwentySix: \"-1\",\n      emaTwoHun: \"-1\",\n      eps: -1,\n      exchange: \"No Data\",\n      macd: \"-1\",\n      macdHistogram: \"-1\",\n      macdSignalLine: \"-1\",\n      marketCap: -1,\n      name: \"Placeholder for lack of Symbols\",\n      open: -1,\n      pe: -1,\n      previousClose: -1,\n      price: 1,\n      priceAvg50: -1,\n      priceAvg200: -1,\n      rsi: \"-1\",\n      sharesOutstanding: -1,\n      smaFifty: \"-1\",\n      smaFiveTeen: \"-1\",\n      smaOneHun: \"-1\",\n      smaThirty: \"-1\",\n      smaTwenty: \"-1\",\n      smaTwoHun: \"-1\",\n      stochasticD: \"-1\",\n      stochasticK: \"-1\",\n      stochasticSignal: \"-1\",\n      symbol: \"No Data\",\n      timestamp: -1,\n      volume: -1,\n      vwap: \"-1\",\n      vwmaFifty: \"-1\",\n      vwmaFiveTeen: \"-1\",\n      vwmaOneHun: \"-1\",\n      vwmaThirty: \"-1\",\n      vwmaTwenty: \"-1\",\n      vwmaTwoHun: \"-1\",\n      williamsR: \"-1\",\n      wmaFifty: \"-1\",\n      wmaFiveTeen: \"-1\",\n      wmaOneHun: \"-1\",\n      wmaThirty: \"-1\",\n      wmaTwenty: \"-1\",\n      wmaTwoHun: \"-1\",\n      yearHigh: -1,\n      yearLow: -1,\n      yesterdayVolume: -1\n    };\n    const holderObjUp = {\n      avgVolume: 1,\n      bbLower: \"1\",\n      bbMiddle: \"1\",\n      bbPercent: \"1\",\n      bbUpper: \"1\",\n      cciTwenty: \"1\",\n      change: 1,\n      changesPercentage: 1,\n      dayHigh: 1,\n      dayLow: 1,\n      earningsAnnouncement: \"1\",\n      emaEight: \"1\",\n      emaFifty: \"1\",\n      emaTwelve: \"1\",\n      emaTwenty: \"1\",\n      emaTwentySix: \"1\",\n      emaTwoHun: \"1\",\n      eps: 1,\n      exchange: \"No Data\",\n      macd: \"1\",\n      macdHistogram: \"1\",\n      macdSignalLine: \"1\",\n      marketCap: 1,\n      name: \"Placeholder for lack of Symbols\",\n      open: 1,\n      pe: 1,\n      previousClose: 1,\n      price: 1,\n      priceAvg50: 1,\n      priceAvg200: 1,\n      rsi: \"1\",\n      sharesOutstanding: 1,\n      smaFifty: \"1\",\n      smaFiveTeen: \"1\",\n      smaOneHun: \"1\",\n      smaThirty: \"1\",\n      smaTwenty: \"1\",\n      smaTwoHun: \"1\",\n      stochasticD: \"1\",\n      stochasticK: \"1\",\n      stochasticSignal: \"1\",\n      symbol: \"No Data\",\n      timestamp: 1,\n      volume: 1,\n      vwap: \"1\",\n      vwmaFifty: \"1\",\n      vwmaFiveTeen: \"1\",\n      vwmaOneHun: \"1\",\n      vwmaThirty: \"1\",\n      vwmaTwenty: \"1\",\n      vwmaTwoHun: \"1\",\n      williamsR: \"1\",\n      wmaFifty: \"1\",\n      wmaFiveTeen: \"1\",\n      wmaOneHun: \"1\",\n      wmaThirty: \"1\",\n      wmaTwenty: \"1\",\n      wmaTwoHun: \"1\",\n      yearHigh: 1,\n      yearLow: 1,\n      yesterdayVolume: 1\n    };\n\n    if (finalChartFatUp.length < 5) {\n      while (finalChartFatUp.length < 5) {\n        finalChartFatUp.push(holderObjUp);\n      }\n    }\n\n    if (finalChartFatDown.length < 5) {\n      while (finalChartFatDown.length < 5) {\n        finalChartFatDown.push(holderObjDown);\n      }\n    } // SLIM CHAT DOWN SO IT'S NOT BLOATED\n\n\n    let slimChartDown = 4;\n\n    while (slimChartDown >= 0) {\n      finalChart.unshift(finalChartFatDown[slimChartDown]);\n      slimChartDown--;\n    }\n\n    let slimChartUp = 4;\n\n    while (slimChartUp >= 0) {\n      finalChart.unshift(finalChartFatUp[slimChartUp]);\n      slimChartUp--;\n    }\n\n    const returnedData = await callback(finalChart, filterUpDownStocks);\n    return returnedData;\n  } // ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n  // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function smaFunction(chartArr, dataPull, newestPull, num) {\n    let culSMA = 0; // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n\n    let fiveTeenSMA = 13;\n    let twentySMA = 18;\n    let thirtySMA = 28;\n    let fiftySMA = 48;\n    let hunSMA = 98;\n    let twoHunSMA = 198;\n\n    try {\n      const todayPricePull = newestPull[0].price; // ------------- 15 DAY SMA -------------------------------\n\n      if (dataPull.historical.length <= 13) {\n        chartArr[num].smaFiveTeen = \"No Data\";\n      } else {\n        while (fiveTeenSMA >= 0) {\n          culSMA += dataPull.historical[fiveTeenSMA].close;\n          fiveTeenSMA--;\n        }\n\n        let smaFiveResult = (culSMA + todayPricePull) / 15;\n        chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 20 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 19) {\n        chartArr[num].smaTwenty = \"No Data\";\n      } else {\n        while (twentySMA >= 0) {\n          culSMA += dataPull.historical[twentySMA].close;\n          twentySMA--;\n        }\n\n        let smaTwentyResult = (culSMA + todayPricePull) / 20;\n        chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 30 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 29) {\n        chartArr[num].smaThirty = \"No Data\";\n      } else {\n        while (thirtySMA >= 0) {\n          culSMA += dataPull.historical[thirtySMA].close;\n          thirtySMA--;\n        }\n\n        let smaThirtyResult = (culSMA + todayPricePull) / 30;\n        chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 50 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 49) {\n        chartArr[num].smaFifty = \"No Data\";\n      } else {\n        while (fiftySMA >= 0) {\n          culSMA += dataPull.historical[fiftySMA].close;\n          fiftySMA--;\n        }\n\n        let smaFiftyResult = (culSMA + todayPricePull) / 50;\n        chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 100 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 99) {\n        chartArr[num].smaOneHun = \"No Data\";\n      } else {\n        while (hunSMA >= 0) {\n          culSMA += dataPull.historical[hunSMA].close;\n          hunSMA--;\n        }\n\n        let smaOneHunResult = (culSMA + todayPricePull) / 100;\n        chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 200 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 199) {\n        chartArr[num].smaTwoHun = \"No Data\";\n      } else {\n        while (twoHunSMA >= 0) {\n          culSMA += dataPull.historical[twoHunSMA].close;\n          twoHunSMA--;\n        }\n\n        let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n        chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n        culSMA = 0;\n      }\n    } catch (e) {}\n  } // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function wmaFunction(chartArr, dataPull, newestPull, num) {\n    // WMA FiveTeen --------------------------------------------------------------------\n    let weight = 14;\n    let wmaInterval = 0;\n    let iWma = 15;\n\n    try {\n      let wmaCul = newestPull[0].price * 15;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].wmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFiveTeen = wmaCul / iWma;\n        chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n      } // WMA Twenty --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 20;\n      weight = 19;\n      wmaInterval = 0;\n      iWma = 20;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].wmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwenty = wmaCul / iWma;\n        chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n      } // WMA THIRTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 30;\n      weight = 29;\n      wmaInterval = 0;\n      iWma = 30;\n\n      if (dataPull.historical.length < 30) {\n        chartArr[num].wmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaThirty = wmaCul / iWma;\n        chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n      } // WMA FIFTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 50;\n      weight = 49;\n      wmaInterval = 0;\n      iWma = 50;\n\n      if (dataPull.historical.length < 50) {\n        chartArr[num].wmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFifty = wmaCul / iWma;\n        chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n      } // WMA ONE HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 100;\n      weight = 99;\n      wmaInterval = 0;\n      iWma = 100;\n\n      if (dataPull.historical.length < 100) {\n        chartArr[num].wmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaOneHun = wmaCul / iWma;\n        chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n      } // WMA TWO HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 200;\n      weight = 199;\n      wmaInterval = 0;\n      iWma = 200;\n\n      if (dataPull.historical.length < 200) {\n        chartArr[num].wmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwoHun = wmaCul / iWma;\n        chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwmaFunction(chartArr, dataPull, newestPull, num) {\n    // VWMA FIVETEEN --------------------------------------------------------------------\n    try {\n      let price = 0;\n      let volume = 0;\n      const newPrice = newestPull[0].price;\n      const newVol = newestPull[0].volume;\n      let volCul = newestPull[0].volume;\n      let totalCul = newPrice * newVol;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].vwmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFiveTeen = totalCul / volCul;\n        chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n      } // VWMA TWENTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].vwmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwenty = totalCul / volCul;\n        chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n      } // VWMA THIRTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 29) {\n        chartArr[num].vwmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaThirty = totalCul / volCul;\n        chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n      } // VWMA FIFTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 49) {\n        chartArr[num].vwmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFifty = totalCul / volCul;\n        chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n      } // VWMA ONEHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 99) {\n        chartArr[num].vwmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaOneHun = totalCul / volCul;\n        chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n      } // VWMA TWOHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 199) {\n        chartArr[num].vwmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwoHun = totalCul / volCul;\n        chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n    let emaEight = 14;\n    let emaTwelve = 22;\n    let emaTwenty = 38;\n    let emaTwentySix = 50;\n    let emaFifty = 98;\n    let emaTwoHun = 398;\n    let prevDayEmaSub = 0;\n    let arrEma = [];\n    let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n\n    let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n    try {\n      const newPrice = newestPull[0].price; // EMA EIGHT ----------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 16) {\n        chartArr[num].emaEight = \"No Data\";\n      } else {\n        while (emaEight >= 15) {\n          prevDayEmaSub += dataPull.historical[emaEight].close;\n          emaEight--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 8; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 9 * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaEight--;\n\n        while (emaEight >= 0) {\n          let derp = 2 / 9 * (dataPull.historical[emaEight].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaEight--;\n        }\n\n        const finalEma = 2 / 9 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaEight = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWELVE ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 24) {\n        chartArr[num].emaTwelve = \"No Data\";\n      } else {\n        while (emaTwelve >= 11) {\n          prevDayEmaSub += dataPull.historical[emaTwelve].close;\n          emaTwelve--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 12; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 13 * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwelve--;\n\n        while (emaTwelve >= 0) {\n          let derp = 2 / 13 * (dataPull.historical[emaTwelve].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwelve < 8 && emaTwelve >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwelve.unshift(derp);\n          }\n\n          emaTwelve--;\n        }\n\n        const finalEma = 2 / 13 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwelve.unshift(finalEma);\n        chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 40) {\n        chartArr[num].emaTwenty = \"No Data\";\n      } else {\n        while (emaTwenty >= 19) {\n          prevDayEmaSub += dataPull.historical[emaTwenty].close;\n          emaTwenty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 20; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 21 * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwenty--;\n\n        while (emaTwenty >= 0) {\n          let derp = 2 / 21 * (dataPull.historical[emaTwenty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwenty--;\n        }\n\n        const finalEma = 2 / 21 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY SIX ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 51) {\n        chartArr[num].emaTwentySix = \"No Data\";\n      } else {\n        while (emaTwentySix >= 25) {\n          prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n          emaTwentySix--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 26; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 27 * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwentySix--;\n\n        while (emaTwentySix >= 0) {\n          let derp = 2 / 27 * (dataPull.historical[emaTwentySix].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwentySix < 8 && emaTwentySix >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwentySix.unshift(derp);\n          }\n\n          emaTwentySix--;\n        }\n\n        const finalEma = 2 / 27 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwentySix.unshift(finalEma);\n        chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA FIFTY -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 100) {\n        chartArr[num].emaFifty = \"No Data\";\n      } else {\n        while (emaFifty >= 49) {\n          prevDayEmaSub += dataPull.historical[emaFifty].close;\n          emaFifty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 50; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 51 * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaFifty--;\n\n        while (emaFifty >= 0) {\n          let derp = 2 / 51 * (dataPull.historical[emaFifty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaFifty--;\n        }\n\n        const finalEma = 2 / 51 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaFifty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 400) {\n        chartArr[num].emaTwoHun = \"No Data\";\n      } else {\n        while (emaTwoHun >= 199) {\n          prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n          emaTwoHun--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 200; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 201 * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwoHun--;\n\n        while (emaTwoHun >= 0) {\n          let derp = 2 / 201 * (dataPull.historical[emaTwoHun].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwoHun--;\n        }\n\n        const finalEma = 2 / 201 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n    } catch (e) {} // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n    macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n  } // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function macdFunction(chartArr, num, arr1, arr2) {\n    const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n    chartArr[num].macd = macd.toFixed(2); // CALCULATE SIGNAL LINE ----------------\n\n    let averageMacd = [];\n    let iMacd = 8;\n\n    try {\n      while (iMacd >= 0) {\n        averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n        iMacd--;\n      }\n\n      let averageSum = averageMacd.reduce((a, b) => a + b);\n      let finalAverageMacd = averageSum / 9;\n      let macdSignalLine = 2 / 9 * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n      chartArr[num].macdSignalLine = macdSignalLine.toFixed(2); // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n\n      let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n      chartArr[num].macdHistogram = histogram.toFixed(2); // FOR NO DATA TO PULL FROM\n\n      if (chartArr[num].macdHistogram === \"NaN\") {\n        chartArr[num].macdHistogram = \"No Data\";\n      }\n\n      if (chartArr[num].macd === \"NaN\") {\n        chartArr[num].macd = \"No Data\";\n      }\n\n      if (chartArr[num].macdSignalLine === \"NaN\") {\n        chartArr[num].macdSignalLine = \"No Data\";\n      }\n    } catch (e) {}\n  } // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function rsiFunction(chartArr, dataPull, newestPull, num) {\n    let iRSI = 13;\n    let iRSIAdjusted = 14;\n    let recentUpper = 0;\n    let recentDowner = 0;\n    let upMove = 0;\n    let downMove = 0;\n    let pastDownPeriod = 0;\n    let pastUpPeriod = 0;\n\n    try {\n      const newPrice = newestPull[0].price; // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n\n      if (dataPull.historical.length <= 14) {\n        chartArr[num].rsi = \"No Data\";\n      } else {\n        // LOOP FOR AVERAGE\n        while (iRSI >= 0) {\n          if (dataPull.historical[iRSI].close > dataPull.historical[iRSIAdjusted].close) {\n            upMove += dataPull.historical[iRSI].close - dataPull.historical[iRSIAdjusted].close;\n          } else {\n            downMove += dataPull.historical[iRSIAdjusted].close - dataPull.historical[iRSI].close;\n          }\n\n          iRSI--;\n          iRSIAdjusted--;\n        }\n\n        let averageUp = upMove / 14;\n        let averageDown = downMove / 14; // MOST RECENT DIFFERENCE\n\n        if (newPrice > dataPull.historical[0].close) {\n          recentUpper = newPrice - dataPull.historical[0].close;\n        } else {\n          recentDowner = dataPull.historical[0].close - newPrice;\n        }\n\n        pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n        pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n        let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n        chartArr[num].rsi = rsi.toFixed(2);\n      }\n    } catch (e) {}\n  } // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n    let iSO = 13;\n    let soLowHolder = [];\n    let soHighHolder = [];\n    let highestHigh = 0;\n    let lowestLow = 0; // FIRST %D\n\n    let topForm = [];\n    let bottomForm = []; // SECOND %D\n\n    let topFormTwo = [];\n    let bottomFormTwo = []; // THIRD %D\n\n    let topFormThree = [];\n    let bottomFormThree = []; // HOLDING SET OF %D FOR 14 3 3\n\n    let signalLineHolder = [];\n\n    try {\n      let newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 18) {\n        chartArr[num].stochasticK = \"No Data\";\n      } else {\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n        while (iSO >= 0) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        soHighHolder.push(newPrice);\n        soLowHolder.push(newPrice);\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        if (lowestLow === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        if (highestHigh === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        topForm.push(newPrice - lowestLow);\n        bottomForm.push(highestHigh - lowestLow); //FOR %K\n\n        chartArr[num].stochasticK = ((newPrice - lowestLow) / (highestHigh - lowestLow) * 100).toFixed(2); // RESET HOLDER AND VARs --------------------------------------------------------\n\n        iSO = 14;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n        while (iSO >= 1) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[0].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[0].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow); // RESET HOLDER AND VARs ------------------------------------------------\n\n        iSO = 15;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 2) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[1].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[1].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[1].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        let sumTop = topForm.reduce((a, b) => a + b, 0);\n        let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n        let slowD = sumTop / sumBottom * 100; // FOR %D\n\n        chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------------------------------\n\n        iSO = 16;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n        while (iSO >= 3) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormTwo.push(dataPull.historical[2].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[2].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------\n\n        iSO = 17;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 4) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormThree.push(dataPull.historical[3].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormThree.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); // ----------- TALLY UP LAST SMOOTHING -------------------------------\n\n        const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n        let smaD = sumStochD / 3;\n\n        if (smaD < 0) {\n          smaD *= -1;\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        } else {\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        }\n      }\n    } catch (e) {}\n  } // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function williamsRFunction(chartArr, dataPull, newestPull, num) {\n    let highs = [];\n    let lows = [];\n    let lowestLow = 0;\n    let highestHigh = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].williams = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          highs.push(dataPull.historical[i].high);\n          lows.push(dataPull.historical[i].low);\n        }\n\n        highs.push(newPrice);\n        lows.push(newPrice);\n        lowestLow = Math.min(...lows);\n        highestHigh = Math.max(...highs);\n        const williams = (highestHigh - dataPull.historical[0].close) / (highestHigh - lowestLow) * -100;\n        chartArr[num].williamsR = williams.toFixed(2);\n      }\n    } catch (e) {}\n  } // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function cciFunction(chartArr, dataPull, newestPull, num) {\n    let tpvCul = 0;\n    let tpv = [];\n    let tpvMa = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n      let tpvCurrent = newPrice;\n      const recentTpv = newPrice;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].cciTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 19; i++) {\n          const {\n            high,\n            close,\n            low\n          } = dataPull.historical[i];\n          tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n\n          tpvCurrent = (close + high + low) / 3;\n        } // ---- TPV SMA ------------------------\n\n\n        tpvCul = tpv.reduce((a, b) => a + b);\n        tpvMa = tpvCul / 20; // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n\n        const partOne = recentTpv - tpvMa;\n        const meanD = tpv.map(x => x - tpvMa);\n        const meanDMap = meanD.map(x => Math.abs(x));\n        const meanDSum = meanDMap.reduce((a, b) => a + b);\n        const meanDiv = meanDSum / 20; // PART TWO OF FORMULA --------------\n\n        const partTwo = meanDiv * 0.015; // CCI ------------------------------\n\n        const cci = partOne / partTwo;\n        chartArr[num].cciTwenty = cci.toFixed(2);\n      }\n    } catch (e) {}\n  } // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n    let smaCul = 0;\n    let closeHolder = [];\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].bbUpper = \"No Data\";\n        chartArr[num].bbLower = \"No Data\";\n        chartArr[num].bbMiddle = \"No Data\";\n      } else {\n        let closeP = newPrice;\n\n        for (let i = 0; i <= 19; i++) {\n          closeHolder.push(closeP);\n          smaCul += closeP;\n          closeP = dataPull.historical[i].close;\n        } // STANDARD DEVIATION CALC --------------------------------\n\n\n        const smaTwenty = smaCul / 20;\n        const priceAdj = closeHolder.map(x => x - smaTwenty);\n        const priceAdjAbs = priceAdj.map(x => Math.abs(x));\n        const priceAdjSqrt = priceAdjAbs.map(x => x * x);\n        const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n        const partTwoDev = partOneDev / 20;\n        const standardDev = Math.sqrt(partTwoDev); // BB BAND CALC --------------------------------------------\n\n        const bbUpper = smaTwenty + standardDev * 2;\n        const bbLower = smaTwenty - standardDev * 2;\n        const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n        chartArr[num].bbUpper = bbUpper.toFixed(2);\n        chartArr[num].bbLower = bbLower.toFixed(2);\n        chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n        chartArr[num].bbPercent = bbPercent.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwapFunction(chartArr, dataPull, num) {\n    // ----------- VWAP CALUC -------------------------------------------\n    let dayLengthPeriod = 0;\n    let tpvCul = 0;\n    let volumeCul = 0;\n    let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n    try {\n      // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n      while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n        dayLengthPeriod++;\n      } // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n\n      for (let i = 0; i < dayLengthPeriod; i++) {\n        const {\n          volume,\n          high,\n          close,\n          low,\n          date\n        } = dataPull[i];\n        let tpv = (high + low + close) / 3;\n\n        if (date.slice(0, 10) == newDateString) {\n          tpvCul += tpv * volume;\n          volumeCul += volume;\n        }\n\n        var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n\n        tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n      }\n\n      let vwap = tempVWAP[0].toFixed(2);\n      chartArr[num].vwap = vwap;\n    } catch (e) {}\n  } // SET VOLUME FOR LATER\n\n\n  function setVolume(chartArr, dataPull, newestPull, num) {\n    // SET RECENT YESTERDAY VOLUME\n    try {\n      if (dataPull.historical.length <= 0) {\n        chartArr[num].yesterdayVolume = 0;\n      } else {\n        chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n\n        if (marketDay == 0 || marketDay == 6) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (timeNum > 1830) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n      }\n\n      if (newestPull.length < 0) {\n        chartArr[num].volume = 0;\n      } else {\n        // SET RECENT VOLUME\n        chartArr[num].volume = newestPull[0].volume;\n      }\n    } catch (e) {}\n  } // TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\n\n\n  async function technicalIndicators(finalArr, callback) {\n    let j = 0;\n\n    while (j < finalArr.length) {\n      // LOOP FOR TECHNICAL SYMBOL\n      // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n      const {\n        symbol\n      } = finalArr[j]; //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n\n      const resSMA = await fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n      // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataSMA).length) {\n          console.log(\"no SMA Pull data found\");\n        }\n      } catch (e) {} //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n\n\n      const resOscPulled = await fetch(`https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataRecentPulled = await resOscPulled.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataRecentPulled).length) {\n          console.log(\"no Recent Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      const resVWAP = await fetch(`https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataVWAP = await resVWAP.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataVWAP).length) {\n          console.log(\"no VWAP Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      vwapFunction(finalArr, dataVWAP, j); // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      smaFunction(finalArr, dataSMA, dataRecentPulled, j); // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      wmaFunction(finalArr, dataSMA, dataRecentPulled, j); // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      vwmaFunction(finalArr, dataSMA, dataRecentPulled, j); // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n\n      emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction); // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      rsiFunction(finalArr, dataSMA, dataRecentPulled, j); // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n      // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      williamsRFunction(finalArr, dataSMA, dataRecentPulled, j); // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      cciFunction(finalArr, dataSMA, dataRecentPulled, j); // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j); // SET VOLUME PROPERTIES\n\n      setVolume(finalArr, dataSMA, dataRecentPulled, j);\n      j++; // UPDATE WHILE LOOP\n    } // THIS IS THE END OF LOOP\n\n\n    const returnedData = await callback(finalArr, buildIt);\n    return returnedData;\n  }\n\n  async function filterUpDownStocks(finalArr, callback) {\n    let stocksUp = [];\n    let stocksDown = [];\n    let j = 0;\n\n    while (j < finalArr.length) {\n      const {\n        changesPercentage\n      } = finalArr[j];\n\n      if (changesPercentage > 0) {\n        stocksUp.push(finalArr[j]);\n      } else {\n        stocksDown.push(finalArr[j]);\n      }\n\n      j++;\n    } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n    // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n\n\n    for (let i = 0; i < stocksUp.length; i++) {\n      // UPPER ------------------------------------------------------------------------------\n      stocksUp[i].symbolUp = stocksUp[i].symbol;\n      delete stocksUp[i].symbol;\n      stocksUp[i].changeUp = stocksUp[i].change;\n      delete stocksUp[i].change;\n      stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n      delete stocksUp[i].avgVolume;\n      stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n      delete stocksUp[i].changesPercentage;\n      stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n      delete stocksUp[i].emaEight;\n      stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n      delete stocksUp[i].emaTwelve;\n      stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n      delete stocksUp[i].emaTwenty;\n      stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n      delete stocksUp[i].emaTwentySix;\n      stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n      delete stocksUp[i].emaFifty;\n      stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n      delete stocksUp[i].emaTwoHun;\n      stocksUp[i].macdUp = stocksUp[i].macd;\n      delete stocksUp[i].macd;\n      stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n      delete stocksUp[i].macdHistogram;\n      stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n      delete stocksUp[i].macdSignalLine;\n      stocksUp[i].priceUp = stocksUp[i].price;\n      delete stocksUp[i].price;\n      stocksUp[i].rsiUp = stocksUp[i].rsi;\n      delete stocksUp[i].rsi;\n      stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n      delete stocksUp[i].smaFiveTeen;\n      stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n      delete stocksUp[i].smaTwenty;\n      stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n      delete stocksUp[i].smaThirty;\n      stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n      delete stocksUp[i].smaFifty;\n      stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n      delete stocksUp[i].smaOneHun;\n      stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n      delete stocksUp[i].smaTwoHun;\n      stocksUp[i].volumeUp = stocksUp[i].volume;\n      delete stocksUp[i].volume;\n      stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n      delete stocksUp[i].yesterdayVolume;\n      stocksUp[i].vwapUp = stocksUp[i].vwap;\n      delete stocksUp[i].vwap;\n      stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n      delete stocksUp[i].stochasticD;\n      stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n      delete stocksUp[i].stochasticK;\n      stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n      delete stocksUp[i].stochasticSignal;\n      stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n      delete stocksUp[i].wmaFiveTeen;\n      stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n      delete stocksUp[i].wmaTwenty;\n      stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n      delete stocksUp[i].wmaThirty;\n      stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n      delete stocksUp[i].wmaFifty;\n      stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n      delete stocksUp[i].wmaOneHun;\n      stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n      delete stocksUp[i].wmaTwoHun;\n      stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n      delete stocksUp[i].vwmaFiveTeen;\n      stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n      delete stocksUp[i].vwmaTwenty;\n      stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n      delete stocksUp[i].vwmaThirty;\n      stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n      delete stocksUp[i].vwmaFifty;\n      stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n      delete stocksUp[i].vwmaOneHun;\n      stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n      delete stocksUp[i].vwmaTwoHun;\n      stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n      delete stocksUp[i].williamsR;\n      stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n      delete stocksUp[i].cciTwenty;\n      stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n      delete stocksUp[i].bbUpper;\n      stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n      delete stocksUp[i].bbLower;\n      stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n      delete stocksUp[i].bbMiddle;\n      stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n      delete stocksUp[i].bbPercent; // DOWNERS ------------------------------------------------------------------------------\n\n      stocksDown[i].symbolDown = stocksDown[i].symbol;\n      delete stocksDown[i].symbol;\n      stocksDown[i].changeDown = stocksDown[i].change;\n      delete stocksDown[i].change;\n      stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n      delete stocksDown[i].avgVolume;\n      stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n      delete stocksDown[i].changesPercentage;\n      stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n      delete stocksDown[i].emaEight;\n      stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n      delete stocksDown[i].emaTwelve;\n      stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n      delete stocksDown[i].emaTwenty;\n      stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n      delete stocksDown[i].emaTwentySix;\n      stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n      delete stocksDown[i].emaFifty;\n      stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n      delete stocksDown[i].emaTwoHun;\n      stocksDown[i].macdDown = stocksDown[i].macd;\n      delete stocksDown[i].macd;\n      stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n      delete stocksDown[i].macdHistogram;\n      stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n      delete stocksDown[i].macdSignalLine;\n      stocksDown[i].priceDown = stocksDown[i].price;\n      delete stocksDown[i].price;\n      stocksDown[i].rsiDown = stocksDown[i].rsi;\n      delete stocksDown[i].rsi;\n      stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n      delete stocksDown[i].smaFiveTeen;\n      stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n      delete stocksDown[i].smaTwenty;\n      stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n      delete stocksDown[i].smaThirty;\n      stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n      delete stocksDown[i].smaFifty;\n      stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n      delete stocksDown[i].smaOneHun;\n      stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n      delete stocksDown[i].smaTwoHun;\n      stocksDown[i].volumeDown = stocksDown[i].volume;\n      delete stocksDown[i].volume;\n      stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n      delete stocksDown[i].yesterdayVolume;\n      stocksDown[i].vwapDown = stocksDown[i].vwap;\n      delete stocksDown[i].vwap;\n      stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n      delete stocksDown[i].stochasticD;\n      stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n      delete stocksDown[i].stochasticK;\n      stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n      delete stocksDown[i].stochasticSignal;\n      stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n      delete stocksDown[i].wmaFiveTeen;\n      stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n      delete stocksDown[i].wmaTwenty;\n      stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n      delete stocksDown[i].wmaThirty;\n      stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n      delete stocksDown[i].wmaFifty;\n      stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n      delete stocksDown[i].wmaOneHun;\n      stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n      delete stocksDown[i].wmaTwoHun;\n      stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n      delete stocksDown[i].vwmaFiveTeen;\n      stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n      delete stocksDown[i].vwmaTwenty;\n      stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n      delete stocksDown[i].vwmaThirty;\n      stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n      delete stocksDown[i].vwmaFifty;\n      stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n      delete stocksDown[i].vwmaOneHun;\n      stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n      delete stocksDown[i].vwmaTwoHun;\n      stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n      delete stocksDown[i].williamsR;\n      stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n      delete stocksDown[i].cciTwenty;\n      stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n      delete stocksDown[i].bbUpper;\n      stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n      delete stocksDown[i].bbLower;\n      stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n      delete stocksDown[i].bbMiddle;\n      stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n      delete stocksDown[i].bbPercent;\n    }\n\n    const returnedData = await callback(stocksUp, stocksDown);\n    return returnedData;\n  }\n\n  function buildIt(arrUp, arrDown) {\n    for (let i = 0; i < arrUp.length; i++) {\n      // DECONSTRUCTING UP AND DOWN VAR\n      var {\n        avgVolumeUp,\n        volumeYesterdayUp,\n        changeUp,\n        changesPercentageUp,\n        priceUp,\n        symbolUp,\n        volumeUp,\n        vwapUp,\n        smaFiveTeenUp,\n        smaTwentyUp,\n        smaThirtyUp,\n        smaFiftyUp,\n        smaOneHunUp,\n        smaTwoHunUp,\n        emaEightUp,\n        emaTwelveUp,\n        emaTwentyUp,\n        emaTwentySixUp,\n        emaFiftyUp,\n        emaTwoHunUp,\n        wmaFiveTeenUp,\n        wmaTwentyUp,\n        wmaThirtyUp,\n        wmaFiftyUp,\n        wmaOneHunUp,\n        wmaTwoHunUp,\n        vwmaFiveTeenUp,\n        vwmaTwentyUp,\n        vwmaThirtyUp,\n        vwmaFiftyUp,\n        vwmaOneHunUp,\n        vwmaTwoHunUp,\n        macdUp,\n        macdHistogramUp,\n        macdSignalLineUp,\n        rsiUp,\n        stochasticDUp,\n        stochasticKUp,\n        stochasticSignalUp,\n        cciUp,\n        bbMiddleUp,\n        bbLowerUp,\n        bbUpperUp,\n        bbPercentUp,\n        williamsRUp\n      } = arrUp[i];\n      var {\n        avgVolumeDown,\n        volumeYesterdayDown,\n        changeDown,\n        changesPercentageDown,\n        priceDown,\n        symbolDown,\n        volumeDown,\n        vwapDown,\n        smaFiveTeenDown,\n        smaTwentyDown,\n        smaThirtyDown,\n        smaFiftyDown,\n        smaOneHunDown,\n        smaTwoHunDown,\n        emaEightDown,\n        emaTwelveDown,\n        emaTwentyDown,\n        emaTwentySixDown,\n        emaFiftyDown,\n        emaTwoHunDown,\n        wmaFiveTeenDown,\n        wmaTwentyDown,\n        wmaThirtyDown,\n        wmaFiftyDown,\n        wmaOneHunDown,\n        wmaTwoHunDown,\n        vwmaFiveTeenDown,\n        vwmaTwentyDown,\n        vwmaThirtyDown,\n        vwmaFiftyDown,\n        vwmaOneHunDown,\n        vwmaTwoHunDown,\n        macdDown,\n        macdHistogramDown,\n        macdSignalLineDown,\n        rsiDown,\n        stochasticDDown,\n        stochasticKDown,\n        stochasticSignalDown,\n        cciDown,\n        bbMiddleDown,\n        bbLowerDown,\n        bbUpperDown,\n        bbPercentDown,\n        williamsRDown\n      } = arrDown[i]; // ADJUST TO FIXED --------------------------------------------------------\n\n      if (arrUp[i].priceUp == undefined) {\n        arrUp[i].priceUp = 0;\n      }\n\n      if (arrDown[i].priceDown == undefined) {\n        arrDown[i].priceDown = 0;\n      }\n\n      priceUp = priceUp.toFixed(2);\n      priceDown = priceDown.toFixed(2);\n\n      if (arrUp[i].changesPercentageUp == undefined) {\n        arrUp[i].changesPercentageUp = 0;\n      }\n\n      if (arrDown[i].changesPercentageDown == undefined) {\n        arrDown[i].changesPercentageDown = 0;\n      }\n\n      changesPercentageUp = changesPercentageUp.toFixed(2);\n      changesPercentageDown = changesPercentageDown.toFixed(2);\n\n      if (arrUp[i].changeUp == undefined) {\n        arrUp[i].changeUp = 0;\n      }\n\n      if (arrDown[i].changeDown == undefined) {\n        arrDown[i].changeDown = 0;\n      }\n\n      changeUp = changeUp.toFixed(2);\n      changeDown = changeDown.toFixed(2); // UP VOLUME INCREASE ----------------------------\n\n      if (arrUp[i].volumeUp == undefined) {\n        arrUp[i].volumeUp = 0;\n      }\n\n      if (arrDown[i].volumeDown == undefined) {\n        arrDown[i].volumeDown = 0;\n      }\n\n      var volumeIncreaseUp = 0;\n\n      if (volumeUp > avgVolumeUp) {\n        let increase = volumeUp - avgVolumeUp;\n        volumeIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeUp;\n        volumeIncreaseUp = decrease / avgVolumeUp * -100;\n      } // DOWN VOLUME INCREASE ----------------------------\n\n\n      var volumeIncreaseDown = 0;\n\n      if (volumeDown > avgVolumeDown) {\n        let increase = volumeDown - avgVolumeDown;\n        volumeIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeDown;\n        volumeIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n      volumeIncreaseUp = volumeIncreaseUp.toFixed(2); // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n      // YESTERDAY UP VOLUME INCREASE ----------------------------\n\n      if (arrUp[i].volumeYesterdayUp == undefined) {\n        arrUp[i].volumeYesterdayUp = 0;\n      }\n\n      if (volumeYesterdayDown == undefined) {\n        volumeYesterdayDown = 0;\n      }\n\n      if (arrUp[i].avgVolumeUp == undefined) {\n        arrUp[i].avgVolumeUp = 0;\n      }\n\n      if (arrDown[i].avgVolumeDown == undefined) {\n        arrDown[i].avgVolumeDown = 0;\n      }\n\n      var yesterdayVolIncreaseUp = 0;\n\n      if (volumeYesterdayUp > avgVolumeUp) {\n        let increase = volumeYesterdayUp - avgVolumeUp;\n        yesterdayVolIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeYesterdayUp;\n        yesterdayVolIncreaseUp = decrease / avgVolumeUp * -100;\n      }\n\n      yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2); // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n      var yesterdayVolIncreaseDown = 0;\n\n      if (volumeYesterdayDown > avgVolumeDown) {\n        let increase = volumeYesterdayDown - avgVolumeDown;\n        yesterdayVolIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeYesterdayDown;\n        yesterdayVolIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2); // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n      var changeDownAdjusted = changeDown;\n\n      if (changeDownAdjusted < 0) {\n        changeDownAdjusted = changeDownAdjusted * -1;\n        changeDownAdjusted = changeDownAdjusted.toFixed(2);\n      } // NaN CHECK ----------------------------------------\n\n\n      if (isNaN(yesterdayVolIncreaseDown)) {\n        yesterdayVolIncreaseDown = \"No Data\";\n      }\n\n      if (isNaN(yesterdayVolIncreaseUp)) {\n        yesterdayVolIncreaseUp = \"No Data\";\n      } // ADJUST TO POSITIVE\n\n\n      if (stochasticDUp < 0) {\n        stochasticDUp = stochasticDUp * -1;\n      }\n\n      if (stochasticKUp < 0) {\n        stochasticKUp = stochasticKUp * -1;\n      }\n\n      if (stochasticDDown < 0) {\n        stochasticDDown = stochasticDDown * -1;\n      }\n\n      if (stochasticKDown < 0) {\n        stochasticKDown = stochasticKDown * -1;\n      } // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n\n\n      if (arrUp[i].avgVolumeUp == undefined) {\n        arrUp[i].avgVolumeUp = \"No Data\";\n      }\n\n      if (arrDown[i].avgVolumeDown == undefined) {\n        arrDown[i].avgVolumeDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeUp == undefined) {\n        arrUp[i].volumeUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeDown == undefined) {\n        arrDown[i].volumeDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeIncreaseUp == undefined) {\n        arrUp[i].volumeIncreaseUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeIncreaseDown == undefined) {\n        arrDown[i].volumeIncreaseDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeYesterdayUp == undefined) {\n        arrUp[i].volumeYesterdayUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeYesterdayDown == undefined) {\n        arrDown[i].volumeYesterdayDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaFiveTeenUp == undefined) {\n        arrUp[i].smaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaFiveTeenDown == undefined) {\n        arrDown[i].smaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaTwentyUp == undefined) {\n        arrUp[i].smaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaTwentyDown == undefined) {\n        arrDown[i].smaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaThirtyUp == undefined) {\n        arrUp[i].smaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaThirtyDown == undefined) {\n        arrDown[i].smaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaFiftyUp == undefined) {\n        arrUp[i].smaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaFiftyDown == undefined) {\n        arrDown[i].smaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaOneHunUp == undefined) {\n        arrUp[i].smaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaOneHunDown == undefined) {\n        arrDown[i].smaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaTwoHunUp == undefined) {\n        arrUp[i].smaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaTwoHunDown == undefined) {\n        arrDown[i].smaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaEightUp == undefined) {\n        arrUp[i].emaEightUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaEightDown == undefined) {\n        arrDown[i].emaEightDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwelveUp == undefined) {\n        arrUp[i].emaTwelveUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwelveDown == undefined) {\n        arrDown[i].emaTwelveDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwentyUp == undefined) {\n        arrUp[i].emaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwentyDown == undefined) {\n        arrDown[i].emaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwentySixUp == undefined) {\n        arrUp[i].emaTwentySixUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwentySixDown == undefined) {\n        arrDown[i].emaTwentySixDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaFiftyUp == undefined) {\n        arrUp[i].emaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaFiftyDown == undefined) {\n        arrDown[i].emaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwoHunUp == undefined) {\n        arrUp[i].emaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwoHunDown == undefined) {\n        arrDown[i].emaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaFiveTeenUp == undefined) {\n        arrUp[i].wmaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaFiveTeenDown == undefined) {\n        arrDown[i].wmaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaTwentyUp == undefined) {\n        arrUp[i].wmaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaTwentyDown == undefined) {\n        arrDown[i].wmaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaThirtyUp == undefined) {\n        arrUp[i].wmaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaThirtyDown == undefined) {\n        arrDown[i].wmaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaFiftyUp == undefined) {\n        arrUp[i].wmaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaFiftyDown == undefined) {\n        arrDown[i].wmaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaOneHunUp == undefined) {\n        arrUp[i].wmaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaOneHunDown == undefined) {\n        arrDown[i].wmaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaTwoHunUp == undefined) {\n        arrUp[i].wmaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaTwoHunDown == undefined) {\n        arrDown[i].wmaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaFiveTeenUp == undefined) {\n        arrUp[i].vwmaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaFiveTeenDown == undefined) {\n        arrDown[i].vwmaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaTwentyUp == undefined) {\n        arrUp[i].vwmaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaTwentyDown == undefined) {\n        arrDown[i].vwmaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaThirtyUp == undefined) {\n        arrUp[i].vwmaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaThirtyDown == undefined) {\n        arrDown[i].vwmaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaFiftyUp == undefined) {\n        arrUp[i].vwmaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaFiftyDown == undefined) {\n        arrDown[i].vwmaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaOneHunUp == undefined) {\n        arrUp[i].vwmaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaOneHunDown == undefined) {\n        arrDown[i].vwmaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaTwoHunUp == undefined) {\n        arrUp[i].vwmaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaTwoHunDown == undefined) {\n        arrDown[i].vwmaTwoHunDown = \"No Data\";\n      }\n\n      if (arrDown[i].vwapDown == undefined) {\n        arrDown[i].vwapDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwapUp == undefined) {\n        arrUp[i].vwapUp = \"No Data\";\n      }\n\n      if (arrDown[i].macdDown == undefined) {\n        arrDown[i].macdDown = \"No Data\";\n      }\n\n      if (arrUp[i].macdUp == undefined) {\n        arrUp[i].macdUp = \"No Data\";\n      }\n\n      if (arrDown[i].rsiDown == undefined) {\n        arrDown[i].rsiDown = \"No Data\";\n      }\n\n      if (arrUp[i].rsiUp == undefined) {\n        arrUp[i].rsiUp = \"No Data\";\n      }\n\n      if (arrDown[i].cciDown == undefined) {\n        arrDown[i].cciDown = \"No Data\";\n      }\n\n      if (arrUp[i].cciUp == undefined) {\n        arrUp[i].cciUp = \"No Data\";\n      }\n\n      if (arrDown[i].williamsRDown == undefined) {\n        arrDown[i].williamsRDown = \"No Data\";\n      }\n\n      if (arrUp[i].williamsRUp == undefined) {\n        arrUp[i].williamsRUp = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticKUp == undefined) {\n        arrUp[i].stochasticKUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticKDown == undefined) {\n        arrDown[i].stochasticKDown = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticDUp == undefined) {\n        arrUp[i].stochasticDUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticDDown == undefined) {\n        arrDown[i].stochasticDDown = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticSignalUp == undefined) {\n        arrUp[i].stochasticSignalUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticSignalDown == undefined) {\n        arrDown[i].stochasticSignalDown = \"No Data\";\n      }\n\n      if (arrDown[i].bbMiddleDown == undefined) {\n        arrDown[i].bbMiddleDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbMiddleUp == undefined) {\n        arrUp[i].bbMiddleUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbLowerDown == undefined) {\n        arrDown[i].bbLowerDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbLowerUp == undefined) {\n        arrUp[i].bbLowerUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbUpperDown == undefined) {\n        arrDown[i].bbUpperDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbUpperUp == undefined) {\n        arrUp[i].bbUpperUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbPercentDown == undefined) {\n        arrDown[i].bbPercentDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbPercentUp == undefined) {\n        arrUp[i].bbPercentUp = \"No Data\";\n      }\n\n      if (arrDown[i].macdHistogramDown == undefined) {\n        arrDown[i].macdHistogramDown = \"No Data\";\n      }\n\n      if (arrDown[i].macdSignalLineDown == undefined) {\n        arrDown[i].macdSignalLineDown = \"No Data\";\n      }\n\n      if (arrUp[i].macdHistogramUp == undefined) {\n        arrUp[i].macdHistogramUp = \"No Data\";\n      }\n\n      if (arrUp[i].macdSignalLineUp == undefined) {\n        arrUp[i].macdSignalLineUp = \"No Data\";\n      }\n\n      if (arrUp[i].symbolUp == undefined) {\n        arrUp[i].symbolUp = \"No Data\";\n      }\n\n      if (arrDown[i].symbolDown == undefined) {\n        arrDown[i].symbolDown = \"No Data\";\n      }\n\n      arrUp[i].volumeIncreaseToday = volumeIncreaseUp;\n      arrUp[i].volumeIncreaseYesterday = yesterdayVolIncreaseUp;\n      arrDown[i].volumeIncreaseToday = volumeIncreaseDown;\n      arrDown[i].volumeIncreaseYesterday = yesterdayVolIncreaseDown;\n    }\n\n    for (let i = 0; i < arrUp.length; i++) {\n      // // UPPER ------------------------------------------------------------------------------\n      arrUp[i].symbol = arrUp[i].symbolUp;\n      delete arrUp[i].symbolUp;\n      arrUp[i].change = arrUp[i].changeUp;\n      delete arrUp[i].changeUp;\n      arrUp[i].avgVolume = arrUp[i].avgVolumeUp;\n      delete arrUp[i].avgVolumeUp;\n      arrUp[i].changesPercentage = arrUp[i].changesPercentageUp;\n      delete arrUp[i].changesPercentageUp;\n      arrUp[i].emaEight = arrUp[i].emaEightUp;\n      delete arrUp[i].emaEightUp;\n      arrUp[i].emaTwelve = arrUp[i].emaTwelveUp;\n      delete arrUp[i].emaTwelveUp;\n      arrUp[i].emaTwenty = arrUp[i].emaTwentyUp;\n      delete arrUp[i].emaTwentyUp;\n      arrUp[i].emaTwentySix = arrUp[i].emaTwentySixUp;\n      delete arrUp[i].emaTwentySixUp;\n      arrUp[i].emaFifty = arrUp[i].emaFiftyUp;\n      delete arrUp[i].emaFiftyUp;\n      arrUp[i].emaTwoHun = arrUp[i].emaTwoHunUp;\n      delete arrUp[i].emaTwoHunUp;\n      arrUp[i].macd = arrUp[i].macdUp;\n      delete arrUp[i].macdUp;\n      arrUp[i].macdHistogram = arrUp[i].macdHistogramUp;\n      delete arrUp[i].macdHistogramUp;\n      arrUp[i].macdSignalLine = arrUp[i].macdSignalLineUp;\n      delete arrUp[i].macdSignalLineUp;\n      arrUp[i].price = arrUp[i].priceUp;\n      delete arrUp[i].priceUp;\n      arrUp[i].rsi = arrUp[i].rsiUp;\n      delete arrUp[i].rsiUp;\n      arrUp[i].smaFiveTeen = arrUp[i].smaFiveTeenUp;\n      delete arrUp[i].smaFiveTeenUp;\n      arrUp[i].smaTwenty = arrUp[i].smaTwentyUp;\n      delete arrUp[i].smaTwentyUp;\n      arrUp[i].smaThirty = arrUp[i].smaThirtyUp;\n      delete arrUp[i].smaThirtyUp;\n      arrUp[i].smaFifty = arrUp[i].smaFiftyUp;\n      delete arrUp[i].smaFiftyUp;\n      arrUp[i].smaOneHun = arrUp[i].smaOneHunUp;\n      delete arrUp[i].smaOneHunUp;\n      arrUp[i].smaTwoHun = arrUp[i].smaTwoHunUp;\n      delete arrUp[i].smaTwoHunUp;\n      arrUp[i].volume = arrUp[i].volumeUp;\n      delete arrUp[i].volumeUp;\n      arrUp[i].volumeYesterday = arrUp[i].volumeYesterdayUp;\n      delete arrUp[i].volumeYesterdayUp;\n      arrUp[i].vwap = arrUp[i].vwapUp;\n      delete arrUp[i].vwapUp;\n      arrUp[i].stochasticD = arrUp[i].stochasticDUp;\n      delete arrUp[i].stochasticDUp;\n      arrUp[i].stochasticK = arrUp[i].stochasticKUp;\n      delete arrUp[i].stochasticKUp;\n      arrUp[i].stochasticSignal = arrUp[i].stochasticSignalUp;\n      delete arrUp[i].stochasticSignalUp;\n      arrUp[i].wmaFiveTeen = arrUp[i].wmaFiveTeenUp;\n      delete arrUp[i].wmaFiveTeenUp;\n      arrUp[i].wmaTwenty = arrUp[i].wmaTwentyUp;\n      delete arrUp[i].wmaTwentyUp;\n      arrUp[i].wmaThirty = arrUp[i].wmaThirtyUp;\n      delete arrUp[i].wmaThirtyUp;\n      arrUp[i].wmaFifty = arrUp[i].wmaFiftyUp;\n      delete arrUp[i].wmaFiftyUp;\n      arrUp[i].wmaOneHun = arrUp[i].wmaOneHunUp;\n      delete arrUp[i].wmaOneHunUp;\n      arrUp[i].wmaTwoHun = arrUp[i].wmaTwoHunUp;\n      delete arrUp[i].wmaTwoHunUp;\n      arrUp[i].vwmaFiveTeen = arrUp[i].vwmaFiveTeenUp;\n      delete arrUp[i].vwmaFiveTeenUp;\n      arrUp[i].vwmaTwenty = arrUp[i].vwmaTwentyUp;\n      delete arrUp[i].vwmaTwentyUp;\n      arrUp[i].vwmaThirty = arrUp[i].vwmaThirtyUp;\n      delete arrUp[i].vwmaThirtyUp;\n      arrUp[i].vwmaFifty = arrUp[i].vwmaFiftyUp;\n      delete arrUp[i].vwmaFiftyUp;\n      arrUp[i].vwmaOneHun = arrUp[i].vwmaOneHunUp;\n      delete arrUp[i].vwmaOneHunUp;\n      arrUp[i].vwmaTwoHun = arrUp[i].vwmaTwoHunUp;\n      delete arrUp[i].vwmaTwoHunUp;\n      arrUp[i].williamsR = arrUp[i].williamsRUp;\n      delete arrUp[i].williamsRUp;\n      arrUp[i].cciTwenty = arrUp[i].cciUp;\n      delete arrUp[i].cciUp;\n      arrUp[i].bbUpper = arrUp[i].bbUpperUp;\n      delete arrUp[i].bbUpperUp;\n      arrUp[i].bbLower = arrUp[i].bbLowerUp;\n      delete arrUp[i].bbLowerUp;\n      arrUp[i].bbMiddle = arrUp[i].bbMiddleUp;\n      delete arrUp[i].bbMiddleUp;\n      arrUp[i].bbPercent = arrUp[i].bbPercentUp;\n      delete arrUp[i].bbPercentUp;\n\n      if (arrUp[i].bbPercent == undefined) {\n        arrUp[i].bbPercent = 'No Data';\n      }\n    }\n\n    for (let i = 0; i < arrDown.length; i++) {\n      // DOWNERS ------------------------------------------------------------------------------\n      arrDown[i].symbol = arrDown[i].symbolDown;\n      delete arrDown[i].symbolDown;\n      arrDown[i].change = arrDown[i].changeDown;\n      delete arrDown[i].changeDown;\n      arrDown[i].avgVolume = arrDown[i].avgVolumeDown;\n      delete arrDown[i].avgVolumeDown;\n      arrDown[i].changesPercentage = arrDown[i].changesPercentageDown;\n      delete arrDown[i].changesPercentageDown;\n      arrDown[i].emaEight = arrDown[i].emaEightDown;\n      delete arrDown[i].emaEightDown;\n      arrDown[i].emaTwelve = arrDown[i].emaTwelveDown;\n      delete arrDown[i].emaTwelveDown;\n      arrDown[i].emaTwenty = arrDown[i].emaTwentyDown;\n      delete arrDown[i].emaTwentyDown;\n      arrDown[i].emaTwentySix = arrDown[i].emaTwentySixDown;\n      delete arrDown[i].emaTwentySixDown;\n      arrDown[i].emaFifty = arrDown[i].emaFiftyDown;\n      delete arrDown[i].emaFiftyDown;\n      arrDown[i].emaTwoHun = arrDown[i].emaTwoHunDown;\n      delete arrDown[i].emaTwoHunDown;\n      arrDown[i].macd = arrDown[i].macdDown;\n      delete arrDown[i].macdDown;\n      arrDown[i].macdHistogram = arrDown[i].macdHistogramDown;\n      delete arrDown[i].macdHistogramDown;\n      arrDown[i].macdSignalLine = arrDown[i].macdSignalLineDown;\n      delete arrDown[i].macdSignalLineDown;\n      arrDown[i].price = arrDown[i].priceDown;\n      delete arrDown[i].priceDown;\n      arrDown[i].rsi = arrDown[i].rsiDown;\n      delete arrDown[i].rsiDown;\n      arrDown[i].smaFiveTeen = arrDown[i].smaFiveTeenDown;\n      delete arrDown[i].smaFiveTeenDown;\n      arrDown[i].smaTwenty = arrDown[i].smaTwentyDown;\n      delete arrDown[i].smaTwentyDown;\n      arrDown[i].smaThirty = arrDown[i].smaThirtyDown;\n      delete arrDown[i].smaThirtyDown;\n      arrDown[i].smaFifty = arrDown[i].smaFiftyDown;\n      delete arrDown[i].smaFiftyDown;\n      arrDown[i].smaOneHun = arrDown[i].smaOneHunDown;\n      delete arrDown[i].smaOneHunDown;\n      arrDown[i].smaTwoHun = arrDown[i].smaTwoHunDown;\n      delete arrDown[i].smaTwoHunDown;\n      arrDown[i].volume = arrDown[i].volumeDown;\n      delete arrDown[i].volumeDown;\n      arrDown[i].volumeYesterday = arrDown[i].volumeYesterdayDown;\n      delete arrDown[i].volumeYesterdayDown;\n      arrDown[i].vwap = arrDown[i].vwapDown;\n      delete arrDown[i].vwapDown;\n      arrDown[i].stochasticD = arrDown[i].stochasticDDown;\n      delete arrDown[i].stochasticDDown;\n      arrDown[i].stochasticK = arrDown[i].stochasticKDown;\n      delete arrDown[i].stochasticKDown;\n      arrDown[i].stochasticSignal = arrDown[i].stochasticSignalDown;\n      delete arrDown[i].stochasticSignalDown;\n      arrDown[i].wmaFiveTeen = arrDown[i].wmaFiveTeenDown;\n      delete arrDown[i].wmaFiveTeenDown;\n      arrDown[i].wmaTwenty = arrDown[i].wmaTwentyDown;\n      delete arrDown[i].wmaTwentyDown;\n      arrDown[i].wmaThirty = arrDown[i].wmaThirtyDown;\n      delete arrDown[i].wmaThirtyDown;\n      arrDown[i].wmaFifty = arrDown[i].wmaFiftyDown;\n      delete arrDown[i].wmaFiftyDown;\n      arrDown[i].wmaOneHun = arrDown[i].wmaOneHunDown;\n      delete arrDown[i].wmaOneHunDown;\n      arrDown[i].wmaTwoHun = arrDown[i].wmaTwoHunDown;\n      delete arrDown[i].wmaTwoHunDown;\n      arrDown[i].vwmaFiveTeen = arrDown[i].vwmaFiveTeenDown;\n      delete arrDown[i].vwmaFiveTeenDown;\n      arrDown[i].vwmaTwenty = arrDown[i].vwmaTwentyDown;\n      delete arrDown[i].vwmaTwentyDown;\n      arrDown[i].vwmaThirty = arrDown[i].vwmaThirtyDown;\n      delete arrDown[i].vwmaThirtyDown;\n      arrDown[i].vwmaFifty = arrDown[i].vwmaFiftyDown;\n      delete arrDown[i].vwmaFiftyDown;\n      arrDown[i].vwmaOneHun = arrDown[i].vwmaOneHunDown;\n      delete arrDown[i].vwmaOneHunDown;\n      arrDown[i].vwmaTwoHun = arrDown[i].vwmaTwoHunDown;\n      delete arrDown[i].vwmaTwoHunDown;\n      arrDown[i].williamsR = arrDown[i].williamsRDown;\n      delete arrDown[i].williamsRDown;\n      arrDown[i].cciTwenty = arrDown[i].cciDown;\n      delete arrDown[i].cciDown;\n      arrDown[i].bbUpper = arrDown[i].bbUpperDown;\n      delete arrDown[i].bbUpperDown;\n      arrDown[i].bbLower = arrDown[i].bbLowerDown;\n      delete arrDown[i].bbLowerDown;\n      arrDown[i].bbMiddle = arrDown[i].bbMiddleDown;\n      delete arrDown[i].bbMiddleDown;\n      arrDown[i].bbPercent = arrDown[i].bbPercentDown;\n      delete arrDown[i].bbPercentDown;\n    }\n\n    let finalStocksArr = arrDown.concat(arrUp);\n    return finalStocksArr;\n  } //----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\n\n\n  const returnedData = await filterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n  return returnedData;\n};","map":{"version":3,"sources":["/Users/austinolijar/Desktop/MERN-DeadCat/dead-cat/src/JS/ApiFunction.js"],"names":["handleDate","nyseFetch","nasdaqFetch","technicalAnalysis","dateObj","today","year","date","month","minutes","hour","time","timeNum","marketDay","newDateString","todayDate","console","log","nasdaqMasterKey","nyseMasterKey","filterTradableSymbols","arr1","arr2","compileCallback","nyseHolderDown","nyseHolderUp","nasdaqHolderDown","nasdaqHolderUp","res","fetch","dataNyse","json","i","length","changesPercentage","indexOf","symbol","price","push","resTwo","dataNas","e","returnedData","technicalIndicators","compileStocks","arr3","arr4","callback","finalChartFatDown","finalChartFatUp","finalChart","combinedStockDrop","concat","combinedStockUp","keys","filter","stock","match","sort","a","b","holderObjDown","avgVolume","bbLower","bbMiddle","bbPercent","bbUpper","cciTwenty","change","dayHigh","dayLow","earningsAnnouncement","emaEight","emaFifty","emaTwelve","emaTwenty","emaTwentySix","emaTwoHun","eps","exchange","macd","macdHistogram","macdSignalLine","marketCap","name","open","pe","previousClose","priceAvg50","priceAvg200","rsi","sharesOutstanding","smaFifty","smaFiveTeen","smaOneHun","smaThirty","smaTwenty","smaTwoHun","stochasticD","stochasticK","stochasticSignal","timestamp","volume","vwap","vwmaFifty","vwmaFiveTeen","vwmaOneHun","vwmaThirty","vwmaTwenty","vwmaTwoHun","williamsR","wmaFifty","wmaFiveTeen","wmaOneHun","wmaThirty","wmaTwenty","wmaTwoHun","yearHigh","yearLow","yesterdayVolume","holderObjUp","slimChartDown","unshift","slimChartUp","filterUpDownStocks","smaFunction","chartArr","dataPull","newestPull","num","culSMA","fiveTeenSMA","twentySMA","thirtySMA","fiftySMA","hunSMA","twoHunSMA","todayPricePull","historical","close","smaFiveResult","toFixed","smaTwentyResult","smaThirtyResult","smaFiftyResult","smaOneHunResult","smaTwoHunResult","wmaFunction","weight","wmaInterval","iWma","wmaCul","vwmaFunction","newPrice","newVol","volCul","totalCul","undefined","isNaN","emaFunction","macdCallBack","prevDayEmaSub","arrEma","macdTwelve","macdTwentySix","subEMA","finalSubEma","derp","pop","finalEma","macdFunction","averageMacd","iMacd","averageSum","reduce","finalAverageMacd","histogram","rsiFunction","iRSI","iRSIAdjusted","recentUpper","recentDowner","upMove","downMove","pastDownPeriod","pastUpPeriod","averageUp","averageDown","stochOsc1433Function","iSO","soLowHolder","soHighHolder","highestHigh","lowestLow","topForm","bottomForm","topFormTwo","bottomFormTwo","topFormThree","bottomFormThree","signalLineHolder","low","high","Math","max","min","sumTop","sumBottom","slowD","sumStochD","smaD","williamsRFunction","highs","lows","williams","cciFunction","tpvCul","tpv","tpvMa","tpvCurrent","recentTpv","partOne","meanD","map","x","meanDMap","abs","meanDSum","meanDiv","partTwo","cci","bollingerBandsFunction","smaCul","closeHolder","closeP","priceAdj","priceAdjAbs","priceAdjSqrt","partOneDev","partTwoDev","standardDev","sqrt","vwapFunction","dayLengthPeriod","volumeCul","tempVWAP","slice","vwapFinal","setVolume","finalArr","j","resSMA","dataSMA","Object","resOscPulled","dataRecentPulled","resVWAP","dataVWAP","buildIt","stocksUp","stocksDown","symbolUp","changeUp","avgVolumeUp","changesPercentageUp","emaEightUp","emaTwelveUp","emaTwentyUp","emaTwentySixUp","emaFiftyUp","emaTwoHunUp","macdUp","macdHistogramUp","macdSignalLineUp","priceUp","rsiUp","smaFiveTeenUp","smaTwentyUp","smaThirtyUp","smaFiftyUp","smaOneHunUp","smaTwoHunUp","volumeUp","volumeYesterdayUp","vwapUp","stochasticDUp","stochasticKUp","stochasticSignalUp","wmaFiveTeenUp","wmaTwentyUp","wmaThirtyUp","wmaFiftyUp","wmaOneHunUp","wmaTwoHunUp","vwmaFiveTeenUp","vwmaTwentyUp","vwmaThirtyUp","vwmaFiftyUp","vwmaOneHunUp","vwmaTwoHunUp","williamsRUp","cciUp","bbUpperUp","bbLowerUp","bbMiddleUp","bbPercentUp","symbolDown","changeDown","avgVolumeDown","changesPercentageDown","emaEightDown","emaTwelveDown","emaTwentyDown","emaTwentySixDown","emaFiftyDown","emaTwoHunDown","macdDown","macdHistogramDown","macdSignalLineDown","priceDown","rsiDown","smaFiveTeenDown","smaTwentyDown","smaThirtyDown","smaFiftyDown","smaOneHunDown","smaTwoHunDown","volumeDown","volumeYesterdayDown","vwapDown","stochasticDDown","stochasticKDown","stochasticSignalDown","wmaFiveTeenDown","wmaTwentyDown","wmaThirtyDown","wmaFiftyDown","wmaOneHunDown","wmaTwoHunDown","vwmaFiveTeenDown","vwmaTwentyDown","vwmaThirtyDown","vwmaFiftyDown","vwmaOneHunDown","vwmaTwoHunDown","williamsRDown","cciDown","bbUpperDown","bbLowerDown","bbMiddleDown","bbPercentDown","arrUp","arrDown","volumeIncreaseUp","increase","decrease","volumeIncreaseDown","yesterdayVolIncreaseUp","yesterdayVolIncreaseDown","changeDownAdjusted","volumeIncreaseToday","volumeIncreaseYesterday","volumeYesterday","finalStocksArr"],"mappings":"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","sourcesContent":["import { handleDate } from \"./functions/handleDate\";\nimport { nyseFetch } from \"./functions/nyseFetch\";\nimport { nasdaqFetch } from \"./functions/nasdaqFetch\";\n\nexport const technicalAnalysis = async () => {\n  const dateObj = {\n    today: null,\n    year: null,\n    date: null,\n    month: null,\n    minutes: null,\n    hour: null,\n    time: null,\n    timeNum: null,\n    marketDay: null,\n    newDateString: null,\n    todayDate: null,\n  }\n\n  // SET DATE\n  await handleDate(dateObj)\n  console.log(dateObj)\n// ---------------------- KEYS -------------------------------------\n\nconst nasdaqMasterKey = [\n  \"ADMS\",\n  \"LFLY\",\n  \"NEPT\",\n  \"STBX\",\n  \"HLVX\",\n  \"ZFOX\",\n  \"NUTX\",\n  \"LQDA\",\n  \"EVBG\",\n  \"SKYX\",\n  \"SOND\",\n  \"JZ\",\n  \"MITK\",\n  \"CDLX\",\n  \"GCT\",\n  \"UDMY\",\n  \"SIGA\",\n  \"RYTM\",\n  \"FAZE\",\n  \"GSUN\",\n  \"VTNR\",\n  \"PGY\",\n  \"ALVO\",\n  \"DRTS\",\n  \"RADA\",\n  \"SYM\",\n  \"VSCA\",\n  \"INTR\",\n  \"GRNA\",\n  \"IONR\",\n  \"BLTE\",\n  \"ALT\",\n  \"MSPR\",\n  \"SATL\",\n  \"LYT\",\n  \"SOUN\",\n  \"MKD\",\n  \"TROO\",\n  \"CISO\",\n  \"BGXX\",\n  \"PEAR\",\n  \"ISPO\",\n  \"SKIN\",\n  \"BLZE\",\n  \"CPTN\",\n  \"NN\",\n  \"FRSH\",\n  \"HLG\",\n  \"FATH\",\n  \"MF\",\n  \"DCFC\",\n  \"TH\",\n  \"FOLD\",\n  \"TKLF\",\n  \"VORB\",\n  \"MIGI\",\n  \"AURA\",\n  \"TSVT\",\n  \"RICK\",\n  \"RXST\",\n  \"CDEV\",\n  \"ADSE\",\n  \"BIOX\",\n  \"RGC\",\n  \"NAKD\",\n  \"AEHR\",\n  \"NEGG\",\n  \"LILM\",\n  \"AUR\",\n  \"CGNT\",\n  \"QFIN\",\n  \"INVE\",\n  \"HLTH\",\n  \"SPT\",\n  \"AUID\",\n  \"PRPL\",\n  \"BRZE\",\n  \"IREN\",\n  \"ARCT\",\n  \"QSI\",\n  \"LIAN\",\n  \"NEXT\",\n  \"THRX\",\n  \"FCUV\",\n  \"SLDP\",\n  \"ESSC\",\n  \"AFMD\",\n  \"PNT\",\n  \"VBIV\",\n  \"ARHS\",\n  \"INDI\",\n  \"ADAG\",\n  \"LWLG\",\n  \"RAPT\",\n  \"BZFD\",\n  \"AERI\",\n  \"CVT\",\n  \"TGLS\",\n  \"GRAB\",\n  \"NTLA\",\n  \"MARA\",\n  \"VAXX\",\n  \"TRUP\",\n  \"ADTH\",\n  \"KRYS\",\n  \"IMGO\",\n  \"TACO\",\n  \"MMAT\",\n  \"ELYM\",\n  \"SNCE\",\n  \"ENJY\",\n  \"FFIE\",\n  \"BIRD\",\n  \"MEIP\",\n  \"WEJO\",\n  \"ARQQ\",\n  \"PRDS\",\n  \"AVDX\",\n  \"TNGX\",\n  \"AUPH\",\n  \"MNTS\",\n  \"HMTV\",\n  \"STRC\",\n  \"SEV\",\n  \"JWEL\",\n  \"URGN\",\n  \"TCMD\",\n  \"LTRY\",\n  \"COCO\",\n  \"SOPA\",\n  \"XAIR\",\n  \"GGPI\",\n  \"AVPT\",\n  \"EYPT\",\n  \"RANI\",\n  \"RMBL\",\n  \"NVTS\",\n  \"KRUS\",\n  \"AMLX\",\n  \"INKT\",\n  \"TGTX\",\n  \"RPID\",\n  \"GLBE\",\n  \"MYPS\",\n  \"ARRY\",\n  \"AERC\",\n  \"PETZ\",\n  \"ABSI\",\n  \"FIVN\",\n  \"AMEH\",\n  \"HEPS\",\n  \"DZSI\",\n  \"XLO\",\n  \"WVE\",\n  \"UONE\",\n  \"SMLR\",\n  \"SAVA\",\n  \"VERA\",\n  \"TRDA\",\n  \"MTTR\",\n  \"CDNA\",\n  \"VUZI\",\n  \"FLNC\",\n  \"OSTK\",\n  \"AIP\",\n  \"NOTV\",\n  \"LIDR\",\n  \"ENPH\",\n  \"MARK\",\n  \"XELA\",\n  \"DLBE\",\n  \"GDYN\",\n  \"ALTM\",\n  \"DWAC\",\n  \"ROIV\",\n  \"AGEN\",\n  \"RETA\",\n  \"SGOC\",\n  \"CMBM\",\n  \"PTLO\",\n  \"ZGNX\",\n  \"ALPP\",\n  \"SDIG\",\n  \"RSVR\",\n  \"GPP\",\n  \"AKTS\",\n  \"CELU\",\n  \"RDUS\",\n  \"VIEW\",\n  \"HPK\",\n  \"ATER\",\n  \"ZY\",\n  \"EVER\",\n  \"RELY\",\n  \"MNKD\",\n  \"PROG\",\n  \"DAVE\",\n  \"FCEL\",\n  \"JSPR\",\n  \"LUCD\",\n  \"ATAI\",\n  \"PAVM\",\n  \"BTMD\",\n  \"BTAI\",\n  \"RLAY\",\n  \"GTLB\",\n  \"AXSM\",\n  \"NRXP\",\n  \"ORGO\",\n  \"RVNC\",\n  \"ACMR\",\n  \"RMNI\",\n  \"JANX\",\n  \"ANY\",\n  \"KNBE\",\n  \"OCUL\",\n  \"EFTR\",\n  \"KPLT\",\n  \"FLXN\",\n  \"PTGX\",\n  \"CIFR\",\n  \"TRHC\",\n  \"PVAC\",\n  \"CLNN\",\n  \"ARQQ\",\n  \"SBTX\",\n  \"TYRA\",\n  \"OMER\",\n  \"AMTX\",\n  \"DOMO\",\n  \"CMCSA\",\n  \"RCKT\",\n  \"INTC\",\n  \"XENE\",\n  \"MU\",\n  \"AAPL\",\n  \"PRTC\",\n  \"MSFT\",\n  \"SIRI\",\n  \"CZR\",\n  \"FB\",\n  \"VIGL\",\n  \"HYPR\",\n  \"GSM\",\n  \"JD\",\n  \"AVGO\",\n  \"AMAT\",\n  \"ZNGA\",\n  \"QCOM\",\n  \"CSCO\",\n  \"GRPN\",\n  \"GERN\",\n  \"GILD\",\n  \"ATVI\",\n  \"VEON\",\n  \"FLEX\",\n  \"FOXA\",\n  \"CVLT\",\n  \"MAT\",\n  \"CORZ\",\n  \"PYPL\",\n  \"MDLZ\",\n  \"NVDA\",\n  \"WDC\",\n  \"FSRD\",\n  \"ON\",\n  \"FITB\",\n  \"PTEN\",\n  \"JBLU\",\n  \"EBAY\",\n  \"HBAN\",\n  \"MRVL\",\n  \"WBA\",\n  \"TXN\",\n  \"OAS\",\n  \"ETSY\",\n  \"AMZN\",\n  \"NFLX\",\n  \"ENTG\",\n  \"CSX\",\n  \"WYNN\",\n  \"FOX\",\n  \"ZION\",\n  \"SYNH\",\n  \"PAYX\",\n  \"BIIB\",\n  \"SBUX\",\n  \"ADSK\",\n  \"BIDU\",\n  \"MLCO\",\n  \"NTRS\",\n  \"UAL\",\n  \"KHC\",\n  \"AAL\",\n  \"NWL\",\n  \"XRAY\",\n  \"TMUS\",\n  \"MOMO\",\n  \"STX\",\n  \"ADBE\",\n  \"TSLA\",\n  \"BUFF\",\n  \"LNT\",\n  \"LKQ\",\n  \"CENX\",\n  \"IMGN\",\n  \"LULU\",\n  \"STLD\",\n  \"PEP\",\n  \"CMPX\",\n  \"COST\",\n  \"IMMP\",\n  \"ALTR\",\n  \"ALXN\",\n  \"ZLAB\",\n  \"ADP\",\n  \"MNST\",\n  \"RIGL\",\n  \"LRCX\",\n  \"NXPI\",\n  \"ENDP\",\n  \"YNDX\",\n  \"GOOGL\",\n  \"CGNX\",\n  \"AMGN\",\n  \"FSLR\",\n  \"SLM\",\n  \"ODP\",\n  \"TLGT\",\n  \"PDCO\",\n  \"Z\",\n  \"CME\",\n  \"PPBI\",\n  \"EXC\",\n  \"CNDT\",\n  \"WEN\",\n  \"CTSH\",\n  \"HOLX\",\n  \"CTXS\",\n  \"SABR\",\n  \"DISH\",\n  \"SKYT\",\n  \"XEL\",\n  \"NTNX\",\n  \"HQY\",\n  \"IGIC\",\n  \"ARCC\",\n  \"SFIX\",\n  \"NWS\",\n  \"NVAX\",\n  \"DXCM\",\n  \"NTCT\",\n  \"NYMT\",\n  \"NAVI\",\n  \"TTWO\",\n  \"KLAC\",\n  \"GOOG\",\n  \"HSIC\",\n  \"CFVI\",\n  \"MEOH\",\n  \"GIII\",\n  \"SFM\",\n  \"QRVO\",\n  \"DOX\",\n  \"HMHC\",\n  \"NMRK\",\n  \"OPK\",\n  \"NUAN\",\n  \"GT\",\n  \"RAIN\",\n  \"EA\",\n  \"GPRO\",\n  \"VRTX\",\n  \"YY\",\n  \"FWONK\",\n  \"HOMB\",\n  \"NKTR\",\n  \"CERN\",\n  \"AKAM\",\n  \"CDNS\",\n  \"MDRX\",\n  \"ISBC\",\n  \"ORMP\",\n  \"NTAP\",\n  \"BBBY\",\n  \"MAR\",\n  \"VIAV\",\n  \"SHOO\",\n  \"CONE\",\n  \"RUN\",\n  \"HA\",\n  \"PBCT\",\n  \"UCBI\",\n  \"LBTYA\",\n  \"CBSH\",\n  \"TSCO\",\n  \"TER\",\n  \"TRUE\",\n  \"URBN\",\n  \"ROKU\",\n  \"CTRE\",\n  \"MCHP\",\n  \"MYNZ\",\n  \"KLIC\",\n  \"TEAM\",\n  \"HIMX\",\n  \"FANG\",\n  \"TROW\",\n  \"ARLP\",\n  \"BLMN\",\n  \"PPC\",\n  \"GNTX\",\n  \"EMBK\",\n  \"INTU\",\n  \"PCAR\",\n  \"XLNX\",\n  \"JBHT\",\n  \"EXPD\",\n  \"EXPE\",\n  \"WERN\",\n  \"HCSG\",\n  \"DLTR\",\n  \"MTSI\",\n  \"BGCP\",\n  \"SWVL\",\n  \"SWKS\",\n  \"IIVI\",\n  \"CROX\",\n  \"ACHC\",\n  \"MLHR\",\n  \"QRTEA\",\n  \"TRIP\",\n  \"FAST\",\n  \"EWBC\",\n  \"SGH\",\n  \"ALNY\",\n  \"BMRN\",\n  \"CASA\",\n  \"AGNC\",\n  \"TXMD\",\n  \"INSM\",\n  \"BGFV\",\n  \"LAMR\",\n  \"EXEL\",\n  \"HZNP\",\n  \"ADI\",\n  \"OLED\",\n  \"EYE\",\n  \"SSNC\",\n  \"CHTR\",\n  \"ACAD\",\n  \"VLY\",\n  \"VOD\",\n  \"EXTR\",\n  \"FEYE\",\n  \"VECO\",\n  \"ERIC\",\n  \"MANH\",\n  \"TILE\",\n  \"CAKE\",\n  \"CAR\",\n  \"SPLK\",\n  \"VRSN\",\n  \"XOG\",\n  \"BZUN\",\n  \"NWSA\",\n  \"ARNA\",\n  \"ULTA\",\n  \"JACK\",\n  \"CPRT\",\n  \"CLVS\",\n  \"SBRA\",\n  \"FISV\",\n  \"DXLG\",\n  \"ONB\",\n  \"ATSG\",\n  \"SPWH\",\n  \"EQIX\",\n  \"RDFN\",\n  \"ORBC\",\n  \"LIVN\",\n  \"CTAS\",\n  \"REGI\",\n  \"VRNT\",\n  \"HAS\",\n  \"HALO\",\n  \"SGMO\",\n  \"KTOS\",\n  \"BHF\",\n  \"RYAAY\",\n  \"WDAY\",\n  \"VC\",\n  \"ROIC\",\n  \"MXIM\",\n  \"CSOD\",\n  \"SIVB\",\n  \"FIVE\",\n  \"LPLA\",\n  \"SEIC\",\n  \"FORM\",\n  \"BRKS\",\n  \"HTHT\",\n  \"PENN\",\n  \"IONS\",\n  \"KRNY\",\n  \"SBAC\",\n  \"BGNE\",\n  \"WB\",\n  \"THRM\",\n  \"UMPQ\",\n  \"PNFP\",\n  \"GLPI\",\n  \"LITE\",\n  \"ROST\",\n  \"PCRX\",\n  \"CSIQ\",\n  \"ICHR\",\n  \"ILMN\",\n  \"ISRG\",\n  \"CREE\",\n  \"COHR\",\n  \"LMDX\",\n  \"FULT\",\n  \"UNIT\",\n  \"CASY\",\n  \"PODD\",\n  \"MATW\",\n  \"REGN\",\n  \"AGFY\",\n  \"MELI\",\n  \"SGMS\",\n  \"IMMR\",\n  \"MGPI\",\n  \"NTES\",\n  \"LTRPA\",\n  \"SND\",\n  \"PFG\",\n  \"STFC\",\n  \"PTC\",\n  \"CDW\",\n  \"SBGI\",\n  \"PLAY\",\n  \"WAFD\",\n  \"PETQ\",\n  \"IRDM\",\n  \"INCY\",\n  \"LBRDK\",\n  \"TRMB\",\n  \"ACGL\",\n  \"SBNY\",\n  \"GRFS\",\n  \"GOGO\",\n  \"SYNA\",\n  \"MTCH\",\n  \"XNET\",\n  \"HAIN\",\n  \"MRTX\",\n  \"ECHO\",\n  \"PDCE\",\n  \"LPSN\",\n  \"PLCE\",\n  \"SCHL\",\n  \"ADTN\",\n  \"BECN\",\n  \"BPOP\",\n  \"COMM\",\n  \"BLUE\",\n  \"WPRT\",\n  \"MASI\",\n  \"OKTA\",\n  \"BRKR\",\n  \"NBIX\",\n  \"CHKP\",\n  \"VERU\",\n  \"JAZZ\",\n  \"CMCO\",\n  \"ORLY\",\n  \"FFIV\",\n  \"PRTA\",\n  \"SCWX\",\n  \"PAAS\",\n  \"HOPE\",\n  \"MRTN\",\n  \"CRUS\",\n  \"TXRH\",\n  \"EEFT\",\n  \"CVGI\",\n  \"WWD\",\n  \"SNY\",\n  \"HOLI\",\n  \"SSRM\",\n  \"TSEM\",\n  \"DNLI\",\n  \"CHRW\",\n  \"CINC\",\n  \"SPPI\",\n  \"ASML\",\n  \"IDXX\",\n  \"SRPT\",\n  \"SGEN\",\n  \"TCBI\",\n  \"DXPE\",\n  \"NWBI\",\n  \"PSEC\",\n  \"QDEL\",\n  \"WETF\",\n  \"INVA\",\n  \"BJRI\",\n  \"JCOM\",\n  \"ZS\",\n  \"MIDD\",\n  \"RCII\",\n  \"CSGP\",\n  \"TTMI\",\n  \"ARWR\",\n  \"IAC\",\n  \"VIRT\",\n  \"UCTT\",\n  \"ANGI\",\n  \"BCOR\",\n  \"BLDR\",\n  \"CHEF\",\n  \"HUDI\",\n  \"KURA\",\n  \"GTHX\",\n  \"GPRE\",\n  \"HIBB\",\n  \"ALGN\",\n  \"LGIH\",\n  \"REG\",\n  \"NUVA\",\n  \"SWIR\",\n  \"ARAY\",\n  \"HTLD\",\n  \"VRNS\",\n  \"CINF\",\n  \"GLRE\",\n  \"RRR\",\n  \"ZG\",\n  \"FTNT\",\n  \"CLDX\",\n  \"MDCA\",\n  \"SRCL\",\n  \"RBBN\",\n  \"WTFC\",\n  \"SGRY\",\n  \"XPER\",\n  \"VG\",\n  \"GLNG\",\n  \"PETS\",\n  \"AMBA\",\n  \"AMKR\",\n  \"COUP\",\n  \"ICPT\",\n  \"PZZA\",\n  \"POOL\",\n  \"MGRC\",\n  \"FANH\",\n  \"INFN\",\n  \"MMSI\",\n  \"SREV\",\n  \"COLM\",\n  \"CCOI\",\n  \"SEDG\",\n  \"LLNW\",\n  \"PBYI\",\n  \"IRWD\",\n  \"CSGS\",\n  \"CNSL\",\n  \"CRIS\",\n  \"COLL\",\n  \"DRNA\",\n  \"BKCC\",\n  \"PACB\",\n  \"JNCE\",\n  \"MKSI\",\n  \"CDK\",\n  \"PACW\",\n  \"LOCO\",\n  \"RUSHA\",\n  \"CGEN\",\n  \"AAWW\",\n  \"WIX\",\n  \"INO\",\n  \"FOSL\",\n  \"FOXF\",\n  \"AZPN\",\n  \"IRBT\",\n  \"SBLK\",\n  \"CWST\",\n  \"UMBF\",\n  \"SOHU\",\n  \"FGEN\",\n  \"OCSL\",\n  \"HTLF\",\n  \"BLKB\",\n  \"HLIT\",\n  \"IPAR\",\n  \"CRTO\",\n  \"ZUMZ\",\n  \"BAND\",\n  \"ABMD\",\n  \"SSP\",\n  \"NDSN\",\n  \"ALSK\",\n  \"AYPR\",\n  \"FFBC\",\n  \"DLTH\",\n  \"AXTI\",\n  \"DBVT\",\n  \"BCRX\",\n  \"TOWN\",\n  \"JKHY\",\n  \"EPAY\",\n  \"VRSK\",\n  \"ICLR\",\n  \"VRA\",\n  \"OSUR\",\n  \"AVT\",\n  \"NVCR\",\n  \"PCH\",\n  \"SAFM\",\n  \"RMBS\",\n  \"TAST\",\n  \"OTEX\",\n  \"FHB\",\n  \"SANM\",\n  \"MGI\",\n  \"KOPN\",\n  \"OSBC\",\n  \"BRKL\",\n  \"SATS\",\n  \"SLGN\",\n  \"IBKR\",\n  \"ROCK\",\n  \"RNWK\",\n  \"ASTE\",\n  \"ACET\",\n  \"DMRC\",\n  \"CUTR\",\n  \"UEPS\",\n  \"AMCX\",\n  \"DIOD\",\n  \"RARE\",\n  \"INOV\",\n  \"PLYA\",\n  \"CFFN\",\n  \"HSII\",\n  \"LOPE\",\n  \"AMPL\",\n  \"SMTC\",\n  \"SCHN\",\n  \"HSON\",\n  \"UBSI\",\n  \"SMCI\",\n  \"ODFL\",\n  \"CFMS\",\n  \"WLTW\",\n  \"CDXS\",\n  \"FCFS\",\n  \"VREX\",\n  \"LSXMK\",\n  \"MSTR\",\n  \"COHU\",\n  \"OTIC\",\n  \"GRMN\",\n  \"MEDP\",\n  \"TWOU\",\n  \"ACTG\",\n  \"AMWD\",\n  \"CATY\",\n  \"COLB\",\n  \"GBT\",\n  \"MPAA\",\n  \"COWN\",\n  \"GTLS\",\n  \"SKYW\",\n  \"CONN\",\n  \"EZPW\",\n  \"MHLD\",\n  \"KPTI\",\n  \"AVID\",\n  \"SLDB\",\n  \"TBBK\",\n  \"MTRX\",\n  \"SPWR\",\n  \"SLAB\",\n  \"PEGA\",\n  \"NOVT\",\n  \"MYGN\",\n  \"AEIS\",\n  \"LHCG\",\n  \"NDAQ\",\n  \"WSFS\",\n  \"MMYT\",\n  \"UTHR\",\n  \"CALM\",\n  \"ALRM\",\n  \"MKTX\",\n  \"LSCC\",\n  \"ECPG\",\n  \"BKNG\",\n  \"CSTE\",\n  \"QNST\",\n  \"SHLD\",\n  \"SIMO\",\n  \"AMED\",\n  \"VNET\",\n  \"IIIN\",\n  \"HFWA\",\n  \"SCSC\",\n  \"QADA\",\n  \"TSC\",\n  \"SFNC\",\n  \"MRCY\",\n  \"ICFI\",\n  \"ACIW\",\n  \"PTCT\",\n  \"TFSL\",\n  \"RRGB\",\n  \"CECE\",\n  \"IART\",\n  \"YELL\",\n  \"LXRX\",\n  \"PRAA\",\n  \"STMP\",\n  \"SCVL\",\n  \"CORE\",\n  \"KRNT\",\n  \"MYRG\",\n  \"BANR\",\n  \"CRESY\",\n  \"VSAT\",\n  \"SIGI\",\n  \"ALKS\",\n  \"GLDD\",\n  \"FIZZ\",\n  \"SBBP\",\n  \"DORM\",\n  \"TUSK\",\n  \"MERC\",\n  \"HEES\",\n  \"AGFS\",\n  \"SNCR\",\n  \"HUBG\",\n  \"SNBR\",\n  \"LOGI\",\n  \"FLWS\",\n  \"EBIX\",\n  \"ANAB\",\n  \"ABUS\",\n  \"ANSS\",\n  \"CBRL\",\n  \"ADXS\",\n  \"ITRI\",\n  \"GBCI\",\n  \"ERII\",\n  \"CLMT\",\n  \"AINV\",\n  \"BL\",\n  \"SSYS\",\n  \"LKFN\",\n  \"ANGO\",\n  \"PRIM\",\n  \"CTMX\",\n  \"CASH\",\n  \"PINC\",\n  \"SFBS\",\n  \"FNKO\",\n  \"ZBRA\",\n  \"GABC\",\n  \"NCMI\",\n  \"MGLN\",\n  \"EDIT\",\n  \"PRGS\",\n  \"TRMK\",\n  \"ACRS\",\n  \"SPSC\",\n  \"EFSC\",\n  \"BOKF\",\n  \"PSMT\",\n  \"UVSP\",\n  \"OCFC\",\n  \"GOGL\",\n  \"CCRN\",\n  \"IRTC\",\n  \"TA\",\n  \"FRTA\",\n  \"PI\",\n  \"MNRO\",\n  \"FMBI\",\n  \"ACLS\",\n  \"ITCI\",\n  \"VIVO\",\n  \"MCHX\",\n  \"CRAI\",\n  \"DSGX\",\n  \"HCM\",\n  \"TREE\",\n  \"ACOR\",\n  \"PCTY\",\n  \"MSBI\",\n  \"HLNE\",\n  \"VYGR\",\n  \"EBSB\",\n  \"SNPS\",\n  \"MIME\",\n  \"NATI\",\n  \"PLXS\",\n  \"MANT\",\n  \"OMAB\",\n  \"VNOM\",\n  \"TCPC\",\n  \"IBTX\",\n  \"DSPG\",\n  \"FWONA\",\n  \"ZEAL\",\n  \"UHAL\",\n  \"BCOV\",\n  \"ACBI\",\n  \"CVBF\",\n  \"LSXMA\",\n  \"PATK\",\n  \"BPMC\",\n  \"SASR\",\n  \"NBRV\",\n  \"TVTY\",\n  \"NXST\",\n  \"TECH\",\n  \"WING\",\n  \"HAFC\",\n  \"ATRA\",\n  \"BOOM\",\n  \"EXLS\",\n  \"QLYS\",\n  \"QURE\",\n  \"ICUI\",\n  \"LSTR\",\n  \"WASH\",\n  \"BPY\",\n  \"KIRK\",\n  \"SAIA\",\n  \"AY\",\n  \"ADUS\",\n  \"LBAI\",\n  \"OMCL\",\n  \"UFPI\",\n  \"IBOC\",\n  \"CSQ\",\n  \"HELE\",\n  \"TRVG\",\n  \"SIEN\",\n  \"CPLP\",\n  \"JOBS\",\n  \"NISN\",\n  \"NICE\",\n  \"KALU\",\n  \"CAMP\",\n  \"ICON\",\n  \"ASPS\",\n  \"ZIXI\",\n  \"CGBD\",\n  \"RGEN\",\n  \"AOSL\",\n  \"CVGW\",\n  \"DGICA\",\n  \"SILC\",\n  \"RGLD\",\n  \"GBDC\",\n  \"OCSI\",\n  \"APVO\",\n  \"PLAB\",\n  \"AGYS\",\n  \"CALA\",\n  \"CG\",\n  \"TRST\",\n  \"SYKE\",\n  \"TEDU\",\n  \"FWRD\",\n  \"LBC\",\n  \"ADAP\",\n  \"LECO\",\n  \"TRVN\",\n  \"CHUY\",\n  \"CTRN\",\n  \"CENT\",\n  \"SPTN\",\n  \"NSIT\",\n  \"AMRS\",\n  \"EQBK\",\n  \"SEAC\",\n  \"ARGX\",\n  \"STKL\",\n  \"LFUS\",\n  \"CYBR\",\n  \"APOG\",\n  \"MPWR\",\n  \"FELE\",\n  \"SSB\",\n  \"ITRN\",\n  \"LANC\",\n  \"CHDN\",\n  \"ENTA\",\n  \"EXPO\",\n  \"FRGI\",\n  \"DAKT\",\n  \"AAON\",\n  \"FLDM\",\n  \"TCBK\",\n  \"SNDX\",\n  \"INGN\",\n  \"GSBC\",\n  \"LQDT\",\n  \"PBPB\",\n  \"AVAV\",\n  \"IPGP\",\n  \"AMPH\",\n  \"NDLS\",\n  \"ABCB\",\n  \"CYTK\",\n  \"NTGR\",\n  \"RDWR\",\n  \"GIFI\",\n  \"CACC\",\n  \"OSIS\",\n  \"LAUR\",\n  \"OXLC\",\n  \"PVAC\",\n  \"PNNT\",\n  \"AGIO\",\n  \"RUTH\",\n  \"SRCE\",\n  \"HURN\",\n  \"SBSI\",\n  \"SBCF\",\n  \"NNBR\",\n  \"SPKE\",\n  \"FRME\",\n  \"IDCC\",\n  \"ROLL\",\n  \"NSSC\",\n  \"FBNC\",\n  \"SLRC\",\n  \"EGLE\",\n  \"EQRX\",\n  \"PEBO\",\n  \"ODT\",\n  \"LOB\",\n  \"MCRI\",\n  \"CRNT\",\n  \"INSG\",\n  \"CPSI\",\n  \"SCPH\",\n  \"BBSI\",\n  \"FARO\",\n  \"VWTR\",\n  \"JRVR\",\n  \"NBTB\",\n  \"CMTL\",\n  \"IVAC\",\n  \"KFRC\",\n  \"CNOB\",\n  \"GLAD\",\n  \"UFCS\",\n  \"CCMP\",\n  \"TRS\",\n  \"CLNE\",\n  \"STRA\",\n  \"JAKK\",\n  \"ATNX\",\n  \"ALNA\",\n  \"PDFS\",\n  \"TBK\",\n  \"FIBK\",\n  \"OPTN\",\n  \"FFIN\",\n  \"RGNX\",\n  \"KE\",\n  \"ASYS\",\n  \"APEI\",\n  \"VICR\",\n  \"MORN\",\n  \"APLS\",\n  \"UEIC\",\n  \"HTBI\",\n  \"LYTS\",\n  \"CMPR\",\n  \"SRDX\",\n  \"WSBC\",\n  \"PFBC\",\n  \"CARG\",\n  \"EPZM\",\n  \"AIMC\",\n  \"CHI\",\n  \"ATRO\",\n  \"ENSG\",\n  \"ECOL\",\n  \"SHEN\",\n  \"QQQX\",\n  \"FRPH\",\n  \"MRIN\",\n  \"PRTS\",\n  \"BCPC\",\n  \"OTTR\",\n  \"HCKT\",\n  \"WSBF\",\n  \"CSII\",\n  \"PFLT\",\n  \"ALGT\",\n  \"MFIN\",\n  \"FSV\",\n  \"HTBK\",\n  \"KNSL\",\n  \"METC\",\n  \"NEOG\",\n  \"HMST\",\n  \"FFIC\",\n  \"IMKTA\",\n  \"RAIL\",\n  \"INDB\",\n  \"LCUT\",\n  \"ERIE\",\n  \"HSTM\",\n  \"FDUS\",\n  \"ANAT\",\n  \"OFIX\",\n  \"KVHI\",\n  \"ARCB\",\n  \"WABC\",\n  \"CNBKA\",\n  \"CCXI\",\n  \"UBFO\",\n  \"CNXN\",\n  \"HAYN\",\n  \"CAC\",\n  \"NATH\",\n  \"ANDE\",\n  \"GOOD\",\n  \"AMRK\",\n  \"CCD\",\n  \"DGII\",\n  \"VLGEA\",\n  \"WRLD\",\n  \"SYBT\",\n  \"HWKN\",\n  \"CHY\",\n  \"CEVA\",\n  \"HCCI\",\n  \"ILPT\",\n  \"CHW\",\n  \"CHCO\",\n  \"IBCP\",\n  \"TBPH\",\n  \"MBWM\",\n  \"RCKY\",\n  \"POWI\",\n  \"NTRA\",\n  \"PGC\",\n  \"ATAX\",\n  \"NFBK\",\n  \"MRSN\",\n  \"JBSS\",\n  \"TTEC\",\n  \"FISI\",\n  \"MOFG\",\n  \"RNST\",\n  \"KELYA\",\n  \"IMOS\",\n  \"SPOK\",\n  \"MCBC\",\n  \"PLUS\",\n  \"THFF\",\n  \"NCSM\",\n  \"PRFT\",\n  \"CSWI\",\n  \"NCNA\",\n  \"AMSC\",\n  \"GAIN\",\n  \"RAVN\",\n  \"IFRX\",\n  \"JJSF\",\n  \"TTEK\",\n  \"ANIP\",\n  \"CTBI\",\n  \"BATRA\",\n  \"BSRR\",\n  \"NVMI\",\n  \"FLXS\",\n  \"GLPG\",\n  \"ALLT\",\n  \"BANX\",\n  \"DCPH\",\n  \"HOFT\",\n  \"KBAL\",\n  \"LNDC\",\n  \"NWPX\",\n  \"SYRS\",\n  \"WNEB\",\n  \"ZEUS\",\n  \"NH\",\n  \"SPNE\",\n  \"FORR\",\n  \"STRL\",\n  \"STCN\",\n  \"MMLP\",\n  \"HBNC\",\n  \"MGNX\",\n  \"DCOM\",\n  \"GEOS\",\n  \"INBK\",\n  \"MCRB\",\n  \"SVVC\",\n  \"KALA\",\n  \"WDFC\",\n  \"LILA\",\n  \"IEP\",\n  \"LMNR\",\n  \"WEYS\",\n  \"RBB\",\n  \"VOXX\",\n  \"ESGR\",\n  \"ASND\",\n  \"CRMT\",\n  \"CWCO\",\n  \"EHTH\",\n  \"MRLN\",\n  \"QIWI\",\n  \"USAK\",\n  \"UTSI\",\n  \"FARM\",\n  \"ANIK\",\n  \"SVRA\",\n  \"BUSE\",\n  \"NRIX\",\n  \"HONE\",\n  \"VCTR\",\n  \"FCBC\",\n  \"UTMD\",\n  \"ATNI\",\n  \"MRCC\",\n  \"POWL\",\n  \"PWOD\",\n  \"SEED\",\n  \"TITN\",\n  \"CTG\",\n  \"COKE\",\n  \"KNDI\",\n  \"CLAR\",\n  \"TWIN\",\n  \"CCLP\",\n  \"INFI\",\n  \"VSEC\",\n  \"MGEE\",\n  \"CVCO\",\n  \"SP\",\n  \"STBA\",\n  \"TBNK\",\n  \"BFIN\",\n  \"ACGLP\",\n  \"CBTX\",\n  \"CIGI\",\n  \"IOSP\",\n  \"OVID\",\n  \"PCTI\",\n  \"RBCAA\",\n  \"SUNS\",\n  \"CCBG\",\n  \"DHIL\",\n  \"ESSA\",\n  \"FFNW\",\n  \"FCNCA\",\n  \"XONE\",\n  \"WTBA\",\n  \"ULH\",\n  \"AROW\",\n  \"BANF\",\n  \"BELFB\",\n  \"CHMG\",\n  \"CPIX\",\n  \"CLFD\",\n  \"CSTR\",\n  \"ESLT\",\n  \"GASS\",\n  \"GBLI\",\n  \"JOUT\",\n  \"LIFE\",\n  \"LORL\",\n  \"OFS\",\n  \"QUMU\",\n  \"RELL\",\n  \"SPKEP\",\n  \"STRS\",\n  \"TGA\",\n  \"TIG\",\n  \"VRTS\",\n  \"FWP\",\n  \"YORW\",\n  \"BMTC\",\n  \"PFMT\",\n  \"CRVL\",\n  \"PMBC\",\n  \"FNLC\",\n  \"AMNB\",\n  \"CHSCM\",\n  \"CHSCN\",\n  \"CFFI\",\n  \"SHBI\",\n  \"WIRE\",\n  \"ATRI\",\n  \"DWSN\",\n  \"OMP\",\n  \"AMSF\",\n  \"BSET\",\n  \"CASS\",\n  \"CHSCL\",\n  \"EBTC\",\n  \"FSTR\",\n  \"FTEK\",\n  \"GURE\",\n  \"JRJC\",\n  \"MGIC\",\n  \"OIIM\",\n  \"PBCTP\",\n  \"PERI\",\n  \"PKOH\",\n  \"RVSB\",\n  \"TANNI\",\n  \"TESS\",\n  \"TRIB\",\n  \"WHF\",\n  \"MTLS\",\n  \"MSEX\",\n  \"PLPC\",\n  \"FBIZ\",\n  \"AMSWA\",\n  \"MIND\",\n  \"IRCP\",\n  \"RUSHB\",\n  \"WTFCM\",\n  \"NWLI\",\n  \"NYMTP\",\n  \"SAFT\",\n  \"NRIM\",\n  \"ITIC\",\n  \"MLAB\",\n  \"ACGLO\",\n  \"AGNCN\",\n  \"ALCO\",\n  \"AMRB\",\n  \"ARTNA\",\n  \"ATEC\",\n  \"ATLC\",\n  \"AUDC\",\n  \"AVNW\",\n  \"CCNE\",\n  \"CGO\",\n  \"CHMA\",\n  \"CSWC\",\n  \"DMLP\",\n  \"ERYP\",\n  \"EXFO\",\n  \"FUNC\",\n  \"FUND\",\n  \"GILT\",\n  \"GNTY\",\n  \"GSIT\",\n  \"HBCP\",\n  \"HRZN\",\n  \"HURC\",\n  \"HWBK\",\n  \"IGLD\",\n  \"ISSC\",\n  \"JSM\",\n  \"KMDA\",\n  \"LAWS\",\n  \"LBTYB\",\n  \"LINC\",\n  \"LSXMB\",\n  \"LTRPB\",\n  \"MESO\",\n  \"MINDP\",\n  \"MPVDF\",\n  \"MRBK\",\n  \"MTEX\",\n  \"NCTY\",\n  \"NICK\",\n  \"NYMTN\",\n  \"NYMTO\",\n  \"OBSV\",\n  \"PATI\",\n  \"PFIS\",\n  \"PROV\",\n  \"PTNR\",\n  \"QADB\",\n  \"QRTEB\",\n  \"SBLKZ\",\n  \"SENEB\",\n  \"SLMBP\",\n  \"SPI\",\n  \"SPRO\",\n  \"TRMD\",\n  \"TZOO\",\n  \"USAP\",\n  \"USLM\",\n  \"XBIT\",\n  \"YRIV\",\n  \"ADPT\",\n  \"AFYA\",\n  \"AGNCM\",\n  \"KERN\",\n  \"AKRO\",\n  \"ALEC\",\n  \"ALLK\",\n  \"ALLO\",\n  \"AMTB\",\n  \"AMTBB\",\n  \"AFIN\",\n  \"AFINP\",\n  \"APTX\",\n  \"APYX\",\n  \"ARAV\",\n  \"ARCE\",\n  \"ARVN\",\n  \"ASRT\",\n  \"AUB\",\n  \"BCEL\",\n  \"JG\",\n  \"AUTL\",\n  \"AVRO\",\n  \"AXNX\",\n  \"OZK\",\n  \"BSVN\",\n  \"GLG\",\n  \"BCML\",\n  \"BLU\",\n  \"BRY\",\n  \"BYND\",\n  \"BCYC\",\n  \"BILI\",\n  \"BBIO\",\n  \"BHFAP\",\n  \"BPYPO\",\n  \"BPYPP\",\n  \"DOOO\",\n  \"BFST\",\n  \"CBNK\",\n  \"CARE\",\n  \"CHNG\",\n  \"CIH\",\n  \"CCB\",\n  \"CLBK\",\n  \"SCOR\",\n  \"ROAD\",\n  \"CRTX\",\n  \"CVET\",\n  \"CRNX\",\n  \"CFB\",\n  \"CRWD\",\n  \"CYCN\",\n  \"DOCU\",\n  \"DOYU\",\n  \"DBX\",\n  \"ECOR\",\n  \"ENOB\",\n  \"ENTX\",\n  \"EQ\",\n  \"EDRY\",\n  \"EVLO\",\n  \"EVOP\",\n  \"XCUR\",\n  \"DVOL\",\n  \"DALI\",\n  \"MYFW\",\n  \"FOCS\",\n  \"FTDR\",\n  \"GNFT\",\n  \"GMAB\",\n  \"GAINL\",\n  \"DRIV\",\n  \"CLOU\",\n  \"GSHD\",\n  \"GOSS\",\n  \"GSKY\",\n  \"GRIN\",\n  \"GRTS\",\n  \"GO\",\n  \"GH\",\n  \"HWC\",\n  \"HARP\",\n  \"HHR\",\n  \"HCAT\",\n  \"HLIO\",\n  \"FIXX\",\n  \"HOOK\",\n  \"IIIV\",\n  \"IDYA\",\n  \"IHRT\",\n  \"INMD\",\n  \"ICMB\",\n  \"IQ\",\n  \"USIG\",\n  \"ISEE\",\n  \"KLDO\",\n  \"KZR\",\n  \"KNSA\",\n  \"KLXE\",\n  \"LEGH\",\n  \"LEVL\",\n  \"YVR\",\n  \"LYFT\",\n  \"MGTA\",\n  \"MDJH\",\n  \"MGTX\",\n  \"MREO\",\n  \"MESA\",\n  \"MIST\",\n  \"TIGO\",\n  \"MIRM\",\n  \"MRNA\",\n  \"MOGO\",\n  \"MOR\",\n  \"COOP\",\n  \"NRC\",\n  \"NTUS\",\n  \"STIM\",\n  \"NFE\",\n  \"NXTC\",\n  \"NXGN\",\n  \"NGM\",\n  \"NIU\",\n  \"LASR\",\n  \"OPI\",\n  \"OCCI\",\n  \"OCCIP\",\n  \"ONCY\",\n  \"OSPN\",\n  \"OPBK\",\n  \"OPRA\",\n  \"OPRX\",\n  \"ORTX\",\n  \"OGI\",\n  \"OBNK\",\n  \"OSMT\",\n  \"OXSQ\",\n  \"HERD\",\n  \"PLMR\",\n  \"PAYS\",\n  \"PCB\",\n  \"PDSB\",\n  \"PHAS\",\n  \"PHIO\",\n  \"PHIOW\",\n  \"PHUN\",\n  \"PDD\",\n  \"PSTV\",\n  \"PTE\",\n  \"DTIL\",\n  \"POAI\",\n  \"PRVB\",\n  \"QTT\",\n  \"RTLR\",\n  \"RRBI\",\n  \"RDVT\",\n  \"RPAY\",\n  \"REPL\",\n  \"RMBI\",\n  \"RUBY\",\n  \"SRRK\",\n  \"SCPL\",\n  \"SEEL\",\n  \"SESN\",\n  \"SWAV\",\n  \"SIBN\",\n  \"SILK\",\n  \"SINT\",\n  \"SONO\",\n  \"SOHON\",\n  \"SPFI\",\n  \"STXB\",\n  \"STOK\",\n  \"STNE\",\n  \"SNDL\",\n  \"SBEA\",\n  \"SLGG\",\n  \"SURF\",\n  \"STRO\",\n  \"SSSS\",\n  \"TRNX\",\n  \"TCRR\",\n  \"TENB\",\n  \"BPRN\",\n  \"REAL\",\n  \"TLRY\",\n  \"TW\",\n  \"TBIO\",\n  \"TCDA\",\n  \"TSCAP\",\n  \"TSCBP\",\n  \"TPTX\",\n  \"BROG\",\n  \"TWST\",\n  \"UBX\",\n  \"TIGR\",\n  \"UPWK\",\n  \"UXIN\",\n  \"VLYPO\",\n  \"VLYPP\",\n  \"VIOT\",\n  \"HLAL\",\n  \"WTRH\",\n  \"WTREP\",\n  \"WW\",\n  \"XERS\",\n  \"YMAB\",\n  \"ZM\",\n  \"ZVO\",\n  \"AGNCP\",\n  \"DUOT\",\n  \"HUIZ\",\n  \"RVMD\",\n  \"MDRRP\",\n  \"PAE\",\n  \"AGNCO\",\n  \"ARQT\",\n  \"APRE\",\n  \"PDEV\",\n  \"AMHC\",\n  \"BRP\",\n  \"FITBO\",\n  \"BSBK\",\n  \"PHAT\",\n  \"BBQ\",\n  \"VIACA\",\n  \"SDC\",\n  \"BSBE\",\n  \"OPCH\",\n  \"PGNY\",\n  \"PRDO\",\n  \"VIAC\",\n  \"DHC\",\n  \"NLOK\",\n  \"SVC\",\n  \"IPHA\",\n  \"TXG\",\n  \"MCBS\",\n  \"PPD\",\n  \"DDOG\",\n  \"HQI\",\n  \"BDTX\",\n  \"FREQ\",\n  \"IMAB\",\n  \"CRNC\",\n  \"BSDE\",\n  \"GRTX\",\n  \"HBT\",\n  \"BUG\",\n  \"STSA\",\n  \"TCOM\",\n  \"REYN\",\n  \"PGEN\",\n  \"RILYP\",\n  \"WKEY\",\n  \"LATN\",\n  \"RCEL\",\n  \"PTON\",\n  \"TELA\",\n  \"VERO\",\n  \"PNTG\",\n  \"NTRSO\",\n  \"SDGR\",\n  \"ONEM\",\n  \"LIZI\",\n  \"XP\",\n  \"CABA\",\n  \"PWFL\",\n  \"PFHD\",\n  \"KRKR\",\n  \"IGMS\",\n  \"TARA\",\n  \"OCGN\",\n  \"CPZ\",\n  \"ONEW\",\n  \"XGN\",\n  \"SWKH\",\n  \"DRTT\",\n  \"JAN\",\n  \"BEAM\",\n  \"OPRT\",\n  \"FUTU\",\n  \"BNTX\",\n  \"SWTX\",\n  \"DHCNL\",\n  \"OYST\",\n  \"VIR\",\n  \"LDEM\",\n  \"MDIA\",\n  \"POTX\",\n  \"GXTG\",\n  \"HTIA\",\n  \"SITM\",\n  \"MOHO\",\n  \"LMNL\",\n  \"LMPX\",\n  \"ASTSW\",\n  \"NRBO\",\n  \"QK\",\n  \"GRNVR\",\n  \"THMO\",\n  \"GNRSU\",\n  \"PALI\",\n  \"BHFAL\",\n  \"COWNL\",\n  \"CHNGU\",\n  \"MEDS\",\n  \"DCOMP\",\n  \"MFH\",\n  \"GRIL\",\n  \"FDUSZ\",\n  \"OFSSZ\",\n  \"INBKZ\",\n  \"PTMN\",\n  \"ZCMD\",\n  \"SNUG\",\n  \"IMRA\",\n  \"IMRX\",\n  \"BWMX\",\n  \"ATCX\",\n  \"RSSS\",\n  \"CALB\",\n  \"PASG\",\n  \"BPYUP\",\n  \"BPYU\",\n  \"METX\",\n  \"ZNTL\",\n  \"RGP\",\n  \"SONN\",\n  \"AVCT\",\n  \"KROS\",\n  \"AVCTW\",\n  \"DKNG\",\n  \"ORIC\",\n  \"NVVEW\",\n  \"LYRA\",\n  \"PMAY\",\n  \"UMAY\",\n  \"BMAY\",\n  \"GAN\",\n  \"NMTR\",\n  \"AYLA\",\n  \"OCFCP\",\n  \"KC\",\n  \"HUSN\",\n  \"CRDF\",\n  \"TEGS\",\n  \"TAEQ\",\n  \"OEG\",\n  \"SJOYW\",\n  \"SJ\",\n  \"ESEB\",\n  \"ESCR\",\n  \"ESHY\",\n  \"GNRSW\",\n  \"MSVX\",\n  \"WINT\",\n  \"CCNC\",\n  \"DMAY\",\n  \"FMAY\",\n  \"HSTO\",\n  \"QLGN\",\n  \"BHFAO\",\n  \"NARI\",\n  \"CFCV\",\n  \"METXW\",\n  \"WTFCP\",\n  \"LRMR\",\n  \"AYRO\",\n  \"HYMCW\",\n  \"SHYF\",\n  \"HYMC\",\n  \"SWBI\",\n  \"NKLA\",\n  \"WMG\",\n  \"LEGN\",\n  \"PNFPP\",\n  \"DADA\",\n  \"PLRX\",\n  \"CALT\",\n  \"AMTI\",\n  \"ZI\",\n  \"FBCG\",\n  \"FBCV\",\n  \"VRM\",\n  \"FMBIP\",\n  \"LPRO\",\n  \"AUBAP\",\n  \"LTRN\",\n  \"UCBIO\",\n  \"UCL\",\n  \"GBIO\",\n  \"PCVX\",\n  \"AWH\",\n  \"BNR\",\n  \"RNA\",\n  \"HWCPZ\",\n  \"FBRX\",\n  \"RPRX\",\n  \"LGHLW\",\n  \"LGHL\",\n  \"RPTX\",\n  \"GTH\",\n  \"PFC\",\n  \"FJUN\",\n  \"DJUN\",\n  \"BRLIU\",\n  \"CEFA\",\n  \"TBKCP\",\n  \"OPINL\",\n  \"AKUS\",\n  \"PYPD\",\n  \"API\",\n  \"REE\",\n  \"FUSN\",\n  \"EBON\",\n  \"FREE\",\n  \"THY\",\n  \"MRSK\",\n  \"VIRS\",\n  \"HTLFP\",\n  \"MGNI\",\n  \"ALTA\",\n  \"SPQQ\",\n  \"NJUL\",\n  \"JULZ\",\n  \"HOFV\",\n  \"IMTX\",\n  \"HOFVW\",\n  \"ACCD\",\n  \"IMTXW\",\n  \"CVLG\",\n  \"SNEX\",\n  \"FMBIO\",\n  \"BLCT\",\n  \"AMYT\",\n  \"OTRK\",\n  \"CXDO\",\n  \"PSTX\",\n  \"NKTX\",\n  \"NCNO\",\n  \"GOCO\",\n  \"QH\",\n  \"ALXO\",\n  \"BLI\",\n  \"RNLX\",\n  \"INZY\",\n  \"ANNX\",\n  \"ITOS\",\n  \"JAMF\",\n  \"EDTK\",\n  \"SRGA\",\n  \"DJUL\",\n  \"IBBJ\",\n  \"FCRD\",\n  \"RMRM\",\n  \"HSAQ\",\n  \"AFIB\",\n  \"MLAC\",\n  \"FTHM\",\n  \"ALVR\",\n  \"BTBT\",\n  \"KBNT\",\n  \"RXT\",\n  \"KDNY\",\n  \"SVSVU\",\n  \"VCVCU\",\n  \"TLS\",\n  \"MRVI\",\n  \"SHC\",\n  \"HAACU\",\n  \"ARBGU\",\n  \"AVIR\",\n  \"LESL\",\n  \"GLTO\",\n  \"ALGM\",\n  \"DSACU\",\n  \"ROOT\",\n  \"BDSX\",\n  \"MCFE\",\n  \"YGMZ\",\n  \"PRAX\",\n  \"EAR\",\n  \"TARS\",\n  \"ALGS\",\n  \"OPT\",\n  \"EBC\",\n  \"MOTNU\",\n  \"CDAK\",\n  \"STTK\",\n  \"SPRB\",\n  \"KRON\",\n  \"AZYO\",\n  \"PAICU\",\n  \"NGACU\",\n  \"CCCC\",\n  \"ONCR\",\n  \"ASO\",\n  \"ABCM\",\n  \"FHTX\",\n  \"BLSA\",\n  \"LFTRU\",\n  \"LXEH\",\n  \"RCHGU\",\n  \"AVO\",\n  \"LUNG\",\n  \"SRSAU\",\n  \"SYTA\",\n  \"AMST\",\n  \"GLSI\",\n  \"GDRX\",\n  \"BSY\",\n  \"CRSR\",\n  \"CMPS\",\n  \"ATHA\",\n  \"VTRU\",\n  \"NMMCU\",\n  \"PTVE\",\n  \"SUMO\",\n  \"FROG\",\n  \"MTCR\",\n  \"STEP\",\n  \"OM\",\n  \"ITACU\",\n  \"CD\",\n  \"ORPH\",\n  \"GRAY\",\n  \"PMVP\",\n  \"PRLD\",\n  \"BCTG\",\n  \"TSHA\",\n  \"PRFX\",\n  \"AUVI\",\n  \"HCDI\",\n  \"FRLN\",\n  \"CMPI\",\n  \"IBEX\",\n  \"VSTA\",\n  \"INM\",\n  \"ADV\",\n  \"BTAQ\",\n  \"SWIM\",\n  \"GCMG\",\n  \"NGMS\",\n  \"OLMA\",\n  \"RIDE\",\n  \"SVAC\",\n  \"TRIT\",\n  \"TTCF\",\n  \"TWCT\",\n  \"VACQ\",\n  \"VIH\",\n  \"VLDR\",\n  \"VTRS\",\n  \"KNTE\",\n  \"SEER\",\n  \"SGTX\",\n  \"YQ\",\n  \"FLACU\",\n  \"ABNB\",\n  \"NEBCU\",\n  \"CERT\",\n  \"GHVIU\",\n  \"HYFM\",\n  \"ABCL\",\n  \"VVOS\",\n  \"WISH\",\n  \"UPST\",\n  \"BCAB\",\n  \"SCPS\",\n  \"OCG\",\n  \"WNW\",\n  \"COOLU\",\n  \"SCOAU\",\n  \"VIRI\",\n  \"MTACU\",\n  \"ACKIU\",\n  \"IKT\",\n  \"GBS\",\n  \"HCARU\",\n  \"PHAR\",\n  \"MRM\",\n  \"OPEN\",\n  \"OMEG\",\n  \"GRCL\",\n  \"CGEM\",\n  \"QLI\",\n  \"ENFAU\",\n  \"MAXN\",\n  \"MSGM\",\n  \"GPACU\",\n  \"AFRM\",\n  \"ASLE\",\n  \"POSH\",\n  \"AEACU\",\n  \"WOOF\",\n  \"PLTK\",\n  \"DRVN\",\n  \"BEEM\",\n  \"LI\",\n  \"DFH\",\n  \"PTIC\",\n  \"FTCV\",\n  \"ABST\",\n  \"AEPPZ\",\n  \"AOUT\",\n  \"BOWX\",\n  \"CCNEP\",\n  \"LFMD\",\n  \"DCBO\",\n  \"GBNY\",\n  \"GOVX\",\n  \"HGBL\",\n  \"HGEN\",\n  \"HRMY\",\n  \"IIVIP\",\n  \"INBX\",\n  \"INTZ\",\n  \"KYMR\",\n  \"LANDO\",\n  \"LEVLP\",\n  \"LIXT\",\n  \"LNSR\",\n  \"MDWT\",\n  \"MNSBP\",\n  \"NMFCL\",\n  \"ONDS\",\n  \"POWW\",\n  \"RAACU\",\n  \"RZLT\",\n  \"SMID\",\n  \"SHLS\",\n  \"TOMZ\",\n  \"VMAC\",\n  \"VMAR\",\n  \"EZGO\",\n  \"GHVI\",\n  \"SNRH\",\n  \"ACKIT\",\n  \"KINZ\",\n  \"MRAC\",\n  \"SANA\",\n  \"LABP\",\n  \"VLON\",\n  \"SVOK\",\n  \"RELI\",\n  \"TVAC\",\n  \"RLYB\",\n  \"SDH\",\n  \"BMBL\",\n  \"XM\",\n  \"APR\",\n  \"RAAC\",\n  \"TLIS\",\n  \"DBTX\",\n  \"TCACU\",\n  \"NEXI\",\n  \"LGVN\",\n  \"CNTA\",\n  \"APPH\",\n  \"APPS\",\n  \"LAZR\",\n  \"AEI\",\n  \"ABGI\",\n  \"FSII\",\n  \"VRPX\",\n  \"CFIV\",\n  \"PPTA\",\n  \"AUUD\",\n  \"GBOX\",\n  \"GOEV\",\n  \"DUNE\",\n  \"KEJI\",\n  \"REIT\",\n  \"KAIR\",\n  \"AKIC\",\n  \"ARYD\",\n  \"TMKR\",\n  \"PRSR\",\n  \"KLAQ\",\n  \"NESR\",\n  \"PAQC\",\n  \"EPHY\",\n  \"RNRG\",\n  \"LJAQ\",\n  \"IMCC\",\n  \"EAC\",\n  \"INKA\",\n  \"PACX\",\n  \"GSAQ\",\n  \"INNV\",\n  \"LEGO\",\n  \"ENFA\",\n  \"SWET\",\n  \"DLCA\",\n  \"HCCC\",\n  \"AEAC\",\n  \"HCIC\",\n  \"ADER\",\n  \"OCAX\",\n  \"RXDX\",\n  \"PYR\",\n  \"LBPH\",\n  \"MITC\",\n  \"OSTR\",\n  \"SCR\",\n  \"CNXC\",\n  \"MODV\",\n  \"GBNH\",\n  \"ASAX\",\n  \"JCIC\",\n  \"GMII\",\n  \"GMBT\",\n  \"SHAC\",\n  \"DGNU\",\n  \"PGRW\",\n  \"GANX\",\n  \"RACB\",\n  \"LMAO\",\n  \"PCT\",\n  \"FNCH\",\n  \"CNTB\",\n  \"IHYF\",\n  \"JOET\",\n  \"WCBR\",\n  \"LBPS\",\n  \"QQQJ\",\n  \"CTEC\",\n  \"HYXF\",\n  \"UPC\",\n  \"BSCU\",\n  \"EMXF\",\n  \"BSJS\",\n  \"EWEB\",\n  \"BSMU\",\n  \"CHB\",\n  \"DEMZ\",\n  \"ACVA\",\n  \"OLK\",\n  \"WMPN\",\n  \"DSEY\",\n  \"EEIQ\",\n  \"MSDAU\",\n  \"CRCT\",\n  \"LVTX\",\n  \"EWTX\",\n  \"IKNA\",\n  \"ALHC\",\n  \"HYW\",\n  \"DSGN\",\n  \"TDUP\",\n  \"KRNLW\",\n  \"PUCK\",\n  \"GHACW\",\n  \"PUCKW\",\n  \"IBRX\",\n  \"ARVL\",\n  \"VIACP\",\n  \"COVA\",\n  \"KURI\",\n  \"ACHL\",\n  \"ULCC\",\n  \"GIGGW\",\n  \"KARO\",\n  \"EM\",\n  \"MSAC\",\n  \"XPDI\",\n  \"FORE\",\n  \"SCLE\",\n  \"TCAC\",\n  \"TCACW\",\n  \"TSIB\",\n  \"TSIBW\",\n  \"INVZ\",\n  \"MACA\",\n  \"ACEV\",\n  \"BTRS\",\n  \"NGAC\",\n  \"PLBY\",\n  \"TIOAU\",\n  \"BSKYU\",\n  \"AQWA\",\n  \"VENAR\",\n  \"NVSAW\",\n  \"NVSA\",\n  \"PMGM\",\n  \"KAII\",\n  \"DAPP\",\n  \"EBET\",\n  \"APP\",\n  \"KRT\",\n  \"TSP\",\n  \"GSEV\",\n  \"BMEA\",\n  \"AKYA\",\n  \"GBRG\",\n  \"COLI\",\n  \"RXRX\",\n  \"CLOV\",\n  \"LGO\",\n  \"BIGC\",\n  \"EGLX\",\n  \"AXON\",\n  \"HERA\",\n  \"COIN\",\n  \"UROY\",\n  \"PRVA\",\n  \"FTCI\",\n  \"VACC\",\n  \"SCAQ\",\n  \"MNMD\",\n  \"FYBR\",\n  \"HNST\",\n  \"FSBC\",\n  \"IPW\",\n  \"SVFD\",\n  \"DBGI\",\n  \"LGBT\",\n  \"VMEO\",\n  \"JZXN\",\n  \"QQQA\",\n  \"OTLY\",\n  \"CURI\",\n  \"BRCN\",\n  \"DYNS\",\n  \"NMTC\",\n  \"SOFI\",\n  \"DLO\",\n  \"ALZN\",\n  \"WKME\",\n  \"HUT\",\n  \"ISPC\",\n  \"LYEL\",\n  \"ME\",\n  \"GAME\",\n  \"BITF\",\n  \"SFT\",\n  \"BBIG\",\n  \"MIRO\",\n  \"GRVI\",\n  \"GLUE\",\n  \"VLAT\",\n  \"BON\",\n  \"CFLT\",\n  \"FA\",\n  \"GHRS\",\n  \"TKNO\",\n  \"GRPH\",\n  \"ELEV\",\n  \"MF\",\n  \"WGRO\",\n  \"GMVD\",\n  \"ASTR\",\n  \"DALN\",\n  \"GOBI\",\n  \"PAYO\",\n  \"LZ\",\n  \"XMTR\",\n  \"AVTE\",\n  \"CRTD\",\n  \"TBLA\",\n  \"AGRI\",\n  \"UNCY\",\n  \"ARYE\",\n  \"NXTP\",\n  \"IINN\",\n  \"PECO\",\n  \"SGHT\",\n  \"HCWB\",\n  \"ALTO\",\n  \"MKTW\",\n  \"BASE\",\n  \"KLTR\",\n  \"PYCR\",\n  \"GAMB\",\n  \"CRBU\",\n  \"OB\",\n  \"SOPH\",\n  \"CTKB\",\n  \"MQ\",\n  \"LCID\",\n  \"DUOL\",\n  \"SNPO\",\n  \"HOOD\",\n  \"BCTX\",\n  \"MVST\",\n  \"MNTV\",\n  \"OCDX\",\n  \"FDMT\",\n  \"TLMD\",\n  \"VOR\",\n  \"BOLT\",\n  \"ANGN\",\n  \"VERV\",\n  \"TERN\",\n  \"DNUT\",\n  \"TASK\",\n  \"NUVL\",\n  \"DAWN\",\n  \"INTA\",\n  \"LFST\",\n  \"CYT\",\n  \"TNYA\",\n  \"CVRX\",\n  \"OMGA\",\n  \"LHDX\",\n  \"PTRA\",\n  \"TMC\",\n  \"WFRD\",\n  \"WAFDP\",\n  \"VYNE\",\n  \"VINP\",\n  \"VIA\",\n  \"VALN\",\n  \"TRIN\",\n  \"TCBIO\",\n  \"TBLD\",\n  \"TALK\",\n  \"SVA\",\n  \"STGW\",\n  \"SMFR\",\n  \"SIOX\",\n  \"SIGIP\",\n  \"SHCR\",\n  \"SBNYP\",\n  \"RNW\",\n  \"QRTEP\",\n  \"PWP\",\n  \"PSM\",\n  \"PHVS\",\n  \"OMIC\",\n  \"NAUT\",\n  \"MOLN\",\n  \"MNDY\",\n  \"MAPS\",\n  \"LVOX\",\n  \"LTCH\",\n  \"LBRDP\",\n  \"IPSC\",\n  \"IMCR\",\n  \"IAS\",\n  \"HYZN\",\n  \"HMPT\",\n  \"GULF\",\n  \"GEG\",\n  \"FULTP\",\n  \"FLYW\",\n  \"EVGO\",\n  \"EVCM\",\n  \"ERAS\",\n  \"ENVX\",\n  \"ELMS\",\n  \"CMAX\",\n  \"BZ\",\n  \"BRAG\",\n  \"ADGI\",\n  \"BPYPM\",\n  \"BHFAN\",\n  \"ICVX\",\n  \"PCYO\",\n  \"TMCI\",\n  \"GETY\",\n];\n//NYSE KEYS\nconst nyseMasterKey = [\n  \"MXC\",\n  \"STRY\",\n  \"HKD\",\n  \"NRGV\",\n  \"LLAP\",\n  \"GWH\",\n  \"NOG\",\n  \"GROV\",\n  \"UUUU\",\n  \"LXU\",\n  \"KMI\",\n  \"IONQ\",\n  \"GE\",\n  \"REI\",\n  \"BAC\",\n  \"HPQ\",\n  \"CX\",\n  \"F\",\n  \"SNAP\",\n  \"WFC\",\n  \"AIG\",\n  \"T\",\n  \"C\",\n  \"VALE\",\n  \"MS\",\n  \"JPM\",\n  \"ORCL\",\n  \"NKE\",\n  \"PG\",\n  \"BBD\",\n  \"PFE\",\n  \"NOK\",\n  \"TWTR\",\n  \"XOM\",\n  \"VIPS\",\n  \"AXP\",\n  \"BMY\",\n  \"V\",\n  \"KEY\",\n  \"RF\",\n  \"KR\",\n  \"HAL\",\n  \"BABA\",\n  \"MRO\",\n  \"GM\",\n  \"FCX\",\n  \"CRM\",\n  \"SQ\",\n  \"NUE\",\n  \"SWN\",\n  \"LOW\",\n  \"RAD\",\n  \"SLB\",\n\n  \"ABBV\",\n  \"GIS\",\n  \"VZ\",\n  \"XRX\",\n  \"X\",\n  \"DVN\",\n  \"IBN\",\n  \"MPC\",\n  \"PM\",\n  \"MSCI\",\n  \"RDN\",\n  \"KO\",\n  \"SRC\",\n  \"COP\",\n  \"CHK\",\n  \"DIS\",\n  \"LEN\",\n  \"CVX\",\n  \"AUY\",\n  \"WMT\",\n  \"CLF\",\n  \"MRK\",\n  \"MGM\",\n  \"GFI\",\n  \"KGC\",\n  \"SCHW\",\n  \"NBR\",\n  \"JNJ\",\n  \"BSX\",\n  \"ITUB\",\n  \"BK\",\n  \"HMY\",\n  \"APA\",\n  \"HOME\",\n  \"KOS\",\n  \"DAL\",\n  \"INFY\",\n  \"CCL\",\n  \"MFGP\",\n  \"PBR\",\n  \"LPI\",\n  \"ABT\",\n  \"USB\",\n  \"BA\",\n  \"GGB\",\n  \"DB\",\n  \"KNX\",\n  \"KBH\",\n  \"PGR\",\n  \"MO\",\n  \"MDT\",\n  \"RIG\",\n  \"BCS\",\n  \"EOG\",\n  \"HPE\",\n  \"OKE\",\n  \"CVS\",\n  \"HES\",\n  \"GDDY\",\n  \"BX\",\n  \"NLSN\",\n  \"TS\",\n  \"BOX\",\n  \"OXY\",\n  \"CVE\",\n  \"SYF\",\n  \"MTG\",\n  \"LUV\",\n  \"FTI\",\n  \"AA\",\n  \"ABEV\",\n  \"EQR\",\n  \"TAL\",\n  \"UNH\",\n  \"GES\",\n  \"CNC\",\n  \"CLDR\",\n  \"RES\",\n  \"CI\",\n  \"WMB\",\n  \"HBI\",\n  \"XL\",\n  \"D\",\n  \"CHS\",\n  \"CFG\",\n  \"SU\",\n  \"MMM\",\n  \"JBL\",\n  \"ACN\",\n  \"NTR\",\n  \"BRFS\",\n  \"LVS\",\n  \"EGO\",\n  \"GSK\",\n  \"TEVA\",\n  \"PAA\",\n  \"VLO\",\n  \"IMAX\",\n  \"FNB\",\n  \"HD\",\n  \"AR\",\n  \"ARNC\",\n  \"VOYA\",\n  \"SM\",\n  \"DHI\",\n  \"HRB\",\n  \"BTU\",\n  \"JBGS\",\n  \"IPG\",\n  \"DE\",\n  \"COG\",\n  \"IBM\",\n  \"NYT\",\n  \"OLN\",\n  \"JCI\",\n  \"VICI\",\n  \"VST\",\n  \"EPD\",\n  \"KMB\",\n  \"AEP\",\n  \"IT\",\n  \"CAT\",\n  \"AU\",\n  \"KKR\",\n  \"CMC\",\n  \"NRG\",\n  \"CPB\",\n  \"ATHM\",\n  \"WRB\",\n  \"TGT\",\n  \"TV\",\n  \"GLW\",\n  \"MAS\",\n  \"DOV\",\n  \"HRL\",\n  \"TECK\",\n  \"AES\",\n  \"PPL\",\n  \"SEE\",\n  \"NLY\",\n  \"FRC\",\n  \"K\",\n  \"M\",\n  \"TSM\",\n  \"STL\",\n  \"NYCB\",\n  \"TRQ\",\n  \"BAH\",\n  \"ARI\",\n  \"MET\",\n  \"AFL\",\n  \"TPR\",\n  \"WPM\",\n  \"WLL\",\n  \"PCG\",\n  \"CLR\",\n  \"HL\",\n  \"UAA\",\n  \"CAG\",\n  \"SO\",\n  \"GKOS\",\n  \"CCI\",\n  \"ZTO\",\n  \"GS\",\n  \"ADT\",\n  \"EMR\",\n  \"CNP\",\n  \"COTY\",\n  \"MA\",\n  \"AWI\",\n  \"BBVA\",\n  \"AER\",\n  \"GTN\",\n  \"CDE\",\n  \"NCR\",\n  \"AMT\",\n  \"PSTG\",\n  \"SJM\",\n  \"ETN\",\n  \"DUK\",\n  \"CL\",\n  \"KAR\",\n  \"NEE\",\n  \"PXD\",\n  \"ADM\",\n  \"VTR\",\n  \"VMW\",\n  \"DKS\",\n  \"WTI\",\n  \"CE\",\n  \"HUN\",\n  \"CSTM\",\n  \"VER\",\n  \"GPK\",\n  \"WELL\",\n  \"TJX\",\n  \"PLD\",\n  \"KSS\",\n  \"XEC\",\n  \"DRI\",\n  \"ATI\",\n  \"IAG\",\n  \"VFC\",\n  \"BDN\",\n  \"HON\",\n  \"ICE\",\n  \"WY\",\n  \"BLL\",\n  \"IVZ\",\n  \"DG\",\n  \"SID\",\n  \"SLCA\",\n  \"SGU\",\n  \"PK\",\n  \"TOL\",\n  \"BCO\",\n  \"BKD\",\n  \"AIV\",\n  \"TAP\",\n  \"MON\",\n  \"UNP\",\n  \"BDX\",\n  \"GME\",\n  \"MX\",\n  \"RLJ\",\n  \"LB\",\n  \"NCLH\",\n  \"NOV\",\n  \"LMT\",\n  \"MTZ\",\n  \"GPS\",\n  \"SYY\",\n  \"FTV\",\n  \"BKI\",\n  \"EIX\",\n  \"CPE\",\n  \"CF\",\n  \"PNC\",\n  \"WIT\",\n  \"LYB\",\n  \"MGA\",\n  \"AEO\",\n  \"BP\",\n  \"VVV\",\n  \"UPS\",\n  \"MUR\",\n  \"VMC\",\n  \"NOMD\",\n  \"ANTM\",\n  \"GD\",\n  \"KIM\",\n  \"FNF\",\n  \"BXMT\",\n  \"CHD\",\n  \"DLR\",\n  \"IP\",\n  \"CLI\",\n  \"SE\",\n  \"CC\",\n  \"DAN\",\n  \"ZBH\",\n  \"LPX\",\n  \"BBY\",\n  \"GRUB\",\n  \"BG\",\n  \"LC\",\n  \"PWR\",\n  \"NEM\",\n  \"BEN\",\n  \"SHLX\",\n  \"PBH\",\n  \"SBH\",\n  \"NI\",\n  \"LLY\",\n  \"STNG\",\n  \"LADR\",\n  \"FHN\",\n  \"HLX\",\n  \"RSG\",\n  \"BIG\",\n  \"CYH\",\n  \"PAYC\",\n  \"GCP\",\n  \"YUM\",\n  \"STZ\",\n  \"LYG\",\n  \"USFD\",\n  \"THC\",\n  \"DOC\",\n  \"ALLY\",\n  \"EVR\",\n  \"CMS\",\n  \"RIO\",\n  \"PDM\",\n  \"KMT\",\n  \"HP\",\n  \"FLR\",\n  \"JHG\",\n  \"FDX\",\n  \"EMN\",\n  \"WU\",\n  \"BAX\",\n  \"CARS\",\n  \"TEL\",\n  \"MLM\",\n  \"GWW\",\n  \"PBF\",\n  \"BW\",\n  \"CMI\",\n  \"CNQ\",\n  \"HCA\",\n  \"QTS\",\n  \"SAN\",\n  \"CNHI\",\n  \"CNX\",\n  \"INFO\",\n  \"ES\",\n  \"ARMK\",\n  \"OII\",\n  \"NOW\",\n  \"APTV\",\n  \"QD\",\n  \"NSC\",\n  \"PSX\",\n  \"GAB\",\n  \"PNW\",\n  \"AMH\",\n  \"FOE\",\n  \"A\",\n  \"MOS\",\n  \"LPL\",\n  \"SKX\",\n  \"HST\",\n  \"UE\",\n  \"PHM\",\n  \"MT\",\n  \"CAAP\",\n  \"WRE\",\n  \"RRC\",\n  \"FL\",\n  \"AGO\",\n  \"DRE\",\n  \"CCJ\",\n  \"AXTA\",\n  \"AEM\",\n  \"BB\",\n  \"CB\",\n  \"PRU\",\n  \"PVG\",\n  \"AVYA\",\n  \"SC\",\n  \"ANF\",\n  \"HIG\",\n  \"ITW\",\n  \"AZN\",\n  \"YELP\",\n  \"MTOR\",\n  \"EVC\",\n  \"IRM\",\n  \"POST\",\n  \"EL\",\n  \"ING\",\n  \"UBS\",\n  \"KRG\",\n  \"VSH\",\n  \"TWLO\",\n  \"RLGY\",\n  \"HPP\",\n  \"CNO\",\n  \"JNPR\",\n  \"FEDU\",\n  \"AUD\",\n  \"BANC\",\n  \"INVH\",\n  \"OMF\",\n  \"LW\",\n  \"NHI\",\n  \"FE\",\n  \"NOC\",\n  \"ASH\",\n  \"O\",\n  \"FET\",\n  \"TPH\",\n  \"AMX\",\n  \"FLO\",\n  \"SHO\",\n  \"COF\",\n  \"FLT\",\n  \"IGT\",\n  \"RXN\",\n  \"OSK\",\n  \"DHR\",\n  \"AMN\",\n  \"RCL\",\n  \"W\",\n  \"IR\",\n  \"PEG\",\n  \"FBP\",\n  \"WEC\",\n  \"MDC\",\n  \"TISI\",\n  \"YUMC\",\n  \"ALV\",\n  \"BHP\",\n  \"BXP\",\n  \"BYD\",\n  \"WGO\",\n  \"KSU\",\n  \"PUMP\",\n  \"FBHS\",\n  \"TXT\",\n  \"AGI\",\n  \"ED\",\n  \"OUT\",\n  \"DBD\",\n  \"CBT\",\n  \"STOR\",\n  \"ABB\",\n  \"CP\",\n  \"PNR\",\n  \"PKI\",\n  \"ASB\",\n  \"UHS\",\n  \"ENB\",\n  \"TDC\",\n  \"AG\",\n  \"NAT\",\n  \"SPG\",\n  \"TRP\",\n  \"RH\",\n  \"CBRE\",\n  \"HGV\",\n  \"AEG\",\n  \"BTI\",\n  \"NVS\",\n  \"QSR\",\n  \"CXP\",\n  \"LDOS\",\n  \"MPW\",\n  \"CIM\",\n  \"ETH\",\n  \"AEE\",\n  \"HCC\",\n  \"MBT\",\n  \"TMO\",\n  \"OFC\",\n  \"STT\",\n  \"HLF\",\n  \"WRK\",\n  \"BR\",\n  \"MCD\",\n  \"PRO\",\n  \"TWO\",\n  \"AXL\",\n  \"SUN\",\n  \"ZEN\",\n  \"ATEN\",\n  \"CRC\",\n  \"ATUS\",\n  \"SIG\",\n  \"BDC\",\n  \"XPO\",\n  \"APO\",\n  \"CRI\",\n  \"AGCO\",\n  \"MMC\",\n  \"GNW\",\n  \"TMHC\",\n  \"URI\",\n  \"MCO\",\n  \"SLG\",\n  \"PAGS\",\n  \"L\",\n  \"MBI\",\n  \"VNO\",\n  \"PDS\",\n  \"BCC\",\n  \"PRTY\",\n  \"OGE\",\n  \"QGEN\",\n  \"EAT\",\n  \"DXC\",\n  \"UDR\",\n  \"KBR\",\n  \"STM\",\n  \"AQUA\",\n  \"EQT\",\n  \"SRE\",\n  \"SAVE\",\n  \"HTA\",\n  \"NPTN\",\n  \"SQM\",\n  \"SXT\",\n  \"OMC\",\n  \"CVA\",\n  \"LXP\",\n  \"FMC\",\n  \"KN\",\n  \"KW\",\n  \"SCS\",\n  \"CXW\",\n  \"DFS\",\n  \"PH\",\n  \"USA\",\n  \"CIEN\",\n  \"OIS\",\n  \"SCCO\",\n  \"YEXT\",\n  \"REVG\",\n  \"DVAX\",\n  \"ALLE\",\n  \"MHK\",\n  \"GRA\",\n  \"VNTR\",\n  \"SUM\",\n  \"ERJ\",\n  \"UNM\",\n  \"NJR\",\n  \"NNN\",\n  \"PAGP\",\n  \"AOS\",\n  \"DGX\",\n  \"CUZ\",\n  \"FIS\",\n  \"TRN\",\n  \"SPGI\",\n  \"AN\",\n  \"ABR\",\n  \"MCK\",\n  \"MUX\",\n  \"IEX\",\n  \"INN\",\n  \"TROX\",\n  \"OEC\",\n  \"ATH\",\n  \"ABC\",\n  \"EFX\",\n  \"DPZ\",\n  \"ENLC\",\n  \"TTM\",\n  \"OHI\",\n  \"SUI\",\n  \"MPLX\",\n  \"EC\",\n  \"SIX\",\n  \"VEEV\",\n  \"NVO\",\n  \"SWK\",\n  \"SNDR\",\n  \"EW\",\n  \"SKT\",\n  \"ROK\",\n  \"ALL\",\n  \"APRN\",\n  \"MFC\",\n  \"ZTS\",\n  \"BUD\",\n  \"UA\",\n  \"AROC\",\n  \"THO\",\n  \"KT\",\n  \"TGNA\",\n  \"CHGG\",\n  \"WM\",\n  \"ASX\",\n  \"ALB\",\n  \"RHI\",\n  \"HLT\",\n  \"DNOW\",\n  \"WPG\",\n  \"DRH\",\n  \"OC\",\n  \"CUBE\",\n  \"AGRO\",\n  \"AL\",\n  \"EVH\",\n  \"UIS\",\n  \"JELD\",\n  \"TDG\",\n  \"RY\",\n  \"SYK\",\n  \"HR\",\n  \"TRV\",\n  \"CSL\",\n  \"GWRE\",\n  \"ANET\",\n  \"WSM\",\n  \"EXP\",\n  \"BWA\",\n  \"SWCH\",\n  \"APLE\",\n  \"ADS\",\n  \"DRQ\",\n  \"AXS\",\n  \"MTDR\",\n  \"CAJ\",\n  \"AVDL\",\n  \"CNI\",\n  \"CAL\",\n  \"SAP\",\n  \"ESNT\",\n  \"NMFC\",\n  \"OI\",\n  \"MDU\",\n  \"PSXP\",\n  \"CWH\",\n  \"DECK\",\n  \"SMFG\",\n  \"LAZ\",\n  \"NEXA\",\n  \"PLNT\",\n  \"CAH\",\n  \"AYI\",\n  \"DVA\",\n  \"WCN\",\n  \"MYOV\",\n  \"ABM\",\n  \"NGL\",\n  \"ARCO\",\n  \"LNC\",\n  \"NGG\",\n  \"GTES\",\n  \"CMA\",\n  \"ALK\",\n  \"HUM\",\n  \"TEX\",\n  \"JWN\",\n  \"HFC\",\n  \"PQG\",\n  \"EDU\",\n  \"ESRT\",\n  \"LBRT\",\n  \"PEB\",\n  \"TSN\",\n  \"HSBC\",\n  \"OMI\",\n  \"MMP\",\n  \"HDB\",\n  \"TSE\",\n  \"WAL\",\n  \"SBS\",\n  \"ARE\",\n  \"TRGP\",\n  \"LYV\",\n  \"MFA\",\n  \"ECL\",\n  \"ELY\",\n  \"ARES\",\n  \"DDD\",\n  \"MKC\",\n  \"BSBR\",\n  \"RMD\",\n  \"BKU\",\n  \"H\",\n  \"EXPR\",\n  \"AVB\",\n  \"CVEO\",\n  \"TDOC\",\n  \"TRU\",\n  \"SOGO\",\n  \"XYL\",\n  \"SFUN\",\n  \"DY\",\n  \"MGP\",\n  \"SONY\",\n  \"MAA\",\n  \"AEL\",\n  \"WES\",\n  \"QUAD\",\n  \"RYN\",\n  \"VSTO\",\n  \"BHVN\",\n  \"PPG\",\n  \"ORI\",\n  \"TPC\",\n  \"XHR\",\n  \"MC\",\n  \"DDS\",\n  \"TMST\",\n  \"FR\",\n  \"CIG\",\n  \"CUK\",\n  \"MSI\",\n  \"FNV\",\n  \"KMX\",\n  \"LFC\",\n  \"BRX\",\n  \"LH\",\n  \"NBHC\",\n  \"FND\",\n  \"MOH\",\n  \"FUL\",\n  \"MRC\",\n  \"EXR\",\n  \"CPG\",\n  \"WHR\",\n  \"HSY\",\n  \"SEAS\",\n  \"PGRE\",\n  \"COO\",\n  \"JT\",\n  \"WRI\",\n  \"CPT\",\n  \"SHOP\",\n  \"MWA\",\n  \"GWB\",\n  \"BOOT\",\n  \"ALEX\",\n  \"TKR\",\n  \"RL\",\n  \"TD\",\n  \"BRO\",\n  \"ALSN\",\n  \"FAF\",\n  \"G\",\n  \"CFX\",\n  \"PANW\",\n  \"GPC\",\n  \"ELP\",\n  \"KMPR\",\n  \"BGS\",\n  \"CRS\",\n  \"AMC\",\n  \"BVN\",\n  \"EXK\",\n  \"BLK\",\n  \"POR\",\n  \"BBL\",\n  \"GCI\",\n  \"DYN\",\n  \"HOG\",\n  \"STWD\",\n  \"UNVR\",\n  \"TUP\",\n  \"FSM\",\n  \"XIN\",\n  \"ADNT\",\n  \"HAE\",\n  \"DLX\",\n  \"GEO\",\n  \"AAP\",\n  \"AON\",\n  \"SKM\",\n  \"MAN\",\n  \"TNET\",\n  \"LZB\",\n  \"FTSI\",\n  \"BXS\",\n  \"TRI\",\n  \"JQC\",\n  \"GMS\",\n  \"PBI\",\n  \"RJF\",\n  \"TTC\",\n  \"BAM\",\n  \"SHW\",\n  \"AMP\",\n  \"SNR\",\n  \"WSO\",\n  \"ATO\",\n  \"STAG\",\n  \"WAB\",\n  \"PFGC\",\n  \"MUSA\",\n  \"DK\",\n  \"CM\",\n  \"SWX\",\n  \"MTW\",\n  \"IRS\",\n  \"MIC\",\n  \"CNK\",\n  \"OCN\",\n  \"ENS\",\n  \"TFX\",\n  \"EQC\",\n  \"DEI\",\n  \"UFS\",\n  \"MTN\",\n  \"SPR\",\n  \"LEE\",\n  \"NRZ\",\n  \"HBM\",\n  \"EVRI\",\n  \"LCI\",\n  \"PII\",\n  \"CTT\",\n  \"AHH\",\n  \"SF\",\n  \"DCP\",\n  \"VEDL\",\n  \"WBS\",\n  \"WST\",\n  \"SCI\",\n  \"BERY\",\n  \"ENIA\",\n  \"SPNT\",\n  \"CCK\",\n  \"WNC\",\n  \"ETR\",\n  \"FLS\",\n  \"WBT\",\n  \"CRH\",\n  \"GHL\",\n  \"IPI\",\n  \"HIW\",\n  \"CPS\",\n  \"APH\",\n  \"REXR\",\n  \"TK\",\n  \"RS\",\n  \"HEI\",\n  \"CFR\",\n  \"YPF\",\n  \"CMG\",\n  \"RPM\",\n  \"BNS\",\n  \"BWXT\",\n  \"WOW\",\n  \"PRMW\",\n  \"WOR\",\n  \"HUBS\",\n  \"QUOT\",\n  \"COLD\",\n  \"NS\",\n  \"FMX\",\n  \"PKG\",\n  \"CLX\",\n  \"VGR\",\n  \"HII\",\n  \"PRGO\",\n  \"MSA\",\n  \"SQNS\",\n  \"ACM\",\n  \"HLI\",\n  \"CMP\",\n  \"SPB\",\n  \"IFF\",\n  \"RYI\",\n  \"MAC\",\n  \"IQV\",\n  \"WNS\",\n  \"VIV\",\n  \"FCF\",\n  \"SNP\",\n  \"RPAI\",\n  \"IVR\",\n  \"TTI\",\n  \"THS\",\n  \"RRD\",\n  \"TBI\",\n  \"BHE\",\n  \"BCE\",\n  \"ENIC\",\n  \"SPXC\",\n  \"ARCH\",\n  \"AM\",\n  \"TGI\",\n  \"AWK\",\n  \"R\",\n  \"EXG\",\n  \"BKH\",\n  \"AVD\",\n  \"CMCM\",\n  \"GPN\",\n  \"HE\",\n  \"SJI\",\n  \"UGI\",\n  \"CBD\",\n  \"SMG\",\n  \"WAT\",\n  \"FLOW\",\n  \"CWT\",\n  \"MTB\",\n  \"CRL\",\n  \"FDS\",\n  \"JLL\",\n  \"HSC\",\n  \"SAIL\",\n  \"PNM\",\n  \"MXL\",\n  \"AVY\",\n  \"WMS\",\n  \"DHT\",\n  \"AVA\",\n  \"WLK\",\n  \"PSA\",\n  \"NTB\",\n  \"STE\",\n  \"DCI\",\n  \"FTAI\",\n  \"AIZ\",\n  \"BURL\",\n  \"LEG\",\n  \"COR\",\n  \"AAN\",\n  \"SOI\",\n  \"PRA\",\n  \"GPMT\",\n  \"INT\",\n  \"LPG\",\n  \"BAP\",\n  \"BC\",\n  \"SNN\",\n  \"CUBI\",\n  \"CADE\",\n  \"AJRD\",\n  \"APAM\",\n  \"PEI\",\n  \"ST\",\n  \"AKR\",\n  \"CHKR\",\n  \"MLI\",\n  \"ROG\",\n  \"UMC\",\n  \"KEYS\",\n  \"HRC\",\n  \"FRT\",\n  \"ASC\",\n  \"STC\",\n  \"IRT\",\n  \"LII\",\n  \"OSG\",\n  \"GOOS\",\n  \"BMO\",\n  \"EPAM\",\n  \"PVH\",\n  \"MTD\",\n  \"EGHT\",\n  \"ESS\",\n  \"INGR\",\n  \"HT\",\n  \"WPC\",\n  \"AWR\",\n  \"WLKP\",\n  \"BFAM\",\n  \"TEN\",\n  \"SUP\",\n  \"LL\",\n  \"LEA\",\n  \"APD\",\n  \"SXC\",\n  \"ATTO\",\n  \"DAR\",\n  \"AJG\",\n  \"RGA\",\n  \"KB\",\n  \"SNV\",\n  \"MOD\",\n  \"NSH\",\n  \"SNA\",\n  \"CLDT\",\n  \"DEO\",\n  \"UNFI\",\n  \"SAH\",\n  \"NVTA\",\n  \"HZO\",\n  \"TNK\",\n  \"HMC\",\n  \"GPI\",\n  \"CPA\",\n  \"HOV\",\n  \"CTLT\",\n  \"ROBO\",\n  \"NMM\",\n  \"SAIC\",\n  \"TPX\",\n  \"VVR\",\n  \"UL\",\n  \"HVT\",\n  \"GOLD\",\n  \"RLI\",\n  \"KEX\",\n  \"OR\",\n  \"B\",\n  \"DIN\",\n  \"NM\",\n  \"GVA\",\n  \"EVTC\",\n  \"DESP\",\n  \"TGP\",\n  \"NFJ\",\n  \"ENZ\",\n  \"KRA\",\n  \"KDMN\",\n  \"CNS\",\n  \"LXU\",\n  \"SON\",\n  \"GDOT\",\n  \"ROP\",\n  \"NLS\",\n  \"SITE\",\n  \"RBA\",\n  \"EFR\",\n  \"TEF\",\n  \"CSLT\",\n  \"KEP\",\n  \"CEIX\",\n  \"GIL\",\n  \"KYN\",\n  \"NVGS\",\n  \"MCY\",\n  \"AZUL\",\n  \"TCS\",\n  \"GATX\",\n  \"EPC\",\n  \"SRG\",\n  \"MSM\",\n  \"GEF\",\n  \"LOMA\",\n  \"HCHC\",\n  \"GGG\",\n  \"TDS\",\n  \"MTH\",\n  \"GNL\",\n  \"BXC\",\n  \"NPO\",\n  \"RCI\",\n  \"BSMX\",\n  \"BAK\",\n  \"SEM\",\n  \"CCU\",\n  \"GEL\",\n  \"HEP\",\n  \"GNRC\",\n  \"WD\",\n  \"DNB\",\n  \"RSKD\",\n  \"IVC\",\n  \"ITT\",\n  \"CHH\",\n  \"BDJ\",\n  \"PGTI\",\n  \"MDP\",\n  \"WWE\",\n  \"RNG\",\n  \"EHC\",\n  \"DTE\",\n  \"DEA\",\n  \"ERF\",\n  \"ETV\",\n  \"NFG\",\n  \"CNNE\",\n  \"WCC\",\n  \"BRC\",\n  \"AAT\",\n  \"ENR\",\n  \"NSA\",\n  \"RFP\",\n  \"USAC\",\n  \"WSR\",\n  \"RWT\",\n  \"SFL\",\n  \"AME\",\n  \"DCT\",\n  \"SR\",\n  \"HRTG\",\n  \"AYX\",\n  \"BEDU\",\n  \"CIB\",\n  \"BLD\",\n  \"NETI\",\n  \"BHLB\",\n  \"RE\",\n  \"FBC\",\n  \"CLS\",\n  \"PHK\",\n  \"GBX\",\n  \"VRS\",\n  \"HUBB\",\n  \"PBA\",\n  \"UAN\",\n  \"GMED\",\n  \"PB\",\n  \"VVI\",\n  \"TU\",\n  \"LCII\",\n  \"ADX\",\n  \"CSU\",\n  \"APTS\",\n  \"JILL\",\n  \"WWW\",\n  \"RPT\",\n  \"AFG\",\n  \"CYD\",\n  \"FPH\",\n  \"MNR\",\n  \"FN\",\n  \"CPK\",\n  \"ORC\",\n  \"SLF\",\n  \"KL\",\n  \"WK\",\n  \"FUN\",\n  \"CACI\",\n  \"SUPV\",\n  \"BOH\",\n  \"CEPU\",\n  \"ENV\",\n  \"AIN\",\n  \"CAE\",\n  \"NUV\",\n  \"HXL\",\n  \"SWM\",\n  \"EME\",\n  \"OFG\",\n  \"GLT\",\n  \"PHG\",\n  \"CMO\",\n  \"BXMX\",\n  \"AZO\",\n  \"JKS\",\n  \"TM\",\n  \"UVV\",\n  \"LAD\",\n  \"VLD\",\n  \"TWI\",\n  \"RYAM\",\n  \"DCO\",\n  \"HYT\",\n  \"FCPT\",\n  \"ENBL\",\n  \"MFG\",\n  \"CBB\",\n  \"NVRO\",\n  \"MMS\",\n  \"HTGC\",\n  \"NR\",\n  \"RVT\",\n  \"FMS\",\n  \"EMD\",\n  \"RDY\",\n  \"TLK\",\n  \"HTH\",\n  \"PKX\",\n  \"PAG\",\n  \"SSTK\",\n  \"BMA\",\n  \"FDP\",\n  \"BGY\",\n  \"AB\",\n  \"NUS\",\n  \"MD\",\n  \"FTK\",\n  \"PAM\",\n  \"JBT\",\n  \"PJT\",\n  \"BKE\",\n  \"RHP\",\n  \"ADC\",\n  \"ENVA\",\n  \"CMRE\",\n  \"ARW\",\n  \"NEA\",\n  \"AMG\",\n  \"NMR\",\n  \"LSI\",\n  \"EPR\",\n  \"IGD\",\n  \"GUT\",\n  \"AIT\",\n  \"MODN\",\n  \"SNX\",\n  \"TX\",\n  \"BSAC\",\n  \"PTR\",\n  \"SSL\",\n  \"HMN\",\n  \"BMI\",\n  \"CHCT\",\n  \"HHC\",\n  \"PMT\",\n  \"SHAK\",\n  \"GOLF\",\n  \"WTTR\",\n  \"DOOR\",\n  \"EGP\",\n  \"PSO\",\n  \"AOD\",\n  \"EEX\",\n  \"VCV\",\n  \"BIO\",\n  \"E\",\n  \"KRC\",\n  \"ACCO\",\n  \"TRNO\",\n  \"ASGN\",\n  \"CVNA\",\n  \"GER\",\n  \"ATKR\",\n  \"SJR\",\n  \"SA\",\n  \"NGVT\",\n  \"BY\",\n  \"VMI\",\n  \"FCN\",\n  \"WEX\",\n  \"CURO\",\n  \"KODK\",\n  \"MTRN\",\n  \"FI\",\n  \"SPH\",\n  \"NEWR\",\n  \"VCRA\",\n  \"BZH\",\n  \"PRI\",\n  \"STAR\",\n  \"LTC\",\n  \"ELS\",\n  \"TGS\",\n  \"CDR\",\n  \"BIF\",\n  \"ASIX\",\n  \"TEO\",\n  \"ZEPP\",\n  \"SRT\",\n  \"CBZ\",\n  \"RQI\",\n  \"OGS\",\n  \"RBC\",\n  \"CIO\",\n  \"NWE\",\n  \"POLY\",\n  \"GOL\",\n  \"ELF\",\n  \"VAC\",\n  \"VEC\",\n  \"WBK\",\n  \"IIF\",\n  \"AIR\",\n  \"EBR\",\n  \"HASI\",\n  \"CVI\",\n  \"AWF\",\n  \"FBK\",\n  \"ACC\",\n  \"RELX\",\n  \"JE\",\n  \"RGS\",\n  \"ITGR\",\n  \"KRO\",\n  \"SB\",\n  \"CCO\",\n  \"EBS\",\n  \"EURN\",\n  \"QTWO\",\n  \"NOA\",\n  \"CALX\",\n  \"AHT\",\n  \"TGH\",\n  \"EVA\",\n  \"ATR\",\n  \"ABG\",\n  \"DS\",\n  \"ARR\",\n  \"ATGE\",\n  \"WHD\",\n  \"JPS\",\n  \"CATO\",\n  \"MTX\",\n  \"BOE\",\n  \"FENG\",\n  \"TREX\",\n  \"FTS\",\n  \"CCS\",\n  \"CLB\",\n  \"CIT\",\n  \"UTI\",\n  \"BGB\",\n  \"IBP\",\n  \"RNGR\",\n  \"RACE\",\n  \"ROL\",\n  \"KOP\",\n  \"HI\",\n  \"BTCM\",\n  \"ETY\",\n  \"GLP\",\n  \"RYB\",\n  \"MAIN\",\n  \"DQ\",\n  \"TYL\",\n  \"AVAL\",\n  \"FPL\",\n  \"MOV\",\n  \"GTS\",\n  \"JRO\",\n  \"ARC\",\n  \"KFY\",\n  \"GIB\",\n  \"BCEI\",\n  \"DFIN\",\n  \"NNI\",\n  \"EVF\",\n  \"NTG\",\n  \"RMAX\",\n  \"HRI\",\n  \"LDL\",\n  \"PRLB\",\n  \"BIT\",\n  \"MMI\",\n  \"CR\",\n  \"CEQP\",\n  \"LNN\",\n  \"GDV\",\n  \"PEN\",\n  \"AGR\",\n  \"TKC\",\n  \"VMO\",\n  \"CRK\",\n  \"NWN\",\n  \"TSQ\",\n  \"CODI\",\n  \"IGR\",\n  \"SAM\",\n  \"DSX\",\n  \"IIPR\",\n  \"CNMD\",\n  \"HEQ\",\n  \"BPMP\",\n  \"CEN\",\n  \"UNF\",\n  \"EMO\",\n  \"NEP\",\n  \"CNA\",\n  \"CRY\",\n  \"SSD\",\n  \"AMBC\",\n  \"TSLX\",\n  \"TNC\",\n  \"UGP\",\n  \"CO\",\n  \"TDY\",\n  \"SFE\",\n  \"TRTX\",\n  \"SRI\",\n  \"MEI\",\n  \"USPH\",\n  \"JOE\",\n  \"TARO\",\n  \"HIX\",\n  \"TRTN\",\n  \"PARR\",\n  \"ASA\",\n  \"NNA\",\n  \"REX\",\n  \"EXTN\",\n  \"AWP\",\n  \"FPI\",\n  \"GLOB\",\n  \"BNED\",\n  \"CPF\",\n  \"DSL\",\n  \"PBFX\",\n  \"RCUS\",\n  \"AMRC\",\n  \"SD\",\n  \"THG\",\n  \"NOAH\",\n  \"IDA\",\n  \"MED\",\n  \"ETJ\",\n  \"NSL\",\n  \"WMK\",\n  \"IDT\",\n  \"TNP\",\n  \"NGS\",\n  \"AGS\",\n  \"GPRK\",\n  \"FOR\",\n  \"PPT\",\n  \"VLRS\",\n  \"CIR\",\n  \"THR\",\n  \"RNR\",\n  \"CHE\",\n  \"DHX\",\n  \"MUC\",\n  \"NSP\",\n  \"BBN\",\n  \"NZF\",\n  \"CBU\",\n  \"NX\",\n  \"EARN\",\n  \"PFSI\",\n  \"AQN\",\n  \"EDD\",\n  \"FEI\",\n  \"GPX\",\n  \"MCA\",\n  \"VOC\",\n  \"SRV\",\n  \"ETO\",\n  \"ASR\",\n  \"PSB\",\n  \"MN\",\n  \"AFI\",\n  \"ICD\",\n  \"CW\",\n  \"ALE\",\n  \"Y\",\n  \"HZN\",\n  \"KOF\",\n  \"PHI\",\n  \"CTR\",\n  \"MFL\",\n  \"ORA\",\n  \"ESTE\",\n  \"VKQ\",\n  \"WMC\",\n  \"LEJU\",\n  \"NCZ\",\n  \"UTF\",\n  \"GHY\",\n  \"PAC\",\n  \"AZZ\",\n  \"SJT\",\n  \"DX\",\n  \"IO\",\n  \"BLX\",\n  \"EFC\",\n  \"ACP\",\n  \"ICL\",\n  \"MIE\",\n  \"NHF\",\n  \"PHD\",\n  \"SMHI\",\n  \"HNI\",\n  \"NEU\",\n  \"FSS\",\n  \"HCI\",\n  \"NXRT\",\n  \"ISD\",\n  \"NVG\",\n  \"PHT\",\n  \"PIM\",\n  \"TYG\",\n  \"FRO\",\n  \"HY\",\n  \"CLH\",\n  \"USNA\",\n  \"WPP\",\n  \"IFN\",\n  \"TREC\",\n  \"MATX\",\n  \"PKE\",\n  \"JRS\",\n  \"MAXR\",\n  \"OXM\",\n  \"JDD\",\n  \"SMLP\",\n  \"GTY\",\n  \"WTS\",\n  \"BFZ\",\n  \"ECOM\",\n  \"CEO\",\n  \"BBW\",\n  \"NRK\",\n  \"AVK\",\n  \"HIO\",\n  \"NMZ\",\n  \"PTY\",\n  \"TR\",\n  \"CABO\",\n  \"AAC\",\n  \"BCX\",\n  \"GIM\",\n  \"GPM\",\n  \"AGM\",\n  \"UMH\",\n  \"FIX\",\n  \"HQH\",\n  \"CAF\",\n  \"CAI\",\n  \"GLOP\",\n  \"MG\",\n  \"OIA\",\n  \"PCK\",\n  \"TEI\",\n  \"VHI\",\n  \"PUK\",\n  \"JAX\",\n  \"DLB\",\n  \"TPB\",\n  \"CII\",\n  \"THQ\",\n  \"MCR\",\n  \"BTO\",\n  \"BIP\",\n  \"WIW\",\n  \"MCS\",\n  \"CIA\",\n  \"CLW\",\n  \"CEM\",\n  \"GMRE\",\n  \"IHD\",\n  \"ORN\",\n  \"MKL\",\n  \"EOI\",\n  \"FICO\",\n  \"GRC\",\n  \"OLP\",\n  \"PZN\",\n  \"SJW\",\n  \"GFF\",\n  \"LEO\",\n  \"FLY\",\n  \"AGX\",\n  \"SMP\",\n  \"GNK\",\n  \"HQL\",\n  \"IGI\",\n  \"PFN\",\n  \"EIG\",\n  \"BST\",\n  \"STK\",\n  \"DNP\",\n  \"INSW\",\n  \"NCV\",\n  \"PCN\",\n  \"CHT\",\n  \"ETW\",\n  \"KAMN\",\n  \"USM\",\n  \"TDW\",\n  \"HIL\",\n  \"NAD\",\n  \"OOMA\",\n  \"UVE\",\n  \"BTZ\",\n  \"CXE\",\n  \"DPG\",\n  \"FFC\",\n  \"FPF\",\n  \"MIXT\",\n  \"MTL\",\n  \"NL\",\n  \"PCI\",\n  \"VTA\",\n  \"SHG\",\n  \"MQT\",\n  \"CORR\",\n  \"REV\",\n  \"EGY\",\n  \"GHM\",\n  \"GCO\",\n  \"RGR\",\n  \"MITT\",\n  \"SMM\",\n  \"JPC\",\n  \"NVR\",\n  \"ESE\",\n  \"ACRE\",\n  \"HFRO\",\n  \"DCF\",\n  \"HMLP\",\n  \"NIM\",\n  \"NRP\",\n  \"PBT\",\n  \"FGB\",\n  \"PFS\",\n  \"MPA\",\n  \"YRD\",\n  \"JRI\",\n  \"LRN\",\n  \"GNT\",\n  \"ARDC\",\n  \"ECC\",\n  \"EFT\",\n  \"EHI\",\n  \"EOD\",\n  \"ETG\",\n  \"FSD\",\n  \"JGH\",\n  \"KNOP\",\n  \"MYJ\",\n  \"RENN\",\n  \"VRTV\",\n  \"TSI\",\n  \"IHG\",\n  \"KIO\",\n  \"SOR\",\n  \"KMF\",\n  \"MYE\",\n  \"PMF\",\n  \"FC\",\n  \"NC\",\n  \"BFK\",\n  \"CEA\",\n  \"HBB\",\n  \"IGA\",\n  \"IIM\",\n  \"NAN\",\n  \"NDP\",\n  \"RM\",\n  \"UTL\",\n  \"SCL\",\n  \"EOS\",\n  \"SPXX\",\n  \"NTP\",\n  \"DBL\",\n  \"MUI\",\n  \"NIE\",\n  \"ASG\",\n  \"STN\",\n  \"GHC\",\n  \"BRT\",\n  \"CSV\",\n  \"DSM\",\n  \"EBF\",\n  \"EVT\",\n  \"FMO\",\n  \"FOF\",\n  \"HNP\",\n  \"IDE\",\n  \"MMT\",\n  \"MMU\",\n  \"RCS\",\n  \"SZC\",\n  \"VGM\",\n  \"DSU\",\n  \"IQI\",\n  \"NP\",\n  \"WTM\",\n  \"SBOW\",\n  \"CHMI\",\n  \"AFB\",\n  \"GOF\",\n  \"JFR\",\n  \"BSM\",\n  \"IRL\",\n  \"JTA\",\n  \"KF\",\n  \"KTF\",\n  \"MPX\",\n  \"NAC\",\n  \"ORAN\",\n  \"PDT\",\n  \"PML\",\n  \"RMT\",\n  \"WHG\",\n  \"PGZ\",\n  \"CTBB\",\n  \"TG\",\n  \"UHT\",\n  \"LITB\",\n  \"ZTR\",\n  \"KAI\",\n  \"UBA\",\n  \"MHO\",\n  \"SCM\",\n  \"BGH\",\n  \"BGR\",\n  \"BGX\",\n  \"BUI\",\n  \"CEE\",\n  \"ETB\",\n  \"FIV\",\n  \"HYI\",\n  \"IVH\",\n  \"KREF\",\n  \"MAV\",\n  \"MCN\",\n  \"MYN\",\n  \"NEV\",\n  \"NPK\",\n  \"PFO\",\n  \"PMX\",\n  \"SOJC\",\n  \"STON\",\n  \"TLYS\",\n  \"GSL\",\n  \"TRC\",\n  \"MUJ\",\n  \"PLOW\",\n  \"RNP\",\n  \"DMO\",\n  \"JTD\",\n  \"VPG\",\n  \"BGT\",\n  \"MGU\",\n  \"CAPL\",\n  \"DKL\",\n  \"ACH\",\n  \"ALG\",\n  \"BLW\",\n  \"BSL\",\n  \"BTT\",\n  \"DTW\",\n  \"DUKH\",\n  \"GRX\",\n  \"IAE\",\n  \"JCE\",\n  \"JCO\",\n  \"MFM\",\n  \"MQY\",\n  \"MYI\",\n  \"PMM\",\n  \"SAFE\",\n  \"VET\",\n  \"WF\",\n  \"JHI\",\n  \"JP\",\n  \"PFL\",\n  \"BCH\",\n  \"IX\",\n  \"NINE\",\n  \"GF\",\n  \"FF\",\n  \"PCF\",\n  \"PDI\",\n  \"AC\",\n  \"PEO\",\n  \"OPY\",\n  \"KWR\",\n  \"CMSA\",\n  \"ARD\",\n  \"AZRE\",\n  \"BHK\",\n  \"BPT\",\n  \"CBH\",\n  \"CELP\",\n  \"COE\",\n  \"DFP\",\n  \"DIAX\",\n  \"EDI\",\n  \"EFL\",\n  \"FAM\",\n  \"FDEU\",\n  \"FIF\",\n  \"JLS\",\n  \"KSM\",\n  \"LDP\",\n  \"LGI\",\n  \"MLR\",\n  \"MNP\",\n  \"MXF\",\n  \"NIQ\",\n  \"NXQ\",\n  \"OPP\",\n  \"PAR\",\n  \"PFFD\",\n  \"PNI\",\n  \"PYN\",\n  \"SBI\",\n  \"SOJB\",\n  \"TVC\",\n  \"VTN\",\n  \"WIA\",\n  \"CIF\",\n  \"BBU\",\n  \"MSB\",\n  \"BH\",\n  \"NCA\",\n  \"GPJA\",\n  \"ALX\",\n  \"EDN\",\n  \"MVO\",\n  \"CLPR\",\n  \"GBL\",\n  \"AFT\",\n  \"AP\",\n  \"ASPN\",\n  \"BKT\",\n  \"BNY\",\n  \"BYM\",\n  \"CPAC\",\n  \"CTS\",\n  \"CULP\",\n  \"DHF\",\n  \"DTY\",\n  \"EGF\",\n  \"EMP\",\n  \"ENJ\",\n  \"FCT\",\n  \"FLC\",\n  \"FRA\",\n  \"FT\",\n  \"GDL\",\n  \"GGM\",\n  \"GGT\",\n  \"GNE\",\n  \"GSBD\",\n  \"HESM\",\n  \"HTD\",\n  \"JPT\",\n  \"KEN\",\n  \"LAC\",\n  \"MCB\",\n  \"MHI\",\n  \"MSP\",\n  \"MTR\",\n  \"MUA\",\n  \"MYD\",\n  \"NID\",\n  \"NXJ\",\n  \"NXN\",\n  \"PHX\",\n  \"RZB\",\n  \"SPLP\",\n  \"SRLP\",\n  \"TBB\",\n  \"TDA\",\n  \"TDF\",\n  \"THW\",\n  \"TPL\",\n  \"TTP\",\n  \"UFI\",\n  \"UZA\",\n  \"VGI\",\n  \"VJET\",\n  \"VPV\",\n  \"ZNH\",\n  \"BGIO\",\n  \"HGH\",\n  \"RA\",\n  \"SHI\",\n  \"DTJ\",\n  \"RZA\",\n  \"MIN\",\n  \"CXH\",\n  \"TPVG\",\n  \"EVTL\",\n  \"BFS\",\n  \"PYT\",\n  \"TAC\",\n  \"TCI\",\n  \"ACV\",\n  \"AEB\",\n  \"AGD\",\n  \"AIF\",\n  \"AIW\",\n  \"AJX\",\n  \"AJXA\",\n  \"AMOV\",\n  \"ARL\",\n  \"AXR\",\n  \"BBDO\",\n  \"BEP\",\n  \"BKN\",\n  \"BME\",\n  \"BTA\",\n  \"BWG\",\n  \"CCM\",\n  \"CCZ\",\n  \"CGA\",\n  \"CHN\",\n  \"CINR\",\n  \"CMU\",\n  \"CRT\",\n  \"CTDD\",\n  \"DAC\",\n  \"DDF\",\n  \"SST\",\n  \"DDT\",\n  \"DEX\",\n  \"DIVO\",\n  \"DLNG\",\n  \"DMB\",\n  \"DRD\",\n  \"DRUA\",\n  \"DTEC\",\n  \"DTF\",\n  \"DVD\",\n  \"EAI\",\n  \"ECCB\",\n  \"ECCY\",\n  \"EDF\",\n  \"EEA\",\n  \"ELC\",\n  \"ELVT\",\n  \"EMF\",\n  \"ENO\",\n  \"EOT\",\n  \"EQS\",\n  \"ETX\",\n  \"EVG\",\n  \"EVN\",\n  \"EXD\",\n  \"FEO\",\n  \"FFA\",\n  \"FMN\",\n  \"FMY\",\n  \"GAM\",\n  \"GBAB\",\n  \"GCV\",\n  \"GDO\",\n  \"GGZ\",\n  \"GIG\",\n  \"GJH\",\n  \"GJO\",\n  \"GJP\",\n  \"GJR\",\n  \"GJS\",\n  \"GJT\",\n  \"GMTA\",\n  \"HIE\",\n  \"HPF\",\n  \"HPI\",\n  \"HPS\",\n  \"HTFA\",\n  \"HTY\",\n  \"HYB\",\n  \"IBA\",\n  \"IHC\",\n  \"IHIT\",\n  \"IHTA\",\n  \"INDF\",\n  \"INSI\",\n  \"ITCB\",\n  \"JBK\",\n  \"JEMD\",\n  \"JEQ\",\n  \"JHB\",\n  \"JHS\",\n  \"JHX\",\n  \"JMM\",\n  \"JMP\",\n  \"JOF\",\n  \"JPI\",\n  \"JSD\",\n  \"KFS\",\n  \"KRP\",\n  \"KTH\",\n  \"KTN\",\n  \"LND\",\n  \"LUB\",\n  \"LXFR\",\n  \"MANU\",\n  \"MCI\",\n  \"MDLQ\",\n  \"MDLX\",\n  \"MFD\",\n  \"MFV\",\n  \"MGF\",\n  \"MHD\",\n  \"MHF\",\n  \"MHLA\",\n  \"MHN\",\n  \"MHNC\",\n  \"MIY\",\n  \"MLP\",\n  \"MMD\",\n  \"MPV\",\n  \"MSD\",\n  \"MUE\",\n  \"MVT\",\n  \"MXE\",\n  \"MYC\",\n  \"NAZ\",\n  \"NBB\",\n  \"HLGN\",\n  \"NGVC\",\n  \"NKG\",\n  \"NKX\",\n  \"NMI\",\n  \"NMS\",\n  \"NMT\",\n  \"NNY\",\n  \"NOM\",\n  \"NPV\",\n  \"NQP\",\n  \"NRT\",\n  \"NSS\",\n  \"NTZ\",\n  \"NUO\",\n  \"NUW\",\n  \"NWHM\",\n  \"NXC\",\n  \"NXP\",\n  \"NXR\",\n  \"ODC\",\n  \"PAI\",\n  \"PCM\",\n  \"PCQ\",\n  \"PFD\",\n  \"PFH\",\n  \"PGP\",\n  \"PKO\",\n  \"PMO\",\n  \"PNF\",\n  \"PSF\",\n  \"PYS\",\n  \"PZC\",\n  \"RFI\",\n  \"RGT\",\n  \"RIV\",\n  \"SAR\",\n  \"SBR\",\n  \"SCD\",\n  \"SCX\",\n  \"SFB\",\n  \"SOL\",\n  \"SPE\",\n  \"SWZ\",\n  \"SXI\",\n  \"TDI\",\n  \"TPVY\",\n  \"TPZ\",\n  \"TVE\",\n  \"TWN\",\n  \"TY\",\n  \"UBP\",\n  \"TDCX\",\n  \"USDP\",\n  \"VBF\",\n  \"VLT\",\n  \"VNCE\",\n  \"WALA\",\n  \"WEA\",\n  \"XFLT\",\n  \"ZYME\",\n  \"ALC\",\n  \"AMCR\",\n  \"AMRX\",\n  \"HKIB\",\n  \"PLAN\",\n  \"FINS\",\n  \"ACA\",\n  \"ARGO\",\n  \"ARLO\",\n  \"AMK\",\n  \"ACB\",\n  \"AVLR\",\n  \"AVNS\",\n  \"AVTR\",\n  \"EQH\",\n  \"AX\",\n  \"BRPM\",\n  \"BCSF\",\n  \"BBDC\",\n  \"BHC\",\n  \"BBAR\",\n  \"BEST\",\n  \"BJ\",\n  \"BSTZ\",\n  \"BE\",\n  \"BORR\",\n  \"BHR\",\n  \"MNRL\",\n  \"BSIG\",\n  \"BV\",\n  \"CANG\",\n  \"CGC\",\n  \"CPRI\",\n  \"CDAY\",\n  \"CHRA\",\n  \"CHWY\",\n  \"CWEN\",\n  \"CNF\",\n  \"CCEP\",\n  \"CFXA\",\n  \"CTK\",\n  \"CPLG\",\n  \"CNR\",\n  \"CTVA\",\n  \"CWK\",\n  \"DELL\",\n  \"DBI\",\n  \"DCUE\",\n  \"DOW\",\n  \"DD\",\n  \"DT\",\n  \"ELAN\",\n  \"ESTC\",\n  \"ESI\",\n  \"DAVA\",\n  \"ET\",\n  \"EQNR\",\n  \"ETRN\",\n  \"EPRT\",\n  \"EB\",\n  \"EVRG\",\n  \"ACR\",\n  \"FPAC\",\n  \"FTCH\",\n  \"FSLY\",\n  \"FVRR\",\n  \"FLNG\",\n  \"FSK\",\n  \"GL\",\n  \"EAF\",\n  \"GHG\",\n  \"GSAH\",\n  \"GOTU\",\n  \"HNGR\",\n  \"HEXO\",\n  \"HGLB\",\n  \"HUYA\",\n  \"IAA\",\n  \"INSP\",\n  \"IFS\",\n  \"JEF\",\n  \"JMIA\",\n  \"KDP\",\n  \"KTB\",\n  \"LHX\",\n  \"LAIX\",\n  \"LHC\",\n  \"LEVI\",\n  \"LIN\",\n  \"LTHM\",\n  \"RAMP\",\n  \"MGY\",\n  \"MEC\",\n  \"MDLA\",\n  \"AMPY\",\n  \"MUFG\",\n  \"MOGU\",\n  \"CTOS\",\n  \"NIO\",\n  \"JHAA\",\n  \"NVT\",\n  \"ONE\",\n  \"ORCC\",\n  \"PD\",\n  \"PSN\",\n  \"PVL\",\n  \"PRT\",\n  \"PHR\",\n  \"NRGX\",\n  \"PINS\",\n  \"PSTL\",\n  \"PROS\",\n  \"NEW\",\n  \"RMED\",\n  \"PACK\",\n  \"RC\",\n  \"REZI\",\n  \"RVI\",\n  \"RVLV\",\n  \"RMM\",\n  \"RSF\",\n  \"RMI\",\n  \"SCPE\",\n  \"SRL\",\n  \"SITC\",\n  \"WORK\",\n  \"SMAR\",\n  \"SWI\",\n  \"SPAQ\",\n  \"SPOT\",\n  \"MSC\",\n  \"STG\",\n  \"JOBY\",\n  \"NOVA\",\n  \"SUZ\",\n  \"TAK\",\n  \"TALO\",\n  \"TME\",\n  \"TEAF\",\n  \"TUFN\",\n  \"USX\",\n  \"UBER\",\n  \"UI\",\n  \"VAPO\",\n  \"VNE\",\n  \"VCIF\",\n  \"VIST\",\n  \"WEI\",\n  \"WH\",\n  \"XYF\",\n  \"YETI\",\n  \"ZUO\",\n  \"AEF\",\n  \"VRT\",\n  \"TFII\",\n  \"ACEL\",\n  \"AIO\",\n  \"BILL\",\n  \"RFL\",\n  \"BKR\",\n  \"BRBR\",\n  \"BMEZ\",\n  \"J\",\n  \"EIC\",\n  \"FINV\",\n  \"BRMK\",\n  \"EPAC\",\n  \"CSPR\",\n  \"DAO\",\n  \"FHI\",\n  \"SCU\",\n  \"NTCO\",\n  \"ONTO\",\n  \"PEAK\",\n  \"NREF\",\n  \"PINE\",\n  \"PING\",\n  \"NET\",\n  \"NEX\",\n  \"OCFT\",\n  \"PIPR\",\n  \"NVST\",\n  \"NMCO\",\n  \"SI\",\n  \"OVV\",\n  \"SPCE\",\n  \"CHPT\",\n  \"TFC\",\n  \"VVNT\",\n  \"VEL\",\n  \"WTRG\",\n  \"HCXZ\",\n  \"HCXY\",\n  \"NTEST\",\n  \"ENBA\",\n  \"NRUC\",\n  \"IFFT\",\n  \"PRS\",\n  \"SREA\",\n  \"SAF\",\n  \"AFGC\",\n  \"AEFC\",\n  \"AQNB\",\n  \"AQNA\",\n  \"CMSD\",\n  \"CMSC\",\n  \"UNMA\",\n  \"UZB\",\n  \"ARGD\",\n  \"CUBB\",\n  \"DUKB\",\n  \"ECCX\",\n  \"WTRU\",\n  \"MGR\",\n  \"BSA\",\n  \"TBC\",\n  \"AFGE\",\n  \"AFGB\",\n  \"RCB\",\n  \"RCA\",\n  \"PBC\",\n  \"PBY\",\n  \"SOLN\",\n  \"QVCD\",\n  \"AIC\",\n  \"DTP\",\n  \"ELAT\",\n  \"GSLD\",\n  \"SOJD\",\n  \"QVCC\",\n  \"NFH\",\n  \"SJIJ\",\n  \"SWT\",\n  \"DLY\",\n  \"ATCO\",\n  \"SBSW\",\n  \"RESP\",\n  \"TT\",\n  \"GFLU\",\n  \"GFL\",\n  \"ALTG\",\n  \"SCVX\",\n  \"RFM\",\n  \"CBO\",\n  \"BIPC\",\n  \"HWM\",\n  \"CARR\",\n  \"RTX\",\n  \"OTIS\",\n  \"CCAC\",\n  \"ZGYH\",\n  \"IVES\",\n  \"BKMC\",\n  \"BKSE\",\n  \"KOKU\",\n  \"BKLC\",\n  \"BBMC\",\n  \"MSGE\",\n  \"MSGS\",\n  \"BKSB\",\n  \"BKAG\",\n  \"BKEM\",\n  \"APG\",\n  \"DEED\",\n  \"NVVE\",\n  \"GLCN\",\n  \"GLIN\",\n  \"DFPHW\",\n  \"DFPH\",\n  \"GAU\",\n  \"ARB\",\n  \"TAAG\",\n  \"TADS\",\n  \"JEPI\",\n  \"JIG\",\n  \"ADCT\",\n  \"SLQT\",\n  \"TMBR\",\n  \"MTCN\",\n  \"SGOV\",\n  \"SSLY\",\n  \"BDXB\",\n  \"AFGD\",\n  \"CEFD\",\n  \"CHX\",\n  \"MLPR\",\n  \"FOUR\",\n  \"MVRL\",\n  \"SBBA\",\n  \"EMBD\",\n  \"HIPR\",\n  \"DYHG\",\n  \"NIFE\",\n  \"AZEK\",\n  \"VTOL\",\n  \"DEEP\",\n  \"PAMC\",\n  \"WFH\",\n  \"IBDV\",\n  \"PALC\",\n  \"EUSB\",\n  \"PFFV\",\n  \"ACI\",\n  \"SOAC\",\n  \"ALTL\",\n  \"DYFN\",\n  \"FTHY\",\n  \"SII\",\n  \"AZAL\",\n  \"SAK\",\n  \"LMND\",\n  \"ZEV\",\n  \"PCGU\",\n  \"LOCL\",\n  \"AVNT\",\n  \"DMS\",\n  \"IBTK\",\n  \"SOS\",\n  \"GBGR\",\n  \"MEG\",\n  \"GBLO\",\n  \"NWG\",\n  \"FUSE\",\n  \"BEKE\",\n  \"FCRW\",\n  \"NTST\",\n  \"OSH\",\n  \"BEPC\",\n  \"ASGI\",\n  \"RKT\",\n  \"TREB\",\n  \"PLTR\",\n  \"U\",\n  \"YSG\",\n  \"LU\",\n  \"SQZ\",\n  \"MAX\",\n  \"GATO\",\n  \"MNSO\",\n  \"IH\",\n  \"FUBO\",\n  \"GHLD\",\n  \"ASAN\",\n  \"AMWL\",\n  \"BNL\",\n  \"SNOW\",\n  \"BQ\",\n  \"YALA\",\n  \"VIAO\",\n  \"XPEV\",\n  \"ASAQ\",\n  \"BSN\",\n  \"CPSR\",\n  \"CRHC\",\n  \"DGNR\",\n  \"ENPC\",\n  \"EOSE\",\n  \"EQD\",\n  \"FGNA\",\n  \"FSR\",\n  \"FST\",\n  \"GOAC\",\n  \"HYLN\",\n  \"HZAC\",\n  \"LEAP\",\n  \"MP\",\n  \"OACB\",\n  \"NUVB\",\n  \"PDAC\",\n  \"PIAI\",\n  \"PMVC\",\n  \"PSTH\",\n  \"RBAC\",\n  \"RTP\",\n  \"STEM\",\n  \"TWND\",\n  \"YAC\",\n  \"LUMN\",\n  \"VNT\",\n  \"QS\",\n  \"DASH\",\n  \"IPOF\",\n  \"PRG\",\n  \"ACIC\",\n  \"AIRC\",\n  \"AJAX\",\n  \"AVAN\",\n  \"BOAC\",\n  \"FMAC\",\n  \"HIGA\",\n  \"HZON\",\n  \"IMPX\",\n  \"IPOD\",\n  \"PACE\",\n  \"RICE\",\n  \"SDHY\",\n  \"SG\",\n  \"SEAH\",\n  \"SKLZ\",\n  \"SPNV\",\n  \"BARK\",\n  \"TPGY\",\n  \"VYGG\",\n  \"XPOA\",\n  \"AGCB\",\n  \"AGC\",\n  \"AI\",\n  \"CDRE\",\n  \"MYTE\",\n  \"APSG\",\n  \"CIXX\",\n  \"HPX\",\n  \"LSPD\",\n  \"NYC\",\n  \"TIMB\",\n  \"TINV\",\n  \"TMX\",\n  \"HIMS\",\n  \"LDI\",\n  \"ATC\",\n  \"SGFY\",\n  \"DM\",\n  \"BFLY\",\n  \"OSCR\",\n  \"BUZZ\",\n  \"RBLX\",\n  \"FHS\",\n  \"CPNG\",\n  \"ARIS\",\n  \"AN\",\n  \"HAYW\",\n  \"CSR\",\n  \"TNL\",\n  \"CCIV\",\n  \"OUST\",\n  \"VEI\",\n  \"TUYA\",\n  \"NAPA\",\n  \"ESGC\",\n  \"DOCN\",\n  \"VZIO\",\n  \"SEMR\",\n  \"ZH\",\n  \"AEVA\",\n  \"COUR\",\n  \"COMP\",\n  \"PANA\",\n  \"PSFE\",\n  \"RMO\",\n  \"STLA\",\n  \"UWMC\",\n  \"AGL\",\n  \"CS\",\n  \"PATH\",\n  \"DV\",\n  \"AGTI\",\n  \"EDR\",\n  \"GTX\",\n  \"LEV\",\n  \"SMWB\",\n  \"MPLN\",\n  \"SQSP\",\n  \"PCOR\",\n  \"PAY\",\n  \"ZIP\",\n  \"RSI\",\n  \"ZME\",\n  \"OGN\",\n  \"CXM\",\n  \"YMM\",\n  \"BHG\",\n  \"DOCS\",\n  \"ATIP\",\n  \"MCW\",\n  \"DDL\",\n  \"S\",\n  \"IS\",\n  \"DIDI\",\n  \"FXLV\",\n  \"BRDG\",\n  \"INST\",\n  \"VTEX\",\n  \"ZVIA\",\n  \"DEN\",\n  \"WFG\",\n  \"LAW\",\n  \"XPOF\",\n  \"CNM\",\n  \"MLNK\",\n  \"DOLE\",\n  \"BBWI\",\n  \"VSCO\",\n  \"TIXT\",\n  \"CLVT\",\n  \"DTM\",\n  \"DBRG\",\n  \"BALY\",\n  \"UTZ\",\n  \"DNMR\",\n  \"GIC\",\n  \"NABL\",\n  \"ONTF\",\n  \"BVH\",\n  \"RYAN\",\n  \"FOA\",\n  \"PWSC\",\n  \"FIGS\",\n  \"AOMR\",\n  \"COOK\",\n  \"YOU\",\n  \"CNVY\",\n  \"IRNT\",\n  \"ONON\",\n  \"BROS\",\n  \"MOTV\",\n  \"ZIM\",\n  \"ZETA\",\n  \"WEBR\",\n  \"WDI\",\n  \"VAL\",\n  \"UPH\",\n  \"UP\",\n  \"RKLY\",\n  \"UGIC\",\n  \"TTE\",\n  \"SUNL\",\n  \"STPC\",\n  \"SPIR\",\n  \"SKIL\",\n  \"RTPZ\",\n  \"ROT\",\n  \"RLX\",\n  \"RERE\",\n  \"RDW\",\n  \"RAAS\",\n  \"PV\",\n  \"PRPB\",\n  \"PNTM\",\n  \"PDO\",\n  \"OWLT\",\n  \"OPFI\",\n  \"OCA\",\n  \"NXU\",\n  \"NSTB\",\n  \"BKKT\",\n  \"NSR\",\n  \"NMG\",\n  \"NDMO\",\n  \"MKFG\",\n  \"MCG\",\n  \"OPAD\",\n  \"LOKB\",\n  \"LFT\",\n  \"KNL\",\n  \"KAHC\",\n  \"JWSM\",\n  \"JBI\",\n  \"IVAN\",\n  \"IIAC\",\n  \"HLLY\",\n  \"GXO\",\n  \"GPOR\",\n  \"GFX\",\n  \"GENI\",\n  \"GB\",\n  \"FREY\",\n  \"FERG\",\n  \"ETD\",\n  \"ECVT\",\n  \"DMYI\",\n  \"DEH\",\n  \"CVII\",\n  \"CURV\",\n  \"CSAN\",\n  \"CPUH\",\n  \"CND\",\n  \"CGAU\",\n  \"CCV\",\n  \"CBAH\",\n  \"CAS\",\n  \"CAP\",\n  \"CANO\",\n  \"BRW\",\n  \"BRSP\",\n  \"BODY\",\n  \"BLND\",\n  \"BAMR\",\n  \"FORG\",\n  \"TOST\",\n  \"AKA\",\n  \"ESMT\",\n  \"CINT\",\n  \"NRDY\",\n  \"DNA\",\n  \"IHS\",\n  \"LEU\",\n  \"WDH\",\n  \"WE\",\n  \"BBLN\",\n  \"WBX\",\n  \"ACHR\",\n  \"FRGE\",\n  \"WOLF\",\n  \"CTV\",\n  \"SMRT\",\n  \"AVYA\",\n  \"BHIL\",\n  \"AMAM\",\n  \"HGTY\",\n  \"KIND\",\n  \"BRDS\",\n  \"DOMA\",\n  \"BKSY\",\n  \"CIAN\",\n  \"MDV\",\n  \"EVEX\",\n];\n  \n  // ---------------------- END OF KEYS -------------------------------------\n\n\n// ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\nasync function filterTradableSymbols(arr1, arr2, compileCallback) {\n  let nyseHolderDown = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n  let nyseHolderUp = []; //THESE ARRS NEED TO BE ACCESSIBLE TO COMPILE CALLBACK\n  let nasdaqHolderDown = [];\n  let nasdaqHolderUp = [];\n  try {\n    // ------ FETCH NYSE\n    const res = await fetch(\n      \"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n    );\n    const dataNyse = await res.json();\n    // ----- FILTER TRADABLE SYMBOLS ON NYSE THAT HAVE DROPPED\n    for (let i = 0; i < dataNyse.length; i++) {\n      if (\n        dataNyse[i].changesPercentage < -5 &&\n        arr1.indexOf(dataNyse[i].symbol) > 0 &&\n        dataNyse[i].price > 1\n      ) {\n        nyseHolderDown.push(dataNyse[i]);\n      }\n    }\n\n    for (let i = 0; i < dataNyse.length; i++) {\n      if (\n        dataNyse[i].changesPercentage > 5 &&\n        arr1.indexOf(dataNyse[i].symbol) > 0 &&\n        dataNyse[i].price > 1\n      ) {\n        nyseHolderUp.push(dataNyse[i]);\n      }\n    }\n    // ------ FETCH NASDAQ\n    const resTwo = await fetch(\n      \"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n    );\n    const dataNas = await resTwo.json();\n    // ----- FILTER TRADABLE SYMBOLS ON NASDAQ THAT HAVE DROPPED\n    for (let i = 0; i < dataNas.length; i++) {\n      if (\n        dataNas[i].changesPercentage < -5 &&\n        arr2.indexOf(dataNas[i].symbol) > 0 &&\n        dataNas[i].price > 1\n      ) {\n        nasdaqHolderDown.push(dataNas[i]);\n      }\n    }\n\n    for (let i = 0; i < dataNas.length; i++) {\n      if (\n        dataNas[i].changesPercentage > 5 &&\n        arr2.indexOf(dataNas[i].symbol) > 0 &&\n        dataNas[i].price > 1\n      ) {\n        nasdaqHolderUp.push(dataNas[i]);\n      }\n    }\n    //--------- CATCH\n  } catch (e) {}\n\n\n  const returnedData = await compileCallback(\n    nasdaqHolderDown,\n    nyseHolderDown,\n    nyseHolderUp,\n    nasdaqHolderUp,\n    technicalIndicators\n  ); // CALLBACK FOR STOCK FILTER\n  return returnedData;\n  \n}\nasync function compileStocks(arr1, arr2, arr3, arr4, callback) {\n  //---------------------- COMBINE AND SORT LARGEST DROP -------------------------\n  let finalChartFatDown = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  let finalChartFatUp = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  let finalChart = []; // THIS HOLDS COMPILED AND SORTED STOCK TO GET TECHNICAL INDICATORS FROM AND MUTATE OBJECTS ! MOST IMPORTANT\n  // ------- THIS IS A FILTER FOR WEIRD STOCK SYMBOLS THAT SLIP IN ----------\n\n  let combinedStockDrop = [];\n  combinedStockDrop = combinedStockDrop.concat(arr1, arr2);\n\n  let combinedStockUp = [];\n  combinedStockUp = combinedStockUp.concat(arr3, arr4);\n\n  const keys = /^[A-Z]{1,4}$/g;\n  finalChartFatDown = combinedStockDrop.filter((stock) => {\n    return stock.symbol.match(keys);\n  });\n\n  finalChartFatUp = combinedStockUp.filter((stock) => {\n    return stock.symbol.match(keys);\n  });\n\n  for (let i = 0; i < finalChartFatDown.length; i++) {\n    finalChartFatDown.sort((a, b) => {\n      return a.changesPercentage - b.changesPercentage;\n    });\n  }\n\n  for (let i = 0; i < finalChartFatUp.length; i++) {\n    finalChartFatUp.sort((a, b) => {\n      return b.changesPercentage - a.changesPercentage;\n    });\n  }\n  // MAKE SURE ARR HAS RIGHT LENGTH TO LOAD ------------\n  const holderObjDown = {\n    avgVolume: -1,\n    bbLower: \"-1\",\n    bbMiddle: \"-1\",\n    bbPercent: \"-1\",\n    bbUpper: \"-1\",\n    cciTwenty: \"-1\",\n    change: -1,\n    changesPercentage: -1,\n    dayHigh: -1,\n    dayLow: -1,\n    earningsAnnouncement: \"-1\",\n    emaEight: \"-1\",\n    emaFifty: \"-1\",\n    emaTwelve: \"-1\",\n    emaTwenty: \"-1\",\n    emaTwentySix: \"-1\",\n    emaTwoHun: \"-1\",\n    eps: -1,\n    exchange: \"No Data\",\n    macd: \"-1\",\n    macdHistogram: \"-1\",\n    macdSignalLine: \"-1\",\n    marketCap: -1,\n    name: \"Placeholder for lack of Symbols\",\n    open: -1,\n    pe: -1,\n    previousClose: -1,\n    price: 1,\n    priceAvg50: -1,\n    priceAvg200: -1,\n    rsi: \"-1\",\n    sharesOutstanding: -1,\n    smaFifty: \"-1\",\n    smaFiveTeen: \"-1\",\n    smaOneHun: \"-1\",\n    smaThirty: \"-1\",\n    smaTwenty: \"-1\",\n    smaTwoHun: \"-1\",\n    stochasticD: \"-1\",\n    stochasticK: \"-1\",\n    stochasticSignal: \"-1\",\n    symbol: \"No Data\",\n    timestamp: -1,\n    volume: -1,\n    vwap: \"-1\",\n    vwmaFifty: \"-1\",\n    vwmaFiveTeen: \"-1\",\n    vwmaOneHun: \"-1\",\n    vwmaThirty: \"-1\",\n    vwmaTwenty: \"-1\",\n    vwmaTwoHun: \"-1\",\n    williamsR: \"-1\",\n    wmaFifty: \"-1\",\n    wmaFiveTeen: \"-1\",\n    wmaOneHun: \"-1\",\n    wmaThirty: \"-1\",\n    wmaTwenty: \"-1\",\n    wmaTwoHun: \"-1\",\n    yearHigh: -1,\n    yearLow: -1,\n    yesterdayVolume: -1,\n  };\n  const holderObjUp = {\n    avgVolume: 1,\n    bbLower: \"1\",\n    bbMiddle: \"1\",\n    bbPercent: \"1\",\n    bbUpper: \"1\",\n    cciTwenty: \"1\",\n    change: 1,\n    changesPercentage: 1,\n    dayHigh: 1,\n    dayLow: 1,\n    earningsAnnouncement: \"1\",\n    emaEight: \"1\",\n    emaFifty: \"1\",\n    emaTwelve: \"1\",\n    emaTwenty: \"1\",\n    emaTwentySix: \"1\",\n    emaTwoHun: \"1\",\n    eps: 1,\n    exchange: \"No Data\",\n    macd: \"1\",\n    macdHistogram: \"1\",\n    macdSignalLine: \"1\",\n    marketCap: 1,\n    name: \"Placeholder for lack of Symbols\",\n    open: 1,\n    pe: 1,\n    previousClose: 1,\n    price: 1,\n    priceAvg50: 1,\n    priceAvg200: 1,\n    rsi: \"1\",\n    sharesOutstanding: 1,\n    smaFifty: \"1\",\n    smaFiveTeen: \"1\",\n    smaOneHun: \"1\",\n    smaThirty: \"1\",\n    smaTwenty: \"1\",\n    smaTwoHun: \"1\",\n    stochasticD: \"1\",\n    stochasticK: \"1\",\n    stochasticSignal: \"1\",\n    symbol: \"No Data\",\n    timestamp: 1,\n    volume: 1,\n    vwap: \"1\",\n    vwmaFifty: \"1\",\n    vwmaFiveTeen: \"1\",\n    vwmaOneHun: \"1\",\n    vwmaThirty: \"1\",\n    vwmaTwenty: \"1\",\n    vwmaTwoHun: \"1\",\n    williamsR: \"1\",\n    wmaFifty: \"1\",\n    wmaFiveTeen: \"1\",\n    wmaOneHun: \"1\",\n    wmaThirty: \"1\",\n    wmaTwenty: \"1\",\n    wmaTwoHun: \"1\",\n    yearHigh: 1,\n    yearLow: 1,\n    yesterdayVolume: 1,\n  };\n\n  if (finalChartFatUp.length < 5) {\n    while (finalChartFatUp.length < 5) {\n      finalChartFatUp.push(holderObjUp);\n    }\n  }\n  if (finalChartFatDown.length < 5) {\n    while (finalChartFatDown.length < 5) {\n      finalChartFatDown.push(holderObjDown);\n    }\n  }\n  // SLIM CHAT DOWN SO IT'S NOT BLOATED\n  let slimChartDown = 4;\n  while (slimChartDown >= 0) {\n    finalChart.unshift(finalChartFatDown[slimChartDown]);\n    slimChartDown--;\n  }\n\n  let slimChartUp = 4;\n  while (slimChartUp >= 0) {\n    finalChart.unshift(finalChartFatUp[slimChartUp]);\n    slimChartUp--;\n  }\n\n  const returnedData = await callback(finalChart, filterUpDownStocks);\n  return returnedData;\n}\n// ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n\n// SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction smaFunction(chartArr, dataPull, newestPull, num) {\n  let culSMA = 0;\n\n  // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n  let fiveTeenSMA = 13;\n  let twentySMA = 18;\n  let thirtySMA = 28;\n  let fiftySMA = 48;\n  let hunSMA = 98;\n  let twoHunSMA = 198;\n\n  try {\n    const todayPricePull = newestPull[0].price;\n    // ------------- 15 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 13) {\n      chartArr[num].smaFiveTeen = \"No Data\";\n    } else {\n      while (fiveTeenSMA >= 0) {\n        culSMA += dataPull.historical[fiveTeenSMA].close;\n        fiveTeenSMA--;\n      }\n      let smaFiveResult = (culSMA + todayPricePull) / 15;\n      chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 20 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 19) {\n      chartArr[num].smaTwenty = \"No Data\";\n    } else {\n      while (twentySMA >= 0) {\n        culSMA += dataPull.historical[twentySMA].close;\n        twentySMA--;\n      }\n      let smaTwentyResult = (culSMA + todayPricePull) / 20;\n      chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 30 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 29) {\n      chartArr[num].smaThirty = \"No Data\";\n    } else {\n      while (thirtySMA >= 0) {\n        culSMA += dataPull.historical[thirtySMA].close;\n        thirtySMA--;\n      }\n      let smaThirtyResult = (culSMA + todayPricePull) / 30;\n      chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 50 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 49) {\n      chartArr[num].smaFifty = \"No Data\";\n    } else {\n      while (fiftySMA >= 0) {\n        culSMA += dataPull.historical[fiftySMA].close;\n        fiftySMA--;\n      }\n      let smaFiftyResult = (culSMA + todayPricePull) / 50;\n      chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 100 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 99) {\n      chartArr[num].smaOneHun = \"No Data\";\n    } else {\n      while (hunSMA >= 0) {\n        culSMA += dataPull.historical[hunSMA].close;\n        hunSMA--;\n      }\n      let smaOneHunResult = (culSMA + todayPricePull) / 100;\n      chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 200 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 199) {\n      chartArr[num].smaTwoHun = \"No Data\";\n    } else {\n      while (twoHunSMA >= 0) {\n        culSMA += dataPull.historical[twoHunSMA].close;\n        twoHunSMA--;\n      }\n      let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n      chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n      culSMA = 0;\n    }\n  } catch (e) {}\n}\n// WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction wmaFunction(chartArr, dataPull, newestPull, num) {\n  // WMA FiveTeen --------------------------------------------------------------------\n  let weight = 14;\n  let wmaInterval = 0;\n  let iWma = 15;\n  try {\n    let wmaCul = newestPull[0].price * 15;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].wmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFiveTeen = wmaCul / iWma;\n      chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n    }\n\n    // WMA Twenty --------------------------------------------------------------------\n    wmaCul = newestPull[0].price * 20;\n    weight = 19;\n    wmaInterval = 0;\n    iWma = 20;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].wmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwenty = wmaCul / iWma;\n      chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n    }\n\n    // WMA THIRTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 30;\n    weight = 29;\n    wmaInterval = 0;\n    iWma = 30;\n\n    if (dataPull.historical.length < 30) {\n      chartArr[num].wmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaThirty = wmaCul / iWma;\n      chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n    }\n\n    // WMA FIFTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 50;\n    weight = 49;\n    wmaInterval = 0;\n    iWma = 50;\n\n    if (dataPull.historical.length < 50) {\n      chartArr[num].wmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFifty = wmaCul / iWma;\n      chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n    }\n\n    // WMA ONE HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 100;\n    weight = 99;\n    wmaInterval = 0;\n    iWma = 100;\n\n    if (dataPull.historical.length < 100) {\n      chartArr[num].wmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaOneHun = wmaCul / iWma;\n      chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n    }\n\n    // WMA TWO HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 200;\n    weight = 199;\n    wmaInterval = 0;\n    iWma = 200;\n\n    if (dataPull.historical.length < 200) {\n      chartArr[num].wmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwoHun = wmaCul / iWma;\n      chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwmaFunction(chartArr, dataPull, newestPull, num) {\n  // VWMA FIVETEEN --------------------------------------------------------------------\n\n  try {\n    let price = 0;\n    let volume = 0;\n    const newPrice = newestPull[0].price;\n    const newVol = newestPull[0].volume;\n\n    let volCul = newestPull[0].volume;\n    let totalCul = newPrice * newVol;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].vwmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n\n      }\n\n      const vwmaFiveTeen = totalCul / volCul;\n      \n      chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n    }\n\n  \n\n    // VWMA TWENTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].vwmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaTwenty = totalCul / volCul;\n     \n      chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n    }\n\n    // VWMA THIRTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 29) {\n      chartArr[num].vwmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaThirty = totalCul / volCul;\n      chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n    }\n\n    // VWMA FIFTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 49) {\n      chartArr[num].vwmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaFifty = totalCul / volCul;\n      chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n    }\n\n    // VWMA ONEHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 99) {\n      chartArr[num].vwmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaOneHun = totalCul / volCul;\n      chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n    }\n\n    // VWMA TWOHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 199) {\n      chartArr[num].vwmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaTwoHun = totalCul / volCul;\n      chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n  let emaEight = 14;\n  let emaTwelve = 22;\n  let emaTwenty = 38;\n  let emaTwentySix = 50;\n  let emaFifty = 98;\n  let emaTwoHun = 398;\n  let prevDayEmaSub = 0;\n  let arrEma = [];\n\n  let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n  let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n  try {\n    const newPrice = newestPull[0].price;\n\n    // EMA EIGHT ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 16) {\n      chartArr[num].emaEight = \"No Data\";\n    } else {\n      while (emaEight >= 15) {\n        prevDayEmaSub += dataPull.historical[emaEight].close;\n        emaEight--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 8;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 9) * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaEight--;\n      while (emaEight >= 0) {\n        let derp =\n          (2 / 9) * (dataPull.historical[emaEight].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaEight--;\n      }\n\n      const finalEma = (2 / 9) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaEight = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n    // EMA TWELVE ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 24) {\n      chartArr[num].emaTwelve = \"No Data\";\n    } else {\n      while (emaTwelve >= 11) {\n        prevDayEmaSub += dataPull.historical[emaTwelve].close;\n        emaTwelve--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n      const subEMA = prevDayEmaSub / 12;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 13) * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwelve--;\n\n      while (emaTwelve >= 0) {\n        let derp =\n          (2 / 13) * (dataPull.historical[emaTwelve].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwelve < 8 && emaTwelve >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwelve.unshift(derp);\n        }\n        emaTwelve--;\n      }\n\n      const finalEma = (2 / 13) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwelve.unshift(finalEma);\n\n      chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 40) {\n      chartArr[num].emaTwenty = \"No Data\";\n    } else {\n      while (emaTwenty >= 19) {\n        prevDayEmaSub += dataPull.historical[emaTwenty].close;\n        emaTwenty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 20;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 21) * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwenty--;\n      while (emaTwenty >= 0) {\n        let derp =\n          (2 / 21) * (dataPull.historical[emaTwenty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwenty--;\n      }\n\n      const finalEma = (2 / 21) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY SIX ----------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 51) {\n      chartArr[num].emaTwentySix = \"No Data\";\n    } else {\n      while (emaTwentySix >= 25) {\n        prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n        emaTwentySix--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 26;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 27) * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwentySix--;\n      while (emaTwentySix >= 0) {\n        let derp =\n          (2 / 27) * (dataPull.historical[emaTwentySix].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwentySix < 8 && emaTwentySix >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwentySix.unshift(derp);\n        }\n        emaTwentySix--;\n      }\n\n      const finalEma = (2 / 27) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwentySix.unshift(finalEma);\n\n      chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA FIFTY -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 100) {\n      chartArr[num].emaFifty = \"No Data\";\n    } else {\n      while (emaFifty >= 49) {\n        prevDayEmaSub += dataPull.historical[emaFifty].close;\n        emaFifty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 50;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 51) * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaFifty--;\n      while (emaFifty >= 0) {\n        let derp =\n          (2 / 51) * (dataPull.historical[emaFifty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaFifty--;\n      }\n\n      const finalEma = (2 / 51) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaFifty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 400) {\n      chartArr[num].emaTwoHun = \"No Data\";\n    } else {\n      while (emaTwoHun >= 199) {\n        prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n        emaTwoHun--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 200;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 201) * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwoHun--;\n      while (emaTwoHun >= 0) {\n        let derp =\n          (2 / 201) * (dataPull.historical[emaTwoHun].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwoHun--;\n      }\n\n      const finalEma = (2 / 201) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n  } catch (e) {}\n\n  // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n  macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n}\n// MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\nfunction macdFunction(chartArr, num, arr1, arr2) {\n  const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n  chartArr[num].macd = macd.toFixed(2);\n  // CALCULATE SIGNAL LINE ----------------\n  let averageMacd = [];\n  let iMacd = 8;\n\n  try {\n    while (iMacd >= 0) {\n      averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n      iMacd--;\n    }\n    let averageSum = averageMacd.reduce((a, b) => a + b);\n    let finalAverageMacd = averageSum / 9;\n    let macdSignalLine =\n      (2 / 9) * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n    chartArr[num].macdSignalLine = macdSignalLine.toFixed(2);\n    // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n    let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n    chartArr[num].macdHistogram = histogram.toFixed(2);\n    // FOR NO DATA TO PULL FROM\n    if (chartArr[num].macdHistogram === \"NaN\") {\n      chartArr[num].macdHistogram = \"No Data\";\n    }\n    if (chartArr[num].macd === \"NaN\") {\n      chartArr[num].macd = \"No Data\";\n    }\n    if (chartArr[num].macdSignalLine === \"NaN\") {\n      chartArr[num].macdSignalLine = \"No Data\";\n    }\n  } catch (e) {}\n}\n// RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction rsiFunction(chartArr, dataPull, newestPull, num) {\n  let iRSI = 13;\n  let iRSIAdjusted = 14;\n  let recentUpper = 0;\n  let recentDowner = 0;\n  let upMove = 0;\n  let downMove = 0;\n  let pastDownPeriod = 0;\n  let pastUpPeriod = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n    if (dataPull.historical.length <= 14) {\n      chartArr[num].rsi = \"No Data\";\n    } else {\n      // LOOP FOR AVERAGE\n      while (iRSI >= 0) {\n        if (\n          dataPull.historical[iRSI].close >\n          dataPull.historical[iRSIAdjusted].close\n        ) {\n          upMove +=\n            dataPull.historical[iRSI].close -\n            dataPull.historical[iRSIAdjusted].close;\n        } else {\n          downMove +=\n            dataPull.historical[iRSIAdjusted].close -\n            dataPull.historical[iRSI].close;\n        }\n        iRSI--;\n        iRSIAdjusted--;\n      }\n\n      let averageUp = upMove / 14;\n      let averageDown = downMove / 14;\n\n      // MOST RECENT DIFFERENCE\n      if (newPrice > dataPull.historical[0].close) {\n        recentUpper = newPrice - dataPull.historical[0].close;\n      } else {\n        recentDowner = dataPull.historical[0].close - newPrice;\n      }\n\n      pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n      pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n\n      let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n      chartArr[num].rsi = rsi.toFixed(2);\n    }\n  } catch (e) {}\n}\n// STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n  let iSO = 13;\n\n  let soLowHolder = [];\n  let soHighHolder = [];\n  let highestHigh = 0;\n  let lowestLow = 0;\n  // FIRST %D\n  let topForm = [];\n  let bottomForm = [];\n  // SECOND %D\n  let topFormTwo = [];\n  let bottomFormTwo = [];\n  // THIRD %D\n  let topFormThree = [];\n  let bottomFormThree = [];\n  // HOLDING SET OF %D FOR 14 3 3\n  let signalLineHolder = [];\n  try {\n    let newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 18) {\n      chartArr[num].stochasticK = \"No Data\";\n    } else {\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n\n      while (iSO >= 0) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      soHighHolder.push(newPrice);\n      soLowHolder.push(newPrice);\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      if (lowestLow === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      if (highestHigh === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      topForm.push(newPrice - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      //FOR %K\n      chartArr[num].stochasticK = (\n        ((newPrice - lowestLow) / (highestHigh - lowestLow)) *\n        100\n      ).toFixed(2);\n\n      // RESET HOLDER AND VARs --------------------------------------------------------\n\n      iSO = 14;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n      while (iSO >= 1) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[0].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[0].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      // RESET HOLDER AND VARs ------------------------------------------------\n\n      iSO = 15;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 2) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[1].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[1].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[1].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      let sumTop = topForm.reduce((a, b) => a + b, 0);\n      let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n\n      let slowD = (sumTop / sumBottom) * 100;\n\n      // FOR %D\n      chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------------------------------\n\n      iSO = 16;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n      while (iSO >= 3) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormTwo.push(dataPull.historical[2].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[2].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------\n\n      iSO = 17;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 4) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormThree.push(dataPull.historical[3].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormThree.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      // ----------- TALLY UP LAST SMOOTHING -------------------------------\n      const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n      let smaD = sumStochD / 3;\n\n      if (smaD < 0) {\n        smaD *= -1;\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      } else {\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      }\n    }\n  } catch (e) {}\n}\n// WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction williamsRFunction(chartArr, dataPull, newestPull, num) {\n  let highs = [];\n  let lows = [];\n  let lowestLow = 0;\n  let highestHigh = 0;\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].williams = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        highs.push(dataPull.historical[i].high);\n        lows.push(dataPull.historical[i].low);\n      }\n\n      highs.push(newPrice);\n      lows.push(newPrice);\n\n      lowestLow = Math.min(...lows);\n      highestHigh = Math.max(...highs);\n\n      const williams =\n        ((highestHigh - dataPull.historical[0].close) /\n          (highestHigh - lowestLow)) *\n        -100;\n\n      chartArr[num].williamsR = williams.toFixed(2);\n    }\n  } catch (e) {}\n}\n// CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction cciFunction(chartArr, dataPull, newestPull, num) {\n  let tpvCul = 0;\n  let tpv = [];\n  let tpvMa = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    let tpvCurrent = newPrice;\n    const recentTpv = newPrice;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].cciTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 19; i++) {\n        const { high, close, low } = dataPull.historical[i];\n        tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n        tpvCurrent = (close + high + low) / 3;\n      }\n      // ---- TPV SMA ------------------------\n      tpvCul = tpv.reduce((a, b) => a + b);\n      tpvMa = tpvCul / 20;\n      // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n      const partOne = recentTpv - tpvMa;\n\n      const meanD = tpv.map((x) => x - tpvMa);\n      const meanDMap = meanD.map((x) => Math.abs(x));\n      const meanDSum = meanDMap.reduce((a, b) => a + b);\n      const meanDiv = meanDSum / 20;\n      // PART TWO OF FORMULA --------------\n      const partTwo = meanDiv * 0.015;\n      // CCI ------------------------------\n      const cci = partOne / partTwo;\n\n      chartArr[num].cciTwenty = cci.toFixed(2);\n    }\n  } catch (e) {}\n}\n// BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n  let smaCul = 0;\n  let closeHolder = [];\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].bbUpper = \"No Data\";\n      chartArr[num].bbLower = \"No Data\";\n      chartArr[num].bbMiddle = \"No Data\";\n    } else {\n      let closeP = newPrice;\n      for (let i = 0; i <= 19; i++) {\n        closeHolder.push(closeP);\n        smaCul += closeP;\n        closeP = dataPull.historical[i].close;\n      }\n      // STANDARD DEVIATION CALC --------------------------------\n      const smaTwenty = smaCul / 20;\n\n      const priceAdj = closeHolder.map((x) => x - smaTwenty);\n\n      const priceAdjAbs = priceAdj.map((x) => Math.abs(x));\n\n      const priceAdjSqrt = priceAdjAbs.map((x) => x * x);\n\n      const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n\n      const partTwoDev = partOneDev / 20;\n      const standardDev = Math.sqrt(partTwoDev);\n      // BB BAND CALC --------------------------------------------\n      const bbUpper = smaTwenty + standardDev * 2;\n      const bbLower = smaTwenty - standardDev * 2;\n\n      const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n\n      chartArr[num].bbUpper = bbUpper.toFixed(2);\n      chartArr[num].bbLower = bbLower.toFixed(2);\n      chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n      chartArr[num].bbPercent = bbPercent.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwapFunction(chartArr, dataPull, num) {\n  // ----------- VWAP CALUC -------------------------------------------\n  let dayLengthPeriod = 0;\n  let tpvCul = 0;\n  let volumeCul = 0;\n  let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n  try {\n    // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n    while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n      dayLengthPeriod++;\n    }\n  \n    // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n    for (let i = 0; i < dayLengthPeriod; i++) {\n      const { volume, high, close, low, date } = dataPull[i];\n      let tpv = (high + low + close) / 3;\n      if (date.slice(0, 10) == newDateString) {\n        tpvCul += tpv * volume;\n        volumeCul += volume;\n      }\n      var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n      tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n    }\n    let vwap = tempVWAP[0].toFixed(2);\n    chartArr[num].vwap = vwap;\n  } catch (e) {\n  }\n}\n// SET VOLUME FOR LATER\nfunction setVolume(chartArr, dataPull, newestPull, num) {\n  // SET RECENT YESTERDAY VOLUME\n  try {\n    if (dataPull.historical.length <= 0) {\n      chartArr[num].yesterdayVolume = 0;\n    } else {\n      chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n      if (marketDay == 0 || marketDay == 6) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (timeNum > 1830) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n    }\n    if (newestPull.length < 0) {\n      chartArr[num].volume = 0;\n    } else {\n      // SET RECENT VOLUME\n      chartArr[num].volume = newestPull[0].volume;\n    }\n  } catch (e) {}\n}\n\n// TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\nasync function technicalIndicators(finalArr, callback) {\n  let j = 0;\n\n  while (j < finalArr.length) {\n    // LOOP FOR TECHNICAL SYMBOL\n\n    // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n    const { symbol } = finalArr[j];\n\n    //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n    const resSMA = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataSMA).length) {\n        console.log(\"no SMA Pull data found\");\n      }\n    } catch (e) {}\n\n    //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n    const resOscPulled = await fetch(\n      `https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataRecentPulled = await resOscPulled.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataRecentPulled).length) {\n        console.log(\"no Recent Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    const resVWAP = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataVWAP = await resVWAP.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataVWAP).length) {\n        console.log(\"no VWAP Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    vwapFunction(finalArr, dataVWAP, j);\n\n    // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    smaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    wmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    vwmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n    emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction);\n\n    // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    rsiFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n\n    // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    williamsRFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    cciFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // SET VOLUME PROPERTIES\n    setVolume(finalArr, dataSMA, dataRecentPulled, j);\n\n    j++; // UPDATE WHILE LOOP\n  } // THIS IS THE END OF LOOP\n  const returnedData = await callback(finalArr, buildIt);\n  return returnedData;\n  \n}\nasync function filterUpDownStocks(finalArr, callback) {\n  let stocksUp = [];\n  let stocksDown = [];\n\n  let j = 0;\n\n  while (j < finalArr.length) {\n    const { changesPercentage } = finalArr[j];\n\n    if (changesPercentage > 0) {\n      stocksUp.push(finalArr[j]);\n    } else {\n      stocksDown.push(finalArr[j]);\n    }\n\n    j++;\n  } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n\n  // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n  for (let i = 0; i < stocksUp.length; i++) {\n    // UPPER ------------------------------------------------------------------------------\n    stocksUp[i].symbolUp = stocksUp[i].symbol;\n    delete stocksUp[i].symbol;\n    stocksUp[i].changeUp = stocksUp[i].change;\n    delete stocksUp[i].change;\n    stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n    delete stocksUp[i].avgVolume;\n    stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n    delete stocksUp[i].changesPercentage;\n    stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n    delete stocksUp[i].emaEight;\n    stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n    delete stocksUp[i].emaTwelve;\n    stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n    delete stocksUp[i].emaTwenty;\n    stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n    delete stocksUp[i].emaTwentySix;\n    stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n    delete stocksUp[i].emaFifty;\n    stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n    delete stocksUp[i].emaTwoHun;\n    stocksUp[i].macdUp = stocksUp[i].macd;\n    delete stocksUp[i].macd;\n    stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n    delete stocksUp[i].macdHistogram;\n    stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n    delete stocksUp[i].macdSignalLine;\n    stocksUp[i].priceUp = stocksUp[i].price;\n    delete stocksUp[i].price;\n    stocksUp[i].rsiUp = stocksUp[i].rsi;\n    delete stocksUp[i].rsi;\n    stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n    delete stocksUp[i].smaFiveTeen;\n    stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n    delete stocksUp[i].smaTwenty;\n    stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n    delete stocksUp[i].smaThirty;\n    stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n    delete stocksUp[i].smaFifty;\n    stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n    delete stocksUp[i].smaOneHun;\n    stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n    delete stocksUp[i].smaTwoHun;\n    stocksUp[i].volumeUp = stocksUp[i].volume;\n    delete stocksUp[i].volume;\n    stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n    delete stocksUp[i].yesterdayVolume;\n    stocksUp[i].vwapUp = stocksUp[i].vwap;\n    delete stocksUp[i].vwap;\n    stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n    delete stocksUp[i].stochasticD;\n    stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n    delete stocksUp[i].stochasticK;\n    stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n    delete stocksUp[i].stochasticSignal;\n    stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n    delete stocksUp[i].wmaFiveTeen;\n    stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n    delete stocksUp[i].wmaTwenty;\n    stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n    delete stocksUp[i].wmaThirty;\n    stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n    delete stocksUp[i].wmaFifty;\n    stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n    delete stocksUp[i].wmaOneHun;\n    stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n    delete stocksUp[i].wmaTwoHun;\n    stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n    delete stocksUp[i].vwmaFiveTeen;\n    stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n    delete stocksUp[i].vwmaTwenty;\n    stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n    delete stocksUp[i].vwmaThirty;\n    stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n    delete stocksUp[i].vwmaFifty;\n    stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n    delete stocksUp[i].vwmaOneHun;\n    stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n    delete stocksUp[i].vwmaTwoHun;\n    stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n    delete stocksUp[i].williamsR;\n    stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n    delete stocksUp[i].cciTwenty;\n    stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n    delete stocksUp[i].bbUpper;\n    stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n    delete stocksUp[i].bbLower;\n    stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n    delete stocksUp[i].bbMiddle;\n    stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n    delete stocksUp[i].bbPercent;\n    // DOWNERS ------------------------------------------------------------------------------\n    stocksDown[i].symbolDown = stocksDown[i].symbol;\n    delete stocksDown[i].symbol;\n    stocksDown[i].changeDown = stocksDown[i].change;\n    delete stocksDown[i].change;\n    stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n    delete stocksDown[i].avgVolume;\n    stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n    delete stocksDown[i].changesPercentage;\n    stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n    delete stocksDown[i].emaEight;\n    stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n    delete stocksDown[i].emaTwelve;\n    stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n    delete stocksDown[i].emaTwenty;\n    stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n    delete stocksDown[i].emaTwentySix;\n    stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n    delete stocksDown[i].emaFifty;\n    stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n    delete stocksDown[i].emaTwoHun;\n    stocksDown[i].macdDown = stocksDown[i].macd;\n    delete stocksDown[i].macd;\n    stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n    delete stocksDown[i].macdHistogram;\n    stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n    delete stocksDown[i].macdSignalLine;\n    stocksDown[i].priceDown = stocksDown[i].price;\n    delete stocksDown[i].price;\n    stocksDown[i].rsiDown = stocksDown[i].rsi;\n    delete stocksDown[i].rsi;\n    stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n    delete stocksDown[i].smaFiveTeen;\n    stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n    delete stocksDown[i].smaTwenty;\n    stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n    delete stocksDown[i].smaThirty;\n    stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n    delete stocksDown[i].smaFifty;\n    stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n    delete stocksDown[i].smaOneHun;\n    stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n    delete stocksDown[i].smaTwoHun;\n    stocksDown[i].volumeDown = stocksDown[i].volume;\n    delete stocksDown[i].volume;\n    stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n    delete stocksDown[i].yesterdayVolume;\n    stocksDown[i].vwapDown = stocksDown[i].vwap;\n    delete stocksDown[i].vwap;\n    stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n    delete stocksDown[i].stochasticD;\n    stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n    delete stocksDown[i].stochasticK;\n    stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n    delete stocksDown[i].stochasticSignal;\n    stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n    delete stocksDown[i].wmaFiveTeen;\n    stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n    delete stocksDown[i].wmaTwenty;\n    stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n    delete stocksDown[i].wmaThirty;\n    stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n    delete stocksDown[i].wmaFifty;\n    stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n    delete stocksDown[i].wmaOneHun;\n    stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n    delete stocksDown[i].wmaTwoHun;\n    stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n    delete stocksDown[i].vwmaFiveTeen;\n    stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n    delete stocksDown[i].vwmaTwenty;\n    stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n    delete stocksDown[i].vwmaThirty;\n    stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n    delete stocksDown[i].vwmaFifty;\n    stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n    delete stocksDown[i].vwmaOneHun;\n    stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n    delete stocksDown[i].vwmaTwoHun;\n    stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n    delete stocksDown[i].williamsR;\n    stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n    delete stocksDown[i].cciTwenty;\n    stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n    delete stocksDown[i].bbUpper;\n    stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n    delete stocksDown[i].bbLower;\n    stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n    delete stocksDown[i].bbMiddle;\n    stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n    delete stocksDown[i].bbPercent;\n  }\n  const returnedData = await callback(stocksUp, stocksDown);\n  return returnedData;\n}\nfunction buildIt(arrUp, arrDown) {\n  for (let i = 0; i < arrUp.length; i++) {\n    // DECONSTRUCTING UP AND DOWN VAR\n   var {\n      avgVolumeUp,\n      volumeYesterdayUp,\n      changeUp,\n      changesPercentageUp,\n      priceUp,\n      symbolUp,\n      volumeUp,\n      vwapUp,\n      smaFiveTeenUp,\n      smaTwentyUp,\n      smaThirtyUp,\n      smaFiftyUp,\n      smaOneHunUp,\n      smaTwoHunUp,\n      emaEightUp,\n      emaTwelveUp,\n      emaTwentyUp,\n      emaTwentySixUp,\n      emaFiftyUp,\n      emaTwoHunUp,\n      wmaFiveTeenUp,\n      wmaTwentyUp,\n      wmaThirtyUp,\n      wmaFiftyUp,\n      wmaOneHunUp,\n      wmaTwoHunUp,\n      vwmaFiveTeenUp,\n      vwmaTwentyUp,\n      vwmaThirtyUp,\n      vwmaFiftyUp,\n      vwmaOneHunUp,\n      vwmaTwoHunUp,\n      macdUp,\n      macdHistogramUp,\n      macdSignalLineUp,\n      rsiUp,\n      stochasticDUp,\n      stochasticKUp,\n      stochasticSignalUp,\n      cciUp,\n      bbMiddleUp,\n      bbLowerUp,\n      bbUpperUp,\n      bbPercentUp,\n      williamsRUp,\n    } = arrUp[i];\n    var {\n      avgVolumeDown,\n      volumeYesterdayDown,\n      changeDown,\n      changesPercentageDown,\n      priceDown,\n      symbolDown,\n      volumeDown,\n      vwapDown,\n      smaFiveTeenDown,\n      smaTwentyDown,\n      smaThirtyDown,\n      smaFiftyDown,\n      smaOneHunDown,\n      smaTwoHunDown,\n      emaEightDown,\n      emaTwelveDown,\n      emaTwentyDown,\n      emaTwentySixDown,\n      emaFiftyDown,\n      emaTwoHunDown,\n      wmaFiveTeenDown,\n      wmaTwentyDown,\n      wmaThirtyDown,\n      wmaFiftyDown,\n      wmaOneHunDown,\n      wmaTwoHunDown,\n      vwmaFiveTeenDown,\n      vwmaTwentyDown,\n      vwmaThirtyDown,\n      vwmaFiftyDown,\n      vwmaOneHunDown,\n      vwmaTwoHunDown,\n      macdDown,\n      macdHistogramDown,\n      macdSignalLineDown,\n      rsiDown,\n      stochasticDDown,\n      stochasticKDown,\n      stochasticSignalDown,\n      cciDown,\n      bbMiddleDown,\n      bbLowerDown,\n      bbUpperDown,\n      bbPercentDown,\n      williamsRDown,\n    } = arrDown[i];\n\n    // ADJUST TO FIXED --------------------------------------------------------\n    if (arrUp[i].priceUp == undefined) {\n      arrUp[i].priceUp = 0;\n    }\n    if (arrDown[i].priceDown == undefined) {\n      arrDown[i].priceDown = 0;\n    }\n\n    priceUp = priceUp.toFixed(2);\n    priceDown = priceDown.toFixed(2);\n    if (arrUp[i].changesPercentageUp == undefined) {\n      arrUp[i].changesPercentageUp = 0;\n    }\n    if (arrDown[i].changesPercentageDown == undefined) {\n      arrDown[i].changesPercentageDown = 0;\n    }\n    changesPercentageUp = changesPercentageUp.toFixed(2);\n    changesPercentageDown = changesPercentageDown.toFixed(2);\n\n    if (arrUp[i].changeUp == undefined) {\n      arrUp[i].changeUp = 0;\n    }\n    if (arrDown[i].changeDown == undefined) {\n      arrDown[i].changeDown = 0;\n    }\n    changeUp = changeUp.toFixed(2);\n    changeDown = changeDown.toFixed(2);\n    // UP VOLUME INCREASE ----------------------------\n    if (arrUp[i].volumeUp == undefined) {\n      arrUp[i].volumeUp = 0;\n    }\n    if (arrDown[i].volumeDown == undefined) {\n      arrDown[i].volumeDown = 0;\n    }\n\n    var volumeIncreaseUp = 0;\n\n    if (volumeUp > avgVolumeUp) {\n      let increase = volumeUp - avgVolumeUp;\n      volumeIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeUp;\n      volumeIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n    // DOWN VOLUME INCREASE ----------------------------\n    var volumeIncreaseDown = 0;\n\n    if (volumeDown > avgVolumeDown) {\n      let increase = volumeDown - avgVolumeDown;\n      volumeIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeDown;\n      volumeIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n    volumeIncreaseUp = volumeIncreaseUp.toFixed(2);\n\n    // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n\n    // YESTERDAY UP VOLUME INCREASE ----------------------------\n    if (arrUp[i].volumeYesterdayUp == undefined) {\n      arrUp[i].volumeYesterdayUp = 0;\n    }\n    if (volumeYesterdayDown == undefined) {\n      volumeYesterdayDown = 0;\n    }\n    if (arrUp[i].avgVolumeUp == undefined) {\n      arrUp[i].avgVolumeUp = 0;\n    }\n    if (arrDown[i].avgVolumeDown == undefined) {\n      arrDown[i].avgVolumeDown = 0;\n    }\n    var yesterdayVolIncreaseUp = 0;\n\n    if (volumeYesterdayUp > avgVolumeUp) {\n      let increase = volumeYesterdayUp - avgVolumeUp;\n      yesterdayVolIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeYesterdayUp;\n      yesterdayVolIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n\n    yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2);\n\n    // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n    var yesterdayVolIncreaseDown = 0;\n\n    if (volumeYesterdayDown > avgVolumeDown) {\n      let increase = volumeYesterdayDown - avgVolumeDown;\n      yesterdayVolIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeYesterdayDown;\n      yesterdayVolIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2);\n\n    // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n    var changeDownAdjusted = changeDown;\n\n    if (changeDownAdjusted < 0) {\n      changeDownAdjusted = changeDownAdjusted * -1;\n      changeDownAdjusted = changeDownAdjusted.toFixed(2);\n    }\n    // NaN CHECK ----------------------------------------\n    if (isNaN(yesterdayVolIncreaseDown)) {\n      yesterdayVolIncreaseDown = \"No Data\";\n    }\n    if (isNaN(yesterdayVolIncreaseUp)) {\n      yesterdayVolIncreaseUp = \"No Data\";\n    }\n    // ADJUST TO POSITIVE\n    if (stochasticDUp < 0) {\n      stochasticDUp = stochasticDUp * -1;\n    }\n    if (stochasticKUp < 0) {\n      stochasticKUp = stochasticKUp * -1;\n    }\n    if (stochasticDDown < 0) {\n      stochasticDDown = stochasticDDown * -1;\n    }\n    if (stochasticKDown < 0) {\n      stochasticKDown = stochasticKDown * -1;\n    }\n    // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n    if (arrUp[i].avgVolumeUp == undefined) {\n      arrUp[i].avgVolumeUp = \"No Data\";\n    }\n    if (arrDown[i].avgVolumeDown == undefined) {\n      arrDown[i].avgVolumeDown = \"No Data\";\n    }\n    if (arrUp[i].volumeUp == undefined) {\n      arrUp[i].volumeUp = \"No Data\";\n    }\n    if (arrDown[i].volumeDown == undefined) {\n      arrDown[i].volumeDown = \"No Data\";\n    }\n    if (arrUp[i].volumeIncreaseUp == undefined) {\n      arrUp[i].volumeIncreaseUp = \"No Data\";\n    }\n    if (arrDown[i].volumeIncreaseDown == undefined) {\n      arrDown[i].volumeIncreaseDown = \"No Data\";\n    }\n    if (arrUp[i].volumeYesterdayUp == undefined) {\n      arrUp[i].volumeYesterdayUp = \"No Data\";\n    }\n    if (arrDown[i].volumeYesterdayDown == undefined) {\n      arrDown[i].volumeYesterdayDown = \"No Data\";\n    }\n\n    if (arrUp[i].smaFiveTeenUp == undefined) {\n      arrUp[i].smaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].smaFiveTeenDown == undefined) {\n      arrDown[i].smaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].smaTwentyUp == undefined) {\n      arrUp[i].smaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].smaTwentyDown == undefined) {\n      arrDown[i].smaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].smaThirtyUp == undefined) {\n      arrUp[i].smaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].smaThirtyDown == undefined) {\n      arrDown[i].smaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].smaFiftyUp == undefined) {\n      arrUp[i].smaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].smaFiftyDown == undefined) {\n      arrDown[i].smaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].smaOneHunUp == undefined) {\n      arrUp[i].smaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].smaOneHunDown == undefined) {\n      arrDown[i].smaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].smaTwoHunUp == undefined) {\n      arrUp[i].smaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].smaTwoHunDown == undefined) {\n      arrDown[i].smaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].emaEightUp == undefined) {\n      arrUp[i].emaEightUp = \"No Data\";\n    }\n    if (arrDown[i].emaEightDown == undefined) {\n      arrDown[i].emaEightDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwelveUp == undefined) {\n      arrUp[i].emaTwelveUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwelveDown == undefined) {\n      arrDown[i].emaTwelveDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwentyUp == undefined) {\n      arrUp[i].emaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwentyDown == undefined) {\n      arrDown[i].emaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwentySixUp == undefined) {\n      arrUp[i].emaTwentySixUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwentySixDown == undefined) {\n      arrDown[i].emaTwentySixDown = \"No Data\";\n    }\n    if (arrUp[i].emaFiftyUp == undefined) {\n      arrUp[i].emaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].emaFiftyDown == undefined) {\n      arrDown[i].emaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwoHunUp == undefined) {\n      arrUp[i].emaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwoHunDown == undefined) {\n      arrDown[i].emaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].wmaFiveTeenUp == undefined) {\n      arrUp[i].wmaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].wmaFiveTeenDown == undefined) {\n      arrDown[i].wmaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].wmaTwentyUp == undefined) {\n      arrUp[i].wmaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaTwentyDown == undefined) {\n      arrDown[i].wmaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaThirtyUp == undefined) {\n      arrUp[i].wmaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaThirtyDown == undefined) {\n      arrDown[i].wmaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaFiftyUp == undefined) {\n      arrUp[i].wmaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaFiftyDown == undefined) {\n      arrDown[i].wmaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaOneHunUp == undefined) {\n      arrUp[i].wmaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].wmaOneHunDown == undefined) {\n      arrDown[i].wmaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].wmaTwoHunUp == undefined) {\n      arrUp[i].wmaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].wmaTwoHunDown == undefined) {\n      arrDown[i].wmaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].vwmaFiveTeenUp == undefined) {\n      arrUp[i].vwmaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaFiveTeenDown == undefined) {\n      arrDown[i].vwmaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaTwentyUp == undefined) {\n      arrUp[i].vwmaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaTwentyDown == undefined) {\n      arrDown[i].vwmaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaThirtyUp == undefined) {\n      arrUp[i].vwmaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaThirtyDown == undefined) {\n      arrDown[i].vwmaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaFiftyUp == undefined) {\n      arrUp[i].vwmaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaFiftyDown == undefined) {\n      arrDown[i].vwmaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaOneHunUp == undefined) {\n      arrUp[i].vwmaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaOneHunDown == undefined) {\n      arrDown[i].vwmaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaTwoHunUp == undefined) {\n      arrUp[i].vwmaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaTwoHunDown == undefined) {\n      arrDown[i].vwmaTwoHunDown = \"No Data\";\n    }\n\n    if (arrDown[i].vwapDown == undefined) {\n      arrDown[i].vwapDown = \"No Data\";\n    }\n    if (arrUp[i].vwapUp == undefined) {\n      arrUp[i].vwapUp = \"No Data\";\n    }\n\n    if (arrDown[i].macdDown == undefined) {\n      arrDown[i].macdDown = \"No Data\";\n    }\n    if (arrUp[i].macdUp == undefined) {\n      arrUp[i].macdUp = \"No Data\";\n    }\n\n    if (arrDown[i].rsiDown == undefined) {\n      arrDown[i].rsiDown = \"No Data\";\n    }\n    if (arrUp[i].rsiUp == undefined) {\n      arrUp[i].rsiUp = \"No Data\";\n    }\n    if (arrDown[i].cciDown == undefined) {\n      arrDown[i].cciDown = \"No Data\";\n    }\n    if (arrUp[i].cciUp == undefined) {\n      arrUp[i].cciUp = \"No Data\";\n    }\n    if (arrDown[i].williamsRDown == undefined) {\n      arrDown[i].williamsRDown = \"No Data\";\n    }\n    if (arrUp[i].williamsRUp == undefined) {\n      arrUp[i].williamsRUp = \"No Data\";\n    }\n    if (arrUp[i].stochasticKUp == undefined) {\n      arrUp[i].stochasticKUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticKDown == undefined) {\n      arrDown[i].stochasticKDown = \"No Data\";\n    }\n    if (arrUp[i].stochasticDUp == undefined) {\n      arrUp[i].stochasticDUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticDDown == undefined) {\n      arrDown[i].stochasticDDown = \"No Data\";\n    }\n    if (arrUp[i].stochasticSignalUp == undefined) {\n      arrUp[i].stochasticSignalUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticSignalDown == undefined) {\n      arrDown[i].stochasticSignalDown = \"No Data\";\n    }\n\n    if (arrDown[i].bbMiddleDown == undefined) {\n      arrDown[i].bbMiddleDown = \"No Data\";\n    }\n    if (arrUp[i].bbMiddleUp == undefined) {\n      arrUp[i].bbMiddleUp = \"No Data\";\n    }\n    if (arrDown[i].bbLowerDown == undefined) {\n      arrDown[i].bbLowerDown = \"No Data\";\n    }\n    if (arrUp[i].bbLowerUp == undefined) {\n      arrUp[i].bbLowerUp = \"No Data\";\n    }\n    if (arrDown[i].bbUpperDown == undefined) {\n      arrDown[i].bbUpperDown = \"No Data\";\n    }\n    if (arrUp[i].bbUpperUp == undefined) {\n      arrUp[i].bbUpperUp = \"No Data\";\n    }\n    if (arrDown[i].bbPercentDown == undefined) {\n      arrDown[i].bbPercentDown = \"No Data\";\n    }\n\n    if (arrUp[i].bbPercentUp == undefined) {\n      arrUp[i].bbPercentUp = \"No Data\";\n    }\n    if (arrDown[i].macdHistogramDown == undefined) {\n      arrDown[i].macdHistogramDown = \"No Data\";\n    }\n    if (arrDown[i].macdSignalLineDown == undefined) {\n      arrDown[i].macdSignalLineDown = \"No Data\";\n    }\n    if (arrUp[i].macdHistogramUp == undefined) {\n      arrUp[i].macdHistogramUp = \"No Data\";\n    }\n    if (arrUp[i].macdSignalLineUp == undefined) {\n      arrUp[i].macdSignalLineUp = \"No Data\";\n    }\n    if (arrUp[i].symbolUp == undefined) {\n      arrUp[i].symbolUp = \"No Data\";\n    }\n    if (arrDown[i].symbolDown == undefined) {\n      arrDown[i].symbolDown = \"No Data\";\n    }\n\n    arrUp[i].volumeIncreaseToday = volumeIncreaseUp\n    arrUp[i].volumeIncreaseYesterday = yesterdayVolIncreaseUp\n    arrDown[i].volumeIncreaseToday = volumeIncreaseDown\n    arrDown[i].volumeIncreaseYesterday = yesterdayVolIncreaseDown\n  }\n \n \n  for (let i = 0; i < arrUp.length; i++) {\n    // // UPPER ------------------------------------------------------------------------------\n\n    arrUp[i].symbol = arrUp[i].symbolUp;\n    delete arrUp[i].symbolUp;\n    arrUp[i].change = arrUp[i].changeUp;\n    delete arrUp[i].changeUp;\n    arrUp[i].avgVolume = arrUp[i].avgVolumeUp;\n    delete arrUp[i].avgVolumeUp;\n    arrUp[i].changesPercentage = arrUp[i].changesPercentageUp;\n    delete arrUp[i].changesPercentageUp;\n    arrUp[i].emaEight = arrUp[i].emaEightUp;\n    delete arrUp[i].emaEightUp;\n    arrUp[i].emaTwelve = arrUp[i].emaTwelveUp;\n    delete arrUp[i].emaTwelveUp;\n    arrUp[i].emaTwenty = arrUp[i].emaTwentyUp;\n    delete arrUp[i].emaTwentyUp;\n    arrUp[i].emaTwentySix = arrUp[i].emaTwentySixUp;\n    delete arrUp[i].emaTwentySixUp;\n    arrUp[i].emaFifty = arrUp[i].emaFiftyUp;\n    delete arrUp[i].emaFiftyUp;\n    arrUp[i].emaTwoHun = arrUp[i].emaTwoHunUp;\n    delete arrUp[i].emaTwoHunUp;\n    arrUp[i].macd = arrUp[i].macdUp;\n    delete arrUp[i].macdUp;\n    arrUp[i].macdHistogram = arrUp[i].macdHistogramUp;\n    delete arrUp[i].macdHistogramUp;\n    arrUp[i].macdSignalLine = arrUp[i].macdSignalLineUp;\n    delete arrUp[i].macdSignalLineUp;\n    arrUp[i].price = arrUp[i].priceUp;\n    delete arrUp[i].priceUp;\n    arrUp[i].rsi = arrUp[i].rsiUp;\n    delete arrUp[i].rsiUp;\n    arrUp[i].smaFiveTeen = arrUp[i].smaFiveTeenUp;\n    delete arrUp[i].smaFiveTeenUp;\n    arrUp[i].smaTwenty = arrUp[i].smaTwentyUp;\n    delete arrUp[i].smaTwentyUp;\n    arrUp[i].smaThirty = arrUp[i].smaThirtyUp;\n    delete arrUp[i].smaThirtyUp;\n    arrUp[i].smaFifty = arrUp[i].smaFiftyUp;\n    delete arrUp[i].smaFiftyUp;\n    arrUp[i].smaOneHun = arrUp[i].smaOneHunUp;\n    delete arrUp[i].smaOneHunUp;\n    arrUp[i].smaTwoHun = arrUp[i].smaTwoHunUp;\n    delete arrUp[i].smaTwoHunUp;\n    arrUp[i].volume = arrUp[i].volumeUp;\n    delete arrUp[i].volumeUp;\n    arrUp[i].volumeYesterday = arrUp[i].volumeYesterdayUp;\n    delete arrUp[i].volumeYesterdayUp;\n    arrUp[i].vwap = arrUp[i].vwapUp;\n    delete arrUp[i].vwapUp;\n    arrUp[i].stochasticD = arrUp[i].stochasticDUp;\n    delete arrUp[i].stochasticDUp;\n    arrUp[i].stochasticK = arrUp[i].stochasticKUp;\n    delete arrUp[i].stochasticKUp;\n    arrUp[i].stochasticSignal = arrUp[i].stochasticSignalUp;\n    delete arrUp[i].stochasticSignalUp;\n    arrUp[i].wmaFiveTeen = arrUp[i].wmaFiveTeenUp;\n    delete arrUp[i].wmaFiveTeenUp;\n    arrUp[i].wmaTwenty = arrUp[i].wmaTwentyUp;\n    delete arrUp[i].wmaTwentyUp;\n    arrUp[i].wmaThirty = arrUp[i].wmaThirtyUp;\n    delete arrUp[i].wmaThirtyUp;\n    arrUp[i].wmaFifty = arrUp[i].wmaFiftyUp;\n    delete arrUp[i].wmaFiftyUp;\n    arrUp[i].wmaOneHun = arrUp[i].wmaOneHunUp;\n    delete arrUp[i].wmaOneHunUp;\n    arrUp[i].wmaTwoHun = arrUp[i].wmaTwoHunUp;\n    delete arrUp[i].wmaTwoHunUp;\n    arrUp[i].vwmaFiveTeen = arrUp[i].vwmaFiveTeenUp;\n    delete arrUp[i].vwmaFiveTeenUp;\n    arrUp[i].vwmaTwenty = arrUp[i].vwmaTwentyUp;\n    delete arrUp[i].vwmaTwentyUp;\n    arrUp[i].vwmaThirty = arrUp[i].vwmaThirtyUp;\n    delete arrUp[i].vwmaThirtyUp;\n    arrUp[i].vwmaFifty = arrUp[i].vwmaFiftyUp;\n    delete arrUp[i].vwmaFiftyUp;\n    arrUp[i].vwmaOneHun = arrUp[i].vwmaOneHunUp;\n    delete arrUp[i].vwmaOneHunUp;\n    arrUp[i].vwmaTwoHun = arrUp[i].vwmaTwoHunUp;\n    delete arrUp[i].vwmaTwoHunUp;\n    arrUp[i].williamsR = arrUp[i].williamsRUp;\n    delete arrUp[i].williamsRUp;\n    arrUp[i].cciTwenty = arrUp[i].cciUp;\n    delete arrUp[i].cciUp;\n    arrUp[i].bbUpper = arrUp[i].bbUpperUp;\n    delete arrUp[i].bbUpperUp;\n    arrUp[i].bbLower = arrUp[i].bbLowerUp;\n    delete arrUp[i].bbLowerUp;\n    arrUp[i].bbMiddle = arrUp[i].bbMiddleUp;\n    delete arrUp[i].bbMiddleUp;\n    arrUp[i].bbPercent = arrUp[i].bbPercentUp;\n    delete arrUp[i].bbPercentUp;\n\n    if (arrUp[i].bbPercent == undefined) {\n      arrUp[i].bbPercent = 'No Data'\n    }\n  }\n  for (let i = 0; i < arrDown.length; i++) {\n    // DOWNERS ------------------------------------------------------------------------------\n\n    arrDown[i].symbol = arrDown[i].symbolDown;\n    delete arrDown[i].symbolDown;\n    arrDown[i].change = arrDown[i].changeDown;\n    delete arrDown[i].changeDown;\n    arrDown[i].avgVolume = arrDown[i].avgVolumeDown;\n    delete arrDown[i].avgVolumeDown;\n    arrDown[i].changesPercentage = arrDown[i].changesPercentageDown;\n    delete arrDown[i].changesPercentageDown;\n    arrDown[i].emaEight = arrDown[i].emaEightDown;\n    delete arrDown[i].emaEightDown;\n    arrDown[i].emaTwelve = arrDown[i].emaTwelveDown;\n    delete arrDown[i].emaTwelveDown;\n    arrDown[i].emaTwenty = arrDown[i].emaTwentyDown;\n    delete arrDown[i].emaTwentyDown;\n    arrDown[i].emaTwentySix = arrDown[i].emaTwentySixDown;\n    delete arrDown[i].emaTwentySixDown;\n    arrDown[i].emaFifty = arrDown[i].emaFiftyDown;\n    delete arrDown[i].emaFiftyDown;\n    arrDown[i].emaTwoHun = arrDown[i].emaTwoHunDown;\n    delete arrDown[i].emaTwoHunDown;\n    arrDown[i].macd = arrDown[i].macdDown;\n    delete arrDown[i].macdDown;\n    arrDown[i].macdHistogram = arrDown[i].macdHistogramDown;\n    delete arrDown[i].macdHistogramDown;\n    arrDown[i].macdSignalLine = arrDown[i].macdSignalLineDown;\n    delete arrDown[i].macdSignalLineDown;\n    arrDown[i].price = arrDown[i].priceDown;\n    delete arrDown[i].priceDown;\n    arrDown[i].rsi = arrDown[i].rsiDown;\n    delete arrDown[i].rsiDown;\n    arrDown[i].smaFiveTeen = arrDown[i].smaFiveTeenDown;\n    delete arrDown[i].smaFiveTeenDown;\n    arrDown[i].smaTwenty = arrDown[i].smaTwentyDown;\n    delete arrDown[i].smaTwentyDown;\n    arrDown[i].smaThirty = arrDown[i].smaThirtyDown;\n    delete arrDown[i].smaThirtyDown;\n    arrDown[i].smaFifty = arrDown[i].smaFiftyDown;\n    delete arrDown[i].smaFiftyDown;\n    arrDown[i].smaOneHun = arrDown[i].smaOneHunDown;\n    delete arrDown[i].smaOneHunDown;\n    arrDown[i].smaTwoHun = arrDown[i].smaTwoHunDown;\n    delete arrDown[i].smaTwoHunDown;\n    arrDown[i].volume = arrDown[i].volumeDown;\n    delete arrDown[i].volumeDown;\n    arrDown[i].volumeYesterday = arrDown[i].volumeYesterdayDown;\n    delete arrDown[i].volumeYesterdayDown;\n    arrDown[i].vwap = arrDown[i].vwapDown;\n    delete arrDown[i].vwapDown;\n    arrDown[i].stochasticD = arrDown[i].stochasticDDown;\n    delete arrDown[i].stochasticDDown;\n    arrDown[i].stochasticK = arrDown[i].stochasticKDown;\n    delete arrDown[i].stochasticKDown;\n    arrDown[i].stochasticSignal = arrDown[i].stochasticSignalDown;\n    delete arrDown[i].stochasticSignalDown;\n    arrDown[i].wmaFiveTeen = arrDown[i].wmaFiveTeenDown;\n    delete arrDown[i].wmaFiveTeenDown;\n    arrDown[i].wmaTwenty = arrDown[i].wmaTwentyDown;\n    delete arrDown[i].wmaTwentyDown;\n    arrDown[i].wmaThirty = arrDown[i].wmaThirtyDown;\n    delete arrDown[i].wmaThirtyDown;\n    arrDown[i].wmaFifty = arrDown[i].wmaFiftyDown;\n    delete arrDown[i].wmaFiftyDown;\n    arrDown[i].wmaOneHun = arrDown[i].wmaOneHunDown;\n    delete arrDown[i].wmaOneHunDown;\n    arrDown[i].wmaTwoHun = arrDown[i].wmaTwoHunDown;\n    delete arrDown[i].wmaTwoHunDown;\n    arrDown[i].vwmaFiveTeen = arrDown[i].vwmaFiveTeenDown;\n    delete arrDown[i].vwmaFiveTeenDown;\n    arrDown[i].vwmaTwenty = arrDown[i].vwmaTwentyDown;\n    delete arrDown[i].vwmaTwentyDown;\n    arrDown[i].vwmaThirty = arrDown[i].vwmaThirtyDown;\n    delete arrDown[i].vwmaThirtyDown;\n    arrDown[i].vwmaFifty = arrDown[i].vwmaFiftyDown;\n    delete arrDown[i].vwmaFiftyDown;\n    arrDown[i].vwmaOneHun = arrDown[i].vwmaOneHunDown;\n    delete arrDown[i].vwmaOneHunDown;\n    arrDown[i].vwmaTwoHun = arrDown[i].vwmaTwoHunDown;\n    delete arrDown[i].vwmaTwoHunDown;\n    arrDown[i].williamsR = arrDown[i].williamsRDown;\n    delete arrDown[i].williamsRDown;\n    arrDown[i].cciTwenty = arrDown[i].cciDown;\n    delete arrDown[i].cciDown;\n    arrDown[i].bbUpper = arrDown[i].bbUpperDown;\n    delete arrDown[i].bbUpperDown;\n    arrDown[i].bbLower = arrDown[i].bbLowerDown;\n    delete arrDown[i].bbLowerDown;\n    arrDown[i].bbMiddle = arrDown[i].bbMiddleDown;\n    delete arrDown[i].bbMiddleDown;\n    arrDown[i].bbPercent = arrDown[i].bbPercentDown;\n    delete arrDown[i].bbPercentDown;\n  }\n\n \n  let finalStocksArr = arrDown.concat(arrUp)\n  return finalStocksArr;\n\n}\n//----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\nconst returnedData = await filterTradableSymbols(nyseMasterKey, nasdaqMasterKey, compileStocks);\n\nreturn returnedData;\n\n}"]},"metadata":{},"sourceType":"module"}