{"ast":null,"code":"// CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nexport function cciFunction(chartArr, dataPull, newestPull, num) {\n  let tpvCul = 0;\n  let tpv = [];\n  let tpvMa = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    let tpvCurrent = newPrice;\n    const recentTpv = newPrice;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].cciTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 19; i++) {\n        const {\n          high,\n          close,\n          low\n        } = dataPull.historical[i];\n        tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n\n        tpvCurrent = (close + high + low) / 3;\n      } // ---- TPV SMA ------------------------\n\n\n      tpvCul = tpv.reduce((a, b) => a + b);\n      tpvMa = tpvCul / 20; // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n\n      const partOne = recentTpv - tpvMa;\n      const meanD = tpv.map(x => x - tpvMa);\n      const meanDMap = meanD.map(x => Math.abs(x));\n      const meanDSum = meanDMap.reduce((a, b) => a + b);\n      const meanDiv = meanDSum / 20; // PART TWO OF FORMULA --------------\n\n      const partTwo = meanDiv * 0.015; // CCI ------------------------------\n\n      const cci = partOne / partTwo;\n      chartArr[num].cciTwenty = cci.toFixed(2);\n    }\n  } catch (e) {}\n}","map":{"version":3,"sources":["/Users/austinolijar/Desktop/MERN-DeadCat/dead-cat/client/src/JS/technical-Indicators.js/cci.js"],"names":["cciFunction","chartArr","dataPull","newestPull","num","tpvCul","tpv","tpvMa","newPrice","price","tpvCurrent","recentTpv","historical","length","cciTwenty","i","high","close","low","push","reduce","a","b","partOne","meanD","map","x","meanDMap","Math","abs","meanDSum","meanDiv","partTwo","cci","toFixed","e"],"mappings":"AAAE;AACA,OAAO,SAASA,WAAT,CAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,UAAzC,EAAqDC,GAArD,EAA0D;AAC/D,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAI;AACF,UAAMC,QAAQ,GAAGL,UAAU,CAAC,CAAD,CAAV,CAAcM,KAA/B;AACA,QAAIC,UAAU,GAAGF,QAAjB;AACA,UAAMG,SAAS,GAAGH,QAAlB;;AAEA,QAAIN,QAAQ,CAACU,UAAT,CAAoBC,MAApB,GAA6B,EAAjC,EAAqC;AACnCZ,MAAAA,QAAQ,CAACG,GAAD,CAAR,CAAcU,SAAd,GAA0B,SAA1B;AACD,KAFD,MAEO;AACL,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,cAAM;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,KAAR;AAAeC,UAAAA;AAAf,YAAuBhB,QAAQ,CAACU,UAAT,CAAoBG,CAApB,CAA7B;AACAT,QAAAA,GAAG,CAACa,IAAJ,CAAST,UAAT,EAF4B,CAEN;;AACtBA,QAAAA,UAAU,GAAG,CAACO,KAAK,GAAGD,IAAR,GAAeE,GAAhB,IAAuB,CAApC;AACD,OALI,CAML;;;AACAb,MAAAA,MAAM,GAAGC,GAAG,CAACc,MAAJ,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAzB,CAAT;AACAf,MAAAA,KAAK,GAAGF,MAAM,GAAG,EAAjB,CARK,CASL;;AACA,YAAMkB,OAAO,GAAGZ,SAAS,GAAGJ,KAA5B;AAEA,YAAMiB,KAAK,GAAGlB,GAAG,CAACmB,GAAJ,CAASC,CAAD,IAAOA,CAAC,GAAGnB,KAAnB,CAAd;AACA,YAAMoB,QAAQ,GAAGH,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAOE,IAAI,CAACC,GAAL,CAASH,CAAT,CAAjB,CAAjB;AACA,YAAMI,QAAQ,GAAGH,QAAQ,CAACP,MAAT,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA9B,CAAjB;AACA,YAAMS,OAAO,GAAGD,QAAQ,GAAG,EAA3B,CAfK,CAgBL;;AACA,YAAME,OAAO,GAAGD,OAAO,GAAG,KAA1B,CAjBK,CAkBL;;AACA,YAAME,GAAG,GAAGV,OAAO,GAAGS,OAAtB;AAEA/B,MAAAA,QAAQ,CAACG,GAAD,CAAR,CAAcU,SAAd,GAA0BmB,GAAG,CAACC,OAAJ,CAAY,CAAZ,CAA1B;AACD;AACF,GA9BD,CA8BE,OAAOC,CAAP,EAAU,CAAE;AACf","sourcesContent":["  // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  export function cciFunction(chartArr, dataPull, newestPull, num) {\n    let tpvCul = 0;\n    let tpv = [];\n    let tpvMa = 0;\n  \n    try {\n      const newPrice = newestPull[0].price;\n      let tpvCurrent = newPrice;\n      const recentTpv = newPrice;\n  \n      if (dataPull.historical.length < 19) {\n        chartArr[num].cciTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 19; i++) {\n          const { high, close, low } = dataPull.historical[i];\n          tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n          tpvCurrent = (close + high + low) / 3;\n        }\n        // ---- TPV SMA ------------------------\n        tpvCul = tpv.reduce((a, b) => a + b);\n        tpvMa = tpvCul / 20;\n        // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n        const partOne = recentTpv - tpvMa;\n  \n        const meanD = tpv.map((x) => x - tpvMa);\n        const meanDMap = meanD.map((x) => Math.abs(x));\n        const meanDSum = meanDMap.reduce((a, b) => a + b);\n        const meanDiv = meanDSum / 20;\n        // PART TWO OF FORMULA --------------\n        const partTwo = meanDiv * 0.015;\n        // CCI ------------------------------\n        const cci = partOne / partTwo;\n  \n        chartArr[num].cciTwenty = cci.toFixed(2);\n      }\n    } catch (e) {}\n  }"]},"metadata":{},"sourceType":"module"}