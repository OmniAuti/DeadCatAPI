{"ast":null,"code":"// RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nexport function rsiFunction(chartArr, dataPull, newestPull, num) {\n  let iRSI = 13;\n  let iRSIAdjusted = 14;\n  let recentUpper = 0;\n  let recentDowner = 0;\n  let upMove = 0;\n  let downMove = 0;\n  let pastDownPeriod = 0;\n  let pastUpPeriod = 0;\n\n  try {\n    const newPrice = newestPull[0].price; // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n\n    if (dataPull.historical.length <= 14) {\n      chartArr[num].rsi = \"No Data\";\n    } else {\n      // LOOP FOR AVERAGE\n      while (iRSI >= 0) {\n        if (dataPull.historical[iRSI].close > dataPull.historical[iRSIAdjusted].close) {\n          upMove += dataPull.historical[iRSI].close - dataPull.historical[iRSIAdjusted].close;\n        } else {\n          downMove += dataPull.historical[iRSIAdjusted].close - dataPull.historical[iRSI].close;\n        }\n\n        iRSI--;\n        iRSIAdjusted--;\n      }\n\n      let averageUp = upMove / 14;\n      let averageDown = downMove / 14; // MOST RECENT DIFFERENCE\n\n      if (newPrice > dataPull.historical[0].close) {\n        recentUpper = newPrice - dataPull.historical[0].close;\n      } else {\n        recentDowner = dataPull.historical[0].close - newPrice;\n      }\n\n      pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n      pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n      let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n      chartArr[num].rsi = rsi.toFixed(2);\n    }\n  } catch (e) {}\n}","map":{"version":3,"sources":["/Users/austinolijar/Desktop/MERN-DeadCat/dead-cat/client/src/JS/technical-Indicators.js/rsi.js"],"names":["rsiFunction","chartArr","dataPull","newestPull","num","iRSI","iRSIAdjusted","recentUpper","recentDowner","upMove","downMove","pastDownPeriod","pastUpPeriod","newPrice","price","historical","length","rsi","close","averageUp","averageDown","toFixed","e"],"mappings":"AAAA;AACA,OAAO,SAASA,WAAT,CAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,UAAzC,EAAqDC,GAArD,EAA0D;AAC7D,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,cAAc,GAAG,CAArB;AACA,MAAIC,YAAY,GAAG,CAAnB;;AAEA,MAAI;AACF,UAAMC,QAAQ,GAAGV,UAAU,CAAC,CAAD,CAAV,CAAcW,KAA/B,CADE,CAEF;;AACA,QAAIZ,QAAQ,CAACa,UAAT,CAAoBC,MAApB,IAA8B,EAAlC,EAAsC;AACpCf,MAAAA,QAAQ,CAACG,GAAD,CAAR,CAAca,GAAd,GAAoB,SAApB;AACD,KAFD,MAEO;AACL;AACA,aAAOZ,IAAI,IAAI,CAAf,EAAkB;AAChB,YACEH,QAAQ,CAACa,UAAT,CAAoBV,IAApB,EAA0Ba,KAA1B,GACAhB,QAAQ,CAACa,UAAT,CAAoBT,YAApB,EAAkCY,KAFpC,EAGE;AACAT,UAAAA,MAAM,IACJP,QAAQ,CAACa,UAAT,CAAoBV,IAApB,EAA0Ba,KAA1B,GACAhB,QAAQ,CAACa,UAAT,CAAoBT,YAApB,EAAkCY,KAFpC;AAGD,SAPD,MAOO;AACLR,UAAAA,QAAQ,IACNR,QAAQ,CAACa,UAAT,CAAoBT,YAApB,EAAkCY,KAAlC,GACAhB,QAAQ,CAACa,UAAT,CAAoBV,IAApB,EAA0Ba,KAF5B;AAGD;;AACDb,QAAAA,IAAI;AACJC,QAAAA,YAAY;AACb;;AAED,UAAIa,SAAS,GAAGV,MAAM,GAAG,EAAzB;AACA,UAAIW,WAAW,GAAGV,QAAQ,GAAG,EAA7B,CApBK,CAsBL;;AACA,UAAIG,QAAQ,GAAGX,QAAQ,CAACa,UAAT,CAAoB,CAApB,EAAuBG,KAAtC,EAA6C;AAC3CX,QAAAA,WAAW,GAAGM,QAAQ,GAAGX,QAAQ,CAACa,UAAT,CAAoB,CAApB,EAAuBG,KAAhD;AACD,OAFD,MAEO;AACLV,QAAAA,YAAY,GAAGN,QAAQ,CAACa,UAAT,CAAoB,CAApB,EAAuBG,KAAvB,GAA+BL,QAA9C;AACD;;AAEDD,MAAAA,YAAY,GAAG,CAACO,SAAS,GAAG,EAAZ,GAAiBZ,WAAlB,IAAiC,EAAhD;AACAI,MAAAA,cAAc,GAAG,CAACS,WAAW,GAAG,EAAd,GAAmBZ,YAApB,IAAoC,EAArD;AAEA,UAAIS,GAAG,GAAG,MAAM,OAAO,IAAIL,YAAY,GAAGD,cAA1B,CAAhB;AACAV,MAAAA,QAAQ,CAACG,GAAD,CAAR,CAAca,GAAd,GAAoBA,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAApB;AACD;AACF,GAxCD,CAwCE,OAAOC,CAAP,EAAU,CAAE;AACf","sourcesContent":["// RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nexport function rsiFunction(chartArr, dataPull, newestPull, num) {\n    let iRSI = 13;\n    let iRSIAdjusted = 14;\n    let recentUpper = 0;\n    let recentDowner = 0;\n    let upMove = 0;\n    let downMove = 0;\n    let pastDownPeriod = 0;\n    let pastUpPeriod = 0;\n  \n    try {\n      const newPrice = newestPull[0].price;\n      // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n      if (dataPull.historical.length <= 14) {\n        chartArr[num].rsi = \"No Data\";\n      } else {\n        // LOOP FOR AVERAGE\n        while (iRSI >= 0) {\n          if (\n            dataPull.historical[iRSI].close >\n            dataPull.historical[iRSIAdjusted].close\n          ) {\n            upMove +=\n              dataPull.historical[iRSI].close -\n              dataPull.historical[iRSIAdjusted].close;\n          } else {\n            downMove +=\n              dataPull.historical[iRSIAdjusted].close -\n              dataPull.historical[iRSI].close;\n          }\n          iRSI--;\n          iRSIAdjusted--;\n        }\n  \n        let averageUp = upMove / 14;\n        let averageDown = downMove / 14;\n  \n        // MOST RECENT DIFFERENCE\n        if (newPrice > dataPull.historical[0].close) {\n          recentUpper = newPrice - dataPull.historical[0].close;\n        } else {\n          recentDowner = dataPull.historical[0].close - newPrice;\n        }\n  \n        pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n        pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n  \n        let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n        chartArr[num].rsi = rsi.toFixed(2);\n      }\n    } catch (e) {}\n  }"]},"metadata":{},"sourceType":"module"}