{"ast":null,"code":"// STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nexport function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n  let iSO = 13;\n  let soLowHolder = [];\n  let soHighHolder = [];\n  let highestHigh = 0;\n  let lowestLow = 0; // FIRST %D\n\n  let topForm = [];\n  let bottomForm = []; // SECOND %D\n\n  let topFormTwo = [];\n  let bottomFormTwo = []; // THIRD %D\n\n  let topFormThree = [];\n  let bottomFormThree = []; // HOLDING SET OF %D FOR 14 3 3\n\n  let signalLineHolder = [];\n\n  try {\n    let newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 18) {\n      chartArr[num].stochasticK = \"No Data\";\n    } else {\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n      while (iSO >= 0) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      soHighHolder.push(newPrice);\n      soLowHolder.push(newPrice);\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      if (lowestLow === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      if (highestHigh === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      topForm.push(newPrice - lowestLow);\n      bottomForm.push(highestHigh - lowestLow); //FOR %K\n\n      chartArr[num].stochasticK = ((newPrice - lowestLow) / (highestHigh - lowestLow) * 100).toFixed(2); // RESET HOLDER AND VARs --------------------------------------------------------\n\n      iSO = 14;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n      while (iSO >= 1) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n      topForm.push(dataPull.historical[0].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n      topFormTwo.push(dataPull.historical[0].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow); // RESET HOLDER AND VARs ------------------------------------------------\n\n      iSO = 15;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 2) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n      topForm.push(dataPull.historical[1].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n      topFormTwo.push(dataPull.historical[1].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n      topFormThree.push(dataPull.historical[1].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      let sumTop = topForm.reduce((a, b) => a + b, 0);\n      let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n      let slowD = sumTop / sumBottom * 100; // FOR %D\n\n      chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n      signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------------------------------\n\n      iSO = 16;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n      while (iSO >= 3) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n      topFormTwo.push(dataPull.historical[2].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n      topFormThree.push(dataPull.historical[2].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n      slowD = sumTop / sumBottom * 100;\n      signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------\n\n      iSO = 17;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 4) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n      topFormThree.push(dataPull.historical[3].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormThree.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n      slowD = sumTop / sumBottom * 100;\n      signalLineHolder.push(slowD); // ----------- TALLY UP LAST SMOOTHING -------------------------------\n\n      const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n      let smaD = sumStochD / 3;\n\n      if (smaD < 0) {\n        smaD *= -1;\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      } else {\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      }\n    }\n  } catch (e) {}\n}","map":{"version":3,"sources":["/Users/austinolijar/Desktop/MERN-DeadCat/dead-cat/src/JS/technical-Indicators.js/stochOsc1433.js"],"names":["stochOsc1433Function","chartArr","dataPull","newestPull","num","iSO","soLowHolder","soHighHolder","highestHigh","lowestLow","topForm","bottomForm","topFormTwo","bottomFormTwo","topFormThree","bottomFormThree","signalLineHolder","newPrice","price","historical","length","stochasticK","push","low","high","Math","max","min","close","toFixed","sumTop","reduce","a","b","sumBottom","slowD","stochasticD","sumStochD","smaD","stochasticSignal","e"],"mappings":"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","sourcesContent":["  \n  // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  export function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n    let iSO = 13;\n  \n    let soLowHolder = [];\n    let soHighHolder = [];\n    let highestHigh = 0;\n    let lowestLow = 0;\n    // FIRST %D\n    let topForm = [];\n    let bottomForm = [];\n    // SECOND %D\n    let topFormTwo = [];\n    let bottomFormTwo = [];\n    // THIRD %D\n    let topFormThree = [];\n    let bottomFormThree = [];\n    // HOLDING SET OF %D FOR 14 3 3\n    let signalLineHolder = [];\n    try {\n      let newPrice = newestPull[0].price;\n  \n      if (dataPull.historical.length < 18) {\n        chartArr[num].stochasticK = \"No Data\";\n      } else {\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n  \n        while (iSO >= 0) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n  \n        soHighHolder.push(newPrice);\n        soLowHolder.push(newPrice);\n  \n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n  \n        if (lowestLow === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n  \n        if (highestHigh === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n  \n        topForm.push(newPrice - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n  \n        //FOR %K\n        chartArr[num].stochasticK = (\n          ((newPrice - lowestLow) / (highestHigh - lowestLow)) *\n          100\n        ).toFixed(2);\n  \n        // RESET HOLDER AND VARs --------------------------------------------------------\n  \n        iSO = 14;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n  \n        // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n  \n        while (iSO >= 1) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n  \n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n  \n        topForm.push(dataPull.historical[0].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n  \n        topFormTwo.push(dataPull.historical[0].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n  \n        // RESET HOLDER AND VARs ------------------------------------------------\n  \n        iSO = 15;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n  \n        // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n  \n        while (iSO >= 2) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n  \n        topForm.push(dataPull.historical[1].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n  \n        topFormTwo.push(dataPull.historical[1].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n  \n        topFormThree.push(dataPull.historical[1].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow);\n  \n        // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n  \n        let sumTop = topForm.reduce((a, b) => a + b, 0);\n        let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n  \n        let slowD = (sumTop / sumBottom) * 100;\n  \n        // FOR %D\n        chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n  \n        signalLineHolder.push(slowD);\n  \n        //RESET VARS ---------------------------------------------------------------------\n  \n        iSO = 16;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0;\n  \n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n  \n        while (iSO >= 3) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n  \n        topFormTwo.push(dataPull.historical[2].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n  \n        topFormThree.push(dataPull.historical[2].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow);\n  \n        // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n  \n        sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n  \n        slowD = (sumTop / sumBottom) * 100;\n  \n        signalLineHolder.push(slowD);\n  \n        //RESET VARS ---------------------------------------------\n  \n        iSO = 17;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0;\n  \n        // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n  \n        while (iSO >= 4) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n  \n        topFormThree.push(dataPull.historical[3].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow);\n  \n        // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n  \n        sumTop = topFormThree.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n  \n        slowD = (sumTop / sumBottom) * 100;\n  \n        signalLineHolder.push(slowD);\n  \n        // ----------- TALLY UP LAST SMOOTHING -------------------------------\n        const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n        let smaD = sumStochD / 3;\n  \n        if (smaD < 0) {\n          smaD *= -1;\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        } else {\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        }\n      }\n    } catch (e) {}\n  }"]},"metadata":{},"sourceType":"module"}