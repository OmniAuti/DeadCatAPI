{"ast":null,"code":"var _jsxFileName = \"/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/PortfolioHolder.js\",\n    _s = $RefreshSig$();\n\nimport PortfolioItem from \"./PortfolioItem\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PortfolioHolder = props => {\n  _s();\n\n  const [storageArr, setStorageArr] = useState([]);\n  useEffect(() => {\n    setStorageArr(JSON.parse(localStorage.getItem(\"deadCatPortfolio\")));\n  }, [props.newStorage]);\n\n  const handleDeleteStorageItem = id => {\n    console.log(id);\n    setStorageArr(storageArr.filter(item => item.id !== id));\n  };\n\n  useEffect(() => {\n    if (storageArr == []) {\n      localStorage.clear(\"deadCatPortfolio\");\n      return;\n    } // console.log(storageArr.length)\n\n\n    localStorage.setItem(\"deadCatPortfolio\", JSON.stringify(storageArr));\n  }, [storageArr]);\n  console.log(storageArr);\n\n  if (storageArr === [] || storageArr === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.handleClearPortfolio,\n        tabIndex: props.activePortfolio ? -1 : 0,\n        className: \"clear-portfolio\",\n        children: \"Clear Entire Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), storageArr.map(data => /*#__PURE__*/_jsxDEV(PortfolioItem, {\n        handleDeleteStorageItem: handleDeleteStorageItem,\n        data: data\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.handleClearPortfolio,\n        tabIndex: props.activePortfolio ? -1 : 0,\n        className: \"clear-portfolio\",\n        children: \"Clear Entire Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(PortfolioHolder, \"jWT+oV7JPISZaPY2x88AP4B5yvQ=\");\n\n_c = PortfolioHolder;\nexport default PortfolioHolder;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioHolder\");","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/components/PortfolioHolder.js"],"names":["PortfolioItem","useState","useEffect","PortfolioHolder","props","storageArr","setStorageArr","JSON","parse","localStorage","getItem","newStorage","handleDeleteStorageItem","id","console","log","filter","item","clear","setItem","stringify","handleClearPortfolio","activePortfolio","map","data"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,aAAa,CAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,CAAD,CAAb;AACD,GAFQ,EAEN,CAACN,KAAK,CAACO,UAAP,CAFM,CAAT;;AAIA,QAAMC,uBAAuB,GAAIC,EAAD,IAAQ;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAP,IAAAA,aAAa,CAACD,UAAU,CAACW,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAxC,CAAD,CAAb;AAED,GAJD;;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,UAAU,IAAI,EAAlB,EAAsB;AACpBI,MAAAA,YAAY,CAACS,KAAb,CAAmB,kBAAnB;AACA;AACD,KAJa,CAKd;;;AACAT,IAAAA,YAAY,CAACU,OAAb,CAAqB,kBAArB,EAAyCZ,IAAI,CAACa,SAAL,CAAef,UAAf,CAAzC;AACD,GAPQ,EAON,CAACA,UAAD,CAPM,CAAT;AASFS,EAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;;AAEA,MAAIA,UAAU,KAAK,EAAf,IAAqBA,UAAU,KAAK,IAAxC,EAA8C;AAC5C,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AACE,QAAA,OAAO,EAAED,KAAK,CAACiB,oBADjB;AAEE,QAAA,QAAQ,EAAEjB,KAAK,CAACkB,eAAN,GAAwB,CAAC,CAAzB,GAA6B,CAFzC;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBC,GAnBH,MAmBS;AAEL,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,EAGGjB,UAAU,CAACkB,GAAX,CAAgBC,IAAD,iBACd,QAAC,aAAD;AACE,QAAA,uBAAuB,EAAEZ,uBAD3B;AAGE,QAAA,IAAI,EAAEY;AAHR,SAEOA,IAAI,CAACX,EAFZ;AAAA;AAAA;AAAA;AAAA,cADD,CAHH,eAWE;AACE,QAAA,OAAO,EAAET,KAAK,CAACiB,oBADjB;AAEE,QAAA,QAAQ,EAAEjB,KAAK,CAACkB,eAAN,GAAwB,CAAC,CAAzB,GAA6B,CAFzC;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;AACF,CAnED;;GAAMnB,e;;KAAAA,e;AAqEN,eAAeA,eAAf","sourcesContent":["import PortfolioItem from \"./PortfolioItem\";\nimport { useState, useEffect } from \"react\";\n\nconst PortfolioHolder = (props) => {\n  const [storageArr, setStorageArr] = useState([]);\n\n  useEffect(() => {\n    setStorageArr(JSON.parse(localStorage.getItem(\"deadCatPortfolio\")));\n  }, [props.newStorage]);\n\n  const handleDeleteStorageItem = (id) => {\n    console.log(id);\n    setStorageArr(storageArr.filter((item) => item.id !== id));\n\n  };\n\n  useEffect(() => {\n    if (storageArr == []) {\n      localStorage.clear(\"deadCatPortfolio\")\n      return\n    }\n    // console.log(storageArr.length)\n    localStorage.setItem(\"deadCatPortfolio\", JSON.stringify(storageArr));\n  }, [storageArr])\n\nconsole.log(storageArr)\n\nif (storageArr === [] || storageArr === null) {\n  return (\n    <div className=\"portfolio-holder\">\n      <hr></hr>\n\n      <p>Empty</p>\n\n      <button\n        onClick={props.handleClearPortfolio}\n        tabIndex={props.activePortfolio ? -1 : 0}\n        className=\"clear-portfolio\"\n      >\n        Clear Entire Portfolio\n      </button>\n    </div>\n  );\n\n\n\n  } else {\n   \n    return (\n      <div className=\"portfolio-holder\">\n        <hr></hr>\n\n        {storageArr.map((data) => (\n          <PortfolioItem\n            handleDeleteStorageItem={handleDeleteStorageItem}\n            key={data.id}\n            data={data}\n          />\n        ))}\n\n        <button\n          onClick={props.handleClearPortfolio}\n          tabIndex={props.activePortfolio ? -1 : 0}\n          className=\"clear-portfolio\"\n        >\n          Clear Entire Portfolio\n        </button>\n      </div>\n    );\n  }\n};\n\nexport default PortfolioHolder;\n"]},"metadata":{},"sourceType":"module"}