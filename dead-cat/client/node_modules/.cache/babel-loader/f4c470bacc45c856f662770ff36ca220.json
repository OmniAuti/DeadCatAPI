{"ast":null,"code":"export const technicalPortfolioAnalysis = async arr => {\n  // CHECKING ON PORTFOLIO TO MAKE SURE IT HAS SOMETHING ----------------------------------\n  if (arr === null) {\n    alert('Sorry, your portfolio seems to be malfunctioning.');\n    return;\n  } else if (arr.length <= 0) {\n    alert('Sorry, your portfolio seems to be malfunctioning.');\n    return;\n  }\n\n  console.log(arr); /// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------\n\n  const today = new Date();\n  const year = today.getFullYear();\n  let date = today.getUTCDate();\n  let month = today.getUTCMonth() + 1;\n  let minutes = today.getUTCMinutes();\n  let hour = today.getUTCHours(); // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n  //CALC FOR UTC TO EST\n\n  hour = hour - 4; // CALC FOR EARLY MORNING HOURS UTC\n\n  if (hour < 0) {\n    hour = hour + 24;\n  } // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  const time = `${hour}${minutes}`;\n  const timeNum = parseInt(time); // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n\n  const marketDay = today.getDay(); // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n\n  if (marketDay == 0) {\n    date = date - 2; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 27;\n      }\n    }\n  } else if (marketDay == 6) {\n    date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      }\n    }\n  } // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n\n\n  if (marketDay == 1 && timeNum < 930) {\n    date = date - 3; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 27;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 26;\n      }\n    }\n  } else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {\n    // ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n    date = date - 1; // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date <= 0) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month == 0) {\n          month = 1;\n        }\n\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        date = 28;\n      }\n    }\n  } // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n\n\n  if (date < 10) {\n    date = `0${date}`;\n  }\n\n  if (month < 10) {\n    month = `0${month}`;\n  } // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n\n\n  let todayDate = `${year}-${month}-${date}`; //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n\n  if (todayDate === \"2021-11-25\") {\n    todayDate = \"2021-11-24\";\n  } else if (todayDate === \"2021-12-24\") {\n    todayDate = \"2021-12-23\";\n  } else if (todayDate === \"2022-01-17\") {\n    todayDate = \"2022-01-14\";\n  } else if (todayDate === \"2022-02-21\") {\n    todayDate = \"2022-02-18\";\n  } else if (todayDate === \"2022-04-15\") {\n    todayDate = \"2022-04-14\";\n  } else if (todayDate === \"2022-05-30\") {\n    todayDate = \"2022-05-27\";\n  } else if (todayDate === \"2022-06-20\") {\n    todayDate = \"2022-06-17\";\n  } else if (todayDate === \"2022-07-04\") {\n    todayDate = \"2022-07-01\";\n  } else if (todayDate === \"2022-09-05\") {\n    todayDate = \"2022-09-02\";\n  } else if (todayDate === \"2022-11-24\") {\n    todayDate = \"2022-11-23\";\n  } else if (todayDate === \"2022-12-26\") {\n    todayDate = \"2022-12-23\";\n  } // THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n\n\n  let newDateString = todayDate;\n\n  if (hour + 4 >= 24) {\n    const dateNumSlice = parseInt(date);\n    const dateSliceStart = todayDate.slice(0, 8);\n    let newDateNum = dateNumSlice - 1;\n\n    if (newDateNum < 10) {\n      newDateNum = `0${newDateNum}`;\n    }\n\n    newDateString = `${dateSliceStart}${newDateNum}`;\n    newDateString = newDateString.toString(); // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n\n    if (date == 1 && hour + 4 >= 24) {\n      if (month == 1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 31;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 30;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 29;\n        newDateString = `${year}-${month}-${date}`;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        date = 28;\n        newDateString = `${year}-${month}-${date}`;\n      }\n    }\n  } // ---------------------- END OF DATE -------------------------------------\n  // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n\n\n  async function filterTradableSymbols(portArr) {\n    try {\n      // ------ FETCH NYSE\n      const res = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNyse = await res.json(); // ------ FETCH NASDAQ\n\n      const resTwo = await fetch(\"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\");\n      const dataNas = await resTwo.json(); // FILTER THESE STOCKS DOWN TO JUST WHAT IS IN PORTFOLIO\n\n      const combinedStock = await dataNyse.concat(dataNas); // IN ANOTHER FUNCTION MAKE THE FILTER TO MATCH PORTFOLIO ARR\n      // GETTING INFO FOR PORTFOLIO STOCK ===========================\n\n      var holderArr = [];\n\n      for (let i = 0; i < portArr.length; i++) {\n        for (let j = 0; j < combinedStock.length; j++) {\n          if (portArr[i].symbol === combinedStock[j].symbol) {\n            holderArr.push(combinedStock[j]);\n          }\n        }\n      }\n\n      return holderArr; //--------- CATCH\n    } catch (e) {}\n  }\n\n  filterTradableSymbols(arr); // ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n  // SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n  function smaFunction(chartArr, dataPull, newestPull, num) {\n    let culSMA = 0; // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n\n    let fiveTeenSMA = 13;\n    let twentySMA = 18;\n    let thirtySMA = 28;\n    let fiftySMA = 48;\n    let hunSMA = 98;\n    let twoHunSMA = 198;\n\n    try {\n      const todayPricePull = newestPull[0].price; // ------------- 15 DAY SMA -------------------------------\n\n      if (dataPull.historical.length <= 13) {\n        chartArr[num].smaFiveTeen = \"No Data\";\n      } else {\n        while (fiveTeenSMA >= 0) {\n          culSMA += dataPull.historical[fiveTeenSMA].close;\n          fiveTeenSMA--;\n        }\n\n        let smaFiveResult = (culSMA + todayPricePull) / 15;\n        chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 20 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 19) {\n        chartArr[num].smaTwenty = \"No Data\";\n      } else {\n        while (twentySMA >= 0) {\n          culSMA += dataPull.historical[twentySMA].close;\n          twentySMA--;\n        }\n\n        let smaTwentyResult = (culSMA + todayPricePull) / 20;\n        chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 30 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 29) {\n        chartArr[num].smaThirty = \"No Data\";\n      } else {\n        while (thirtySMA >= 0) {\n          culSMA += dataPull.historical[thirtySMA].close;\n          thirtySMA--;\n        }\n\n        let smaThirtyResult = (culSMA + todayPricePull) / 30;\n        chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 50 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 49) {\n        chartArr[num].smaFifty = \"No Data\";\n      } else {\n        while (fiftySMA >= 0) {\n          culSMA += dataPull.historical[fiftySMA].close;\n          fiftySMA--;\n        }\n\n        let smaFiftyResult = (culSMA + todayPricePull) / 50;\n        chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 100 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 99) {\n        chartArr[num].smaOneHun = \"No Data\";\n      } else {\n        while (hunSMA >= 0) {\n          culSMA += dataPull.historical[hunSMA].close;\n          hunSMA--;\n        }\n\n        let smaOneHunResult = (culSMA + todayPricePull) / 100;\n        chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n        culSMA = 0;\n      } // ------------- 200 DAY SMA -------------------------------\n\n\n      if (dataPull.historical.length <= 199) {\n        chartArr[num].smaTwoHun = \"No Data\";\n      } else {\n        while (twoHunSMA >= 0) {\n          culSMA += dataPull.historical[twoHunSMA].close;\n          twoHunSMA--;\n        }\n\n        let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n        chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n        culSMA = 0;\n      }\n    } catch (e) {}\n  } // WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function wmaFunction(chartArr, dataPull, newestPull, num) {\n    // WMA FiveTeen --------------------------------------------------------------------\n    let weight = 14;\n    let wmaInterval = 0;\n    let iWma = 15;\n\n    try {\n      let wmaCul = newestPull[0].price * 15;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].wmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFiveTeen = wmaCul / iWma;\n        chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n      } // WMA Twenty --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 20;\n      weight = 19;\n      wmaInterval = 0;\n      iWma = 20;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].wmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwenty = wmaCul / iWma;\n        chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n      } // WMA THIRTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 30;\n      weight = 29;\n      wmaInterval = 0;\n      iWma = 30;\n\n      if (dataPull.historical.length < 30) {\n        chartArr[num].wmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaThirty = wmaCul / iWma;\n        chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n      } // WMA FIFTY --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 50;\n      weight = 49;\n      wmaInterval = 0;\n      iWma = 50;\n\n      if (dataPull.historical.length < 50) {\n        chartArr[num].wmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaFifty = wmaCul / iWma;\n        chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n      } // WMA ONE HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 100;\n      weight = 99;\n      wmaInterval = 0;\n      iWma = 100;\n\n      if (dataPull.historical.length < 100) {\n        chartArr[num].wmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaOneHun = wmaCul / iWma;\n        chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n      } // WMA TWO HUNDRED --------------------------------------------------------------------\n\n\n      wmaCul = newestPull[0].price * 200;\n      weight = 199;\n      wmaInterval = 0;\n      iWma = 200;\n\n      if (dataPull.historical.length < 200) {\n        chartArr[num].wmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          wmaInterval = dataPull.historical[i].close * weight;\n          wmaCul += wmaInterval;\n          iWma += weight;\n          weight--;\n        }\n\n        const wmaTwoHun = wmaCul / iWma;\n        chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwmaFunction(chartArr, dataPull, newestPull, num) {\n    // VWMA FIVETEEN --------------------------------------------------------------------\n    try {\n      let price = 0;\n      let volume = 0;\n      const newPrice = newestPull[0].price;\n      const newVol = newestPull[0].volume;\n      let volCul = newestPull[0].volume;\n      let totalCul = newPrice * newVol;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].vwmaFiveTeen = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFiveTeen = totalCul / volCul;\n        chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n      } // VWMA TWENTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].vwmaTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 18; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwenty = totalCul / volCul;\n        chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n      } // VWMA THIRTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 29) {\n        chartArr[num].vwmaThirty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 28; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaThirty = totalCul / volCul;\n        chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n      } // VWMA FIFTY --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 49) {\n        chartArr[num].vwmaFifty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 48; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaFifty = totalCul / volCul;\n        chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n      } // VWMA ONEHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 99) {\n        chartArr[num].vwmaOneHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 98; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaOneHun = totalCul / volCul;\n        chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n      } // VWMA TWOHUN --------------------------------------------------------------------\n\n\n      volCul = newestPull[0].volume;\n      totalCul = newPrice * newVol;\n      price = 0;\n      volume = 0;\n\n      if (dataPull.historical.length < 199) {\n        chartArr[num].vwmaTwoHun = \"No Data\";\n      } else {\n        for (let i = 0; i <= 198; i++) {\n          price = dataPull.historical[i].close;\n\n          if (price == undefined) {\n            price = 0;\n          }\n\n          volume = dataPull.historical[i].volume;\n\n          if (volume == undefined) {\n            volume = 0;\n          }\n\n          totalCul += price * volume;\n\n          if (isNaN(totalCul)) {\n            return;\n          }\n\n          volCul += dataPull.historical[i].volume;\n\n          if (isNaN(volCul)) {\n            return;\n          }\n        }\n\n        const vwmaTwoHun = totalCul / volCul;\n        chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n      }\n    } catch (e) {}\n  } // EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n    let emaEight = 14;\n    let emaTwelve = 22;\n    let emaTwenty = 38;\n    let emaTwentySix = 50;\n    let emaFifty = 98;\n    let emaTwoHun = 398;\n    let prevDayEmaSub = 0;\n    let arrEma = [];\n    let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n\n    let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n    try {\n      const newPrice = newestPull[0].price; // EMA EIGHT ----------------------------------------------------------------------\n\n      if (dataPull.historical.length <= 16) {\n        chartArr[num].emaEight = \"No Data\";\n      } else {\n        while (emaEight >= 15) {\n          prevDayEmaSub += dataPull.historical[emaEight].close;\n          emaEight--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 8; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 9 * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaEight--;\n\n        while (emaEight >= 0) {\n          let derp = 2 / 9 * (dataPull.historical[emaEight].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaEight--;\n        }\n\n        const finalEma = 2 / 9 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaEight = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWELVE ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 24) {\n        chartArr[num].emaTwelve = \"No Data\";\n      } else {\n        while (emaTwelve >= 11) {\n          prevDayEmaSub += dataPull.historical[emaTwelve].close;\n          emaTwelve--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 12; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 13 * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwelve--;\n\n        while (emaTwelve >= 0) {\n          let derp = 2 / 13 * (dataPull.historical[emaTwelve].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwelve < 8 && emaTwelve >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwelve.unshift(derp);\n          }\n\n          emaTwelve--;\n        }\n\n        const finalEma = 2 / 13 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwelve.unshift(finalEma);\n        chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 40) {\n        chartArr[num].emaTwenty = \"No Data\";\n      } else {\n        while (emaTwenty >= 19) {\n          prevDayEmaSub += dataPull.historical[emaTwenty].close;\n          emaTwenty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 20; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 21 * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwenty--;\n\n        while (emaTwenty >= 0) {\n          let derp = 2 / 21 * (dataPull.historical[emaTwenty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwenty--;\n        }\n\n        const finalEma = 2 / 21 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWENTY SIX ----------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 51) {\n        chartArr[num].emaTwentySix = \"No Data\";\n      } else {\n        while (emaTwentySix >= 25) {\n          prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n          emaTwentySix--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 26; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 27 * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwentySix--;\n\n        while (emaTwentySix >= 0) {\n          let derp = 2 / 27 * (dataPull.historical[emaTwentySix].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n\n          if (emaTwentySix < 8 && emaTwentySix >= 0) {\n            //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n            macdTwentySix.unshift(derp);\n          }\n\n          emaTwentySix--;\n        }\n\n        const finalEma = 2 / 27 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        macdTwentySix.unshift(finalEma);\n        chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA FIFTY -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 100) {\n        chartArr[num].emaFifty = \"No Data\";\n      } else {\n        while (emaFifty >= 49) {\n          prevDayEmaSub += dataPull.historical[emaFifty].close;\n          emaFifty--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 50; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 51 * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaFifty--;\n\n        while (emaFifty >= 0) {\n          let derp = 2 / 51 * (dataPull.historical[emaFifty].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaFifty--;\n        }\n\n        const finalEma = 2 / 51 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaFifty = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      } // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n\n      if (dataPull.historical.length <= 400) {\n        chartArr[num].emaTwoHun = \"No Data\";\n      } else {\n        while (emaTwoHun >= 199) {\n          prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n          emaTwoHun--;\n        } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n\n        const subEMA = prevDayEmaSub / 200; //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n\n        const finalSubEma = 2 / 201 * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n        arrEma.unshift(finalSubEma);\n        emaTwoHun--;\n\n        while (emaTwoHun >= 0) {\n          let derp = 2 / 201 * (dataPull.historical[emaTwoHun].close - arrEma[0]) + arrEma[0];\n          arrEma.unshift(derp);\n          arrEma.pop();\n          emaTwoHun--;\n        }\n\n        const finalEma = 2 / 201 * (newPrice - arrEma[0]) + arrEma[0];\n        arrEma.unshift(finalEma);\n        arrEma.pop();\n        chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n        arrEma.pop();\n        prevDayEmaSub = 0;\n      }\n    } catch (e) {} // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n    macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n  } // MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function macdFunction(chartArr, num, arr1, arr2) {\n    const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n    chartArr[num].macd = macd.toFixed(2); // CALCULATE SIGNAL LINE ----------------\n\n    let averageMacd = [];\n    let iMacd = 8;\n\n    try {\n      while (iMacd >= 0) {\n        averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n        iMacd--;\n      }\n\n      let averageSum = averageMacd.reduce((a, b) => a + b);\n      let finalAverageMacd = averageSum / 9;\n      let macdSignalLine = 2 / 9 * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n      chartArr[num].macdSignalLine = macdSignalLine.toFixed(2); // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n\n      let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n      chartArr[num].macdHistogram = histogram.toFixed(2); // FOR NO DATA TO PULL FROM\n\n      if (chartArr[num].macdHistogram === \"NaN\") {\n        chartArr[num].macdHistogram = \"No Data\";\n      }\n\n      if (chartArr[num].macd === \"NaN\") {\n        chartArr[num].macd = \"No Data\";\n      }\n\n      if (chartArr[num].macdSignalLine === \"NaN\") {\n        chartArr[num].macdSignalLine = \"No Data\";\n      }\n    } catch (e) {}\n  } // RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function rsiFunction(chartArr, dataPull, newestPull, num) {\n    let iRSI = 13;\n    let iRSIAdjusted = 14;\n    let recentUpper = 0;\n    let recentDowner = 0;\n    let upMove = 0;\n    let downMove = 0;\n    let pastDownPeriod = 0;\n    let pastUpPeriod = 0;\n\n    try {\n      const newPrice = newestPull[0].price; // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n\n      if (dataPull.historical.length <= 14) {\n        chartArr[num].rsi = \"No Data\";\n      } else {\n        // LOOP FOR AVERAGE\n        while (iRSI >= 0) {\n          if (dataPull.historical[iRSI].close > dataPull.historical[iRSIAdjusted].close) {\n            upMove += dataPull.historical[iRSI].close - dataPull.historical[iRSIAdjusted].close;\n          } else {\n            downMove += dataPull.historical[iRSIAdjusted].close - dataPull.historical[iRSI].close;\n          }\n\n          iRSI--;\n          iRSIAdjusted--;\n        }\n\n        let averageUp = upMove / 14;\n        let averageDown = downMove / 14; // MOST RECENT DIFFERENCE\n\n        if (newPrice > dataPull.historical[0].close) {\n          recentUpper = newPrice - dataPull.historical[0].close;\n        } else {\n          recentDowner = dataPull.historical[0].close - newPrice;\n        }\n\n        pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n        pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n        let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n        chartArr[num].rsi = rsi.toFixed(2);\n      }\n    } catch (e) {}\n  } // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n    let iSO = 13;\n    let soLowHolder = [];\n    let soHighHolder = [];\n    let highestHigh = 0;\n    let lowestLow = 0; // FIRST %D\n\n    let topForm = [];\n    let bottomForm = []; // SECOND %D\n\n    let topFormTwo = [];\n    let bottomFormTwo = []; // THIRD %D\n\n    let topFormThree = [];\n    let bottomFormThree = []; // HOLDING SET OF %D FOR 14 3 3\n\n    let signalLineHolder = [];\n\n    try {\n      let newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 18) {\n        chartArr[num].stochasticK = \"No Data\";\n      } else {\n        // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n        while (iSO >= 0) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        soHighHolder.push(newPrice);\n        soLowHolder.push(newPrice);\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n\n        if (lowestLow === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        if (highestHigh === newPrice) {\n          newPrice = dataPull.historical[0].close;\n        }\n\n        topForm.push(newPrice - lowestLow);\n        bottomForm.push(highestHigh - lowestLow); //FOR %K\n\n        chartArr[num].stochasticK = ((newPrice - lowestLow) / (highestHigh - lowestLow) * 100).toFixed(2); // RESET HOLDER AND VARs --------------------------------------------------------\n\n        iSO = 14;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n        while (iSO >= 1) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[0].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[0].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow); // RESET HOLDER AND VARs ------------------------------------------------\n\n        iSO = 15;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 2) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topForm.push(dataPull.historical[1].close - lowestLow);\n        bottomForm.push(highestHigh - lowestLow);\n        topFormTwo.push(dataPull.historical[1].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[1].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        let sumTop = topForm.reduce((a, b) => a + b, 0);\n        let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n        let slowD = sumTop / sumBottom * 100; // FOR %D\n\n        chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------------------------------\n\n        iSO = 16;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n        while (iSO >= 3) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormTwo.push(dataPull.historical[2].close - lowestLow);\n        bottomFormTwo.push(highestHigh - lowestLow);\n        topFormThree.push(dataPull.historical[2].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); //RESET VARS ---------------------------------------------\n\n        iSO = 17;\n        soLowHolder = [];\n        soHighHolder = [];\n        highestHigh = 0;\n        lowestLow = 0;\n        sumTop = 0;\n        sumBottom = 0;\n        slowD = 0; // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n        while (iSO >= 4) {\n          soLowHolder.push(dataPull.historical[iSO].low);\n          soHighHolder.push(dataPull.historical[iSO].high);\n          iSO--;\n        }\n\n        highestHigh = Math.max(...soHighHolder);\n        lowestLow = Math.min(...soLowHolder);\n        topFormThree.push(dataPull.historical[3].close - lowestLow);\n        bottomFormThree.push(highestHigh - lowestLow); // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n        sumTop = topFormThree.reduce((a, b) => a + b, 0);\n        sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n        slowD = sumTop / sumBottom * 100;\n        signalLineHolder.push(slowD); // ----------- TALLY UP LAST SMOOTHING -------------------------------\n\n        const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n        let smaD = sumStochD / 3;\n\n        if (smaD < 0) {\n          smaD *= -1;\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        } else {\n          chartArr[num].stochasticSignal = smaD.toFixed(2);\n        }\n      }\n    } catch (e) {}\n  } // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function williamsRFunction(chartArr, dataPull, newestPull, num) {\n    let highs = [];\n    let lows = [];\n    let lowestLow = 0;\n    let highestHigh = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 14) {\n        chartArr[num].williams = \"No Data\";\n      } else {\n        for (let i = 0; i <= 13; i++) {\n          highs.push(dataPull.historical[i].high);\n          lows.push(dataPull.historical[i].low);\n        }\n\n        highs.push(newPrice);\n        lows.push(newPrice);\n        lowestLow = Math.min(...lows);\n        highestHigh = Math.max(...highs);\n        const williams = (highestHigh - dataPull.historical[0].close) / (highestHigh - lowestLow) * -100;\n        chartArr[num].williamsR = williams.toFixed(2);\n      }\n    } catch (e) {}\n  } // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function cciFunction(chartArr, dataPull, newestPull, num) {\n    let tpvCul = 0;\n    let tpv = [];\n    let tpvMa = 0;\n\n    try {\n      const newPrice = newestPull[0].price;\n      let tpvCurrent = newPrice;\n      const recentTpv = newPrice;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].cciTwenty = \"No Data\";\n      } else {\n        for (let i = 0; i <= 19; i++) {\n          const {\n            high,\n            close,\n            low\n          } = dataPull.historical[i];\n          tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n\n          tpvCurrent = (close + high + low) / 3;\n        } // ---- TPV SMA ------------------------\n\n\n        tpvCul = tpv.reduce((a, b) => a + b);\n        tpvMa = tpvCul / 20; // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n\n        const partOne = recentTpv - tpvMa;\n        const meanD = tpv.map(x => x - tpvMa);\n        const meanDMap = meanD.map(x => Math.abs(x));\n        const meanDSum = meanDMap.reduce((a, b) => a + b);\n        const meanDiv = meanDSum / 20; // PART TWO OF FORMULA --------------\n\n        const partTwo = meanDiv * 0.015; // CCI ------------------------------\n\n        const cci = partOne / partTwo;\n        chartArr[num].cciTwenty = cci.toFixed(2);\n      }\n    } catch (e) {}\n  } // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n    let smaCul = 0;\n    let closeHolder = [];\n\n    try {\n      const newPrice = newestPull[0].price;\n\n      if (dataPull.historical.length < 19) {\n        chartArr[num].bbUpper = \"No Data\";\n        chartArr[num].bbLower = \"No Data\";\n        chartArr[num].bbMiddle = \"No Data\";\n      } else {\n        let closeP = newPrice;\n\n        for (let i = 0; i <= 19; i++) {\n          closeHolder.push(closeP);\n          smaCul += closeP;\n          closeP = dataPull.historical[i].close;\n        } // STANDARD DEVIATION CALC --------------------------------\n\n\n        const smaTwenty = smaCul / 20;\n        const priceAdj = closeHolder.map(x => x - smaTwenty);\n        const priceAdjAbs = priceAdj.map(x => Math.abs(x));\n        const priceAdjSqrt = priceAdjAbs.map(x => x * x);\n        const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n        const partTwoDev = partOneDev / 20;\n        const standardDev = Math.sqrt(partTwoDev); // BB BAND CALC --------------------------------------------\n\n        const bbUpper = smaTwenty + standardDev * 2;\n        const bbLower = smaTwenty - standardDev * 2;\n        const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n        chartArr[num].bbUpper = bbUpper.toFixed(2);\n        chartArr[num].bbLower = bbLower.toFixed(2);\n        chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n        chartArr[num].bbPercent = bbPercent.toFixed(2);\n      }\n    } catch (e) {}\n  } // VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  function vwapFunction(chartArr, dataPull, num) {\n    // ----------- VWAP CALUC -------------------------------------------\n    let dayLengthPeriod = 0;\n    let tpvCul = 0;\n    let volumeCul = 0;\n    let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n    try {\n      // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n      while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n        dayLengthPeriod++;\n      } // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n\n      for (let i = 0; i < dayLengthPeriod; i++) {\n        const {\n          volume,\n          high,\n          close,\n          low,\n          date\n        } = dataPull[i];\n        let tpv = (high + low + close) / 3;\n\n        if (date.slice(0, 10) == newDateString) {\n          tpvCul += tpv * volume;\n          volumeCul += volume;\n        }\n\n        var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n\n        tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n      }\n\n      let vwap = tempVWAP[0].toFixed(2);\n      chartArr[num].vwap = vwap;\n    } catch (e) {}\n  } // SET VOLUME FOR LATER\n\n\n  function setVolume(chartArr, dataPull, newestPull, num) {\n    // SET RECENT YESTERDAY VOLUME\n    try {\n      if (dataPull.historical.length <= 0) {\n        chartArr[num].yesterdayVolume = 0;\n      } else {\n        chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n\n        if (marketDay == 0 || marketDay == 6) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n\n        if (timeNum > 1830) {\n          chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n        }\n      }\n\n      if (newestPull.length < 0) {\n        chartArr[num].volume = 0;\n      } else {\n        // SET RECENT VOLUME\n        chartArr[num].volume = newestPull[0].volume;\n      }\n    } catch (e) {}\n  } // TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\n\n\n  async function technicalIndicators(finalArr, callback) {\n    let j = 0;\n\n    while (j < finalArr.length) {\n      // LOOP FOR TECHNICAL SYMBOL\n      // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n      const {\n        symbol\n      } = finalArr[j]; //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n\n      const resSMA = await fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n      // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataSMA).length) {\n          console.log(\"no SMA Pull data found\");\n        }\n      } catch (e) {} //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n\n\n      const resOscPulled = await fetch(`https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataRecentPulled = await resOscPulled.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataRecentPulled).length) {\n          console.log(\"no Recent Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      const resVWAP = await fetch(`https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`);\n      const dataVWAP = await resVWAP.json(); // ERROR CHECK FOR EMPTY PULL\n\n      try {\n        if (!Object.keys(dataVWAP).length) {\n          console.log(\"no VWAP Pull data found\");\n        }\n      } catch (e) {} // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n      vwapFunction(finalArr, dataVWAP, j); // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      smaFunction(finalArr, dataSMA, dataRecentPulled, j); // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      wmaFunction(finalArr, dataSMA, dataRecentPulled, j); // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      vwmaFunction(finalArr, dataSMA, dataRecentPulled, j); // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n\n      emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction); // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      rsiFunction(finalArr, dataSMA, dataRecentPulled, j); // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n      // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      williamsRFunction(finalArr, dataSMA, dataRecentPulled, j); // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      cciFunction(finalArr, dataSMA, dataRecentPulled, j); // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n      bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j); // SET VOLUME PROPERTIES\n\n      setVolume(finalArr, dataSMA, dataRecentPulled, j);\n      j++; // UPDATE WHILE LOOP\n    } // THIS IS THE END OF LOOP\n\n\n    const returnedData = await callback(finalArr, buildIt);\n    return returnedData;\n  }\n\n  async function filterUpDownStocks(finalArr, callback) {\n    let stocksUp = [];\n    let stocksDown = [];\n    let j = 0;\n\n    while (j < finalArr.length) {\n      const {\n        changesPercentage\n      } = finalArr[j];\n\n      if (changesPercentage > 0) {\n        stocksUp.push(finalArr[j]);\n      } else {\n        stocksDown.push(finalArr[j]);\n      }\n\n      j++;\n    } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n    // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n\n\n    for (let i = 0; i < stocksUp.length; i++) {\n      // UPPER ------------------------------------------------------------------------------\n      stocksUp[i].symbolUp = stocksUp[i].symbol;\n      delete stocksUp[i].symbol;\n      stocksUp[i].changeUp = stocksUp[i].change;\n      delete stocksUp[i].change;\n      stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n      delete stocksUp[i].avgVolume;\n      stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n      delete stocksUp[i].changesPercentage;\n      stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n      delete stocksUp[i].emaEight;\n      stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n      delete stocksUp[i].emaTwelve;\n      stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n      delete stocksUp[i].emaTwenty;\n      stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n      delete stocksUp[i].emaTwentySix;\n      stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n      delete stocksUp[i].emaFifty;\n      stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n      delete stocksUp[i].emaTwoHun;\n      stocksUp[i].macdUp = stocksUp[i].macd;\n      delete stocksUp[i].macd;\n      stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n      delete stocksUp[i].macdHistogram;\n      stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n      delete stocksUp[i].macdSignalLine;\n      stocksUp[i].priceUp = stocksUp[i].price;\n      delete stocksUp[i].price;\n      stocksUp[i].rsiUp = stocksUp[i].rsi;\n      delete stocksUp[i].rsi;\n      stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n      delete stocksUp[i].smaFiveTeen;\n      stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n      delete stocksUp[i].smaTwenty;\n      stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n      delete stocksUp[i].smaThirty;\n      stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n      delete stocksUp[i].smaFifty;\n      stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n      delete stocksUp[i].smaOneHun;\n      stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n      delete stocksUp[i].smaTwoHun;\n      stocksUp[i].volumeUp = stocksUp[i].volume;\n      delete stocksUp[i].volume;\n      stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n      delete stocksUp[i].yesterdayVolume;\n      stocksUp[i].vwapUp = stocksUp[i].vwap;\n      delete stocksUp[i].vwap;\n      stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n      delete stocksUp[i].stochasticD;\n      stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n      delete stocksUp[i].stochasticK;\n      stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n      delete stocksUp[i].stochasticSignal;\n      stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n      delete stocksUp[i].wmaFiveTeen;\n      stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n      delete stocksUp[i].wmaTwenty;\n      stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n      delete stocksUp[i].wmaThirty;\n      stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n      delete stocksUp[i].wmaFifty;\n      stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n      delete stocksUp[i].wmaOneHun;\n      stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n      delete stocksUp[i].wmaTwoHun;\n      stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n      delete stocksUp[i].vwmaFiveTeen;\n      stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n      delete stocksUp[i].vwmaTwenty;\n      stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n      delete stocksUp[i].vwmaThirty;\n      stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n      delete stocksUp[i].vwmaFifty;\n      stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n      delete stocksUp[i].vwmaOneHun;\n      stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n      delete stocksUp[i].vwmaTwoHun;\n      stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n      delete stocksUp[i].williamsR;\n      stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n      delete stocksUp[i].cciTwenty;\n      stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n      delete stocksUp[i].bbUpper;\n      stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n      delete stocksUp[i].bbLower;\n      stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n      delete stocksUp[i].bbMiddle;\n      stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n      delete stocksUp[i].bbPercent; // DOWNERS ------------------------------------------------------------------------------\n\n      stocksDown[i].symbolDown = stocksDown[i].symbol;\n      delete stocksDown[i].symbol;\n      stocksDown[i].changeDown = stocksDown[i].change;\n      delete stocksDown[i].change;\n      stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n      delete stocksDown[i].avgVolume;\n      stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n      delete stocksDown[i].changesPercentage;\n      stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n      delete stocksDown[i].emaEight;\n      stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n      delete stocksDown[i].emaTwelve;\n      stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n      delete stocksDown[i].emaTwenty;\n      stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n      delete stocksDown[i].emaTwentySix;\n      stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n      delete stocksDown[i].emaFifty;\n      stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n      delete stocksDown[i].emaTwoHun;\n      stocksDown[i].macdDown = stocksDown[i].macd;\n      delete stocksDown[i].macd;\n      stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n      delete stocksDown[i].macdHistogram;\n      stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n      delete stocksDown[i].macdSignalLine;\n      stocksDown[i].priceDown = stocksDown[i].price;\n      delete stocksDown[i].price;\n      stocksDown[i].rsiDown = stocksDown[i].rsi;\n      delete stocksDown[i].rsi;\n      stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n      delete stocksDown[i].smaFiveTeen;\n      stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n      delete stocksDown[i].smaTwenty;\n      stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n      delete stocksDown[i].smaThirty;\n      stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n      delete stocksDown[i].smaFifty;\n      stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n      delete stocksDown[i].smaOneHun;\n      stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n      delete stocksDown[i].smaTwoHun;\n      stocksDown[i].volumeDown = stocksDown[i].volume;\n      delete stocksDown[i].volume;\n      stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n      delete stocksDown[i].yesterdayVolume;\n      stocksDown[i].vwapDown = stocksDown[i].vwap;\n      delete stocksDown[i].vwap;\n      stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n      delete stocksDown[i].stochasticD;\n      stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n      delete stocksDown[i].stochasticK;\n      stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n      delete stocksDown[i].stochasticSignal;\n      stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n      delete stocksDown[i].wmaFiveTeen;\n      stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n      delete stocksDown[i].wmaTwenty;\n      stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n      delete stocksDown[i].wmaThirty;\n      stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n      delete stocksDown[i].wmaFifty;\n      stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n      delete stocksDown[i].wmaOneHun;\n      stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n      delete stocksDown[i].wmaTwoHun;\n      stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n      delete stocksDown[i].vwmaFiveTeen;\n      stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n      delete stocksDown[i].vwmaTwenty;\n      stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n      delete stocksDown[i].vwmaThirty;\n      stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n      delete stocksDown[i].vwmaFifty;\n      stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n      delete stocksDown[i].vwmaOneHun;\n      stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n      delete stocksDown[i].vwmaTwoHun;\n      stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n      delete stocksDown[i].williamsR;\n      stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n      delete stocksDown[i].cciTwenty;\n      stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n      delete stocksDown[i].bbUpper;\n      stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n      delete stocksDown[i].bbLower;\n      stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n      delete stocksDown[i].bbMiddle;\n      stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n      delete stocksDown[i].bbPercent;\n    }\n\n    const returnedData = await callback(stocksUp, stocksDown);\n    return returnedData;\n  }\n\n  function buildIt(arrUp, arrDown) {\n    for (let i = 0; i < arrUp.length; i++) {\n      // DECONSTRUCTING UP AND DOWN VAR\n      var {\n        avgVolumeUp,\n        volumeYesterdayUp,\n        changeUp,\n        changesPercentageUp,\n        priceUp,\n        symbolUp,\n        volumeUp,\n        vwapUp,\n        smaFiveTeenUp,\n        smaTwentyUp,\n        smaThirtyUp,\n        smaFiftyUp,\n        smaOneHunUp,\n        smaTwoHunUp,\n        emaEightUp,\n        emaTwelveUp,\n        emaTwentyUp,\n        emaTwentySixUp,\n        emaFiftyUp,\n        emaTwoHunUp,\n        wmaFiveTeenUp,\n        wmaTwentyUp,\n        wmaThirtyUp,\n        wmaFiftyUp,\n        wmaOneHunUp,\n        wmaTwoHunUp,\n        vwmaFiveTeenUp,\n        vwmaTwentyUp,\n        vwmaThirtyUp,\n        vwmaFiftyUp,\n        vwmaOneHunUp,\n        vwmaTwoHunUp,\n        macdUp,\n        macdHistogramUp,\n        macdSignalLineUp,\n        rsiUp,\n        stochasticDUp,\n        stochasticKUp,\n        stochasticSignalUp,\n        cciUp,\n        bbMiddleUp,\n        bbLowerUp,\n        bbUpperUp,\n        bbPercentUp,\n        williamsRUp\n      } = arrUp[i];\n      var {\n        avgVolumeDown,\n        volumeYesterdayDown,\n        changeDown,\n        changesPercentageDown,\n        priceDown,\n        symbolDown,\n        volumeDown,\n        vwapDown,\n        smaFiveTeenDown,\n        smaTwentyDown,\n        smaThirtyDown,\n        smaFiftyDown,\n        smaOneHunDown,\n        smaTwoHunDown,\n        emaEightDown,\n        emaTwelveDown,\n        emaTwentyDown,\n        emaTwentySixDown,\n        emaFiftyDown,\n        emaTwoHunDown,\n        wmaFiveTeenDown,\n        wmaTwentyDown,\n        wmaThirtyDown,\n        wmaFiftyDown,\n        wmaOneHunDown,\n        wmaTwoHunDown,\n        vwmaFiveTeenDown,\n        vwmaTwentyDown,\n        vwmaThirtyDown,\n        vwmaFiftyDown,\n        vwmaOneHunDown,\n        vwmaTwoHunDown,\n        macdDown,\n        macdHistogramDown,\n        macdSignalLineDown,\n        rsiDown,\n        stochasticDDown,\n        stochasticKDown,\n        stochasticSignalDown,\n        cciDown,\n        bbMiddleDown,\n        bbLowerDown,\n        bbUpperDown,\n        bbPercentDown,\n        williamsRDown\n      } = arrDown[i]; // ADJUST TO FIXED --------------------------------------------------------\n\n      if (arrUp[i].priceUp == undefined) {\n        arrUp[i].priceUp = 0;\n      }\n\n      if (arrDown[i].priceDown == undefined) {\n        arrDown[i].priceDown = 0;\n      }\n\n      priceUp = priceUp.toFixed(2);\n      priceDown = priceDown.toFixed(2);\n\n      if (arrUp[i].changesPercentageUp == undefined) {\n        arrUp[i].changesPercentageUp = 0;\n      }\n\n      if (arrDown[i].changesPercentageDown == undefined) {\n        arrDown[i].changesPercentageDown = 0;\n      }\n\n      changesPercentageUp = changesPercentageUp.toFixed(2);\n      changesPercentageDown = changesPercentageDown.toFixed(2);\n\n      if (arrUp[i].changeUp == undefined) {\n        arrUp[i].changeUp = 0;\n      }\n\n      if (arrDown[i].changeDown == undefined) {\n        arrDown[i].changeDown = 0;\n      }\n\n      changeUp = changeUp.toFixed(2);\n      changeDown = changeDown.toFixed(2); // UP VOLUME INCREASE ----------------------------\n\n      if (arrUp[i].volumeUp == undefined) {\n        arrUp[i].volumeUp = 0;\n      }\n\n      if (arrDown[i].volumeDown == undefined) {\n        arrDown[i].volumeDown = 0;\n      }\n\n      var volumeIncreaseUp = 0;\n\n      if (volumeUp > avgVolumeUp) {\n        let increase = volumeUp - avgVolumeUp;\n        volumeIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeUp;\n        volumeIncreaseUp = decrease / avgVolumeUp * -100;\n      } // DOWN VOLUME INCREASE ----------------------------\n\n\n      var volumeIncreaseDown = 0;\n\n      if (volumeDown > avgVolumeDown) {\n        let increase = volumeDown - avgVolumeDown;\n        volumeIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeDown;\n        volumeIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n      volumeIncreaseUp = volumeIncreaseUp.toFixed(2); // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n      // YESTERDAY UP VOLUME INCREASE ----------------------------\n\n      if (arrUp[i].volumeYesterdayUp == undefined) {\n        arrUp[i].volumeYesterdayUp = 0;\n      }\n\n      if (volumeYesterdayDown == undefined) {\n        volumeYesterdayDown = 0;\n      }\n\n      if (arrUp[i].avgVolumeUp == undefined) {\n        arrUp[i].avgVolumeUp = 0;\n      }\n\n      if (arrDown[i].avgVolumeDown == undefined) {\n        arrDown[i].avgVolumeDown = 0;\n      }\n\n      var yesterdayVolIncreaseUp = 0;\n\n      if (volumeYesterdayUp > avgVolumeUp) {\n        let increase = volumeYesterdayUp - avgVolumeUp;\n        yesterdayVolIncreaseUp = increase / avgVolumeUp * 100;\n      } else {\n        let decrease = avgVolumeUp - volumeYesterdayUp;\n        yesterdayVolIncreaseUp = decrease / avgVolumeUp * -100;\n      }\n\n      yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2); // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n      var yesterdayVolIncreaseDown = 0;\n\n      if (volumeYesterdayDown > avgVolumeDown) {\n        let increase = volumeYesterdayDown - avgVolumeDown;\n        yesterdayVolIncreaseDown = increase / avgVolumeDown * 100;\n      } else {\n        let decrease = avgVolumeDown - volumeYesterdayDown;\n        yesterdayVolIncreaseDown = decrease / avgVolumeDown * -100;\n      }\n\n      yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2); // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n      var changeDownAdjusted = changeDown;\n\n      if (changeDownAdjusted < 0) {\n        changeDownAdjusted = changeDownAdjusted * -1;\n        changeDownAdjusted = changeDownAdjusted.toFixed(2);\n      } // NaN CHECK ----------------------------------------\n\n\n      if (isNaN(yesterdayVolIncreaseDown)) {\n        yesterdayVolIncreaseDown = \"No Data\";\n      }\n\n      if (isNaN(yesterdayVolIncreaseUp)) {\n        yesterdayVolIncreaseUp = \"No Data\";\n      } // ADJUST TO POSITIVE\n\n\n      if (stochasticDUp < 0) {\n        stochasticDUp = stochasticDUp * -1;\n      }\n\n      if (stochasticKUp < 0) {\n        stochasticKUp = stochasticKUp * -1;\n      }\n\n      if (stochasticDDown < 0) {\n        stochasticDDown = stochasticDDown * -1;\n      }\n\n      if (stochasticKDown < 0) {\n        stochasticKDown = stochasticKDown * -1;\n      } // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n\n\n      if (arrUp[i].avgVolumeUp == undefined) {\n        arrUp[i].avgVolumeUp = \"No Data\";\n      }\n\n      if (arrDown[i].avgVolumeDown == undefined) {\n        arrDown[i].avgVolumeDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeUp == undefined) {\n        arrUp[i].volumeUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeDown == undefined) {\n        arrDown[i].volumeDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeIncreaseUp == undefined) {\n        arrUp[i].volumeIncreaseUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeIncreaseDown == undefined) {\n        arrDown[i].volumeIncreaseDown = \"No Data\";\n      }\n\n      if (arrUp[i].volumeYesterdayUp == undefined) {\n        arrUp[i].volumeYesterdayUp = \"No Data\";\n      }\n\n      if (arrDown[i].volumeYesterdayDown == undefined) {\n        arrDown[i].volumeYesterdayDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaFiveTeenUp == undefined) {\n        arrUp[i].smaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaFiveTeenDown == undefined) {\n        arrDown[i].smaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaTwentyUp == undefined) {\n        arrUp[i].smaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaTwentyDown == undefined) {\n        arrDown[i].smaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaThirtyUp == undefined) {\n        arrUp[i].smaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaThirtyDown == undefined) {\n        arrDown[i].smaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaFiftyUp == undefined) {\n        arrUp[i].smaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaFiftyDown == undefined) {\n        arrDown[i].smaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaOneHunUp == undefined) {\n        arrUp[i].smaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaOneHunDown == undefined) {\n        arrDown[i].smaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].smaTwoHunUp == undefined) {\n        arrUp[i].smaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].smaTwoHunDown == undefined) {\n        arrDown[i].smaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaEightUp == undefined) {\n        arrUp[i].emaEightUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaEightDown == undefined) {\n        arrDown[i].emaEightDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwelveUp == undefined) {\n        arrUp[i].emaTwelveUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwelveDown == undefined) {\n        arrDown[i].emaTwelveDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwentyUp == undefined) {\n        arrUp[i].emaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwentyDown == undefined) {\n        arrDown[i].emaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwentySixUp == undefined) {\n        arrUp[i].emaTwentySixUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwentySixDown == undefined) {\n        arrDown[i].emaTwentySixDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaFiftyUp == undefined) {\n        arrUp[i].emaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaFiftyDown == undefined) {\n        arrDown[i].emaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].emaTwoHunUp == undefined) {\n        arrUp[i].emaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].emaTwoHunDown == undefined) {\n        arrDown[i].emaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaFiveTeenUp == undefined) {\n        arrUp[i].wmaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaFiveTeenDown == undefined) {\n        arrDown[i].wmaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaTwentyUp == undefined) {\n        arrUp[i].wmaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaTwentyDown == undefined) {\n        arrDown[i].wmaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaThirtyUp == undefined) {\n        arrUp[i].wmaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaThirtyDown == undefined) {\n        arrDown[i].wmaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaFiftyUp == undefined) {\n        arrUp[i].wmaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaFiftyDown == undefined) {\n        arrDown[i].wmaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaOneHunUp == undefined) {\n        arrUp[i].wmaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaOneHunDown == undefined) {\n        arrDown[i].wmaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].wmaTwoHunUp == undefined) {\n        arrUp[i].wmaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].wmaTwoHunDown == undefined) {\n        arrDown[i].wmaTwoHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaFiveTeenUp == undefined) {\n        arrUp[i].vwmaFiveTeenUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaFiveTeenDown == undefined) {\n        arrDown[i].vwmaFiveTeenDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaTwentyUp == undefined) {\n        arrUp[i].vwmaTwentyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaTwentyDown == undefined) {\n        arrDown[i].vwmaTwentyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaThirtyUp == undefined) {\n        arrUp[i].vwmaThirtyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaThirtyDown == undefined) {\n        arrDown[i].vwmaThirtyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaFiftyUp == undefined) {\n        arrUp[i].vwmaFiftyUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaFiftyDown == undefined) {\n        arrDown[i].vwmaFiftyDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaOneHunUp == undefined) {\n        arrUp[i].vwmaOneHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaOneHunDown == undefined) {\n        arrDown[i].vwmaOneHunDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwmaTwoHunUp == undefined) {\n        arrUp[i].vwmaTwoHunUp = \"No Data\";\n      }\n\n      if (arrDown[i].vwmaTwoHunDown == undefined) {\n        arrDown[i].vwmaTwoHunDown = \"No Data\";\n      }\n\n      if (arrDown[i].vwapDown == undefined) {\n        arrDown[i].vwapDown = \"No Data\";\n      }\n\n      if (arrUp[i].vwapUp == undefined) {\n        arrUp[i].vwapUp = \"No Data\";\n      }\n\n      if (arrDown[i].macdDown == undefined) {\n        arrDown[i].macdDown = \"No Data\";\n      }\n\n      if (arrUp[i].macdUp == undefined) {\n        arrUp[i].macdUp = \"No Data\";\n      }\n\n      if (arrDown[i].rsiDown == undefined) {\n        arrDown[i].rsiDown = \"No Data\";\n      }\n\n      if (arrUp[i].rsiUp == undefined) {\n        arrUp[i].rsiUp = \"No Data\";\n      }\n\n      if (arrDown[i].cciDown == undefined) {\n        arrDown[i].cciDown = \"No Data\";\n      }\n\n      if (arrUp[i].cciUp == undefined) {\n        arrUp[i].cciUp = \"No Data\";\n      }\n\n      if (arrDown[i].williamsRDown == undefined) {\n        arrDown[i].williamsRDown = \"No Data\";\n      }\n\n      if (arrUp[i].williamsRUp == undefined) {\n        arrUp[i].williamsRUp = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticKUp == undefined) {\n        arrUp[i].stochasticKUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticKDown == undefined) {\n        arrDown[i].stochasticKDown = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticDUp == undefined) {\n        arrUp[i].stochasticDUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticDDown == undefined) {\n        arrDown[i].stochasticDDown = \"No Data\";\n      }\n\n      if (arrUp[i].stochasticSignalUp == undefined) {\n        arrUp[i].stochasticSignalUp = \"No Data\";\n      }\n\n      if (arrDown[i].stochasticSignalDown == undefined) {\n        arrDown[i].stochasticSignalDown = \"No Data\";\n      }\n\n      if (arrDown[i].bbMiddleDown == undefined) {\n        arrDown[i].bbMiddleDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbMiddleUp == undefined) {\n        arrUp[i].bbMiddleUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbLowerDown == undefined) {\n        arrDown[i].bbLowerDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbLowerUp == undefined) {\n        arrUp[i].bbLowerUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbUpperDown == undefined) {\n        arrDown[i].bbUpperDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbUpperUp == undefined) {\n        arrUp[i].bbUpperUp = \"No Data\";\n      }\n\n      if (arrDown[i].bbPercentDown == undefined) {\n        arrDown[i].bbPercentDown = \"No Data\";\n      }\n\n      if (arrUp[i].bbPercentUp == undefined) {\n        arrUp[i].bbPercentUp = \"No Data\";\n      }\n\n      if (arrDown[i].macdHistogramDown == undefined) {\n        arrDown[i].macdHistogramDown = \"No Data\";\n      }\n\n      if (arrDown[i].macdSignalLineDown == undefined) {\n        arrDown[i].macdSignalLineDown = \"No Data\";\n      }\n\n      if (arrUp[i].macdHistogramUp == undefined) {\n        arrUp[i].macdHistogramUp = \"No Data\";\n      }\n\n      if (arrUp[i].macdSignalLineUp == undefined) {\n        arrUp[i].macdSignalLineUp = \"No Data\";\n      }\n\n      if (arrUp[i].symbolUp == undefined) {\n        arrUp[i].symbolUp = \"No Data\";\n      }\n\n      if (arrDown[i].symbolDown == undefined) {\n        arrDown[i].symbolDown = \"No Data\";\n      }\n\n      arrUp[i].volumeIncreaseToday = volumeIncreaseUp;\n      arrUp[i].volumeIncreaseYesterday = yesterdayVolIncreaseUp;\n      arrDown[i].volumeIncreaseToday = volumeIncreaseDown;\n      arrDown[i].volumeIncreaseYesterday = yesterdayVolIncreaseDown;\n    }\n\n    for (let i = 0; i < arrUp.length; i++) {\n      // // UPPER ------------------------------------------------------------------------------\n      arrUp[i].symbol = arrUp[i].symbolUp;\n      delete arrUp[i].symbolUp;\n      arrUp[i].change = arrUp[i].changeUp;\n      delete arrUp[i].changeUp;\n      arrUp[i].avgVolume = arrUp[i].avgVolumeUp;\n      delete arrUp[i].avgVolumeUp;\n      arrUp[i].changesPercentage = arrUp[i].changesPercentageUp;\n      delete arrUp[i].changesPercentageUp;\n      arrUp[i].emaEight = arrUp[i].emaEightUp;\n      delete arrUp[i].emaEightUp;\n      arrUp[i].emaTwelve = arrUp[i].emaTwelveUp;\n      delete arrUp[i].emaTwelveUp;\n      arrUp[i].emaTwenty = arrUp[i].emaTwentyUp;\n      delete arrUp[i].emaTwentyUp;\n      arrUp[i].emaTwentySix = arrUp[i].emaTwentySixUp;\n      delete arrUp[i].emaTwentySixUp;\n      arrUp[i].emaFifty = arrUp[i].emaFiftyUp;\n      delete arrUp[i].emaFiftyUp;\n      arrUp[i].emaTwoHun = arrUp[i].emaTwoHunUp;\n      delete arrUp[i].emaTwoHunUp;\n      arrUp[i].macd = arrUp[i].macdUp;\n      delete arrUp[i].macdUp;\n      arrUp[i].macdHistogram = arrUp[i].macdHistogramUp;\n      delete arrUp[i].macdHistogramUp;\n      arrUp[i].macdSignalLine = arrUp[i].macdSignalLineUp;\n      delete arrUp[i].macdSignalLineUp;\n      arrUp[i].price = arrUp[i].priceUp;\n      delete arrUp[i].priceUp;\n      arrUp[i].rsi = arrUp[i].rsiUp;\n      delete arrUp[i].rsiUp;\n      arrUp[i].smaFiveTeen = arrUp[i].smaFiveTeenUp;\n      delete arrUp[i].smaFiveTeenUp;\n      arrUp[i].smaTwenty = arrUp[i].smaTwentyUp;\n      delete arrUp[i].smaTwentyUp;\n      arrUp[i].smaThirty = arrUp[i].smaThirtyUp;\n      delete arrUp[i].smaThirtyUp;\n      arrUp[i].smaFifty = arrUp[i].smaFiftyUp;\n      delete arrUp[i].smaFiftyUp;\n      arrUp[i].smaOneHun = arrUp[i].smaOneHunUp;\n      delete arrUp[i].smaOneHunUp;\n      arrUp[i].smaTwoHun = arrUp[i].smaTwoHunUp;\n      delete arrUp[i].smaTwoHunUp;\n      arrUp[i].volume = arrUp[i].volumeUp;\n      delete arrUp[i].volumeUp;\n      arrUp[i].volumeYesterday = arrUp[i].volumeYesterdayUp;\n      delete arrUp[i].volumeYesterdayUp;\n      arrUp[i].vwap = arrUp[i].vwapUp;\n      delete arrUp[i].vwapUp;\n      arrUp[i].stochasticD = arrUp[i].stochasticDUp;\n      delete arrUp[i].stochasticDUp;\n      arrUp[i].stochasticK = arrUp[i].stochasticKUp;\n      delete arrUp[i].stochasticKUp;\n      arrUp[i].stochasticSignal = arrUp[i].stochasticSignalUp;\n      delete arrUp[i].stochasticSignalUp;\n      arrUp[i].wmaFiveTeen = arrUp[i].wmaFiveTeenUp;\n      delete arrUp[i].wmaFiveTeenUp;\n      arrUp[i].wmaTwenty = arrUp[i].wmaTwentyUp;\n      delete arrUp[i].wmaTwentyUp;\n      arrUp[i].wmaThirty = arrUp[i].wmaThirtyUp;\n      delete arrUp[i].wmaThirtyUp;\n      arrUp[i].wmaFifty = arrUp[i].wmaFiftyUp;\n      delete arrUp[i].wmaFiftyUp;\n      arrUp[i].wmaOneHun = arrUp[i].wmaOneHunUp;\n      delete arrUp[i].wmaOneHunUp;\n      arrUp[i].wmaTwoHun = arrUp[i].wmaTwoHunUp;\n      delete arrUp[i].wmaTwoHunUp;\n      arrUp[i].vwmaFiveTeen = arrUp[i].vwmaFiveTeenUp;\n      delete arrUp[i].vwmaFiveTeenUp;\n      arrUp[i].vwmaTwenty = arrUp[i].vwmaTwentyUp;\n      delete arrUp[i].vwmaTwentyUp;\n      arrUp[i].vwmaThirty = arrUp[i].vwmaThirtyUp;\n      delete arrUp[i].vwmaThirtyUp;\n      arrUp[i].vwmaFifty = arrUp[i].vwmaFiftyUp;\n      delete arrUp[i].vwmaFiftyUp;\n      arrUp[i].vwmaOneHun = arrUp[i].vwmaOneHunUp;\n      delete arrUp[i].vwmaOneHunUp;\n      arrUp[i].vwmaTwoHun = arrUp[i].vwmaTwoHunUp;\n      delete arrUp[i].vwmaTwoHunUp;\n      arrUp[i].williamsR = arrUp[i].williamsRUp;\n      delete arrUp[i].williamsRUp;\n      arrUp[i].cciTwenty = arrUp[i].cciUp;\n      delete arrUp[i].cciUp;\n      arrUp[i].bbUpper = arrUp[i].bbUpperUp;\n      delete arrUp[i].bbUpperUp;\n      arrUp[i].bbLower = arrUp[i].bbLowerUp;\n      delete arrUp[i].bbLowerUp;\n      arrUp[i].bbMiddle = arrUp[i].bbMiddleUp;\n      delete arrUp[i].bbMiddleUp;\n      arrUp[i].bbPercent = arrUp[i].bbPercentUp;\n      delete arrUp[i].bbPercentUp;\n\n      if (arrUp[i].bbPercent == undefined) {\n        arrUp[i].bbPercent = 'No Data';\n      }\n    }\n\n    for (let i = 0; i < arrDown.length; i++) {\n      // DOWNERS ------------------------------------------------------------------------------\n      arrDown[i].symbol = arrDown[i].symbolDown;\n      delete arrDown[i].symbolDown;\n      arrDown[i].change = arrDown[i].changeDown;\n      delete arrDown[i].changeDown;\n      arrDown[i].avgVolume = arrDown[i].avgVolumeDown;\n      delete arrDown[i].avgVolumeDown;\n      arrDown[i].changesPercentage = arrDown[i].changesPercentageDown;\n      delete arrDown[i].changesPercentageDown;\n      arrDown[i].emaEight = arrDown[i].emaEightDown;\n      delete arrDown[i].emaEightDown;\n      arrDown[i].emaTwelve = arrDown[i].emaTwelveDown;\n      delete arrDown[i].emaTwelveDown;\n      arrDown[i].emaTwenty = arrDown[i].emaTwentyDown;\n      delete arrDown[i].emaTwentyDown;\n      arrDown[i].emaTwentySix = arrDown[i].emaTwentySixDown;\n      delete arrDown[i].emaTwentySixDown;\n      arrDown[i].emaFifty = arrDown[i].emaFiftyDown;\n      delete arrDown[i].emaFiftyDown;\n      arrDown[i].emaTwoHun = arrDown[i].emaTwoHunDown;\n      delete arrDown[i].emaTwoHunDown;\n      arrDown[i].macd = arrDown[i].macdDown;\n      delete arrDown[i].macdDown;\n      arrDown[i].macdHistogram = arrDown[i].macdHistogramDown;\n      delete arrDown[i].macdHistogramDown;\n      arrDown[i].macdSignalLine = arrDown[i].macdSignalLineDown;\n      delete arrDown[i].macdSignalLineDown;\n      arrDown[i].price = arrDown[i].priceDown;\n      delete arrDown[i].priceDown;\n      arrDown[i].rsi = arrDown[i].rsiDown;\n      delete arrDown[i].rsiDown;\n      arrDown[i].smaFiveTeen = arrDown[i].smaFiveTeenDown;\n      delete arrDown[i].smaFiveTeenDown;\n      arrDown[i].smaTwenty = arrDown[i].smaTwentyDown;\n      delete arrDown[i].smaTwentyDown;\n      arrDown[i].smaThirty = arrDown[i].smaThirtyDown;\n      delete arrDown[i].smaThirtyDown;\n      arrDown[i].smaFifty = arrDown[i].smaFiftyDown;\n      delete arrDown[i].smaFiftyDown;\n      arrDown[i].smaOneHun = arrDown[i].smaOneHunDown;\n      delete arrDown[i].smaOneHunDown;\n      arrDown[i].smaTwoHun = arrDown[i].smaTwoHunDown;\n      delete arrDown[i].smaTwoHunDown;\n      arrDown[i].volume = arrDown[i].volumeDown;\n      delete arrDown[i].volumeDown;\n      arrDown[i].volumeYesterday = arrDown[i].volumeYesterdayDown;\n      delete arrDown[i].volumeYesterdayDown;\n      arrDown[i].vwap = arrDown[i].vwapDown;\n      delete arrDown[i].vwapDown;\n      arrDown[i].stochasticD = arrDown[i].stochasticDDown;\n      delete arrDown[i].stochasticDDown;\n      arrDown[i].stochasticK = arrDown[i].stochasticKDown;\n      delete arrDown[i].stochasticKDown;\n      arrDown[i].stochasticSignal = arrDown[i].stochasticSignalDown;\n      delete arrDown[i].stochasticSignalDown;\n      arrDown[i].wmaFiveTeen = arrDown[i].wmaFiveTeenDown;\n      delete arrDown[i].wmaFiveTeenDown;\n      arrDown[i].wmaTwenty = arrDown[i].wmaTwentyDown;\n      delete arrDown[i].wmaTwentyDown;\n      arrDown[i].wmaThirty = arrDown[i].wmaThirtyDown;\n      delete arrDown[i].wmaThirtyDown;\n      arrDown[i].wmaFifty = arrDown[i].wmaFiftyDown;\n      delete arrDown[i].wmaFiftyDown;\n      arrDown[i].wmaOneHun = arrDown[i].wmaOneHunDown;\n      delete arrDown[i].wmaOneHunDown;\n      arrDown[i].wmaTwoHun = arrDown[i].wmaTwoHunDown;\n      delete arrDown[i].wmaTwoHunDown;\n      arrDown[i].vwmaFiveTeen = arrDown[i].vwmaFiveTeenDown;\n      delete arrDown[i].vwmaFiveTeenDown;\n      arrDown[i].vwmaTwenty = arrDown[i].vwmaTwentyDown;\n      delete arrDown[i].vwmaTwentyDown;\n      arrDown[i].vwmaThirty = arrDown[i].vwmaThirtyDown;\n      delete arrDown[i].vwmaThirtyDown;\n      arrDown[i].vwmaFifty = arrDown[i].vwmaFiftyDown;\n      delete arrDown[i].vwmaFiftyDown;\n      arrDown[i].vwmaOneHun = arrDown[i].vwmaOneHunDown;\n      delete arrDown[i].vwmaOneHunDown;\n      arrDown[i].vwmaTwoHun = arrDown[i].vwmaTwoHunDown;\n      delete arrDown[i].vwmaTwoHunDown;\n      arrDown[i].williamsR = arrDown[i].williamsRDown;\n      delete arrDown[i].williamsRDown;\n      arrDown[i].cciTwenty = arrDown[i].cciDown;\n      delete arrDown[i].cciDown;\n      arrDown[i].bbUpper = arrDown[i].bbUpperDown;\n      delete arrDown[i].bbUpperDown;\n      arrDown[i].bbLower = arrDown[i].bbLowerDown;\n      delete arrDown[i].bbLowerDown;\n      arrDown[i].bbMiddle = arrDown[i].bbMiddleDown;\n      delete arrDown[i].bbMiddleDown;\n      arrDown[i].bbPercent = arrDown[i].bbPercentDown;\n      delete arrDown[i].bbPercentDown;\n    }\n\n    let finalStocksArr = arrDown.concat(arrUp);\n    return finalStocksArr;\n  } //----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\n\n\n  return returnedData;\n};","map":{"version":3,"sources":["/Users/austinolijar/Desktop/DeadCatReact/dead-cat/src/JS/APIPortfolioFunction.js"],"names":["technicalPortfolioAnalysis","arr","alert","length","console","log","today","Date","year","getFullYear","date","getUTCDate","month","getUTCMonth","minutes","getUTCMinutes","hour","getUTCHours","time","timeNum","parseInt","marketDay","getDay","todayDate","newDateString","dateNumSlice","dateSliceStart","slice","newDateNum","toString","filterTradableSymbols","portArr","res","fetch","dataNyse","json","resTwo","dataNas","combinedStock","concat","holderArr","i","j","symbol","push","e","smaFunction","chartArr","dataPull","newestPull","num","culSMA","fiveTeenSMA","twentySMA","thirtySMA","fiftySMA","hunSMA","twoHunSMA","todayPricePull","price","historical","smaFiveTeen","close","smaFiveResult","toFixed","smaTwenty","smaTwentyResult","smaThirty","smaThirtyResult","smaFifty","smaFiftyResult","smaOneHun","smaOneHunResult","smaTwoHun","smaTwoHunResult","wmaFunction","weight","wmaInterval","iWma","wmaCul","wmaFiveTeen","wmaTwenty","wmaThirty","wmaFifty","wmaOneHun","wmaTwoHun","vwmaFunction","volume","newPrice","newVol","volCul","totalCul","vwmaFiveTeen","undefined","isNaN","vwmaTwenty","vwmaThirty","vwmaFifty","vwmaOneHun","vwmaTwoHun","emaFunction","macdCallBack","emaEight","emaTwelve","emaTwenty","emaTwentySix","emaFifty","emaTwoHun","prevDayEmaSub","arrEma","macdTwelve","macdTwentySix","subEMA","finalSubEma","unshift","derp","pop","finalEma","macdFunction","arr1","arr2","macd","averageMacd","iMacd","averageSum","reduce","a","b","finalAverageMacd","macdSignalLine","histogram","macdHistogram","rsiFunction","iRSI","iRSIAdjusted","recentUpper","recentDowner","upMove","downMove","pastDownPeriod","pastUpPeriod","rsi","averageUp","averageDown","stochOsc1433Function","iSO","soLowHolder","soHighHolder","highestHigh","lowestLow","topForm","bottomForm","topFormTwo","bottomFormTwo","topFormThree","bottomFormThree","signalLineHolder","stochasticK","low","high","Math","max","min","sumTop","sumBottom","slowD","stochasticD","sumStochD","smaD","stochasticSignal","williamsRFunction","highs","lows","williams","williamsR","cciFunction","tpvCul","tpv","tpvMa","tpvCurrent","recentTpv","cciTwenty","partOne","meanD","map","x","meanDMap","abs","meanDSum","meanDiv","partTwo","cci","bollingerBandsFunction","smaCul","closeHolder","bbUpper","bbLower","bbMiddle","closeP","priceAdj","priceAdjAbs","priceAdjSqrt","partOneDev","partTwoDev","standardDev","sqrt","bbPercent","vwapFunction","dayLengthPeriod","volumeCul","tempVWAP","vwapFinal","vwap","setVolume","yesterdayVolume","technicalIndicators","finalArr","callback","resSMA","dataSMA","Object","keys","resOscPulled","dataRecentPulled","resVWAP","dataVWAP","returnedData","buildIt","filterUpDownStocks","stocksUp","stocksDown","changesPercentage","symbolUp","changeUp","change","avgVolumeUp","avgVolume","changesPercentageUp","emaEightUp","emaTwelveUp","emaTwentyUp","emaTwentySixUp","emaFiftyUp","emaTwoHunUp","macdUp","macdHistogramUp","macdSignalLineUp","priceUp","rsiUp","smaFiveTeenUp","smaTwentyUp","smaThirtyUp","smaFiftyUp","smaOneHunUp","smaTwoHunUp","volumeUp","volumeYesterdayUp","vwapUp","stochasticDUp","stochasticKUp","stochasticSignalUp","wmaFiveTeenUp","wmaTwentyUp","wmaThirtyUp","wmaFiftyUp","wmaOneHunUp","wmaTwoHunUp","vwmaFiveTeenUp","vwmaTwentyUp","vwmaThirtyUp","vwmaFiftyUp","vwmaOneHunUp","vwmaTwoHunUp","williamsRUp","cciUp","bbUpperUp","bbLowerUp","bbMiddleUp","bbPercentUp","symbolDown","changeDown","avgVolumeDown","changesPercentageDown","emaEightDown","emaTwelveDown","emaTwentyDown","emaTwentySixDown","emaFiftyDown","emaTwoHunDown","macdDown","macdHistogramDown","macdSignalLineDown","priceDown","rsiDown","smaFiveTeenDown","smaTwentyDown","smaThirtyDown","smaFiftyDown","smaOneHunDown","smaTwoHunDown","volumeDown","volumeYesterdayDown","vwapDown","stochasticDDown","stochasticKDown","stochasticSignalDown","wmaFiveTeenDown","wmaTwentyDown","wmaThirtyDown","wmaFiftyDown","wmaOneHunDown","wmaTwoHunDown","vwmaFiveTeenDown","vwmaTwentyDown","vwmaThirtyDown","vwmaFiftyDown","vwmaOneHunDown","vwmaTwoHunDown","williamsRDown","cciDown","bbUpperDown","bbLowerDown","bbMiddleDown","bbPercentDown","arrUp","arrDown","volumeIncreaseUp","increase","decrease","volumeIncreaseDown","yesterdayVolIncreaseUp","yesterdayVolIncreaseDown","changeDownAdjusted","volumeIncreaseToday","volumeIncreaseYesterday","volumeYesterday","finalStocksArr"],"mappings":"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","sourcesContent":["export const technicalPortfolioAnalysis = async (arr) => {\n\n\n    // CHECKING ON PORTFOLIO TO MAKE SURE IT HAS SOMETHING ----------------------------------\n\n    if (arr === null) {\n        alert('Sorry, your portfolio seems to be malfunctioning.')\n        return;\n      } else if (arr.length <= 0) {\n        alert('Sorry, your portfolio seems to be malfunctioning.')\n        return;\n      }\n\n      console.log(arr)\n\n  /// DATE REFERENCE FOR MARKET DATA PULLS ----------------------------------------\n  const today = new Date();\n  const year = today.getFullYear();\n  let date = today.getUTCDate();\n  let month = today.getUTCMonth() + 1;\n  let minutes = today.getUTCMinutes();\n  let hour = today.getUTCHours();\n  // GET TIME FOR CLOSING AND OPENING MARKET -----------------------------------\n\n  //CALC FOR UTC TO EST\n  hour = hour - 4;\n  // CALC FOR EARLY MORNING HOURS UTC\n  if (hour < 0) {\n    hour = hour + 24;\n  }\n\n  // GET AND ADJUST MINUTES TO ADD 0 BELOW 10\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  const time = `${hour}${minutes}`;\n  const timeNum = parseInt(time);\n\n  // GET DAY FOR CLOSING AND OPENING MARKET -------------------------------------------\n  const marketDay = today.getDay();\n  // CHECK FOR MARKET OPEN - ADJUST DATE SO VWAP STILL PULLS DATA FROM LAST DAY\n  if (marketDay == 0) {\n    date = date - 2;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 27;\n      }\n    }\n  } else if (marketDay == 6) {\n    date = date - 1;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      }\n    }\n  }\n  // THIS IS TO CHECK FOR MARKET DAY OPEN DURING WEEKENDS WHEN MARKET IS CLOSED\n  if (marketDay == 1 && timeNum < 930) {\n    date = date - 3;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 27;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 26;\n      }\n    }\n  } else if (marketDay >= 2 && marketDay < 6 && timeNum < 930) {\n    // ADJUSTS DURING WEEK BEFORE OPEN TO GET DAY BEFORE INDICATORS\n    date = date - 1;\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date <= 0) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month == 0) {\n          month = 1;\n        }\n        date = 31;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        date = 30;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        date = 29;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        date = 28;\n      }\n    }\n  }\n\n  // THIS IS TO CORRECT MISSING 0 ON SINGLE DIGITS OF MONTHS\n  if (date < 10) {\n    date = `0${date}`;\n  }\n  if (month < 10) {\n    month = `0${month}`;\n  }\n\n  // DATE CHECK VARIBLE FOR DATA PERIOD PULLS AND TO SLICE FROM\n  let todayDate = `${year}-${month}-${date}`;\n  //CHECK FOR HOLIDAYS OR CLOSED MARKET HOLIDAYS\n  if (todayDate === \"2021-11-25\") {\n    todayDate = \"2021-11-24\";\n  } else if (todayDate === \"2021-12-24\") {\n    todayDate = \"2021-12-23\";\n  } else if (todayDate === \"2022-01-17\") {\n    todayDate = \"2022-01-14\";\n  } else if (todayDate === \"2022-02-21\") {\n    todayDate = \"2022-02-18\";\n  } else if (todayDate === \"2022-04-15\") {\n    todayDate = \"2022-04-14\";\n  } else if (todayDate === \"2022-05-30\") {\n    todayDate = \"2022-05-27\";\n  } else if (todayDate === \"2022-06-20\") {\n    todayDate = \"2022-06-17\";\n  } else if (todayDate === \"2022-07-04\") {\n    todayDate = \"2022-07-01\";\n  } else if (todayDate === \"2022-09-05\") {\n    todayDate = \"2022-09-02\";\n  } else if (todayDate === \"2022-11-24\") {\n    todayDate = \"2022-11-23\";\n  } else if (todayDate === \"2022-12-26\") {\n    todayDate = \"2022-12-23\";\n  }\n  // THIS IS AN ADJUSTMENT OF DATE FOR MARKET CLOSES EST VS UTC TIME\n  let newDateString = todayDate;\n\n  if (hour + 4 >= 24) {\n    const dateNumSlice = parseInt(date);\n    const dateSliceStart = todayDate.slice(0, 8);\n    let newDateNum = dateNumSlice - 1;\n    if (newDateNum < 10) {\n      newDateNum = `0${newDateNum}`;\n    }\n    newDateString = `${dateSliceStart}${newDateNum}`;\n    newDateString = newDateString.toString();\n    // NEED TO CHECK FOR NEW MONTH CHANGE OVER FROM UTC TIME TO ADJUST FOR EST\n    if (date == 1 && hour + 4 >= 24) {\n      if (\n        month == 1 ||\n        month == 2 ||\n        month == 4 ||\n        month == 6 ||\n        month == 8 ||\n        month == 9 ||\n        month == 11\n      ) {\n        // MONTHS AFTER 31 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 31;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 5 || month == 7 || month == 10 || month == 12) {\n        // MONTHS AFTER 30 DAYS\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 30;\n        newDateString = `${year}-${month}-${date}`;\n      } else if (month == 3 && year % 4 == 0) {\n        // MONTH AFTER 29 DAYS LEAP YEAR\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 29;\n        newDateString = `${year}-${month}-${date}`;\n      } // MONTH AFTER 28\n      else {\n        month = month - 1;\n        if (month < 10) {\n          month = `0${month}`;\n        }\n        date = 28;\n        newDateString = `${year}-${month}-${date}`;\n      }\n    }\n  }\n\n  // ---------------------- END OF DATE -------------------------------------\n\n\n\n  // ---------------------- FILTERS TRADABLE SYMBOLS THAT HAVE DROPPED BELOW THE THRESHOLD -------------------------------------\n  async function filterTradableSymbols(portArr) {\n\n\n    try {\n      // ------ FETCH NYSE\n      const res = await fetch(\n        \"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n      );\n      const dataNyse = await res.json();\n       \n      // ------ FETCH NASDAQ\n      const resTwo = await fetch(\n        \"https://financialmodelingprep.com/api/v3/quotes/nasdaq?apikey=4d4593bc9e6bc106ee9d1cbd6400b218\"\n      );\n      const dataNas = await resTwo.json();\n\n      // FILTER THESE STOCKS DOWN TO JUST WHAT IS IN PORTFOLIO\n      const combinedStock = await dataNyse.concat(dataNas);\n        // IN ANOTHER FUNCTION MAKE THE FILTER TO MATCH PORTFOLIO ARR\n    \n      // GETTING INFO FOR PORTFOLIO STOCK ===========================\n\n      var holderArr = [];\n      for (let i = 0; i < portArr.length; i++) {\n        for (let j = 0; j < combinedStock.length; j++) {\n          if (portArr[i].symbol === combinedStock[j].symbol) {\n            holderArr.push(combinedStock[j])\n          }\n        }\n      }\n\n      return holderArr;\n        //--------- CATCH\n    } catch (e) {}\n\n    \n  }\n\n  filterTradableSymbols(arr)\n\n\n\n\n  // ---------------------- TECHNICAL INDICATOR FUNCTIONS ------------------------------------------------------------------------------------\n\n// SMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction smaFunction(chartArr, dataPull, newestPull, num) {\n  let culSMA = 0;\n\n  // ------- SMA INDEX IS - 2 FROM TOTAL BECAUSE OF 0 INDEX = 1 AND ADDING RECENT PRICE DATA --------------------\n  let fiveTeenSMA = 13;\n  let twentySMA = 18;\n  let thirtySMA = 28;\n  let fiftySMA = 48;\n  let hunSMA = 98;\n  let twoHunSMA = 198;\n\n  try {\n    const todayPricePull = newestPull[0].price;\n    // ------------- 15 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 13) {\n      chartArr[num].smaFiveTeen = \"No Data\";\n    } else {\n      while (fiveTeenSMA >= 0) {\n        culSMA += dataPull.historical[fiveTeenSMA].close;\n        fiveTeenSMA--;\n      }\n      let smaFiveResult = (culSMA + todayPricePull) / 15;\n      chartArr[num].smaFiveTeen = smaFiveResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 20 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 19) {\n      chartArr[num].smaTwenty = \"No Data\";\n    } else {\n      while (twentySMA >= 0) {\n        culSMA += dataPull.historical[twentySMA].close;\n        twentySMA--;\n      }\n      let smaTwentyResult = (culSMA + todayPricePull) / 20;\n      chartArr[num].smaTwenty = smaTwentyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 30 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 29) {\n      chartArr[num].smaThirty = \"No Data\";\n    } else {\n      while (thirtySMA >= 0) {\n        culSMA += dataPull.historical[thirtySMA].close;\n        thirtySMA--;\n      }\n      let smaThirtyResult = (culSMA + todayPricePull) / 30;\n      chartArr[num].smaThirty = smaThirtyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 50 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 49) {\n      chartArr[num].smaFifty = \"No Data\";\n    } else {\n      while (fiftySMA >= 0) {\n        culSMA += dataPull.historical[fiftySMA].close;\n        fiftySMA--;\n      }\n      let smaFiftyResult = (culSMA + todayPricePull) / 50;\n      chartArr[num].smaFifty = smaFiftyResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 100 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 99) {\n      chartArr[num].smaOneHun = \"No Data\";\n    } else {\n      while (hunSMA >= 0) {\n        culSMA += dataPull.historical[hunSMA].close;\n        hunSMA--;\n      }\n      let smaOneHunResult = (culSMA + todayPricePull) / 100;\n      chartArr[num].smaOneHun = smaOneHunResult.toFixed(2);\n      culSMA = 0;\n    }\n    // ------------- 200 DAY SMA -------------------------------\n    if (dataPull.historical.length <= 199) {\n      chartArr[num].smaTwoHun = \"No Data\";\n    } else {\n      while (twoHunSMA >= 0) {\n        culSMA += dataPull.historical[twoHunSMA].close;\n        twoHunSMA--;\n      }\n      let smaTwoHunResult = (culSMA + todayPricePull) / 200;\n      chartArr[num].smaTwoHun = smaTwoHunResult.toFixed(2);\n      culSMA = 0;\n    }\n  } catch (e) {}\n}\n// WMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction wmaFunction(chartArr, dataPull, newestPull, num) {\n  // WMA FiveTeen --------------------------------------------------------------------\n  let weight = 14;\n  let wmaInterval = 0;\n  let iWma = 15;\n  try {\n    let wmaCul = newestPull[0].price * 15;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].wmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFiveTeen = wmaCul / iWma;\n      chartArr[num].wmaFiveTeen = wmaFiveTeen.toFixed(2);\n    }\n\n    // WMA Twenty --------------------------------------------------------------------\n    wmaCul = newestPull[0].price * 20;\n    weight = 19;\n    wmaInterval = 0;\n    iWma = 20;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].wmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwenty = wmaCul / iWma;\n      chartArr[num].wmaTwenty = wmaTwenty.toFixed(2);\n    }\n\n    // WMA THIRTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 30;\n    weight = 29;\n    wmaInterval = 0;\n    iWma = 30;\n\n    if (dataPull.historical.length < 30) {\n      chartArr[num].wmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaThirty = wmaCul / iWma;\n      chartArr[num].wmaThirty = wmaThirty.toFixed(2);\n    }\n\n    // WMA FIFTY --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 50;\n    weight = 49;\n    wmaInterval = 0;\n    iWma = 50;\n\n    if (dataPull.historical.length < 50) {\n      chartArr[num].wmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaFifty = wmaCul / iWma;\n      chartArr[num].wmaFifty = wmaFifty.toFixed(2);\n    }\n\n    // WMA ONE HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 100;\n    weight = 99;\n    wmaInterval = 0;\n    iWma = 100;\n\n    if (dataPull.historical.length < 100) {\n      chartArr[num].wmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaOneHun = wmaCul / iWma;\n      chartArr[num].wmaOneHun = wmaOneHun.toFixed(2);\n    }\n\n    // WMA TWO HUNDRED --------------------------------------------------------------------\n\n    wmaCul = newestPull[0].price * 200;\n    weight = 199;\n    wmaInterval = 0;\n    iWma = 200;\n\n    if (dataPull.historical.length < 200) {\n      chartArr[num].wmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        wmaInterval = dataPull.historical[i].close * weight;\n        wmaCul += wmaInterval;\n        iWma += weight;\n        weight--;\n      }\n      const wmaTwoHun = wmaCul / iWma;\n      chartArr[num].wmaTwoHun = wmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwmaFunction(chartArr, dataPull, newestPull, num) {\n  // VWMA FIVETEEN --------------------------------------------------------------------\n\n  try {\n    let price = 0;\n    let volume = 0;\n    const newPrice = newestPull[0].price;\n    const newVol = newestPull[0].volume;\n\n    let volCul = newestPull[0].volume;\n    let totalCul = newPrice * newVol;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].vwmaFiveTeen = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n\n      }\n\n      const vwmaFiveTeen = totalCul / volCul;\n      \n      chartArr[num].vwmaFiveTeen = vwmaFiveTeen.toFixed(2);\n    }\n\n  \n\n    // VWMA TWENTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].vwmaTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 18; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaTwenty = totalCul / volCul;\n     \n      chartArr[num].vwmaTwenty = vwmaTwenty.toFixed(2);\n    }\n\n    // VWMA THIRTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 29) {\n      chartArr[num].vwmaThirty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 28; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaThirty = totalCul / volCul;\n      chartArr[num].vwmaThirty = vwmaThirty.toFixed(2);\n    }\n\n    // VWMA FIFTY --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 49) {\n      chartArr[num].vwmaFifty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 48; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaFifty = totalCul / volCul;\n      chartArr[num].vwmaFifty = vwmaFifty.toFixed(2);\n    }\n\n    // VWMA ONEHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 99) {\n      chartArr[num].vwmaOneHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 98; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaOneHun = totalCul / volCul;\n      chartArr[num].vwmaOneHun = vwmaOneHun.toFixed(2);\n    }\n\n    // VWMA TWOHUN --------------------------------------------------------------------\n\n    volCul = newestPull[0].volume;\n    totalCul = newPrice * newVol;\n    price = 0;\n    volume = 0;\n\n    if (dataPull.historical.length < 199) {\n      chartArr[num].vwmaTwoHun = \"No Data\";\n    } else {\n      for (let i = 0; i <= 198; i++) {\n        price = dataPull.historical[i].close;\n        if (price == undefined) {\n          price = 0\n        }\n        volume = dataPull.historical[i].volume;\n        if (volume == undefined) {\n          volume = 0\n        }\n        totalCul += price * volume;\n        if (isNaN(totalCul)) {\n          return\n        }\n        volCul += dataPull.historical[i].volume;\n        if (isNaN(volCul)) {\n          return\n        }\n      }\n      const vwmaTwoHun = totalCul / volCul;\n      chartArr[num].vwmaTwoHun = vwmaTwoHun.toFixed(2);\n    }\n  } catch (e) {}\n}\n// EMA FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction emaFunction(chartArr, dataPull, newestPull, num, macdCallBack) {\n  let emaEight = 14;\n  let emaTwelve = 22;\n  let emaTwenty = 38;\n  let emaTwentySix = 50;\n  let emaFifty = 98;\n  let emaTwoHun = 398;\n  let prevDayEmaSub = 0;\n  let arrEma = [];\n\n  let macdTwelve = []; // ARRs USED FOR MACD TWELVE HISTORY\n  let macdTwentySix = []; // ARRs USED FOR MACD TWENTY SIX HISTORY\n\n  try {\n    const newPrice = newestPull[0].price;\n\n    // EMA EIGHT ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 16) {\n      chartArr[num].emaEight = \"No Data\";\n    } else {\n      while (emaEight >= 15) {\n        prevDayEmaSub += dataPull.historical[emaEight].close;\n        emaEight--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 8;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 9) * (dataPull.historical[emaEight].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaEight--;\n      while (emaEight >= 0) {\n        let derp =\n          (2 / 9) * (dataPull.historical[emaEight].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaEight--;\n      }\n\n      const finalEma = (2 / 9) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaEight = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n    // EMA TWELVE ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 24) {\n      chartArr[num].emaTwelve = \"No Data\";\n    } else {\n      while (emaTwelve >= 11) {\n        prevDayEmaSub += dataPull.historical[emaTwelve].close;\n        emaTwelve--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n\n      const subEMA = prevDayEmaSub / 12;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 13) * (dataPull.historical[emaTwelve].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwelve--;\n\n      while (emaTwelve >= 0) {\n        let derp =\n          (2 / 13) * (dataPull.historical[emaTwelve].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwelve < 8 && emaTwelve >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwelve.unshift(derp);\n        }\n        emaTwelve--;\n      }\n\n      const finalEma = (2 / 13) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwelve.unshift(finalEma);\n\n      chartArr[num].emaTwelve = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY ----------------------------------------------------------------------\n    if (dataPull.historical.length <= 40) {\n      chartArr[num].emaTwenty = \"No Data\";\n    } else {\n      while (emaTwenty >= 19) {\n        prevDayEmaSub += dataPull.historical[emaTwenty].close;\n        emaTwenty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 20;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 21) * (dataPull.historical[emaTwenty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwenty--;\n      while (emaTwenty >= 0) {\n        let derp =\n          (2 / 21) * (dataPull.historical[emaTwenty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwenty--;\n      }\n\n      const finalEma = (2 / 21) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwenty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWENTY SIX ----------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 51) {\n      chartArr[num].emaTwentySix = \"No Data\";\n    } else {\n      while (emaTwentySix >= 25) {\n        prevDayEmaSub += dataPull.historical[emaTwentySix].close;\n        emaTwentySix--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 26;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 27) * (dataPull.historical[emaTwentySix].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwentySix--;\n      while (emaTwentySix >= 0) {\n        let derp =\n          (2 / 27) * (dataPull.historical[emaTwentySix].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        if (emaTwentySix < 8 && emaTwentySix >= 0) {\n          //THIS IF STATEMENT IS TO STORE VARIABLES FOR LATER MACD SIGNAL LINE\n          macdTwentySix.unshift(derp);\n        }\n        emaTwentySix--;\n      }\n\n      const finalEma = (2 / 27) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n      macdTwentySix.unshift(finalEma);\n\n      chartArr[num].emaTwentySix = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA FIFTY -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 100) {\n      chartArr[num].emaFifty = \"No Data\";\n    } else {\n      while (emaFifty >= 49) {\n        prevDayEmaSub += dataPull.historical[emaFifty].close;\n        emaFifty--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 50;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 51) * (dataPull.historical[emaFifty].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaFifty--;\n      while (emaFifty >= 0) {\n        let derp =\n          (2 / 51) * (dataPull.historical[emaFifty].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaFifty--;\n      }\n\n      const finalEma = (2 / 51) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaFifty = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n\n    // EMA TWO HUNDRED -----------------------------------------------------------------------------\n\n    if (dataPull.historical.length <= 400) {\n      chartArr[num].emaTwoHun = \"No Data\";\n    } else {\n      while (emaTwoHun >= 199) {\n        prevDayEmaSub += dataPull.historical[emaTwoHun].close;\n        emaTwoHun--;\n      } //CALCULATE EMA HERE TO GET PREVIOUS DAY EMA FOR ACCURATE CURRENT EMA\n      const subEMA = prevDayEmaSub / 200;\n      //THIS GETS AN EMA USING SMA AS PREV EMA ----------------------------\n      const finalSubEma =\n        (2 / 201) * (dataPull.historical[emaTwoHun].close - subEMA) + subEMA;\n      arrEma.unshift(finalSubEma);\n      emaTwoHun--;\n      while (emaTwoHun >= 0) {\n        let derp =\n          (2 / 201) * (dataPull.historical[emaTwoHun].close - arrEma[0]) +\n          arrEma[0];\n        arrEma.unshift(derp);\n        arrEma.pop();\n        emaTwoHun--;\n      }\n\n      const finalEma = (2 / 201) * (newPrice - arrEma[0]) + arrEma[0];\n      arrEma.unshift(finalEma);\n      arrEma.pop();\n\n      chartArr[num].emaTwoHun = arrEma[0].toFixed(2);\n      arrEma.pop();\n      prevDayEmaSub = 0;\n    }\n  } catch (e) {}\n\n  // MACD CALLBACK -----------------------------------------------------------------------------------------------------------------------------------------\n  macdCallBack(chartArr, num, macdTwelve, macdTwentySix);\n}\n// MACD FUNCTION -----------------------------------------------------------------------------------------------------------------------------------------\nfunction macdFunction(chartArr, num, arr1, arr2) {\n  const macd = chartArr[num].emaTwelve - chartArr[num].emaTwentySix;\n  chartArr[num].macd = macd.toFixed(2);\n  // CALCULATE SIGNAL LINE ----------------\n  let averageMacd = [];\n  let iMacd = 8;\n\n  try {\n    while (iMacd >= 0) {\n      averageMacd.unshift(arr1[iMacd] - arr2[iMacd]);\n      iMacd--;\n    }\n    let averageSum = averageMacd.reduce((a, b) => a + b);\n    let finalAverageMacd = averageSum / 9;\n    let macdSignalLine =\n      (2 / 9) * (chartArr[num].macd - finalAverageMacd) + finalAverageMacd;\n    chartArr[num].macdSignalLine = macdSignalLine.toFixed(2);\n    // HISTORGRAM CALC ------------------------------------- IF HISTOGRAM GOES FROM NEGATIVE TO POSITIVE IT IS BULLISH\n    let histogram = chartArr[num].macd - chartArr[num].macdSignalLine;\n    chartArr[num].macdHistogram = histogram.toFixed(2);\n    // FOR NO DATA TO PULL FROM\n    if (chartArr[num].macdHistogram === \"NaN\") {\n      chartArr[num].macdHistogram = \"No Data\";\n    }\n    if (chartArr[num].macd === \"NaN\") {\n      chartArr[num].macd = \"No Data\";\n    }\n    if (chartArr[num].macdSignalLine === \"NaN\") {\n      chartArr[num].macdSignalLine = \"No Data\";\n    }\n  } catch (e) {}\n}\n// RSI FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction rsiFunction(chartArr, dataPull, newestPull, num) {\n  let iRSI = 13;\n  let iRSIAdjusted = 14;\n  let recentUpper = 0;\n  let recentDowner = 0;\n  let upMove = 0;\n  let downMove = 0;\n  let pastDownPeriod = 0;\n  let pastUpPeriod = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    // CHECK TO SEE IF DATA PULL CAN PULL ENOUGH DATA TO BE EFFECTIVE\n    if (dataPull.historical.length <= 14) {\n      chartArr[num].rsi = \"No Data\";\n    } else {\n      // LOOP FOR AVERAGE\n      while (iRSI >= 0) {\n        if (\n          dataPull.historical[iRSI].close >\n          dataPull.historical[iRSIAdjusted].close\n        ) {\n          upMove +=\n            dataPull.historical[iRSI].close -\n            dataPull.historical[iRSIAdjusted].close;\n        } else {\n          downMove +=\n            dataPull.historical[iRSIAdjusted].close -\n            dataPull.historical[iRSI].close;\n        }\n        iRSI--;\n        iRSIAdjusted--;\n      }\n\n      let averageUp = upMove / 14;\n      let averageDown = downMove / 14;\n\n      // MOST RECENT DIFFERENCE\n      if (newPrice > dataPull.historical[0].close) {\n        recentUpper = newPrice - dataPull.historical[0].close;\n      } else {\n        recentDowner = dataPull.historical[0].close - newPrice;\n      }\n\n      pastUpPeriod = (averageUp * 13 + recentUpper) / 14;\n      pastDownPeriod = (averageDown * 13 + recentDowner) / 14;\n\n      let rsi = 100 - 100 / (1 + pastUpPeriod / pastDownPeriod);\n      chartArr[num].rsi = rsi.toFixed(2);\n    }\n  } catch (e) {}\n}\n// STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction stochOsc1433Function(chartArr, dataPull, newestPull, num) {\n  let iSO = 13;\n\n  let soLowHolder = [];\n  let soHighHolder = [];\n  let highestHigh = 0;\n  let lowestLow = 0;\n  // FIRST %D\n  let topForm = [];\n  let bottomForm = [];\n  // SECOND %D\n  let topFormTwo = [];\n  let bottomFormTwo = [];\n  // THIRD %D\n  let topFormThree = [];\n  let bottomFormThree = [];\n  // HOLDING SET OF %D FOR 14 3 3\n  let signalLineHolder = [];\n  try {\n    let newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 18) {\n      chartArr[num].stochasticK = \"No Data\";\n    } else {\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------------\n\n      while (iSO >= 0) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      soHighHolder.push(newPrice);\n      soLowHolder.push(newPrice);\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      if (lowestLow === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      if (highestHigh === newPrice) {\n        newPrice = dataPull.historical[0].close;\n      }\n\n      topForm.push(newPrice - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      //FOR %K\n      chartArr[num].stochasticK = (\n        ((newPrice - lowestLow) / (highestHigh - lowestLow)) *\n        100\n      ).toFixed(2);\n\n      // RESET HOLDER AND VARs --------------------------------------------------------\n\n      iSO = 14;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------------------\n\n      while (iSO >= 1) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[0].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[0].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      // RESET HOLDER AND VARs ------------------------------------------------\n\n      iSO = 15;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 2) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topForm.push(dataPull.historical[1].close - lowestLow);\n      bottomForm.push(highestHigh - lowestLow);\n\n      topFormTwo.push(dataPull.historical[1].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[1].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 1 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      let sumTop = topForm.reduce((a, b) => a + b, 0);\n      let sumBottom = bottomForm.reduce((a, b) => a + b, 0);\n\n      let slowD = (sumTop / sumBottom) * 100;\n\n      // FOR %D\n      chartArr[num].stochasticD = (slowD / 3).toFixed(2);\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------------------------------\n\n      iSO = 16;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD------------------------------------------------\n\n      while (iSO >= 3) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormTwo.push(dataPull.historical[2].close - lowestLow);\n      bottomFormTwo.push(highestHigh - lowestLow);\n\n      topFormThree.push(dataPull.historical[2].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 2 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormTwo.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormTwo.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      //RESET VARS ---------------------------------------------\n\n      iSO = 17;\n      soLowHolder = [];\n      soHighHolder = [];\n      highestHigh = 0;\n      lowestLow = 0;\n      sumTop = 0;\n      sumBottom = 0;\n      slowD = 0;\n\n      // GETTING HIGHS AND LOWS OF PERIOD-----------------------------------\n\n      while (iSO >= 4) {\n        soLowHolder.push(dataPull.historical[iSO].low);\n        soHighHolder.push(dataPull.historical[iSO].high);\n        iSO--;\n      }\n      highestHigh = Math.max(...soHighHolder);\n      lowestLow = Math.min(...soLowHolder);\n\n      topFormThree.push(dataPull.historical[3].close - lowestLow);\n      bottomFormThree.push(highestHigh - lowestLow);\n\n      // AFTER 3 WE SUM IT UP --------------- TO GET 3 OF THE 3 SMOOTHS FOR 14 3 3------------------------------------------\n\n      sumTop = topFormThree.reduce((a, b) => a + b, 0);\n      sumBottom = bottomFormThree.reduce((a, b) => a + b, 0);\n\n      slowD = (sumTop / sumBottom) * 100;\n\n      signalLineHolder.push(slowD);\n\n      // ----------- TALLY UP LAST SMOOTHING -------------------------------\n      const sumStochD = signalLineHolder.reduce((a, b) => a + b, 0);\n      let smaD = sumStochD / 3;\n\n      if (smaD < 0) {\n        smaD *= -1;\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      } else {\n        chartArr[num].stochasticSignal = smaD.toFixed(2);\n      }\n    }\n  } catch (e) {}\n}\n// WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction williamsRFunction(chartArr, dataPull, newestPull, num) {\n  let highs = [];\n  let lows = [];\n  let lowestLow = 0;\n  let highestHigh = 0;\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 14) {\n      chartArr[num].williams = \"No Data\";\n    } else {\n      for (let i = 0; i <= 13; i++) {\n        highs.push(dataPull.historical[i].high);\n        lows.push(dataPull.historical[i].low);\n      }\n\n      highs.push(newPrice);\n      lows.push(newPrice);\n\n      lowestLow = Math.min(...lows);\n      highestHigh = Math.max(...highs);\n\n      const williams =\n        ((highestHigh - dataPull.historical[0].close) /\n          (highestHigh - lowestLow)) *\n        -100;\n\n      chartArr[num].williamsR = williams.toFixed(2);\n    }\n  } catch (e) {}\n}\n// CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction cciFunction(chartArr, dataPull, newestPull, num) {\n  let tpvCul = 0;\n  let tpv = [];\n  let tpvMa = 0;\n\n  try {\n    const newPrice = newestPull[0].price;\n    let tpvCurrent = newPrice;\n    const recentTpv = newPrice;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].cciTwenty = \"No Data\";\n    } else {\n      for (let i = 0; i <= 19; i++) {\n        const { high, close, low } = dataPull.historical[i];\n        tpv.push(tpvCurrent); // PUSH FIRST NUMBER IN\n        tpvCurrent = (close + high + low) / 3;\n      }\n      // ---- TPV SMA ------------------------\n      tpvCul = tpv.reduce((a, b) => a + b);\n      tpvMa = tpvCul / 20;\n      // TOP HALF OF FORMULA - DIVIDE BY PART TWO\n      const partOne = recentTpv - tpvMa;\n\n      const meanD = tpv.map((x) => x - tpvMa);\n      const meanDMap = meanD.map((x) => Math.abs(x));\n      const meanDSum = meanDMap.reduce((a, b) => a + b);\n      const meanDiv = meanDSum / 20;\n      // PART TWO OF FORMULA --------------\n      const partTwo = meanDiv * 0.015;\n      // CCI ------------------------------\n      const cci = partOne / partTwo;\n\n      chartArr[num].cciTwenty = cci.toFixed(2);\n    }\n  } catch (e) {}\n}\n// BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\nfunction bollingerBandsFunction(chartArr, dataPull, newestPull, num) {\n  let smaCul = 0;\n  let closeHolder = [];\n  try {\n    const newPrice = newestPull[0].price;\n\n    if (dataPull.historical.length < 19) {\n      chartArr[num].bbUpper = \"No Data\";\n      chartArr[num].bbLower = \"No Data\";\n      chartArr[num].bbMiddle = \"No Data\";\n    } else {\n      let closeP = newPrice;\n      for (let i = 0; i <= 19; i++) {\n        closeHolder.push(closeP);\n        smaCul += closeP;\n        closeP = dataPull.historical[i].close;\n      }\n      // STANDARD DEVIATION CALC --------------------------------\n      const smaTwenty = smaCul / 20;\n\n      const priceAdj = closeHolder.map((x) => x - smaTwenty);\n\n      const priceAdjAbs = priceAdj.map((x) => Math.abs(x));\n\n      const priceAdjSqrt = priceAdjAbs.map((x) => x * x);\n\n      const partOneDev = priceAdjSqrt.reduce((a, b) => a + b);\n\n      const partTwoDev = partOneDev / 20;\n      const standardDev = Math.sqrt(partTwoDev);\n      // BB BAND CALC --------------------------------------------\n      const bbUpper = smaTwenty + standardDev * 2;\n      const bbLower = smaTwenty - standardDev * 2;\n\n      const bbPercent = (newPrice - bbLower) / (bbUpper - bbLower);\n\n      chartArr[num].bbUpper = bbUpper.toFixed(2);\n      chartArr[num].bbLower = bbLower.toFixed(2);\n      chartArr[num].bbMiddle = smaTwenty.toFixed(2);\n      chartArr[num].bbPercent = bbPercent.toFixed(2);\n    }\n  } catch (e) {}\n}\n// VWAP FUNCTION ------------------------------------------------------------------------------------------------------------------------------------------\nfunction vwapFunction(chartArr, dataPull, num) {\n  // ----------- VWAP CALUC -------------------------------------------\n  let dayLengthPeriod = 0;\n  let tpvCul = 0;\n  let volumeCul = 0;\n  let tempVWAP = []; // HOLD VWAP PERIOD - TAKES FROM 0 INDEX FOR MOST CURRENT\n\n  try {\n    // -------------THIS IS FOR GETTING THE DAY LENGTH FOR VWAP\n    while (dataPull[dayLengthPeriod].date.slice(0, 10) == newDateString) {\n      dayLengthPeriod++;\n    }\n  \n    // --------------------THIS IS FOR CALCULATING THE VWAP AND PUSHING TO\n\n    for (let i = 0; i < dayLengthPeriod; i++) {\n      const { volume, high, close, low, date } = dataPull[i];\n      let tpv = (high + low + close) / 3;\n      if (date.slice(0, 10) == newDateString) {\n        tpvCul += tpv * volume;\n        volumeCul += volume;\n      }\n      var vwapFinal = tpvCul / volumeCul; // --------- THIS IS VWAP!!!!!!!!\n      tempVWAP.unshift(vwapFinal); //ADD VWAP FRONT OF ARR\n    }\n    let vwap = tempVWAP[0].toFixed(2);\n    chartArr[num].vwap = vwap;\n  } catch (e) {\n  }\n}\n// SET VOLUME FOR LATER\nfunction setVolume(chartArr, dataPull, newestPull, num) {\n  // SET RECENT YESTERDAY VOLUME\n  try {\n    if (dataPull.historical.length <= 0) {\n      chartArr[num].yesterdayVolume = 0;\n    } else {\n      chartArr[num].yesterdayVolume = dataPull.historical[0].volume;\n      if (marketDay == 0 || marketDay == 6) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (marketDay >= 1 && marketDay <= 5 && timeNum < 930) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n\n      if (timeNum > 1830) {\n        chartArr[num].yesterdayVolume = dataPull.historical[1].volume;\n      }\n    }\n    if (newestPull.length < 0) {\n      chartArr[num].volume = 0;\n    } else {\n      // SET RECENT VOLUME\n      chartArr[num].volume = newestPull[0].volume;\n    }\n  } catch (e) {}\n}\n\n// TA INTO OBJECTS FUNCTIONS ---------------------------------------------------------------------\nasync function technicalIndicators(finalArr, callback) {\n  let j = 0;\n\n  while (j < finalArr.length) {\n    // LOOP FOR TECHNICAL SYMBOL\n\n    // THIS IS THE ALL MIGHTY SYMBOL USED FOR PULLS\n    const { symbol } = finalArr[j];\n\n    //THIS PULL IS FOR CLOSE PRICES TO CALC TAs PAST CLOSE DATA //\n    const resSMA = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-price-full/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataSMA = await resSMA.json(); // SMA PULL USED FOR OTHER CALCS\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataSMA).length) {\n        console.log(\"no SMA Pull data found\");\n      }\n    } catch (e) {}\n\n    //THIS PULL IS FOR OSCILLATORS ALL CURRENT CLOSE DATA\n    const resOscPulled = await fetch(\n      `https://financialmodelingprep.com/api/v3/quote-short/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataRecentPulled = await resOscPulled.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataRecentPulled).length) {\n        console.log(\"no Recent Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    const resVWAP = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-chart/5min/${symbol}?apikey=4d4593bc9e6bc106ee9d1cbd6400b218`\n    );\n    const dataVWAP = await resVWAP.json();\n    // ERROR CHECK FOR EMPTY PULL\n    try {\n      if (!Object.keys(dataVWAP).length) {\n        console.log(\"no VWAP Pull data found\");\n      }\n    } catch (e) {}\n\n    // VWAP ------------------------------------------------------------------------------------------------------------------------------------------------\n    vwapFunction(finalArr, dataVWAP, j);\n\n    // SMA -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    smaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // WMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    wmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // VWMA ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    vwmaFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // EMA WITH MACD CALLBACK ------------------------------------------------------------------------------------------------------------------------------------------\n    emaFunction(finalArr, dataSMA, dataRecentPulled, j, macdFunction);\n\n    // RSI ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    rsiFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // STOCHASTIC OSCILLATOR ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    stochOsc1433Function(finalArr, dataSMA, dataRecentPulled, j); //DATA VWAP USED FOR RECETN CLOSE DATA\n\n    // WILLIAMS %R 14 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    williamsRFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // CCI 20 ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    cciFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // BOLLINGER BANDS ------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    bollingerBandsFunction(finalArr, dataSMA, dataRecentPulled, j);\n\n    // SET VOLUME PROPERTIES\n    setVolume(finalArr, dataSMA, dataRecentPulled, j);\n\n    j++; // UPDATE WHILE LOOP\n  } // THIS IS THE END OF LOOP\n  const returnedData = await callback(finalArr, buildIt);\n  return returnedData;\n  \n}\nasync function filterUpDownStocks(finalArr, callback) {\n  let stocksUp = [];\n  let stocksDown = [];\n\n  let j = 0;\n\n  while (j < finalArr.length) {\n    const { changesPercentage } = finalArr[j];\n\n    if (changesPercentage > 0) {\n      stocksUp.push(finalArr[j]);\n    } else {\n      stocksDown.push(finalArr[j]);\n    }\n\n    j++;\n  } // END OF FILTER LOOP TO NEW UP/DOWN ARR\n\n  // REASSIGN OBJECT NAMES FOR UP AND DOWN STOCKS\n  for (let i = 0; i < stocksUp.length; i++) {\n    // UPPER ------------------------------------------------------------------------------\n    stocksUp[i].symbolUp = stocksUp[i].symbol;\n    delete stocksUp[i].symbol;\n    stocksUp[i].changeUp = stocksUp[i].change;\n    delete stocksUp[i].change;\n    stocksUp[i].avgVolumeUp = stocksUp[i].avgVolume;\n    delete stocksUp[i].avgVolume;\n    stocksUp[i].changesPercentageUp = stocksUp[i].changesPercentage;\n    delete stocksUp[i].changesPercentage;\n    stocksUp[i].emaEightUp = stocksUp[i].emaEight;\n    delete stocksUp[i].emaEight;\n    stocksUp[i].emaTwelveUp = stocksUp[i].emaTwelve;\n    delete stocksUp[i].emaTwelve;\n    stocksUp[i].emaTwentyUp = stocksUp[i].emaTwenty;\n    delete stocksUp[i].emaTwenty;\n    stocksUp[i].emaTwentySixUp = stocksUp[i].emaTwentySix;\n    delete stocksUp[i].emaTwentySix;\n    stocksUp[i].emaFiftyUp = stocksUp[i].emaFifty;\n    delete stocksUp[i].emaFifty;\n    stocksUp[i].emaTwoHunUp = stocksUp[i].emaTwoHun;\n    delete stocksUp[i].emaTwoHun;\n    stocksUp[i].macdUp = stocksUp[i].macd;\n    delete stocksUp[i].macd;\n    stocksUp[i].macdHistogramUp = stocksUp[i].macdHistogram;\n    delete stocksUp[i].macdHistogram;\n    stocksUp[i].macdSignalLineUp = stocksUp[i].macdSignalLine;\n    delete stocksUp[i].macdSignalLine;\n    stocksUp[i].priceUp = stocksUp[i].price;\n    delete stocksUp[i].price;\n    stocksUp[i].rsiUp = stocksUp[i].rsi;\n    delete stocksUp[i].rsi;\n    stocksUp[i].smaFiveTeenUp = stocksUp[i].smaFiveTeen;\n    delete stocksUp[i].smaFiveTeen;\n    stocksUp[i].smaTwentyUp = stocksUp[i].smaTwenty;\n    delete stocksUp[i].smaTwenty;\n    stocksUp[i].smaThirtyUp = stocksUp[i].smaThirty;\n    delete stocksUp[i].smaThirty;\n    stocksUp[i].smaFiftyUp = stocksUp[i].smaFifty;\n    delete stocksUp[i].smaFifty;\n    stocksUp[i].smaOneHunUp = stocksUp[i].smaOneHun;\n    delete stocksUp[i].smaOneHun;\n    stocksUp[i].smaTwoHunUp = stocksUp[i].smaTwoHun;\n    delete stocksUp[i].smaTwoHun;\n    stocksUp[i].volumeUp = stocksUp[i].volume;\n    delete stocksUp[i].volume;\n    stocksUp[i].volumeYesterdayUp = stocksUp[i].yesterdayVolume;\n    delete stocksUp[i].yesterdayVolume;\n    stocksUp[i].vwapUp = stocksUp[i].vwap;\n    delete stocksUp[i].vwap;\n    stocksUp[i].stochasticDUp = stocksUp[i].stochasticD;\n    delete stocksUp[i].stochasticD;\n    stocksUp[i].stochasticKUp = stocksUp[i].stochasticK;\n    delete stocksUp[i].stochasticK;\n    stocksUp[i].stochasticSignalUp = stocksUp[i].stochasticSignal;\n    delete stocksUp[i].stochasticSignal;\n    stocksUp[i].wmaFiveTeenUp = stocksUp[i].wmaFiveTeen;\n    delete stocksUp[i].wmaFiveTeen;\n    stocksUp[i].wmaTwentyUp = stocksUp[i].wmaTwenty;\n    delete stocksUp[i].wmaTwenty;\n    stocksUp[i].wmaThirtyUp = stocksUp[i].wmaThirty;\n    delete stocksUp[i].wmaThirty;\n    stocksUp[i].wmaFiftyUp = stocksUp[i].wmaFifty;\n    delete stocksUp[i].wmaFifty;\n    stocksUp[i].wmaOneHunUp = stocksUp[i].wmaOneHun;\n    delete stocksUp[i].wmaOneHun;\n    stocksUp[i].wmaTwoHunUp = stocksUp[i].wmaTwoHun;\n    delete stocksUp[i].wmaTwoHun;\n    stocksUp[i].vwmaFiveTeenUp = stocksUp[i].vwmaFiveTeen;\n    delete stocksUp[i].vwmaFiveTeen;\n    stocksUp[i].vwmaTwentyUp = stocksUp[i].vwmaTwenty;\n    delete stocksUp[i].vwmaTwenty;\n    stocksUp[i].vwmaThirtyUp = stocksUp[i].vwmaThirty;\n    delete stocksUp[i].vwmaThirty;\n    stocksUp[i].vwmaFiftyUp = stocksUp[i].vwmaFifty;\n    delete stocksUp[i].vwmaFifty;\n    stocksUp[i].vwmaOneHunUp = stocksUp[i].vwmaOneHun;\n    delete stocksUp[i].vwmaOneHun;\n    stocksUp[i].vwmaTwoHunUp = stocksUp[i].vwmaTwoHun;\n    delete stocksUp[i].vwmaTwoHun;\n    stocksUp[i].williamsRUp = stocksUp[i].williamsR;\n    delete stocksUp[i].williamsR;\n    stocksUp[i].cciUp = stocksUp[i].cciTwenty;\n    delete stocksUp[i].cciTwenty;\n    stocksUp[i].bbUpperUp = stocksUp[i].bbUpper;\n    delete stocksUp[i].bbUpper;\n    stocksUp[i].bbLowerUp = stocksUp[i].bbLower;\n    delete stocksUp[i].bbLower;\n    stocksUp[i].bbMiddleUp = stocksUp[i].bbMiddle;\n    delete stocksUp[i].bbMiddle;\n    stocksUp[i].bbPercentUp = stocksUp[i].bbPercent;\n    delete stocksUp[i].bbPercent;\n    // DOWNERS ------------------------------------------------------------------------------\n    stocksDown[i].symbolDown = stocksDown[i].symbol;\n    delete stocksDown[i].symbol;\n    stocksDown[i].changeDown = stocksDown[i].change;\n    delete stocksDown[i].change;\n    stocksDown[i].avgVolumeDown = stocksDown[i].avgVolume;\n    delete stocksDown[i].avgVolume;\n    stocksDown[i].changesPercentageDown = stocksDown[i].changesPercentage;\n    delete stocksDown[i].changesPercentage;\n    stocksDown[i].emaEightDown = stocksDown[i].emaEight;\n    delete stocksDown[i].emaEight;\n    stocksDown[i].emaTwelveDown = stocksDown[i].emaTwelve;\n    delete stocksDown[i].emaTwelve;\n    stocksDown[i].emaTwentyDown = stocksDown[i].emaTwenty;\n    delete stocksDown[i].emaTwenty;\n    stocksDown[i].emaTwentySixDown = stocksDown[i].emaTwentySix;\n    delete stocksDown[i].emaTwentySix;\n    stocksDown[i].emaFiftyDown = stocksDown[i].emaFifty;\n    delete stocksDown[i].emaFifty;\n    stocksDown[i].emaTwoHunDown = stocksDown[i].emaTwoHun;\n    delete stocksDown[i].emaTwoHun;\n    stocksDown[i].macdDown = stocksDown[i].macd;\n    delete stocksDown[i].macd;\n    stocksDown[i].macdHistogramDown = stocksDown[i].macdHistogram;\n    delete stocksDown[i].macdHistogram;\n    stocksDown[i].macdSignalLineDown = stocksDown[i].macdSignalLine;\n    delete stocksDown[i].macdSignalLine;\n    stocksDown[i].priceDown = stocksDown[i].price;\n    delete stocksDown[i].price;\n    stocksDown[i].rsiDown = stocksDown[i].rsi;\n    delete stocksDown[i].rsi;\n    stocksDown[i].smaFiveTeenDown = stocksDown[i].smaFiveTeen;\n    delete stocksDown[i].smaFiveTeen;\n    stocksDown[i].smaTwentyDown = stocksDown[i].smaTwenty;\n    delete stocksDown[i].smaTwenty;\n    stocksDown[i].smaThirtyDown = stocksDown[i].smaThirty;\n    delete stocksDown[i].smaThirty;\n    stocksDown[i].smaFiftyDown = stocksDown[i].smaFifty;\n    delete stocksDown[i].smaFifty;\n    stocksDown[i].smaOneHunDown = stocksDown[i].smaOneHun;\n    delete stocksDown[i].smaOneHun;\n    stocksDown[i].smaTwoHunDown = stocksDown[i].smaTwoHun;\n    delete stocksDown[i].smaTwoHun;\n    stocksDown[i].volumeDown = stocksDown[i].volume;\n    delete stocksDown[i].volume;\n    stocksDown[i].volumeYesterdayDown = stocksDown[i].yesterdayVolume;\n    delete stocksDown[i].yesterdayVolume;\n    stocksDown[i].vwapDown = stocksDown[i].vwap;\n    delete stocksDown[i].vwap;\n    stocksDown[i].stochasticDDown = stocksDown[i].stochasticD;\n    delete stocksDown[i].stochasticD;\n    stocksDown[i].stochasticKDown = stocksDown[i].stochasticK;\n    delete stocksDown[i].stochasticK;\n    stocksDown[i].stochasticSignalDown = stocksDown[i].stochasticSignal;\n    delete stocksDown[i].stochasticSignal;\n    stocksDown[i].wmaFiveTeenDown = stocksDown[i].wmaFiveTeen;\n    delete stocksDown[i].wmaFiveTeen;\n    stocksDown[i].wmaTwentyDown = stocksDown[i].wmaTwenty;\n    delete stocksDown[i].wmaTwenty;\n    stocksDown[i].wmaThirtyDown = stocksDown[i].wmaThirty;\n    delete stocksDown[i].wmaThirty;\n    stocksDown[i].wmaFiftyDown = stocksDown[i].wmaFifty;\n    delete stocksDown[i].wmaFifty;\n    stocksDown[i].wmaOneHunDown = stocksDown[i].wmaOneHun;\n    delete stocksDown[i].wmaOneHun;\n    stocksDown[i].wmaTwoHunDown = stocksDown[i].wmaTwoHun;\n    delete stocksDown[i].wmaTwoHun;\n    stocksDown[i].vwmaFiveTeenDown = stocksDown[i].vwmaFiveTeen;\n    delete stocksDown[i].vwmaFiveTeen;\n    stocksDown[i].vwmaTwentyDown = stocksDown[i].vwmaTwenty;\n    delete stocksDown[i].vwmaTwenty;\n    stocksDown[i].vwmaThirtyDown = stocksDown[i].vwmaThirty;\n    delete stocksDown[i].vwmaThirty;\n    stocksDown[i].vwmaFiftyDown = stocksDown[i].vwmaFifty;\n    delete stocksDown[i].vwmaFifty;\n    stocksDown[i].vwmaOneHunDown = stocksDown[i].vwmaOneHun;\n    delete stocksDown[i].vwmaOneHun;\n    stocksDown[i].vwmaTwoHunDown = stocksDown[i].vwmaTwoHun;\n    delete stocksDown[i].vwmaTwoHun;\n    stocksDown[i].williamsRDown = stocksDown[i].williamsR;\n    delete stocksDown[i].williamsR;\n    stocksDown[i].cciDown = stocksDown[i].cciTwenty;\n    delete stocksDown[i].cciTwenty;\n    stocksDown[i].bbUpperDown = stocksDown[i].bbUpper;\n    delete stocksDown[i].bbUpper;\n    stocksDown[i].bbLowerDown = stocksDown[i].bbLower;\n    delete stocksDown[i].bbLower;\n    stocksDown[i].bbMiddleDown = stocksDown[i].bbMiddle;\n    delete stocksDown[i].bbMiddle;\n    stocksDown[i].bbPercentDown = stocksDown[i].bbPercent;\n    delete stocksDown[i].bbPercent;\n  }\n  const returnedData = await callback(stocksUp, stocksDown);\n  return returnedData;\n}\nfunction buildIt(arrUp, arrDown) {\n  for (let i = 0; i < arrUp.length; i++) {\n    // DECONSTRUCTING UP AND DOWN VAR\n   var {\n      avgVolumeUp,\n      volumeYesterdayUp,\n      changeUp,\n      changesPercentageUp,\n      priceUp,\n      symbolUp,\n      volumeUp,\n      vwapUp,\n      smaFiveTeenUp,\n      smaTwentyUp,\n      smaThirtyUp,\n      smaFiftyUp,\n      smaOneHunUp,\n      smaTwoHunUp,\n      emaEightUp,\n      emaTwelveUp,\n      emaTwentyUp,\n      emaTwentySixUp,\n      emaFiftyUp,\n      emaTwoHunUp,\n      wmaFiveTeenUp,\n      wmaTwentyUp,\n      wmaThirtyUp,\n      wmaFiftyUp,\n      wmaOneHunUp,\n      wmaTwoHunUp,\n      vwmaFiveTeenUp,\n      vwmaTwentyUp,\n      vwmaThirtyUp,\n      vwmaFiftyUp,\n      vwmaOneHunUp,\n      vwmaTwoHunUp,\n      macdUp,\n      macdHistogramUp,\n      macdSignalLineUp,\n      rsiUp,\n      stochasticDUp,\n      stochasticKUp,\n      stochasticSignalUp,\n      cciUp,\n      bbMiddleUp,\n      bbLowerUp,\n      bbUpperUp,\n      bbPercentUp,\n      williamsRUp,\n    } = arrUp[i];\n    var {\n      avgVolumeDown,\n      volumeYesterdayDown,\n      changeDown,\n      changesPercentageDown,\n      priceDown,\n      symbolDown,\n      volumeDown,\n      vwapDown,\n      smaFiveTeenDown,\n      smaTwentyDown,\n      smaThirtyDown,\n      smaFiftyDown,\n      smaOneHunDown,\n      smaTwoHunDown,\n      emaEightDown,\n      emaTwelveDown,\n      emaTwentyDown,\n      emaTwentySixDown,\n      emaFiftyDown,\n      emaTwoHunDown,\n      wmaFiveTeenDown,\n      wmaTwentyDown,\n      wmaThirtyDown,\n      wmaFiftyDown,\n      wmaOneHunDown,\n      wmaTwoHunDown,\n      vwmaFiveTeenDown,\n      vwmaTwentyDown,\n      vwmaThirtyDown,\n      vwmaFiftyDown,\n      vwmaOneHunDown,\n      vwmaTwoHunDown,\n      macdDown,\n      macdHistogramDown,\n      macdSignalLineDown,\n      rsiDown,\n      stochasticDDown,\n      stochasticKDown,\n      stochasticSignalDown,\n      cciDown,\n      bbMiddleDown,\n      bbLowerDown,\n      bbUpperDown,\n      bbPercentDown,\n      williamsRDown,\n    } = arrDown[i];\n\n    // ADJUST TO FIXED --------------------------------------------------------\n    if (arrUp[i].priceUp == undefined) {\n      arrUp[i].priceUp = 0;\n    }\n    if (arrDown[i].priceDown == undefined) {\n      arrDown[i].priceDown = 0;\n    }\n\n    priceUp = priceUp.toFixed(2);\n    priceDown = priceDown.toFixed(2);\n    if (arrUp[i].changesPercentageUp == undefined) {\n      arrUp[i].changesPercentageUp = 0;\n    }\n    if (arrDown[i].changesPercentageDown == undefined) {\n      arrDown[i].changesPercentageDown = 0;\n    }\n    changesPercentageUp = changesPercentageUp.toFixed(2);\n    changesPercentageDown = changesPercentageDown.toFixed(2);\n\n    if (arrUp[i].changeUp == undefined) {\n      arrUp[i].changeUp = 0;\n    }\n    if (arrDown[i].changeDown == undefined) {\n      arrDown[i].changeDown = 0;\n    }\n    changeUp = changeUp.toFixed(2);\n    changeDown = changeDown.toFixed(2);\n    // UP VOLUME INCREASE ----------------------------\n    if (arrUp[i].volumeUp == undefined) {\n      arrUp[i].volumeUp = 0;\n    }\n    if (arrDown[i].volumeDown == undefined) {\n      arrDown[i].volumeDown = 0;\n    }\n\n    var volumeIncreaseUp = 0;\n\n    if (volumeUp > avgVolumeUp) {\n      let increase = volumeUp - avgVolumeUp;\n      volumeIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeUp;\n      volumeIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n    // DOWN VOLUME INCREASE ----------------------------\n    var volumeIncreaseDown = 0;\n\n    if (volumeDown > avgVolumeDown) {\n      let increase = volumeDown - avgVolumeDown;\n      volumeIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeDown;\n      volumeIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    volumeIncreaseDown = volumeIncreaseDown.toFixed(2);\n    volumeIncreaseUp = volumeIncreaseUp.toFixed(2);\n\n    // TO GET AVERAGE DAILY VOLUME FOR YESTERDAY ----------------\n\n    // YESTERDAY UP VOLUME INCREASE ----------------------------\n    if (arrUp[i].volumeYesterdayUp == undefined) {\n      arrUp[i].volumeYesterdayUp = 0;\n    }\n    if (volumeYesterdayDown == undefined) {\n      volumeYesterdayDown = 0;\n    }\n    if (arrUp[i].avgVolumeUp == undefined) {\n      arrUp[i].avgVolumeUp = 0;\n    }\n    if (arrDown[i].avgVolumeDown == undefined) {\n      arrDown[i].avgVolumeDown = 0;\n    }\n    var yesterdayVolIncreaseUp = 0;\n\n    if (volumeYesterdayUp > avgVolumeUp) {\n      let increase = volumeYesterdayUp - avgVolumeUp;\n      yesterdayVolIncreaseUp = (increase / avgVolumeUp) * 100;\n    } else {\n      let decrease = avgVolumeUp - volumeYesterdayUp;\n      yesterdayVolIncreaseUp = (decrease / avgVolumeUp) * -100;\n    }\n\n    yesterdayVolIncreaseUp = yesterdayVolIncreaseUp.toFixed(2);\n\n    // YESTERDAY DOWN VOLUME INCREASE ----------------------------\n\n    var yesterdayVolIncreaseDown = 0;\n\n    if (volumeYesterdayDown > avgVolumeDown) {\n      let increase = volumeYesterdayDown - avgVolumeDown;\n      yesterdayVolIncreaseDown = (increase / avgVolumeDown) * 100;\n    } else {\n      let decrease = avgVolumeDown - volumeYesterdayDown;\n      yesterdayVolIncreaseDown = (decrease / avgVolumeDown) * -100;\n    }\n\n    yesterdayVolIncreaseDown = yesterdayVolIncreaseDown.toFixed(2);\n\n    // ADJUST PERCENTAGE TO POSITIVE - ARROW WILL SIGNAL UP OR DOWN\n\n    var changeDownAdjusted = changeDown;\n\n    if (changeDownAdjusted < 0) {\n      changeDownAdjusted = changeDownAdjusted * -1;\n      changeDownAdjusted = changeDownAdjusted.toFixed(2);\n    }\n    // NaN CHECK ----------------------------------------\n    if (isNaN(yesterdayVolIncreaseDown)) {\n      yesterdayVolIncreaseDown = \"No Data\";\n    }\n    if (isNaN(yesterdayVolIncreaseUp)) {\n      yesterdayVolIncreaseUp = \"No Data\";\n    }\n    // ADJUST TO POSITIVE\n    if (stochasticDUp < 0) {\n      stochasticDUp = stochasticDUp * -1;\n    }\n    if (stochasticKUp < 0) {\n      stochasticKUp = stochasticKUp * -1;\n    }\n    if (stochasticDDown < 0) {\n      stochasticDDown = stochasticDDown * -1;\n    }\n    if (stochasticKDown < 0) {\n      stochasticKDown = stochasticKDown * -1;\n    }\n    // ADJUST CERTAIN PARTS TO GIVE RIGHT PROMPT IF UNDEFINED\n    if (arrUp[i].avgVolumeUp == undefined) {\n      arrUp[i].avgVolumeUp = \"No Data\";\n    }\n    if (arrDown[i].avgVolumeDown == undefined) {\n      arrDown[i].avgVolumeDown = \"No Data\";\n    }\n    if (arrUp[i].volumeUp == undefined) {\n      arrUp[i].volumeUp = \"No Data\";\n    }\n    if (arrDown[i].volumeDown == undefined) {\n      arrDown[i].volumeDown = \"No Data\";\n    }\n    if (arrUp[i].volumeIncreaseUp == undefined) {\n      arrUp[i].volumeIncreaseUp = \"No Data\";\n    }\n    if (arrDown[i].volumeIncreaseDown == undefined) {\n      arrDown[i].volumeIncreaseDown = \"No Data\";\n    }\n    if (arrUp[i].volumeYesterdayUp == undefined) {\n      arrUp[i].volumeYesterdayUp = \"No Data\";\n    }\n    if (arrDown[i].volumeYesterdayDown == undefined) {\n      arrDown[i].volumeYesterdayDown = \"No Data\";\n    }\n\n    if (arrUp[i].smaFiveTeenUp == undefined) {\n      arrUp[i].smaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].smaFiveTeenDown == undefined) {\n      arrDown[i].smaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].smaTwentyUp == undefined) {\n      arrUp[i].smaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].smaTwentyDown == undefined) {\n      arrDown[i].smaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].smaThirtyUp == undefined) {\n      arrUp[i].smaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].smaThirtyDown == undefined) {\n      arrDown[i].smaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].smaFiftyUp == undefined) {\n      arrUp[i].smaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].smaFiftyDown == undefined) {\n      arrDown[i].smaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].smaOneHunUp == undefined) {\n      arrUp[i].smaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].smaOneHunDown == undefined) {\n      arrDown[i].smaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].smaTwoHunUp == undefined) {\n      arrUp[i].smaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].smaTwoHunDown == undefined) {\n      arrDown[i].smaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].emaEightUp == undefined) {\n      arrUp[i].emaEightUp = \"No Data\";\n    }\n    if (arrDown[i].emaEightDown == undefined) {\n      arrDown[i].emaEightDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwelveUp == undefined) {\n      arrUp[i].emaTwelveUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwelveDown == undefined) {\n      arrDown[i].emaTwelveDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwentyUp == undefined) {\n      arrUp[i].emaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwentyDown == undefined) {\n      arrDown[i].emaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwentySixUp == undefined) {\n      arrUp[i].emaTwentySixUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwentySixDown == undefined) {\n      arrDown[i].emaTwentySixDown = \"No Data\";\n    }\n    if (arrUp[i].emaFiftyUp == undefined) {\n      arrUp[i].emaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].emaFiftyDown == undefined) {\n      arrDown[i].emaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].emaTwoHunUp == undefined) {\n      arrUp[i].emaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].emaTwoHunDown == undefined) {\n      arrDown[i].emaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].wmaFiveTeenUp == undefined) {\n      arrUp[i].wmaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].wmaFiveTeenDown == undefined) {\n      arrDown[i].wmaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].wmaTwentyUp == undefined) {\n      arrUp[i].wmaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaTwentyDown == undefined) {\n      arrDown[i].wmaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaThirtyUp == undefined) {\n      arrUp[i].wmaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaThirtyDown == undefined) {\n      arrDown[i].wmaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaFiftyUp == undefined) {\n      arrUp[i].wmaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].wmaFiftyDown == undefined) {\n      arrDown[i].wmaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].wmaOneHunUp == undefined) {\n      arrUp[i].wmaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].wmaOneHunDown == undefined) {\n      arrDown[i].wmaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].wmaTwoHunUp == undefined) {\n      arrUp[i].wmaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].wmaTwoHunDown == undefined) {\n      arrDown[i].wmaTwoHunDown = \"No Data\";\n    }\n\n    if (arrUp[i].vwmaFiveTeenUp == undefined) {\n      arrUp[i].vwmaFiveTeenUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaFiveTeenDown == undefined) {\n      arrDown[i].vwmaFiveTeenDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaTwentyUp == undefined) {\n      arrUp[i].vwmaTwentyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaTwentyDown == undefined) {\n      arrDown[i].vwmaTwentyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaThirtyUp == undefined) {\n      arrUp[i].vwmaThirtyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaThirtyDown == undefined) {\n      arrDown[i].vwmaThirtyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaFiftyUp == undefined) {\n      arrUp[i].vwmaFiftyUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaFiftyDown == undefined) {\n      arrDown[i].vwmaFiftyDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaOneHunUp == undefined) {\n      arrUp[i].vwmaOneHunUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaOneHunDown == undefined) {\n      arrDown[i].vwmaOneHunDown = \"No Data\";\n    }\n    if (arrUp[i].vwmaTwoHunUp == undefined) {\n      arrUp[i].vwmaTwoHunUp = \"No Data\";\n    }\n    if (arrDown[i].vwmaTwoHunDown == undefined) {\n      arrDown[i].vwmaTwoHunDown = \"No Data\";\n    }\n\n    if (arrDown[i].vwapDown == undefined) {\n      arrDown[i].vwapDown = \"No Data\";\n    }\n    if (arrUp[i].vwapUp == undefined) {\n      arrUp[i].vwapUp = \"No Data\";\n    }\n\n    if (arrDown[i].macdDown == undefined) {\n      arrDown[i].macdDown = \"No Data\";\n    }\n    if (arrUp[i].macdUp == undefined) {\n      arrUp[i].macdUp = \"No Data\";\n    }\n\n    if (arrDown[i].rsiDown == undefined) {\n      arrDown[i].rsiDown = \"No Data\";\n    }\n    if (arrUp[i].rsiUp == undefined) {\n      arrUp[i].rsiUp = \"No Data\";\n    }\n    if (arrDown[i].cciDown == undefined) {\n      arrDown[i].cciDown = \"No Data\";\n    }\n    if (arrUp[i].cciUp == undefined) {\n      arrUp[i].cciUp = \"No Data\";\n    }\n    if (arrDown[i].williamsRDown == undefined) {\n      arrDown[i].williamsRDown = \"No Data\";\n    }\n    if (arrUp[i].williamsRUp == undefined) {\n      arrUp[i].williamsRUp = \"No Data\";\n    }\n    if (arrUp[i].stochasticKUp == undefined) {\n      arrUp[i].stochasticKUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticKDown == undefined) {\n      arrDown[i].stochasticKDown = \"No Data\";\n    }\n    if (arrUp[i].stochasticDUp == undefined) {\n      arrUp[i].stochasticDUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticDDown == undefined) {\n      arrDown[i].stochasticDDown = \"No Data\";\n    }\n    if (arrUp[i].stochasticSignalUp == undefined) {\n      arrUp[i].stochasticSignalUp = \"No Data\";\n    }\n    if (arrDown[i].stochasticSignalDown == undefined) {\n      arrDown[i].stochasticSignalDown = \"No Data\";\n    }\n\n    if (arrDown[i].bbMiddleDown == undefined) {\n      arrDown[i].bbMiddleDown = \"No Data\";\n    }\n    if (arrUp[i].bbMiddleUp == undefined) {\n      arrUp[i].bbMiddleUp = \"No Data\";\n    }\n    if (arrDown[i].bbLowerDown == undefined) {\n      arrDown[i].bbLowerDown = \"No Data\";\n    }\n    if (arrUp[i].bbLowerUp == undefined) {\n      arrUp[i].bbLowerUp = \"No Data\";\n    }\n    if (arrDown[i].bbUpperDown == undefined) {\n      arrDown[i].bbUpperDown = \"No Data\";\n    }\n    if (arrUp[i].bbUpperUp == undefined) {\n      arrUp[i].bbUpperUp = \"No Data\";\n    }\n    if (arrDown[i].bbPercentDown == undefined) {\n      arrDown[i].bbPercentDown = \"No Data\";\n    }\n\n    if (arrUp[i].bbPercentUp == undefined) {\n      arrUp[i].bbPercentUp = \"No Data\";\n    }\n    if (arrDown[i].macdHistogramDown == undefined) {\n      arrDown[i].macdHistogramDown = \"No Data\";\n    }\n    if (arrDown[i].macdSignalLineDown == undefined) {\n      arrDown[i].macdSignalLineDown = \"No Data\";\n    }\n    if (arrUp[i].macdHistogramUp == undefined) {\n      arrUp[i].macdHistogramUp = \"No Data\";\n    }\n    if (arrUp[i].macdSignalLineUp == undefined) {\n      arrUp[i].macdSignalLineUp = \"No Data\";\n    }\n    if (arrUp[i].symbolUp == undefined) {\n      arrUp[i].symbolUp = \"No Data\";\n    }\n    if (arrDown[i].symbolDown == undefined) {\n      arrDown[i].symbolDown = \"No Data\";\n    }\n\n    arrUp[i].volumeIncreaseToday = volumeIncreaseUp\n    arrUp[i].volumeIncreaseYesterday = yesterdayVolIncreaseUp\n    arrDown[i].volumeIncreaseToday = volumeIncreaseDown\n    arrDown[i].volumeIncreaseYesterday = yesterdayVolIncreaseDown\n  }\n \n \n  for (let i = 0; i < arrUp.length; i++) {\n    // // UPPER ------------------------------------------------------------------------------\n\n    arrUp[i].symbol = arrUp[i].symbolUp;\n    delete arrUp[i].symbolUp;\n    arrUp[i].change = arrUp[i].changeUp;\n    delete arrUp[i].changeUp;\n    arrUp[i].avgVolume = arrUp[i].avgVolumeUp;\n    delete arrUp[i].avgVolumeUp;\n    arrUp[i].changesPercentage = arrUp[i].changesPercentageUp;\n    delete arrUp[i].changesPercentageUp;\n    arrUp[i].emaEight = arrUp[i].emaEightUp;\n    delete arrUp[i].emaEightUp;\n    arrUp[i].emaTwelve = arrUp[i].emaTwelveUp;\n    delete arrUp[i].emaTwelveUp;\n    arrUp[i].emaTwenty = arrUp[i].emaTwentyUp;\n    delete arrUp[i].emaTwentyUp;\n    arrUp[i].emaTwentySix = arrUp[i].emaTwentySixUp;\n    delete arrUp[i].emaTwentySixUp;\n    arrUp[i].emaFifty = arrUp[i].emaFiftyUp;\n    delete arrUp[i].emaFiftyUp;\n    arrUp[i].emaTwoHun = arrUp[i].emaTwoHunUp;\n    delete arrUp[i].emaTwoHunUp;\n    arrUp[i].macd = arrUp[i].macdUp;\n    delete arrUp[i].macdUp;\n    arrUp[i].macdHistogram = arrUp[i].macdHistogramUp;\n    delete arrUp[i].macdHistogramUp;\n    arrUp[i].macdSignalLine = arrUp[i].macdSignalLineUp;\n    delete arrUp[i].macdSignalLineUp;\n    arrUp[i].price = arrUp[i].priceUp;\n    delete arrUp[i].priceUp;\n    arrUp[i].rsi = arrUp[i].rsiUp;\n    delete arrUp[i].rsiUp;\n    arrUp[i].smaFiveTeen = arrUp[i].smaFiveTeenUp;\n    delete arrUp[i].smaFiveTeenUp;\n    arrUp[i].smaTwenty = arrUp[i].smaTwentyUp;\n    delete arrUp[i].smaTwentyUp;\n    arrUp[i].smaThirty = arrUp[i].smaThirtyUp;\n    delete arrUp[i].smaThirtyUp;\n    arrUp[i].smaFifty = arrUp[i].smaFiftyUp;\n    delete arrUp[i].smaFiftyUp;\n    arrUp[i].smaOneHun = arrUp[i].smaOneHunUp;\n    delete arrUp[i].smaOneHunUp;\n    arrUp[i].smaTwoHun = arrUp[i].smaTwoHunUp;\n    delete arrUp[i].smaTwoHunUp;\n    arrUp[i].volume = arrUp[i].volumeUp;\n    delete arrUp[i].volumeUp;\n    arrUp[i].volumeYesterday = arrUp[i].volumeYesterdayUp;\n    delete arrUp[i].volumeYesterdayUp;\n    arrUp[i].vwap = arrUp[i].vwapUp;\n    delete arrUp[i].vwapUp;\n    arrUp[i].stochasticD = arrUp[i].stochasticDUp;\n    delete arrUp[i].stochasticDUp;\n    arrUp[i].stochasticK = arrUp[i].stochasticKUp;\n    delete arrUp[i].stochasticKUp;\n    arrUp[i].stochasticSignal = arrUp[i].stochasticSignalUp;\n    delete arrUp[i].stochasticSignalUp;\n    arrUp[i].wmaFiveTeen = arrUp[i].wmaFiveTeenUp;\n    delete arrUp[i].wmaFiveTeenUp;\n    arrUp[i].wmaTwenty = arrUp[i].wmaTwentyUp;\n    delete arrUp[i].wmaTwentyUp;\n    arrUp[i].wmaThirty = arrUp[i].wmaThirtyUp;\n    delete arrUp[i].wmaThirtyUp;\n    arrUp[i].wmaFifty = arrUp[i].wmaFiftyUp;\n    delete arrUp[i].wmaFiftyUp;\n    arrUp[i].wmaOneHun = arrUp[i].wmaOneHunUp;\n    delete arrUp[i].wmaOneHunUp;\n    arrUp[i].wmaTwoHun = arrUp[i].wmaTwoHunUp;\n    delete arrUp[i].wmaTwoHunUp;\n    arrUp[i].vwmaFiveTeen = arrUp[i].vwmaFiveTeenUp;\n    delete arrUp[i].vwmaFiveTeenUp;\n    arrUp[i].vwmaTwenty = arrUp[i].vwmaTwentyUp;\n    delete arrUp[i].vwmaTwentyUp;\n    arrUp[i].vwmaThirty = arrUp[i].vwmaThirtyUp;\n    delete arrUp[i].vwmaThirtyUp;\n    arrUp[i].vwmaFifty = arrUp[i].vwmaFiftyUp;\n    delete arrUp[i].vwmaFiftyUp;\n    arrUp[i].vwmaOneHun = arrUp[i].vwmaOneHunUp;\n    delete arrUp[i].vwmaOneHunUp;\n    arrUp[i].vwmaTwoHun = arrUp[i].vwmaTwoHunUp;\n    delete arrUp[i].vwmaTwoHunUp;\n    arrUp[i].williamsR = arrUp[i].williamsRUp;\n    delete arrUp[i].williamsRUp;\n    arrUp[i].cciTwenty = arrUp[i].cciUp;\n    delete arrUp[i].cciUp;\n    arrUp[i].bbUpper = arrUp[i].bbUpperUp;\n    delete arrUp[i].bbUpperUp;\n    arrUp[i].bbLower = arrUp[i].bbLowerUp;\n    delete arrUp[i].bbLowerUp;\n    arrUp[i].bbMiddle = arrUp[i].bbMiddleUp;\n    delete arrUp[i].bbMiddleUp;\n    arrUp[i].bbPercent = arrUp[i].bbPercentUp;\n    delete arrUp[i].bbPercentUp;\n\n    if (arrUp[i].bbPercent == undefined) {\n      arrUp[i].bbPercent = 'No Data'\n    }\n  }\n  for (let i = 0; i < arrDown.length; i++) {\n    // DOWNERS ------------------------------------------------------------------------------\n\n    arrDown[i].symbol = arrDown[i].symbolDown;\n    delete arrDown[i].symbolDown;\n    arrDown[i].change = arrDown[i].changeDown;\n    delete arrDown[i].changeDown;\n    arrDown[i].avgVolume = arrDown[i].avgVolumeDown;\n    delete arrDown[i].avgVolumeDown;\n    arrDown[i].changesPercentage = arrDown[i].changesPercentageDown;\n    delete arrDown[i].changesPercentageDown;\n    arrDown[i].emaEight = arrDown[i].emaEightDown;\n    delete arrDown[i].emaEightDown;\n    arrDown[i].emaTwelve = arrDown[i].emaTwelveDown;\n    delete arrDown[i].emaTwelveDown;\n    arrDown[i].emaTwenty = arrDown[i].emaTwentyDown;\n    delete arrDown[i].emaTwentyDown;\n    arrDown[i].emaTwentySix = arrDown[i].emaTwentySixDown;\n    delete arrDown[i].emaTwentySixDown;\n    arrDown[i].emaFifty = arrDown[i].emaFiftyDown;\n    delete arrDown[i].emaFiftyDown;\n    arrDown[i].emaTwoHun = arrDown[i].emaTwoHunDown;\n    delete arrDown[i].emaTwoHunDown;\n    arrDown[i].macd = arrDown[i].macdDown;\n    delete arrDown[i].macdDown;\n    arrDown[i].macdHistogram = arrDown[i].macdHistogramDown;\n    delete arrDown[i].macdHistogramDown;\n    arrDown[i].macdSignalLine = arrDown[i].macdSignalLineDown;\n    delete arrDown[i].macdSignalLineDown;\n    arrDown[i].price = arrDown[i].priceDown;\n    delete arrDown[i].priceDown;\n    arrDown[i].rsi = arrDown[i].rsiDown;\n    delete arrDown[i].rsiDown;\n    arrDown[i].smaFiveTeen = arrDown[i].smaFiveTeenDown;\n    delete arrDown[i].smaFiveTeenDown;\n    arrDown[i].smaTwenty = arrDown[i].smaTwentyDown;\n    delete arrDown[i].smaTwentyDown;\n    arrDown[i].smaThirty = arrDown[i].smaThirtyDown;\n    delete arrDown[i].smaThirtyDown;\n    arrDown[i].smaFifty = arrDown[i].smaFiftyDown;\n    delete arrDown[i].smaFiftyDown;\n    arrDown[i].smaOneHun = arrDown[i].smaOneHunDown;\n    delete arrDown[i].smaOneHunDown;\n    arrDown[i].smaTwoHun = arrDown[i].smaTwoHunDown;\n    delete arrDown[i].smaTwoHunDown;\n    arrDown[i].volume = arrDown[i].volumeDown;\n    delete arrDown[i].volumeDown;\n    arrDown[i].volumeYesterday = arrDown[i].volumeYesterdayDown;\n    delete arrDown[i].volumeYesterdayDown;\n    arrDown[i].vwap = arrDown[i].vwapDown;\n    delete arrDown[i].vwapDown;\n    arrDown[i].stochasticD = arrDown[i].stochasticDDown;\n    delete arrDown[i].stochasticDDown;\n    arrDown[i].stochasticK = arrDown[i].stochasticKDown;\n    delete arrDown[i].stochasticKDown;\n    arrDown[i].stochasticSignal = arrDown[i].stochasticSignalDown;\n    delete arrDown[i].stochasticSignalDown;\n    arrDown[i].wmaFiveTeen = arrDown[i].wmaFiveTeenDown;\n    delete arrDown[i].wmaFiveTeenDown;\n    arrDown[i].wmaTwenty = arrDown[i].wmaTwentyDown;\n    delete arrDown[i].wmaTwentyDown;\n    arrDown[i].wmaThirty = arrDown[i].wmaThirtyDown;\n    delete arrDown[i].wmaThirtyDown;\n    arrDown[i].wmaFifty = arrDown[i].wmaFiftyDown;\n    delete arrDown[i].wmaFiftyDown;\n    arrDown[i].wmaOneHun = arrDown[i].wmaOneHunDown;\n    delete arrDown[i].wmaOneHunDown;\n    arrDown[i].wmaTwoHun = arrDown[i].wmaTwoHunDown;\n    delete arrDown[i].wmaTwoHunDown;\n    arrDown[i].vwmaFiveTeen = arrDown[i].vwmaFiveTeenDown;\n    delete arrDown[i].vwmaFiveTeenDown;\n    arrDown[i].vwmaTwenty = arrDown[i].vwmaTwentyDown;\n    delete arrDown[i].vwmaTwentyDown;\n    arrDown[i].vwmaThirty = arrDown[i].vwmaThirtyDown;\n    delete arrDown[i].vwmaThirtyDown;\n    arrDown[i].vwmaFifty = arrDown[i].vwmaFiftyDown;\n    delete arrDown[i].vwmaFiftyDown;\n    arrDown[i].vwmaOneHun = arrDown[i].vwmaOneHunDown;\n    delete arrDown[i].vwmaOneHunDown;\n    arrDown[i].vwmaTwoHun = arrDown[i].vwmaTwoHunDown;\n    delete arrDown[i].vwmaTwoHunDown;\n    arrDown[i].williamsR = arrDown[i].williamsRDown;\n    delete arrDown[i].williamsRDown;\n    arrDown[i].cciTwenty = arrDown[i].cciDown;\n    delete arrDown[i].cciDown;\n    arrDown[i].bbUpper = arrDown[i].bbUpperDown;\n    delete arrDown[i].bbUpperDown;\n    arrDown[i].bbLower = arrDown[i].bbLowerDown;\n    delete arrDown[i].bbLowerDown;\n    arrDown[i].bbMiddle = arrDown[i].bbMiddleDown;\n    delete arrDown[i].bbMiddleDown;\n    arrDown[i].bbPercent = arrDown[i].bbPercentDown;\n    delete arrDown[i].bbPercentDown;\n  }\n\n \n  let finalStocksArr = arrDown.concat(arrUp)\n  return finalStocksArr;\n\n}\n//----- BUILD TO PAGE ----- // ------- AT SOME POINT THE FUNCTION WILL BE SET IN AN INTERVAL - HAVING THE ARRs CLEAR IS NOT A BAD IDEA\n\nreturn returnedData;\n\n}"]},"metadata":{},"sourceType":"module"}